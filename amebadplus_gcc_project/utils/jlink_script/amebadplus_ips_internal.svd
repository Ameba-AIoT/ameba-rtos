<?xml version="1.0" encoding="utf-8"?>

<!-- File naming: RL6845_ips.svd -->

<!--  Copyright (C) 2012-2025 Realsil Limited. All rights reserved.   -->

<device xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" schemaVersion="1.1" xs:noNamespaceSchemaLocation="CMSIS-SVD.xsd">
  <vendor>Realtek</vendor>
  <vendorID>RTK</vendorID>
  <name>RL6845_IP_SVD</name>
  <description>IP svd file</description>
  <peripherals>
    <peripheral>
      <name>auxc</name>
      <baseAddress>0x41008440</baseAddress>
      <size>0x00000040</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00000040</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>REG_PLL_CTRL0</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00369083</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pow_erc</name>
              <description>erc enable.  0 -&gt; 1</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>npll_pow_nouse</name>
              <description>no use:input divider enable  (need pwl signal) 0 -&gt; 1</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pow_pll</name>
              <description>(need pwl signal) 0 -&gt; 1</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_cp_bia</name>
              <description>charge pump current selection . Default=10uA                      CP current select : 
000: Icp=10uA,  001: Icp=15uA,  010: Icp=20uA,  011: Icp=25uA;    100: Icp=30uA,  101: Icp=35uA,  110: Icp=40uA,  111: Icp=450uA;</description>
              <bitRange>[28:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dogenb</name>
              <description>0: watch dog on, 1: watch dog off</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_ps</name>
              <description></description>
              <bitRange>[24:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_psen</name>
              <description>phase selector enable</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_cp_set</name>
              <description>Cp selection. Default=5p                                         00: Cp=4p,    01: Cp=5p,    10: Cp=6p,    11: Cp=7p
XTAL=40MHz : 10 ,Cp=6p
XTAL=26MHz : 01 ,Cp=5p</description>
              <bitRange>[20:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_rs_set</name>
              <description>Rs selection. Default=4k                                          000: Rs=15k,   001: Rs=13k,   010: Rs=11k,   011: Rs=9k,             100: Rs=7k,   101: Rs=5k,   110: Rs=3k,   111: Rs=1k;    
XTAL=40MHz : 110 ,Rs=3k
XTAL=26MHz : 101 ,Rs=5K</description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_cs_sel</name>
              <description>Cs selection. Default=70p                                          00: Cs=40p,   01: Cs=50p,   10: Cs=60p,   11: Cs=70p   
XTAL=40MHz : 11 , Cs=70p
XTAL=26MHz : 11 , Cs=70p</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_fref_edge</name>
              <description>0:fref, 1:frefb</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_ck_en</name>
              <description>output clk enable</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_ck_en_d4</name>
              <description>output clk div 4 enable</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_xtal_manual_mode</name>
              <description>reg_xtal_maunal_mode.  Default=0                                            0: reg_xtal_sel&lt;3:0&gt; is controlled by REG,                                 xtal_div_sel is controlled by mapping table.                      1: reg_xtal_sel&lt;3:0&gt;=4'b1111,                                    xtal_div_sel is controlled by reg_xtal_div_sel_maunal&lt;1:0&gt;</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_xtal_div_sel_manual</name>
              <description>input divider selection in xtal maunal mode. Default=00                                                                00=/1,  10=/2,  11=/4</description>
              <bitRange>[6:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_vc_thl</name>
              <description>VC voltage, Default=00                                           00: VC=1/4Vdd,  01: VC=1/2Vdd,  10=3/4Vdd,  11: VC=Vdd</description>
              <bitRange>[4:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>c3_set</name>
              <description>C3 selection. Default=1p                                          00: 0.5p, 01: 1p, 10: Cs=1.5p, 11: 2p</description>
              <bitRange>[2:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r3_set</name>
              <description>Rs selection. Default=1k                                          0: 0 Ohm, 1: 1k Ohm</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PLL_CTRL1</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00810501</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>reg_xtal_sel</name>
              <description>xtal selection, Default=40MHz                                                                                        0000= 40MHz, 0101= 26MHz,</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_freq_sel</name>
              <description>no use :output clk selection, Default=400MHz                            0000= 400MHz,  0001= X,         0010= X,       0011= X,                    0100= 216MHz,  0101=196.608MHz, 0110=192MHz,   0111= 180.632MHz, 1000= 148.5MHz,1001= X,         1010= X,       1011= X,        1100= X,       1101= X,         1110= X,       1111= 500MHz</description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TBASE_FREQ</name>
              <description>now is empty</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>STEP_FREQ</name>
              <description>step size selection for switching freq.                           0000: 2^5                                                          0001: 2^6                                                    0010: 2^7                                                          0011: 2^8                                                     0100: 2^9                                                    0101: 2^10                                                    0110: 2^11                                                    0111: 2^12</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TRIG_FREQ</name>
              <description>freq. step up or step down enable</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BB_DBG_SEL_AFE_SDM</name>
              <description></description>
              <bitRange>[14:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DIVN_SDM</name>
              <description>Default                                                       320MHz: 000110  
400MHz: 001000  
600MHz: 001101</description>
              <bitRange>[10:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_ck_out_sel</name>
              <description>output divider selection. Default=0000(/1)                                                                0000=/1,  1000=/2,  1100=/4,  1110=/8,   1111=/16
300~330MHz PLL output clock, output divider selection. 1000=/2
Ex : 600MHz/2=300MHz
330~660MHz PLL output clock, output divider selection. 0000=/1
Ex : 660MHz/1=660MHz
Spec:/2(mandatory</description>
              <bitRange>[4:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>icp_half</name>
              <description>charge pump current half or not                                    0: no half    1: half</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PLL_CTRL2</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>STEP</name>
              <description>ssc step size selection.</description>
              <bitRange>[31:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TBASE</name>
              <description>ssc freq selection</description>
              <bitRange>[18:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EN_SSC</name>
              <description>ssc enable. Default=0</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pll_dmy1</name>
              <description>HW used only , these are for reserved</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PLL_CTRL3</name>
          <addressOffset>0x0000000C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>F0F_SDM</name>
              <description>Default 660MHz: 0000000000000                                                           330MHz: 0000000000000
600MHz: 0000000000000                                                              660MHz: 0000000000000</description>
              <bitRange>[31:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>F0N_SDM</name>
              <description>Default 660MHz: 100                                                         330MHz: 010  
600MHz: 000                                                                660MHz: 100</description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ORDER_SDM</name>
              <description>SDM order</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pll_dmy2</name>
              <description>HW used only , these are for reserved</description>
              <bitRange>[14:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PLL_TEST</name>
          <addressOffset>0x00000010</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0000980C</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pow_erc_test</name>
              <description>1 for enable test, 0 for disable</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pll_dmy3</name>
              <description>dummy</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pll_dmy4</name>
              <description>0 for ckmon div 4 , 1 for ckmon div 8</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ckmon_sel</name>
              <description>0 for CKMON, 1 for CKMOND div by 4</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pow_div4</name>
              <description>1 for ckmon div 4 , 0 for disable div 4</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>iso</name>
              <description>1 for ISO ck_fref/ck_frefb</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ref_clk_sel</name>
              <description>xtal clk from 0 special route 1 APR</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ck_mon_en</name>
              <description>ckmon enable</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ck_sel</name>
              <description>ckmon clk sel 
1111:TL
1110:TL
1101:CK_CPUD4_I
1100:CK_400M_CPU_I
1011:TL
1010:TL
1001:TL
1000:READY_CPU_I
0111:ck_frefi_peri(xtal)
0110:TL
0101:TL
0100:TL
0011:TL
0010:TL
0001:TL
0000:TL</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>s</name>
              <description>AGPIO driving sel</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>gpo</name>
              <description>AGPIO output enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>gpe</name>
              <description>AGPIO enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PLL_PS</name>
          <addressOffset>0x00000014</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000118</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pll_dmy5</name>
              <description>HW used only , these are for reserved</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pow_ckgen</name>
              <description>pow of ckgen</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>REG_CKGEN_DIV</name>
              <description>DIV9B , N=DIV&lt;8:0&gt;+2</description>
              <bitRange>[13:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>en_ck400m_ps</name>
              <description>enable shifted clk source for flash</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>en_ck400m</name>
              <description>ck400m is PLL VCO freq (300M~600M)</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>phase_sel</name>
              <description>AGPIO driving sel</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AUX_BG</name>
          <addressOffset>0x00000018</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000302</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>POW_BG</name>
              <description>power on BG</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>POW_I</name>
              <description>power on BG current</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>POW_MBIAS</name>
              <description>power on mbias</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bg_dmy1</name>
              <description>HW used only , these are for reserved</description>
              <bitRange>[7:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>R2_tune</name>
              <description>Add 20k per step fine tune BG</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bg_dmy2</name>
              <description>HW used only , these are for reserved</description>
              <bitRange>[15:11]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TRNG</name>
          <addressOffset>0x0000001C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00002051</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>trng_dmy</name>
              <description>dummy</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>REG_INTCAP</name>
              <description>OPA_INT cap&lt;9:4&gt; control</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>REG_TRNG_POW</name>
              <description>ROSC poewr on control
1:power on
0:power off</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>REG_TRNG_FSEL</name>
              <description>ROSC frequency range control</description>
              <bitRange>[12:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>REG_TRNG_DIV</name>
              <description>ROSC output clock divider control
00: divide by 1
01: divide by 2
10: divide by 3
11: divide by 4</description>
              <bitRange>[10:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>REG_TRNG_RESSEL</name>
              <description>ROSC noise resistor control
00: 562k
01: 749k 
10: 936k 
11: 1123k</description>
              <bitRange>[8:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>REG_TRNG_GAINSEL</name>
              <description>ROSC noise gain control
00: 32dB
01: 35dB 
10: 38dB 
11: 40dB</description>
              <bitRange>[6:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>REG_TRNG_ISEL</name>
              <description>ROSC frequency control data input</description>
              <bitRange>[4:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>REG_TRNG_TEST</name>
              <description>Analog test signal enable control
0: off
1: on</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_LPSD</name>
          <addressOffset>0x00000020</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>LPSD_DMY</name>
              <description>dummy</description>
              <bitRange>[19:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EN_VREF0_L</name>
              <description>set VREFL to 0</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EN_VREF0_H</name>
              <description>set VREFH to 0</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SEL_VREFL</name>
              <description>adjust VREFL</description>
              <bitRange>[11:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SEL_VREFH</name>
              <description>adjust VREFH</description>
              <bitRange>[6:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SD_POSEDGE</name>
              <description>1: vin&gt;vref output high</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>POW_SD</name>
              <description>Power on signal detector</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_LPAD0</name>
          <addressOffset>0x00000024</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xB00012C0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>vset</name>
              <description>11:1.89V 10:1.80V 01:1.71V 00:1.62V</description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sel_ln</name>
              <description>1: comparator low noise for LSB 6bit</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sel_lna</name>
              <description>1: comparator low noise for ALL bit</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>lpad_dmy0</name>
              <description>dummy</description>
              <bitRange>[27:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>en_mode_18</name>
              <description>1: enable 1.8V mode</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_enTG</name>
              <description>1: enable transmission gate</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bypassen</name>
              <description>1:bypass mode, 0: divide mode</description>
              <bitRange>[22:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_diode</name>
              <description>1: enable diode</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_meta</name>
              <description>1: enable meta detect</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_cmpdec</name>
              <description>meta detect time 00: short</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_rev_clk</name>
              <description>1: rever ck_data</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>vref_sel</name>
              <description>000:0.800V 001:0.825V 010:0.850V
011:0.875V 100:0.900V 101:0.950V 
110:1.000V 111:1.050V</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_ldo_sel</name>
              <description>000:0.800V 001:0.825V 010:0.850V
011:0.875V 100:0.900V 101:0.950V 
110:1.000V 111:1.050V</description>
              <bitRange>[7:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>lpad_dmy1</name>
              <description>dummy</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_ck</name>
              <description>1: clk from external</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pow_ref</name>
              <description>pow adc refgen</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pow</name>
              <description>pow adc</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pow_ldo</name>
              <description>pow ldo</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_LPAD1</name>
          <addressOffset>0x00000028</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000100</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>lpad_dmy2</name>
              <description>dummy</description>
              <bitRange>[15:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_vcmin</name>
              <description>00:0.4625V 01:0.4500V
10:0.4375V 11:0.4250V</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_mbias_sel</name>
              <description>00000000:0uA 00000001:0.25uA 00000010:0.5uA
00000011:0.75uA ..............11111111:63.75uA</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BG_PWR_ON_CNT</name>
          <addressOffset>0x0000002C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00280280</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bg_i_cnt</name>
              <description></description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bg_on_cnt</name>
              <description></description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_PWR_ON_CNT</name>
          <addressOffset>0x00000030</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x000004B0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_pwron_cnt</name>
              <description></description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PLL_STATE</name>
          <addressOffset>0x00000034</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x000F0000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>dummy</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ckrdy_pll</name>
              <description>PLL clock is ready</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DEBUG</name>
          <addressOffset>0x00000038</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adbg_aux</name>
              <description>dummy</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DUMMY</name>
          <addressOffset>0x0000003C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0000000F</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>dummy</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>ldo</name>
      <baseAddress>0x41008100</baseAddress>
      <size>0x00000080</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00000080</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>REG_00_TEST_KEY_REG</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pow_sw</name>
              <description>power swr</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HW_PDB_0P9</name>
              <description>// 此訊號,務必正確的default value
// Digital 送此訊號透過analog levelshift到HW_PDB_33V_OUT
// level shift gating to low by POR_AON</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_01_RF_EN_dummy</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>REG_32KOSC_DUMMY</name>
              <description>// [RF][32KOSC] dummy</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GATED_STUP_OK_D</name>
              <description>// [RF][32KOSC] dummy</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>REG_POW_4MOSC</name>
              <description>// [RF][4MOSC] dummy</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_02_4M_OSC_CTRL</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>C_SEL</name>
              <description>// [RF][4MOSC] REG_CTRL</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EN_4MOSC</name>
              <description>// [RF][4MOSC] 1'b1 : enable</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>dmy_0</name>
              <description>// [RF][4MOSC] REG_CTRL</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IB_Bias_SEL</name>
              <description>// [RF][4MOSC] REG_CTRL</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_03_4M_OSC_CTRL</name>
          <addressOffset>0x0000000C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0000777F</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>VCM_SEL_H</name>
              <description>// [RF][4MOSC] REG_CTRL</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VCM_SEL_L</name>
              <description>// [RF][4MOSC] REG_CTRL</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Freq_R_SEL</name>
              <description>// [RF][4MOSC] REG_CTRL</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_04_32_OSC_XTAL_POW</name>
          <addressOffset>0x00000010</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dmy_1</name>
              <description></description>
              <bitRange>[15:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>POW_32KOSC</name>
              <description>// [RF][32KOSC] 1'b1 : enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_05_32K_OSC_CTRL</name>
          <addressOffset>0x00000014</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000020</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SEL_LDO_VREF</name>
              <description>// [RF][32KOSC] REG_CTRL
// 0: LDO low valtage setting 1:high voltage</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GATED_STUP_OK</name>
              <description>//1'b1 : Close Startup standby current ;
//1'b0 : Startup standby current</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dmy_2</name>
              <description>// [RF][32KOSC] REG_CTRL
// dummy</description>
              <bitRange>[13:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RCAL</name>
              <description>// [RF][32KOSC] REG_CTRL
// osc frequency is highier as RCAL's larger</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_06_AONLDO</name>
          <addressOffset>0x00000018</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x000000A0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dmy_3</name>
              <description>// [REGU][AONLDO] dummy</description>
              <bitRange>[15:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dmy_4</name>
              <description>// [REGU][AONLDO] dummy</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>en_sleep_l</name>
              <description>Enable LDO09H sleep mode
0 : disable (default)
1 : enable</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AONLDO_VOSEL_H</name>
              <description>AONLDO09 voltage select
0000: 0.528V 0.464V
0001: 0.630V 0.554V
0010: 0.659V 0.579V
0011: 0.690V 0.606V
0100: 0.724V 0.636V
0101: 0.742V 0.652V
0110: 0.761V 0.669V
0111: 0.782V 0.687V
1000: 0.803V 0.706V
1001: 0.826V 0.725V
1010: 0.850V 0.746V
1011: 0.875V 0.769V
1100: 0.902V 0.792V
1101: 0.930V 0.817V
1110: 0.960V 0.844V
1111: 0.993V 0.872V</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dmy_5</name>
              <description>// [REGU][AONLDO] dummy</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LV_POR_VREF_SEL</name>
              <description>LV_POR VREF
0 (default) VREF = 0P600V
1 VREF = 0P450V</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AONLDO_VREF_SEL</name>
              <description>AONLDO VREF_SEL
0 (default) VREF = 0P600V
1 VREF = 0P575V</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_07_BOD</name>
          <addressOffset>0x0000001C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000B53</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dmy_6</name>
              <description>// dummy)</description>
              <bitRange>[17:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>REG_BOD_R_en</name>
              <description>// 0: disable BOD
// 1: enable BOD</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>REG_BOD_R</name>
              <description>00000:3.3333
00001:3.2877
00010:3.2432
00011:3.2000
00100:3.1579
00101:3.1035
00110:3.0508
00111:3.0000
01000:2.9508
01001:2.9032
01010:2.8571
01011:2.8125
01100:2.7692
01101:2.7169
01110:2.6666
01111:2.6182
10000:2.5623
10001:2.5087
10010:2.4574
10011:2.4080
10100:2.3606
10101:2.3151
10110:2.2713
10111:2.2154
11000:2.1621
11001:2.1114
11010:2.0630
11011:2.0168
11100:1.9672
11101:1.9098
11110:1.8556
11111:1.8045</description>
              <bitRange>[10:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>REG_BOD_F_d</name>
              <description>// dummy</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>REG_BOD_F</name>
              <description>00000:3.3333
00001:3.2877
00010:3.2432
00011:3.2000
00100:3.1579
00101:3.1035
00110:3.0508
00111:3.0000
01000:2.9508
01001:2.9032
01010:2.8571
01011:2.8125
01100:2.7692
01101:2.7169
01110:2.6666
01111:2.6182
10000:2.5623
10001:2.5087
10010:2.4574
10011:2.4080
10100:2.3606
10101:2.3151
10110:2.2713
10111:2.2154
11000:2.1621
11001:2.1114
11010:2.0630
11011:2.0168
11100:1.9672
11101:1.9098
11110:1.8556
11111:1.8045</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_LDO_3318</name>
          <addressOffset>0x00000020</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00009862</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PSRR_Filter</name>
              <description>0: disable PSRR Filter
1: enable PSRR Filter</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSV_Diode</name>
              <description>0: disable rsv diode
1: enable rsv diode</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Diode</name>
              <description>0: disable force diode
1: enable force diode</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OP_buffer</name>
              <description>0: PMOS buffer
1: NMOS buffer</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dmy_load</name>
              <description>00:0mA
01:200kΩ
10:183Ω
11:183Ω||200kΩ
Note:this field controlled by syson pmc. 
When pmc require dummy on , and this field indicate dummy resident.
When pmc require dummy off , this field has no means, analog will see load is 0
When mldo_tmode is assert , pmc controller is not active</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_itail_half_en_L_3318</name>
              <description>// [REGU][LDO_UART] REG_CTRL
// LDO iq half ctrl
// 0(default): iq normal (for normal mode)
// 1: iq half (for suspend mode)</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_standby_L_3318</name>
              <description>//11: iq=1.5uA; load=1mA~10mA  (sleep)
//10: iq=45uA; load=10mA(Start Up) (normal-0)
//00: iq=45uA; load=5mA~160mA (normal-1)
Note:this field controlled by syson pmc. 
When pmc require mode &gt; 0 , and this field indicate pmc request.
When pmc require mode is 0, this field has no use
When mldo_tmode is assert , pmc controller is not active</description>
              <bitRange>[8:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>en_diode_L_3318</name>
              <description>// [REGU][LDO_UART] REG_CTRL
// PGATE diode clamp (this gating to disable by pd_regu_L)
// 0: disable clamp
// 1: enable clamp (default)</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>voadj_L_3318</name>
              <description>// [REGU][LDO_UART] REG_CTRL
// LDO VOSEL
// 0000, 0001, 0010, 0011:
 1.655, 1.672, 1.690, 1.708
// 0100, 0101, 0110, 0111:
 1.727, 1.745, 1.764, 1.784
// 1000, 1001(default), 1010, 1011: 
1.804, 1.825, 1.846, 1.868
// 1100, 1101, 1110, 1111:
 1.890, 1.912, 1.935, 1.959</description>
              <bitRange>[5:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pd_regu_L_3318</name>
              <description>// [REGU][LDO_UART] REG_CTRL
// PowerDown CTRL
// 0: normal-Mode(default)
// 1: power-down Mode 
Note: 
This field is also controlled by syson pmc .
When mldo_tmode is assert , pmc controller is not active</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>en_pc_bt_L_3318</name>
              <description>// [REGU][LDO] REG_CTRL
// PWRCUT enable
// 0: LDO-Mode (default)
// 1: PWRCUT-Mode</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_LDO_RFAFE_1209</name>
          <addressOffset>0x00000024</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00004A5E</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dmy_7</name>
              <description>Dummy</description>
              <bitRange>[23:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_vref_sel_L_1209</name>
              <description>// [REGU][LDO] REG_CTRL
// vref sel
// 00: 0.6V
// 01: 0.57V
// 10: 0.56V
// 11: 0.54V</description>
              <bitRange>[18:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_fb_sel_L_1209</name>
              <description>// [REGU][LDO] REG_CTRL
// vo feedback select
// 0: vo(digital pad) (default)
// 1: vo_18(powermos pad)</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_dmyload_x3_L_1209</name>
              <description>// [REGU][LDO] REG_CTRL
// LDO dmy load ctrl
// 0: dmyload_1X(5mA)
// 1: dmyload_3X(15mA)</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_dmyload_x2_L_1209</name>
              <description>// [REGU][LDO] REG_CTRL
// LDO dmy load ctrl
// 0: dmyload_1X(5mA)
// 1: dmyload_2X(10mA)</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_pre_pc_L_1209</name>
              <description>// [REGU][LDO] REG_CTRL
// 0: LDO-Mode (default)
// 1:Pre- PWRCUT-Mode</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_ov_detect_L_1209</name>
              <description>// [REGU][LDO] REG_CTRL
// OV detect function control
// 0: disable
// 1 : enable</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_dmyload_L_1209</name>
              <description>// [REGU][LDO] REG_CTRL
// LDO dmy load ctrl
// 0: dmy load disable
// 1: dmy load enable</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>reg_light_dmyload_L_1209</name>
              <description>// [REGU][LDO] REG_CTRL
// LDO dmy load ctrl
// 0: dmy load disable
// 1:9k Ω (0.1mA)</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>en_diode_1209</name>
              <description>// [REGU][LDO] REG_CTRL
// PGATE diode clamp (this gating to disable by pd_regu_L)
// 1: enable clamp 
// 0: disable clamp</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_sleep_L_1209</name>
              <description>// [REGU][LDO] REG_CTRL
// LDO mode control
// 0: normal mode
// 1 : sleep mode</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_ov_lvl_L_1209</name>
              <description>// [REGU][LDO] REG_CTRL
// OV vref level
// 0: 1.05V
// 1 : 1V</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ssmode_L_1209</name>
              <description>//0:disable ssmode function
//1:enable: ssmode function (smaller power mos size)</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>voadj_L_1209</name>
              <description>// [REGU][LDO] REG_CTRL
// LDO VOSEL
// 0000, 0001, 0010, 0011: 0.708, 0.739, 0.772, 0.802
// 0100, 0101, 0110, 0111(default): 0.827, 0.853, 0.877, 0.9
// 1000, 1001, 1010, 1011: 0.924, 0.949, 0.976, 1
// 1100, 1101, 1110, 1111: 1.025, 1.05, 1.075, 1.01</description>
              <bitRange>[5:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pd_regu_L_1209</name>
              <description>// [REGU][LDO] REG_CTRL
// PowerDown CTRL
// 0: normal-Mode
// 1: power-down Mode (default)</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>en_pc_L_1209</name>
              <description>// [REGU][LDO] REG_CTRL
// PWRCUT enable
// 0: LDO-Mode (default)
// 1: PWRCUT-Mode</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_APMC_STA</name>
          <addressOffset>0x00000030</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>cur_sts_val</name>
              <description>current regu status</description>
              <bitRange>[18:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>cur_instr</name>
              <description>regu pmc current instruction code</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_APMC_VEC</name>
          <addressOffset>0x00000034</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>cur_vec</name>
              <description>regu pmc all intr vector</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_APMC_ISR</name>
          <addressOffset>0x00000038</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>cur_isr</name>
              <description>regu pmc current processing isr, one hot</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ALDO_SYS_CTRL</name>
          <addressOffset>0x00000040</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xA4002200</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>volt_code1_aldo</name>
              <description>Aon LDO code1 , which indicate 0.8v</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>volt_code0_aldo</name>
              <description>Aon LDO code0 , which indicate 0.7v</description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>vdec_step</name>
              <description>volt decrease step , unit in 100K cycle, acture value is this value + 1
Note: this is common for all LDO and SWR</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>vinc_step</name>
              <description>volt decrease step , unit in 100K cycle, acture value is this value + 1
Note: this is common for all LDO and SWR</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>volt_pwm_abn</name>
              <description>pwm volt adject abnormal statue .
When happen , it is means current voltage is higher than request in a rising commond, same as falling case.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>volt_pfm_abn</name>
              <description>same as [7]</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>volt_cldo_abn</name>
              <description>same as [7]</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>volt_aldo_abn</name>
              <description>same as [7]</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CLDO_VOLT_CTRL</name>
          <addressOffset>0x00000044</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0000B730</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>volt_code3_cldo</name>
              <description>Core LDO code3 , which indicate 1.0v</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>volt_code2_cldo</name>
              <description>Core LDO code2 , which indicate 0.9v</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>volt_code1_cldo</name>
              <description>Core LDO code1 , which indicate 0.8v</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>volt_code0_cldo</name>
              <description>Core LDO code0 , which indicate 0.7v , used in power cut mode</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PWM_VOLT_CTRL</name>
          <addressOffset>0x00000048</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0000B555</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>volt_code3_pwm</name>
              <description>SWR pwm volt code3 , which indicate 1.35v (for system in 1.0v)</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>volt_code2_pwm</name>
              <description>SWR pwm volt code2 , which indicate 1.25v (for system in 0.9v, snooze also use)
Note:code2/code3 , pwm_vref_sel must set 11(default)</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>volt_code1_pwm</name>
              <description>NO use</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>volt_code0_pwm</name>
              <description>SWR pwm volt code0 , which indicate 0.8v (used for snooze mode , at this time , CLDO is in PC mode)
Note:vref must change , pwm_vref_sel must set to 00</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PFM_VOLT_CTRL</name>
          <addressOffset>0x0000004C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x000FB642</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>volt_code4_pfm</name>
              <description>SWR pfm volt code4 , which indicate 1.35v (for system in 1.0v)</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>volt_code3_pfm</name>
              <description>SWR pfm volt code3 , which indicate 1.25v (for system in 0.9v)</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>volt_code2_pfm</name>
              <description>SWR pfm volt code2 , which indicate 0.9v 
Note:this also used as pre power cut change point</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>volt_code1_pfm</name>
              <description>SWR pfm volt code1 , which indicate 0.8v</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>volt_code0_pfm</name>
              <description>SWR pfm volt code0 , which indicate 0.7v</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_REGU_PMC_SP_UP</name>
          <addressOffset>0x00000060</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0039372D</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>apmc_sp2</name>
              <description>Start Point for ST6 up</description>
              <bitRange>[22:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>apmc_sp1</name>
              <description>Start Point for ST5 up</description>
              <bitRange>[14:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>apmc_sp0</name>
              <description>Start Point for ST3/ST4 up (ST3 not support)</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_REGU_PMC_SP_DN</name>
          <addressOffset>0x00000064</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00564E4C</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>apmc_sp5</name>
              <description>Start Point for ST2 dn</description>
              <bitRange>[22:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>apmc_sp4</name>
              <description>Start Point for ST4/ST3 dn</description>
              <bitRange>[14:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>apmc_sp3</name>
              <description>Start Point for ST5 dn</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DEBUG</name>
          <addressOffset>0x00000070</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adbg_regu</name>
              <description>REGU interface debug</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DUMMY</name>
          <addressOffset>0x0000007C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x000000FF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>cldo_force_dml_off</name>
              <description>Force core ldo dummy load off , used when pc mode
1: force CLDO dummy load off , regu pmc will wirte this when enter pc mode
0: release</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tmode_mldo</name>
              <description>3318 LDO enter testmode , and register setting will not controlled by pmc</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dummy</name>
              <description></description>
              <bitRange>[7:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>opt_en_dummy</name>
              <description>option for enable swr dummy load to speed up when pfm -&gt; pwm.
if opt_wait_mode is 0 , this bit has no use</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>opt_ign_mode</name>
              <description>option for ignore regu mode_l wait when pfm -&gt; pwm.
default not wait as usual</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>swr</name>
      <baseAddress>0x41008180</baseAddress>
      <size>0x00000080</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00000080</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>REG_ANAPARSW_MAC_ON_0</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x94ED98D1</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PFMCMP_IQ</name>
              <description>PFM comparator bias,
0: 50nA 1:250nA</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EN_HLOAD</name>
              <description>Enable Heavy load counter</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OFF_END_SEL</name>
              <description>COT off time controlled by,
0: ZCD 1: min off time</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>POW_MINOFF_L</name>
              <description>0:normal current
1:increase OCP cmp current</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>COT_I_L</name>
              <description>COT ON Current
00:150nA
01:150nA+100nA
10:150nA+150nA
11:150nA+250nA</description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VREFPFM_L</name>
              <description>SWR/LDO
SEL &lt;93&gt;=0 &lt;93&gt;=1
0000 0.495 0.458
0001 0.654 0.610
0010 0.707 0.662
0011 0.760 0.712
0100 0.795 0.746
0101 0.848 0.797
0110 0.883 0.831
0111 0.954 0.899
1000 1.042 0.984
1001 1.131 1.069
1010 1.219 1.153
1011 1.255 1.188
1100 1.308 1.238
1101 1.343 1.272
1110 1.414 1.340
1111 1.503 1.425</description>
              <bitRange>[25:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Force_ZCD_Bias</name>
              <description>0:ZCD bias on after SS
1:ZCD bias on when ZCD enable</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ZCD_SDZ_L</name>
              <description>Increase ZCD delay cell</description>
              <bitRange>[20:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_zcdc_H</name>
              <description>00:0.1u
01:0.2u(PFM)
10:0.7u(PWM)
11:0.8u</description>
              <bitRange>[18:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>POW_ZCD_L</name>
              <description>Enable ZCD</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OCP_L1</name>
              <description>PWM current
(A)                PFM
current
(A)                mP   
000    0.533                          0.105                               
001    0.580                          0.145                               
010    0.630                          0.185                               
011    0.680                          0.223                               
100    0.730                          0.263                               
101    0.780                          0.303                               
110    0.830                          0.342                               
111    0.890                          0.290(VIN/10)</description>
              <bitRange>[15:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>POWOCP_L1</name>
              <description>POWOCP_L1=1=&gt; enable over current protection</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SAW_FREQ_L</name>
              <description>0000     458.0k       
0001     680.2k       
0010     898.9k       
0011     1.113M       
0100     1.321M       
0101     1.522M       
0110     1.716M       
0111     1.902M       
1000     2.087M       
1001     2.258M       
1010     2.426M       
1011     2.582M       
1100     2.743M       
1101     2.888M       
1110     3.035M       
1111     3.165M</description>
              <bitRange>[11:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>reg_bypass_L</name>
              <description>1:bypass SSR latch</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FPWM_L1</name>
              <description>FPWM_L1 = 1 =&gt;
force PWM
FPWM_L1 = 0 =&gt;
force PFM</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>STD_L1</name>
              <description>STD_L1&lt;1:0&gt;  time
750u
1.5m
10   3m
11   6m</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VOL_L1</name>
              <description>VREF 0.6 0.635 0.835 0.865
Code VOUT VOUT VOUT VOUT
1111 1.028571 1.088571 1.431429 1.482857
1110 1 1.058333 1.391667 1.441667
1101 0.972973 1.02973 1.354054 1.402703
1100 0.947368 1.002632 1.318421 1.365789
1011 0.935065 0.98961 1.301299 1.348052
1010 0.923077 0.976923 1.284615 1.330769
1001 0.911392 0.964557 1.268354 1.313924
1000 0.9 0.9525 1.2525 1.2975
0111 0.888889 0.940741 1.237037 1.281481
0110 0.878049 0.929268 1.221951 1.265854
0101 0.86747 0.918072 1.207229 1.250602
0100 0.847059 0.896471 1.178824 1.221176
0011 0.827586 0.875862 1.151724 1.193103
0010 0.808989 0.85618 1.125843 1.166292
0001 0.791209 0.837363 1.101099 1.140659
0000 0.774194 0.819355 1.077419 1.116129</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ANAPARSW_MAC_ON_1</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x888966A0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SN_N_L</name>
              <description>NGATE NMOS driving</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SP_N_L</name>
              <description>NGATE PMOS driving</description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SN_P_L</name>
              <description>PGATE NMOS driving</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SP_P_L</name>
              <description>PGATE PMOS driving</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>vo_dischg_pwm_h</name>
              <description>`</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_mode_predriver</name>
              <description>1:3 level predriver</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_adjsldo_L</name>
              <description>0000     1.043       
0001     1.075       
0010     1.108       
0011     1.143       
0100     1.180       
0101     1.220       
0110     1.263       
0111     1.286       
1000     1.309       
1001     1.333       
1010     1.359       
1011     1.385       
1100     1.412       
1101     1.444       
1110     1.469       
1111     1.500</description>
              <bitRange>[13:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_ldor_L</name>
              <description>1:ldos res short</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PWM_Force</name>
              <description>0: PWM bias enabled only at PWM mode
1: Force PWM bias enable when in PWM/PFM mode</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PFM_PD_RST</name>
              <description>1: When leave PFM mode, COT logic is reset</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VC_PFM_RSTB</name>
              <description>When into PFM, VC is,
0: clamped (bit 40 also =1) 1. floating</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PFM_IN_SEL</name>
              <description>Power MOS into PFM when PFM CTRL,
0: rising 1: falling</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VC_RSTB</name>
              <description>Before SS VC is, 0: pulled low 1: floating</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FPWMDELAY</name>
              <description>1:PFM&lt;=&gt;PWM
PFM/PWM change by using DFF(CKMOD)</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ENFPWMDELAY_H</name>
              <description>1:PFM=&gt;PWM delay
PWM enable and wait one clock cycle then PFM off</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_mos_half_L</name>
              <description>1:power mos half</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>Current_Sense_MOS</name>
              <description>1: current sensing MOS for large OC current</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ANAPARSW_MAC_ON_2</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0C924F5B</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>HLOAD_CUNT_SEL</name>
              <description>0: Time counter=5
1: Time counter=9</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HLOAD_PLUS</name>
              <description>Detect More Heavy Load</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VDIV_PFM_SEL</name>
              <description>搭配mac_on&lt;25:22&gt;,default=0; 1為向下微調</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VOFB_SEL</name>
              <description>0:Feedback from REGU Internal PAD for 1.25V/1.35V
1:Feedback from External PAD for 0.9V/1.0V</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PWM_VREF_SEL</name>
              <description>00:VREF=0.600
01:VREF=0.635
10:VREF=0.835
11:VREF=0.865</description>
              <bitRange>[27:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>REG_SWR_ZCD_CTRL</name>
              <description>// SWR ZCD CTRL control
&lt;1&gt;1:double current 
&lt;0&gt;1'b1: force in CCM/DCM boundary mode(default), 1'b0 : no boundary</description>
              <bitRange>[25:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BG_VR1200_tune</name>
              <description>BG電壓調整</description>
              <bitRange>[23:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BG_R2_tuen</name>
              <description>BG R2電阻調整</description>
              <bitRange>[20:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BG_R1_tune</name>
              <description>BG R1電阻調整</description>
              <bitRange>[17:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ZCD_Ioffset_b</name>
              <description>00=&gt;+600nA
01=&gt;+400nA
10=&gt;+200nA
11=&gt;0nA</description>
              <bitRange>[14:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>reg_prss_H</name>
              <description>0:default
1:res+cap improve psrr</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>R2_L1</name>
              <description>00 =&gt; 0.4M
01 =&gt; 0.3M
10 =&gt; 0.2M
11 =&gt; 0.1M</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>C3_L1</name>
              <description>00 =&gt; 1.59p
01 =&gt; 3.2p
10 =&gt; 4.76p
11 =&gt; 6.34p</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>C1_L1</name>
              <description>00 =&gt; 1.03p
01 =&gt; 2.06p
10 =&gt; 3.1p
11 =&gt; 4.12p</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>External_clk_sel</name>
              <description>0:internal clock
1:external clock</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_bg_current_L</name>
              <description>00:23.9n
01:54.6n
10:117.8n</description>
              <bitRange>[4:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>REG_BG_ANA_L</name>
              <description>1:External SWR BG switch on</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>REG_BG_DIG_L</name>
              <description>1:Local SWR BG switch on</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>REG_VC_CLAMP_SEL_L</name>
              <description>0:unity gain feedback clamp VC=VREF                1.orignal clamp(roll back option)</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ANAPARSW_MAC_ON_3</name>
          <addressOffset>0x0000000C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x001FD8F0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>null0</name>
              <description></description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BOD1_VL_SEL</name>
              <description></description>
              <bitRange>[23:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BOD1_VH_SEL</name>
              <description></description>
              <bitRange>[18:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BOD0_VL_SEL</name>
              <description></description>
              <bitRange>[13:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BOD0_VH_SEL</name>
              <description></description>
              <bitRange>[8:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EN_BOD</name>
              <description>Enable BOD&lt;3:0&gt;</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ANAPARSW_MAC_ON_4</name>
          <addressOffset>0x00000010</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>null1</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ANAPARSW_MAC_ON_5</name>
          <addressOffset>0x00000014</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x000000FF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>null2</name>
              <description></description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ANAPARSW_MAC_OFF_0</name>
          <addressOffset>0x00000020</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x4274FAAA</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SDZN_L</name>
              <description>Nonoverlap delay cell for NMOS</description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_autozcd_L</name>
              <description>0:register 1:10000</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_vofb_sel</name>
              <description>0:vo15
1:LX_SPS</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TBOX_L1</name>
              <description>TBOX_L1&lt;1:0&gt; output
00    CKOVER/RAMPOVER
01
NI/PI
10      CKSS/SSOVER
11
i/NIOFF_H</description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ENOCPMUX_L</name>
              <description>1:OCP signal control by MUX
0:OCP signal control by I</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Force_LDOS</name>
              <description>1:LDOS force on</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VO_DISCHG</name>
              <description>1:VO with 1mA discharge</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LDO_OC_clamp</name>
              <description>0:OC clamp with P/NMOS
1:OC clamp with PMOS</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MINOFF_LIQ</name>
              <description>0:Min. off circuit always on
1:Min. off circuit pulse on</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MINON_LIQ</name>
              <description>0:Min. on circuit always on
1:Min. on circuit pulse on</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>POW_AUTO_L</name>
              <description>1:auto PFM/PWM
0:register control</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ARENB_H</name>
              <description>1:off
0:on</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NO_OFFTIME_L</name>
              <description>0:from min OFF time(PFM COT)
1:always on</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EN_ON_END_L</name>
              <description>1:EN min OFF time (PFM COT)</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ENCOT_L</name>
              <description>1:PFM COT</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_clk_sel</name>
              <description>00:out of phase CKSS
01:out of phase PWM_CTRIL
10:ckout
11:HG</description>
              <bitRange>[14:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_type_L</name>
              <description>1:type3 0:type2</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>R3_L1</name>
              <description>00 =&gt; 36k
01 =&gt; 30k
10 =&gt; 24k
11 =&gt; 24k</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>null7</name>
              <description></description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>R1_L1</name>
              <description>00 =&gt; 900k
01 =&gt; 720k
10 =&gt; 900k
11 =&gt; 1080k</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>null6</name>
              <description></description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>C2_L1</name>
              <description>00 =&gt; 13f
01 =&gt; 26f
10 =&gt; 39f
11 =&gt; 41f</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>null5</name>
              <description></description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ANAPARSW_MAC_OFF_1</name>
          <addressOffset>0x00000024</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0000C0C5</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>null9</name>
              <description>dummy</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>null8</name>
              <description>dummy</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_nmos_off_L</name>
              <description>0:normal
1:NMOS always off</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>reg_mux_PI_L</name>
              <description>1:PI (original)
0:i</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_PWM_CTRL_L</name>
              <description>0:internal PWM
1:external PWM</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ENSR_L</name>
              <description>1:with SSR latch</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SDZP_L</name>
              <description>Nonoverlap delay cell for PMOS</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SWR_DIG_OCP</name>
          <addressOffset>0x00000040</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SPS_DIG_OCP_CKE</name>
              <description>SPS OCP clock enable</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPS_DIG_OCP_THD</name>
              <description>SPS OCP event threshold</description>
              <bitRange>[30:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPS_DIG_OCP_WND</name>
              <description>SPS OCP time window</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SWR_DIG_ZCD</name>
          <addressOffset>0x00000044</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000110</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SPS_DIG_ZCD_DBG</name>
              <description>The acture zcd code used for SPS core</description>
              <bitRange>[20:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SPS_DIG_ZCD_MODE</name>
              <description>SPS ZCD SW mode enable</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPS_DIG_ZCD_AUTO</name>
              <description>SPS HW ZCD code auto count function enable</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPS_DIG_ZCD_CODE</name>
              <description>SPS_DIG_ZCD_CODE,this is used for SW mode</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SWR_CTRL</name>
          <addressOffset>0x00000050</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pwm_load</name>
              <description>SWR pwm loading(scan value is 0)
1:heavy
0:light</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>swr_mode_src</name>
              <description>Select SWR mode ctrl source to determine SWR parameter
1: from Analog mode flag , which is 0x50[0]
0: from D-&gt;A mode control bit (Note , scan value is 1:PWM)</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCORE_MODE_L</name>
              <description>SWR mode flag
1: PWM
0: PFM</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PARAM_PFM</name>
          <addressOffset>0x00000054</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00002808</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>reg_zcdc_H_pfm</name>
              <description>00:0.1u
01:0.2u(PFM)
10:0.7u(PWM)
11:0.8u</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SAW_FREQ_L_pfm</name>
              <description>0000     458.0k       
0001     680.2k       
0010     898.9k       
0011     1.113M       
0100     1.321M       
0101     1.522M       
0110     1.716M       
0111     1.902M       
1000     2.087M       
1001     2.258M       
1010     2.426M       
1011     2.582M       
1100     2.743M       
1101     2.888M       
1110     3.035M       
1111     3.165M</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_mos_half_L_pfm</name>
              <description>1:power mos half</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>REG_SWR_ZCD_CTRL_pfm</name>
              <description>// SWR ZCD CTRL control
&lt;1&gt;1:double current 
&lt;0&gt;1'b1: force in CCM/DCM boundary mode(default), 1'b0 : no boundary</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ZCD_Ioffset_b_pfm</name>
              <description>00=&gt;+600nA
01=&gt;+400nA
10=&gt;+200nA
11=&gt;0nA</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_prss_H_pfm</name>
              <description>0:default
1:res+cap improve psrr</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_nmos_off_L_pfm</name>
              <description>0:normal
1:NMOS always off</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PARAM_PWML</name>
          <addressOffset>0x00000058</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00002808</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>reg_zcdc_H_pwml</name>
              <description>00:0.1u
01:0.2u(PFM)
10:0.7u(PWM)
11:0.8u</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SAW_FREQ_L_pwml</name>
              <description>0000     458.0k       
0001     680.2k       
0010     898.9k       
0011     1.113M       
0100     1.321M       
0101     1.522M       
0110     1.716M       
0111     1.902M       
1000     2.087M       
1001     2.258M       
1010     2.426M       
1011     2.582M       
1100     2.743M       
1101     2.888M       
1110     3.035M       
1111     3.165M</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_mos_half_L_pwml</name>
              <description>1:power mos half</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>REG_SWR_ZCD_CTRL_pwml</name>
              <description>// SWR ZCD CTRL control
&lt;1&gt;1:double current 
&lt;0&gt;1'b1: force in CCM/DCM boundary mode(default), 1'b0 : no boundary</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ZCD_Ioffset_b_pwml</name>
              <description>00=&gt;+600nA
01=&gt;+400nA
10=&gt;+200nA
11=&gt;0nA</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_prss_H_pwml</name>
              <description>0:default
1:res+cap improve psrr</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_nmos_off_L_pwml</name>
              <description>0:normal
1:NMOS always off</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PARAM_PWMH</name>
          <addressOffset>0x0000005C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00002808</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>reg_zcdc_H_pwmh</name>
              <description>00:0.1u
01:0.2u(PFM)
10:0.7u(PWM)
11:0.8u</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SAW_FREQ_L_pwmh</name>
              <description>0000     458.0k       
0001     680.2k       
0010     898.9k       
0011     1.113M       
0100     1.321M       
0101     1.522M       
0110     1.716M       
0111     1.902M       
1000     2.087M       
1001     2.258M       
1010     2.426M       
1011     2.582M       
1100     2.743M       
1101     2.888M       
1110     3.035M       
1111     3.165M</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_mos_half_L_pwmh</name>
              <description>1:power mos half</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>REG_SWR_ZCD_CTRL_pwmh</name>
              <description>// SWR ZCD CTRL control
&lt;1&gt;1:double current 
&lt;0&gt;1'b1: force in CCM/DCM boundary mode(default), 1'b0 : no boundary</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ZCD_Ioffset_b_pwmh</name>
              <description>00=&gt;+600nA
01=&gt;+400nA
10=&gt;+200nA
11=&gt;0nA</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_prss_H_pwmh</name>
              <description>0:default
1:res+cap improve psrr</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_nmos_off_L_pwmh</name>
              <description>0:normal
1:NMOS always off</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PWM_VREF</name>
          <addressOffset>0x00000060</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000003</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pwm_vref_sel_snoz</name>
              <description>For snooze mode power , it use pwm 0.8v and CLDO pc mode , to select PWM 0.8v , it must change vref</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pwm_vref_sel_norm</name>
              <description>PWM default vref</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ZCD_ITUNE</name>
          <addressOffset>0x00000064</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>zcd_itune_sel</name>
              <description>Select itune code source
1: from software config
0: auto by regu self</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sw_zcd_itune</name>
              <description>Software config zcd itune code</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>zcd_itune_out_l</name>
              <description>SWR output ZCD itune code</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DUMMY</name>
          <addressOffset>0x0000007C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0000000F</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description></description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>wlafe</name>
      <baseAddress>0x41008480</baseAddress>
      <size>0x00000040</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00000040</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>REG_ANAPAR_POW_MAC_0</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000480</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>wlafe_iso_sel</name>
              <description>Option to enable isolation of wlafe when power off WLAFE
1: enable ,0x00[7]will be written 1 when wlafe power off
0: disable ,0x00[7]will keep 0 when wlafe power off</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ISO_WLAFE</name>
              <description>isolation signal</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>hw_en_rfafe_2regu</name>
              <description>control 3.3V power reset of wl rfafe, need level shift to 3.3V by regu</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>hw_en_rfafe</name>
              <description>core power reset of wl rfafe</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pow_ldo_rssi_adc</name>
              <description>Power on ldo for rssi adc</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pow_ldo_adc</name>
              <description>Power on ldo for adc</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pow_ldo_dac</name>
              <description>Power on ldo for dac</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pow_pll</name>
              <description>Power on pll</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pow_ldo</name>
              <description>Power on AFE power cut and pll ldo</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ANAPAR_MAC_0</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x20900008</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CK5M_EN</name>
              <description>1: Enable
0: Output "1"</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_cp_offset</name>
              <description>CP current offset 1: on 0:off</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_rs_set</name>
              <description>Set LPF rs
000~111: 1k/3k/5k/7k/9k/11k/13k/15k</description>
              <bitRange>[29:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_r3_set</name>
              <description>Set LPF r3
000~111: 1k/3k/5k/7k/9k/11k/13k/15k</description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_cs_set</name>
              <description>Set LPF cs
00/01/10/11: 12pF/20pF/24pF/32pF</description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_cp_set</name>
              <description>Set LPF cp
00/01/10/11: 0.8pF/1.2pF/1.6pF/2.0pF</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_c3_set</name>
              <description>Set LPF c3
00/01/10/11: 0.4pF/0.8pF/1.2pF/1.6pF</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_ck320_sel</name>
              <description>Ck 320MHz selection, 1 from ck_ext</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_dogenb</name>
              <description>enable watch dog
0: Enable
1: Disable</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_vc_tl</name>
              <description>Tie vc to 1/4 VDD</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_vc_th</name>
              <description>Tie vc to 3/4 VDD</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_cp_bia</name>
              <description>pll: CP: current: selection: (efuse)
000: 5uA
001: 10uA
010: 15uA
011: 20uA
100: 25uA
101: 30uA
110: 35uA
111: 40uA</description>
              <bitRange>[13:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_en_mon</name>
              <description>1: Enable
0: Output "1"</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_testen</name>
              <description>1: Enable  ck_test</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>null0</name>
              <description></description>
              <bitRange>[8:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_ps</name>
              <description>Phase swallow setting</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_ps_en</name>
              <description>Phase swallow enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_monckselh</name>
              <description>ck_mon selection
111: 160MHz
001: 110MHz
010: 101MHz
100: 320MHz
011: ck_200M_test
010: ck_sync
001: 5MHz (duty50-50)
000: ck_test</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ANAPAR_MAC_1</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00010100</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>F0F</name>
              <description>SDM divider sel</description>
              <bitRange>[31:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DIVN</name>
              <description>SDM divider sel</description>
              <bitRange>[18:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BB_DBG_SEL_AFE_SDM</name>
              <description>SDM debug selection</description>
              <bitRange>[12:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RFE_SEL_SDM</name>
              <description>pll referemce clk select 1:table 0:regesters</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BB_RFE_SEL_AFE_SDM</name>
              <description>pll referemce clk select 
AFE[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15] = [40M 25M 54M 19.2M 20M 26M 38.4M 17.664M 16M 32M 60M 52M 48M 27M 24M 80M] (efuse)</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CK320M_AFE_EN</name>
              <description>1: Enable
0: Output "1"</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CK_200M_TEST</name>
              <description></description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CK320M_EN</name>
              <description>1: Enable
0: Output "1"</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_fref_edge</name>
              <description>PLL referemce clk edge select
0: positive
1: negtive</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ANAPAR_MAC_2</name>
          <addressOffset>0x0000000C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x15000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_WLAFE_LDO_ST</name>
              <description>stable time select for WLAFE LDO
2'b00:10us, 2'b01:20us, 2'b10:100us, 2'b11:200us</description>
              <bitRange>[28:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VPLUSE_LDO_PLL</name>
              <description>For PLL(WL PLL LDO)</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SW_LDO_OUT_PLL</name>
              <description>Ldo voltage 00/01/10/11 0.85/0.9/0.95/1V(PLL LDO)</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SW_LDO2PWRCUT_PLL</name>
              <description>1 power cut mode 0 ldo mode(PLL LDO)</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SEL_8715_LUT</name>
              <description>1 -&gt; 8 phase 500MHz
0 -&gt; 6 phase 640MHz</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ORDER_SDM</name>
              <description>SDM order  
1: 3th order
0: 2nd order</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>S_DCB</name>
              <description>Driving control buffer 
11:larger current</description>
              <bitRange>[20:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>gpo</name>
              <description></description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>gpe</name>
              <description>gpe=1 and gpo=1=&gt;output
gpe=1 and gpo=0=&gt;input</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_cp_idouble</name>
              <description>1 for cp currnet double</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CK320M_PS</name>
              <description>Debug</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>null1</name>
              <description></description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VPLUSE_LDO_DAC</name>
              <description>For DAC(WL DAC LDO)</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VPLUSE_LDO_ADC</name>
              <description>For ADC(WL ADC LDO and RSSI ADC LDO)</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SW_LDO_OUT</name>
              <description>Ldo voltage
00/01/10/11: 0.85V/0.9V/0.95V/1V (ADDA LDO)</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SW_LDO2PWRCUT</name>
              <description>1 power cut mode 0 ldo mode (ADDA LDO)</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DITHER</name>
              <description>Dither funtion</description>
              <bitRange>[6:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>F0N</name>
              <description>SDM divider sel</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DBG_WLAFE_PMC</name>
          <addressOffset>0x00000010</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dbg_wlafe_pmc</name>
              <description>debug signal of wlafe_pmc</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DBG_WLAFE</name>
          <addressOffset>0x00000014</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dbg_wlafe_reg</name>
              <description>debug signal of wlafe_reg</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DUMMY</name>
          <addressOffset>0x00000018</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>HW used only , these are for reserved.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ANAPAR_RFC</name>
          <addressOffset>0x00000020</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x000208C7</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>WL_FUNEN_WLRF_SEL</name>
              <description>1: select ANAPOW_RFC_NM as ANAPAR_RFC[7:0],used when RFAFE is active
0: select ANAPOW_RFC_LPS as ANAPAR_RFC[7:0],,used when RFAFE is power off</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ANAPOW_RFC_LPS</name>
              <description>wlan power rf control</description>
              <bitRange>[18:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_rfafe_VIO1833_sel</name>
              <description>IND_VIO1833 output decided by:
1: 1.8V 
0: 3.3V</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ANAPOW_RFC_NM</name>
              <description>wlan power rf control</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_LDO_VPLUSE_SEL</name>
          <addressOffset>0x00000024</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00020083</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>vpluse_sel</name>
              <description>vpluse_ldo output decided by:
1: power on ldo 
0: ctrl reg</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>vpluse_cnt</name>
              <description>vpluse_ldo high output delay cycle after pll_ldo set high,default:5(1.25us)</description>
              <bitRange>[16:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>vpluse_wait_mcycle</name>
              <description>1: vpluse_ldo_dac and vpluse_ldo_adc pull low should wait more cycle after ldo pull high</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WLRFC_CTRL</name>
          <addressOffset>0x00000028</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0000003E</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>wlrfc_pwc_en</name>
              <description>1: gen request of wlan rfc power cut
0: gen request of turn off wlan rfc power cut</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>iso_wlrfc_en</name>
              <description>Isolation control for wlan rfc
1: isolation
0: attach</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>wlrfc_retain_en</name>
              <description>1: backup(save)
0: restore
this reg is usleless in lite,because no retention dff used in rfc</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>wlrfc_pwc_sel</name>
              <description>Option to turn off wlrfc pwr cut
1: enable 
0: disable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>wlafe_ckrfc_en</name>
              <description>1: enable WLRFC clock; 0: gated</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>wlrfc_clk_sel</name>
              <description>rfc clock divider, it is based on 320m wlpll
0: div1
1: div2
2: div3
3/other: divider by this value + 1,(default is 3:80M)</description>
              <bitRange>[7:5]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ANAPAR_DCK_0</name>
          <addressOffset>0x0000002C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00920000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DCK_COMP_ZERO_CR</name>
              <description>0: DOS [+/-]
1: DOS[+/0/-]</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_CMP_BAR_CR</name>
              <description>0:AVG_VOS1 - AVG_VOS2 / 1:AVG_VOS2 - AVG_VOS1</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_WAVE_MID_SH_CR</name>
              <description>DA[8:0] to shift -15 ~ +15 the middle value</description>
              <bitRange>[29:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_WAVE_OFSP_CR</name>
              <description>id[7:0] or qd[7:0] = wave_mid_val + wave_ofs_val</description>
              <bitRange>[24:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_CK_SYS_BAR_CR</name>
              <description>0: original clock
1: inverse clock</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_CK_DAC_BAR_CR</name>
              <description>0: original clock
1: inverse clock</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_CK_ADC_BAR_CR</name>
              <description>0: original clock
1: inverse clock</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_ADC_OFS_CR</name>
              <description>Compensate ADC offset : adc2cal_AD[9:0] + ADC_ofs_CR[5:0]</description>
              <bitRange>[13:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_LPOW_CR</name>
              <description>Low power enable when calibration done</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_CAL_OS_Q_CR</name>
              <description>DC-offset calibration enable qpath</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_CAL_OS_I_CR</name>
              <description>DC-offset calibration enable ipath</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_CAL_OS_CR</name>
              <description>DC-offset calibration enable, ipath and qpath</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_POW_DA_CR</name>
              <description>power on for DC-offset calibration</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_RSTB</name>
              <description>DCK power on reset</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_SWAP_MANU_CR</name>
              <description>SWAP by manual</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_SWAP_FORCE_CR</name>
              <description>Force the SWAP from SWAP_Manu_CR</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ANAPAR_DCK_1</name>
          <addressOffset>0x00000030</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0000003F</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DCK_FETCH_ADDR_CR</name>
              <description>Fetch the _AD-DATA
0: first
1: half-odd
2: half-even
3: final</description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_KOS_EN_FORCE_Q_CR</name>
              <description>Force the KOS_EN_Q[5:0] from KOS_EN_Manu_Q_CR[5:0]</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_KOS_EN_FORCE_I_CR</name>
              <description>Force the KOS_EN_I[5:0] from KOS_EN_Manu_I_CR[5:0]</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_DOS_MANU_I_CR</name>
              <description>DOS_I[5:0] by manual</description>
              <bitRange>[27:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_DOS_MANU_CR</name>
              <description>DOS[5:0] by manual</description>
              <bitRange>[21:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_KOS_EN_FORCE_CR</name>
              <description>Force the KOS_EN[5:0] from KOS_EN_Manu_CR[5:0]</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_DOS_FORCE_Q_CR</name>
              <description>Force the DOS_Q[5:0] from DOS_Manu_Q_CR[5:0]</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_DOS_FORCE_I_CR</name>
              <description>Force the DOS_I[5:0] from DOS_Manu_I_CR[5:0]</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_DOS_FORCE_CR</name>
              <description>Force the DOS[5:0] from DOS_Manu_CR[5:0]</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_DEBUG_PATH_CR</name>
              <description>1: DCK ready for debug</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_VOSK_SEL_Q_CR</name>
              <description>0: fetch the middle VOS_SR=VOS1-VOS2 0: first / 1: final</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_VOSK_SEL_I_CR</name>
              <description>0: fetch the middle VOS_SR=VOS1-VOS2 0: first / 1: final</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_SWITCH_WAIT_IQ_CR</name>
              <description>Switch I2Q waiting time</description>
              <bitRange>[8:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_AVG_CYC_CR</name>
              <description>DC-offset calibration fetch ADC data numbers to average</description>
              <bitRange>[5:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_WAIT_CYC_SET_CR</name>
              <description>DC-offset calibration digital waiting clock cycle for setting time</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ANAPAR_DCK_2</name>
          <addressOffset>0x00000034</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0000C000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DCK_BT_KOS_EN_FORCE_I_CR</name>
              <description>Manual write KOSEN at BT mode</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_BT_DOS_FORCE_Q_CR</name>
              <description>Manual write DOS data at BT mode</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_BT_DOS_FORCE_I_CR</name>
              <description>Manual write DOS data at BT mode</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_FIFO_CLEAR_CR</name>
              <description>Clear all FIFO</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_KOS_EN_MANU_Q_CR</name>
              <description>KOS_EN_Q[5:0] by manual</description>
              <bitRange>[27:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_KOS_EN_MANU_I_CR</name>
              <description>KOS_EN_I[5:0] by manual</description>
              <bitRange>[21:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_VOS_ADDR_CR</name>
              <description>Fetch the k-th offset average value to monitor</description>
              <bitRange>[15:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_OFS_POLAR_CR</name>
              <description>id[8:0] &amp; qd[8:0] offset +/- =&gt; 0(+) / 1(-)</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_KOS_EN_MANU_CR</name>
              <description>KOS_EN[5:0] by manual</description>
              <bitRange>[11:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_DOS_MANU_Q_CR</name>
              <description>DOS_Q[5:0] by manual</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ANAPAR_DCK_3</name>
          <addressOffset>0x00000038</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00920000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DCK_AD_DATA_SW_DEBUG_CR</name>
              <description>0: choose I path vos data
1: choose Q path vos data</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_ADC_OFS_Q_CR</name>
              <description>Compensate ADC qpath offset: adc2cal_AD[9:0] + ADC_ofs_CR[5:0]</description>
              <bitRange>[30:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_WAVE_OFSN_CR</name>
              <description></description>
              <bitRange>[24:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_RESERVE_CR</name>
              <description></description>
              <bitRange>[16:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_ad_iq_chge</name>
              <description>0:adci to DCK  I ;adcq to DCK Q /1:adci to DCK Q;adcq to DCK I</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_WL_KOS_EN_FORCE_Q_CR</name>
              <description>Manual write KOSEN at WL mode</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_WL_KOS_EN_FORCE_I_CR</name>
              <description>Manual write KOSEN at WL mode</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_WL_DOS_FORCE_Q_CR</name>
              <description>Manual write DOS data at WL mode</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_WL_DOS_FORCE_I_CR</name>
              <description>Manual write DOS data at WL mode</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_BT_KOS_EN_FORCE_Q_CR</name>
              <description>Manual write KOSEN at BT mode</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ANAPAR_DCK_BT</name>
          <addressOffset>0x0000003C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DCK_DOS_MANU_I_BT</name>
              <description>DOS_I[5:0] by manual</description>
              <bitRange>[23:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_DOS_MANU_Q_BT</name>
              <description>DOS_Q[5:0] by manual</description>
              <bitRange>[17:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_KOS_EN_MANU_Q_BT</name>
              <description>KOS_EN_Q[5:0] by manual</description>
              <bitRange>[11:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_KOS_EN_MANU_I_BT</name>
              <description>KOS_EN_I[5:0] by manual</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>xtal</name>
      <baseAddress>0x41008400</baseAddress>
      <size>0x0000003C</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x0000003C</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>ANAPAR_POW_XTAL_0</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00490000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>xtal_bg2hpmod_cyc</name>
              <description>XTAL arb bandgap enable to hp mode delay cycle @4M</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>xmd_done</name>
              <description>xmd change ok status</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>xtal_ckrdy</name>
              <description>xtal clock ready status</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>xtal_state</name>
              <description>0 to 1 Enable xtal</description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>POW_XTAL</name>
              <description>0 to 1 Enable xtal</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>POW_BG</name>
              <description>Enable BG  (BG for xtal and AFE)  (有option關)</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ANAPAR_XTAL_ON_0</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x008100E7</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>XTAL_SC_INIT</name>
              <description>0: reduce cap, 1: increase cap. (220fF per unit)
[efuse for BT only ] 有外掛電容設全0</description>
              <bitRange>[30:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_SC_XO</name>
              <description>1: reduce cap, 0: increase cap. (220fF per unit)
[efuse for BT only ]</description>
              <bitRange>[23:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_SC_XI</name>
              <description>1: reduce cap, 0: increase cap. (220fF per unit)
[efuse for BT only ]</description>
              <bitRange>[16:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_GMN</name>
              <description>GMN: 0~31</description>
              <bitRange>[9:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_GMP</name>
              <description>GMP: 0~31</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ANAPAR_XTAL_ON_1</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFC399C80</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>Reserved for future use.</description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_AAC_OPCUR</name>
              <description>00: 200nA , 200n/step  
For AAC robust 11</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_VREF_SEL</name>
              <description>Analog AAC VREF, 390mV~700mV, 10mV/step
11000: Vpp 500mV</description>
              <bitRange>[27:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_LPS_DIVISOR</name>
              <description>XTAL LPS clock divider 
0: XTAL/128(40M), 1: XTAL/64</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_CKDIGI_SEL</name>
              <description>1: DIGI CLK from self-bias
0: DIGI CLK from Schmitt</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EN_XTAL_LPS_CLK</name>
              <description>1: enable XTAL LPS clock 
與anapar_xtal_on[43]都是312.5KHz enable</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EN_XTAL_SCHMITT</name>
              <description>1: enable XTAL SCHMITT</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_LDO_VREF</name>
              <description>(起震前)
111: 1.1V  110: 1.05V  101:1V  100:0.95V
011: 0.9V  010: 0.85V   001: 0.8V  000: 0.75V</description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_SEL_TOK</name>
              <description>xtal起振过程
reg value: cycles / 40MHz / 26MHz
000: 2^10 / 0.025m / 0.05
001: 2^11 / 0.05m / 0.1m
010: 2^12 / 0.1m / 0.2m
011: 2^13 / 0.2m / 0.3m
100: 2^14 / 0.4m / 0.6m
101: 2^15 / 0.8m / 1.2m
110: 2^16 / 1.6m / 2.5m
111: 2^17 / 3.2m / 4.9m
xtal mode switch过程
reg value: cycles / 40MHz / 26MHz
000: 2^10 / 0.0125m / 0.025
001: 2^11 / 0.025m / 0.05m
010: 2^12 / 0.05m / 0.1m
011: 2^13 / 0.1m / 0.2m
100: 2^14 / 0.2m / 0.3m
101: 2^15 / 0.4m / 0.6m
110: 2^16 / 0.8m / 1.25m
111: 2^17 / 1.6m / 2.45m</description>
              <bitRange>[15:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EN_XTAL_DRV_LPS</name>
              <description>LPS enable clock source control, 1:enable, 0: gated
與anapar_xtal_on[51]都是312.5KHz enable</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EN_XTAL_DRV_DIGI</name>
              <description>DIGI enable clock source control, 1:enable, 0: gated</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EN_XTAL_DRV_USB</name>
              <description>USB enable clock source control, 1:enable, 0: gated</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EN_XTAL_DRV_AFE</name>
              <description>AFE enable clock source control, 1:enable, 0: gated
(for WL AFE PLL)</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EN_XTAL_DRV_RF2</name>
              <description>RF2 enable clock source control, 1:enable, 0: gated (for BT)</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EN_XTAL_DRV_RF1</name>
              <description>RF1 enable clock source control, 1:enable, 0: gated (for WL SYN)</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_SC_LPS</name>
              <description>0: reduce cap, 1: increase cap. (160fF per unit)
[efuse for BT only ] 若有頻偏再修改</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ANAPAR_XTAL_ON_2</name>
          <addressOffset>0x0000000C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x000008E9</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>XTAL_SEL_TOK_FST</name>
              <description>used for HP2NM or NM2HP
xtal起振过程
reg value: cycles / 40MHz / 26MHz
000: 2^10 / 0.025m / 0.05
001: 2^11 / 0.05m / 0.1m
010: 2^12 / 0.1m / 0.2m
011: 2^13 / 0.2m / 0.3m
100: 2^14 / 0.4m / 0.6m
101: 2^15 / 0.8m / 1.2m
110: 2^16 / 1.6m / 2.5m
111: 2^17 / 3.2m / 4.9m
xtal mode switch过程
reg value: cycles / 40MHz / 26MHz
000: 2^10 / 0.0125m / 0.025
001: 2^11 / 0.025m / 0.05m
010: 2^12 / 0.05m / 0.1m
011: 2^13 / 0.1m / 0.2m
100: 2^14 / 0.2m / 0.3m
101: 2^15 / 0.4m / 0.6m
110: 2^16 / 0.8m / 1.25m
111: 2^17 / 1.6m / 2.45m</description>
              <bitRange>[31:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_DUMMY</name>
              <description>Dummy control bits</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EN_XTAL_BDRF</name>
              <description>Balance dynamic RF for duty cycle</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GM_MANUAL</name>
              <description>Gm manual at EN_XTAL_AAC_DIGI=0</description>
              <bitRange>[9:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EN_XTAL_AAC_GM</name>
              <description>1: enable xtal aac gm control</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EN_XTAL_DRV_IQK_BCN</name>
              <description>IQKPLL enable clock source control, 1:enable, 0: gate</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EN_XTAL_DRV_DIGI_DIV2</name>
              <description>IQKPLL enable clock source control, 1:enable, 0: gate</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AAC_MODE</name>
              <description>AAC_MODE for LPS
00: all XOXI cap off
01: cap from XTAL_SC_LPS
10: cap from XTAL_SC_INIT
11: cap from XTAL_SC_XI/XO</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ANAPAR_XTAL_OFF_0</name>
          <addressOffset>0x00000010</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xCC0FFF90</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>XTAL_PDCK_OK_MANU</name>
              <description>1: force PDCK_OK=1 for PDCK manual</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EN_XTAL_PDCK_VREF</name>
              <description>1: analog AAC VREF from PDCK digital circuit
0: analog AAC VREF from XTAL_VREF_SEL for BT only mode</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_SEL_PWR</name>
              <description>1: external 0.9V, 0: internal 0.9V (FIB)</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_PK_SEL_OFFSET</name>
              <description>1: XI Vpk-to-Vpk offset to
00: 0.4V  01: 0.5V  10: 0.6V  11: 0.7V</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_MANU_PK_SEL</name>
              <description>XI Vpk-to-Vpk
00: 0.7V  01: 0.8V  10: 0.9V  11: 1V</description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_AACK_PK_MANU</name>
              <description>1: manual for peak detector peak selection</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EN_XTAL_AAC_PKDET</name>
              <description>1: enable xtal aac peak detector</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_LDO_OPVB_SEL</name>
              <description>0: OP bias from IBG, 1: OP bias from Res divider</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_LDO_NC</name>
              <description>1: low current normal mode (22C)
0:high current normal mode
(此pin要拉給BT控制)</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_LPMODE</name>
              <description>1: low power mode enable 
22C turn off replica path, RF1 no CLK
RF2 sweep to LPS buf</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_DELAY_DIGI</name>
              <description>1: turn on XI/XO Cfix, single side 8pF</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_DELAY_USB</name>
              <description>0: short, 1:long</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_DELAY_AFE</name>
              <description>0: short, 1:long</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_DRV_DIGI</name>
              <description>Driving control of DIGI/LPS clock buffer, 11:large current, 00: small current</description>
              <bitRange>[16:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_DRV_USB</name>
              <description>Driving control of USB clock buffer, 11:large current, 00: small current</description>
              <bitRange>[14:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_DRV_AFE</name>
              <description>Driving control of AFE clock buffer, 11:large current, 00: small current</description>
              <bitRange>[12:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_DRV_RF2</name>
              <description>Driving control of RF2 clock buffer, 11:large current, 00: small current</description>
              <bitRange>[10:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_DRV_RF1</name>
              <description>Dummy
由RFC控制</description>
              <bitRange>[8:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_DRV_RF_LATCH</name>
              <description>1: latch enable</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_GM_SEP</name>
              <description>0: GMP=GMN</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XQSEL_RF_AWAKE</name>
              <description>0: Schmitt trigger, 1:replica INV(for OK0=1)</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XQSEL_RF_INITIAL</name>
              <description>0: Schmitt trigger, 1:replica INV(for OK0=0)
22C OK0=0, RF no CLK</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XQSEL</name>
              <description>0: Schmitt trigger, 1:replica INV(for AFE)</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GATED_XTAL_OK0</name>
              <description>1:Gated xtal OK0</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ANAPAR_XTAL_OFF_1</name>
          <addressOffset>0x00000014</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000068</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>XTAL_EN_LNBUF</name>
              <description>0: separate bias buffer (lower current higher noise)
1: self-bias (higher current lower noise)</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_AAC_TIE_MID</name>
              <description>XTAL_ AAC_TIE_MID=1 &amp; EN_XTAL_PDCK_VREF=0 &amp;
using XTAL_VREF_SEL&lt;4:0&gt; for lock detect</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_AAC_IOFFSET</name>
              <description>Analog AAC IOFFSET current
00: off, 01:2uA, 10:4uA, 11:6uA</description>
              <bitRange>[8:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_AAC_CAP</name>
              <description>Analog AAC domain pole cap 3pF/step
00: no cap,11: max cap</description>
              <bitRange>[6:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_PDSW</name>
              <description>XTAL analog AAC peak detector source follower size, 00: small 11: large</description>
              <bitRange>[4:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_LPS_BUF_VB</name>
              <description>00: small current, 11: large current</description>
              <bitRange>[2:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_PDCK_MANU</name>
              <description>1: open analog AAC loop for PDCK manual</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ANAPAR_XTAL_OFF_2</name>
          <addressOffset>0x00000018</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000006</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>xtal_off_dummy1</name>
              <description>HW used only</description>
              <bitRange>[9:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BG_T_OPTION</name>
              <description>BG options</description>
              <bitRange>[3:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>xtal_off_dummy0</name>
              <description>HW used only</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>XTAL_FEN</name>
          <addressOffset>0x0000001C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000004</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>fen_xmddc</name>
              <description>1:enable xmddc
0:reset xmddc module</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_xaack</name>
              <description>1:enable AACK 
0:reset AACK module</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_xpdck</name>
              <description>1:enable PDCK 
0:reset PDCK module</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ANAPAR_XTAL_PDCK</name>
          <addressOffset>0x00000020</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x002539D0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PDCK_STATE</name>
              <description>PDCK state for debug</description>
              <bitRange>[31:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PDCK_LPOW</name>
              <description>PDCK low power mode, 1:gating input clk
Set to 1 when PDCK finished</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XPDCK_VREF_SEL</name>
              <description>PDCK calibrated result +offset 
For AAC robust +3</description>
              <bitRange>[22:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_PDCK_UNIT</name>
              <description>PDCK settling cycles (4M CLK)
00: 4us
01: 8us 
10: 16us 
11: 32us</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VREF_INIT</name>
              <description>PDCK VREF initial setting</description>
              <bitRange>[15:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VREF_MANUAL</name>
              <description>VREF manual at EN_XTAL_PDCK_DIGI=0
When pdck done, it will auto set this value to pdck result</description>
              <bitRange>[10:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PDCK_WAIT_CYC</name>
              <description>Enable PDCK waiting (4M CLK)
00: 64us
01:128us 
10:256us 
11:512us</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PDCK_SEARCH_MODE</name>
              <description>0: binary search, 1: full search from 31</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EN_XTAL_PDCK_DIGI</name>
              <description>Default set 0 due to POW_XTAL will 1 before do PDCK</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reset_n_pdck</name>
              <description>PDCK digital circuit reset (low to high),not used</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ANAPAR_XTAL_AAC</name>
          <addressOffset>0x00000024</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xC00E4E04</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>XAACK_AAC_MODE</name>
              <description>11: XTAL_AACK_PK_SEL=&lt;11&gt;'s XTAL_GM_OUT3
10: XTAL_AACK_PK_SEL=&lt;10&gt;'s XTAL_GM_OUT2
01: XTAL_AACK_PK_SEL=&lt;01&gt;'s XTAL_GM_OUT1
00: XTAL_AACK_PK_SEL=&lt;00&gt;'s XTAL_GM_OUT0</description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EN_XTAL_AAC_TRIG</name>
              <description>MAC內部訊號(目前floating)
Set by pmc and clr by HW finish calibration</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EN_XTAL_AAC</name>
              <description>MAC內部訊號(目前floating)
0: 不做AAC (default), 1: power on 做AAC</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EN_XTAL_AAC_DIGI</name>
              <description>1:enable aac digital circuit</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GM_STUP</name>
              <description>aac gm start up setting (pkdet=0時,回到最大gm)</description>
              <bitRange>[21:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_CK_SET</name>
              <description>aac settling cycles (4M CLK)
000:  64us
001:  128us
010:  256us
011:  512us
100:  1024us
101:  2048us
110:  4096us
111:  8192us</description>
              <bitRange>[16:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GM_INIT</name>
              <description>aac gm initial setting</description>
              <bitRange>[13:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GM_STEP</name>
              <description>aac gm searching step. 0:step 1, 1:step 2</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XAAC_GM_OFFSET</name>
              <description>aac calibrated gm result +/- offset</description>
              <bitRange>[7:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OFFSET_PLUS</name>
              <description>0: aac calibrated gm result -offset , 1:aac calibrated gm result + offset</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reset_n_aac</name>
              <description>AAC digital circuit reset (low to high)
Default=0, 有EN_AAC 才會放開 (not used)</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ANAPAR_XTAL_AAC_ON_1</name>
          <addressOffset>0x00000028</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0000003C</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>XAAC_DONE</name>
              <description>for XAAC debug</description>
              <bitRange>[31:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>XAAC_STATE</name>
              <description>for XAAC debug</description>
              <bitRange>[15:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>XAAC_DBG</name>
              <description>for XAAC debug</description>
              <bitRange>[11:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>XAAC_BUSY</name>
              <description>for XAAC debug</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PK_END_AR</name>
              <description>AAC peak sel end (star&gt;end)</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PK_START_AR</name>
              <description>AACK peak sel start (star&gt;end)</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XAAC_LUT_MANUAL_EN</name>
              <description>1: enable LUT
data: GM_MANUAL&lt;4:0&gt; , sel: AAC_MODE&lt;1:0&gt;</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XAAC_LPOW</name>
              <description>AACK low power mode, 1:gating input clk</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ANAPAR_XTAL_MODE_DEC_ON_0</name>
          <addressOffset>0x0000002C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x980924E2</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>XTAL_LPS_CAP_STEP</name>
              <description>00:1 step/01:2 step/10:4 step /11:8 step
一次降幾檔Cap</description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_LPS_CAP_CYC</name>
              <description>00:8u/01:16u/10:32u/11:64u
多久降一次Cap step</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XMD_SEL</name>
              <description>00:100K/01:500K/10:4M/11:12M
隨著系統頻率變化,需要改變此reg</description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCAN_MODE_XMD</name>
              <description>1:scan mode</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_LDO_LPS</name>
              <description>(起震後, 進入LPS時)
111: 1.1V  110: 1.05V  101:1V  100:0.95V
011: 0.9V  010: 0.85V   001: 0.8V  000: 0.75V</description>
              <bitRange>[24:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_WAIT_CYC</name>
              <description>Next state wait cycle, 83ns/unit</description>
              <bitRange>[21:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_LDO_OK</name>
              <description>(起震後)
111: 1.1V  110: 1.05V  101:1V  100:0.95V
011: 0.9V  010: 0.85V   001: 0.8V  000: 0.75V</description>
              <bitRange>[15:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_MD_LPOW</name>
              <description>XTAL mode decoder low power mode
1: gated input clock</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_OV_RATIO</name>
              <description>overlap unit times (4M CLK)
00:  128us
01:  256us
10:  512us
11:  1024us</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_OV_UNIT</name>
              <description>overlap time settling cycles (4M CLK) 
000: 10us
001: 20us 
010: 40us
011: 80us
100: 160us
101: 320us
110: 640us
111: 1280us</description>
              <bitRange>[9:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_MODE_MANUAL</name>
              <description>01: LPS mode
10: Normal mode
11: high performance mode
[efuse for power on ]</description>
              <bitRange>[6:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_MANU_SEL</name>
              <description>1: enable xtal mode manual
[efuse for power on ]</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>POW_XTAL_LPS</name>
              <description>POW_XTAL_LPS</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>XTAL_MODE</name>
              <description>22C xtal mode define:
{POW_XTAL, XTAL_MODE, POW_XTAL_LPS}
[efuse for power on ]</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>reset_n_xmd</name>
              <description>Decoder digital circuit reset (low to high)
Default 1&amp;POR 再給reset_n. (not used)</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ANAPAR_XTAL_MODE_DEC_ON_1</name>
          <addressOffset>0x00000030</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>XTAL_OV_RATIO_FST</name>
              <description>overlap unit times (4M CLK), used for HP2NM or NM2HP
00:  128us
01:  256us
10:  512us
11:  1024us</description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>xmd_state</name>
              <description>for xmd debug</description>
              <bitRange>[20:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>xtal_mode_dec</name>
              <description>for xmd debug
10:NM
01: LPS
11: HP</description>
              <bitRange>[9:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>XTAL_LPS_CAP_CTRL</name>
              <description>1:cap step control</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>XTAL_DEBUG</name>
          <addressOffset>0x00000034</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x71C00002</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>xtal_tout</name>
              <description>xtal arbiter wait feedback signal timeout delay cycle, if this valua is max, arbiter will disable timeout function. Time unit is xtal_tutime</description>
              <bitRange>[31:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XAAC_PK_SEL</name>
              <description>XAAC_PK_SEL(AAC calibration address)</description>
              <bitRange>[20:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>XAAC_READY</name>
              <description>signal for xtal</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>XTAL_GM_OUT</name>
              <description>AACK digital calculate result for ANA comparator</description>
              <bitRange>[17:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>XPDCK_BUSY</name>
              <description>signal for xtal</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>XPDCK_READY</name>
              <description>signal for xtal</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>XPDCK_VREF_OUT</name>
              <description>PDCK digital calculate result for ANA comparator</description>
              <bitRange>[10:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>manu_pow_bg</name>
              <description>manual mode POW_BG</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>manu_xtal_mode</name>
              <description>manual mode XTAL_MODE</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>manu_pow_xtal_lps</name>
              <description>manual mode POW_XTAL_LPS</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>manu_pow_xtal</name>
              <description>manual mode POW_XTAL</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>xtal_auto_pdck</name>
              <description>Auto PDCK enable signal. If set this bit, arbiter will do PDCK before XTAL enter LPS mode.
Once PDCK done , this bit will auto set 0</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>xtal_arb_manual_en</name>
              <description>Aribter manual mode enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>XTAL_ART_CKON_TIM</name>
          <addressOffset>0x00000038</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0000000F</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>HW used only</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>memx</name>
      <baseAddress>0x41008600</baseAddress>
      <size>0x00000200</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00000200</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>MBIST_CTRL_ALL</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description>MEMx MBIST control and status register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>mbist_sta</name>
              <description>Total mbist status
[16] MBIST DRF_START_PAUSE
[17] MBIST NRML_DONE_ALL
[18] MBIST NRML_FAIL_ALL
[19] MBIST DRF_DONE_ALL
[20] MBIST DRF_FAIL_ALL</description>
              <bitRange>[20:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>mbist_ctrl</name>
              <description>Total mbist control
[0] MBIST_CLK_EN_ALL
    BIS_CLK enable of all system memory groups.
[1] MBIST_RSTB_ALL
    Reset controll mbist circuit of all system memory groups.
[3:2]MBIST_MSEL_ALL 
    mbist method selection of all memory groups:
    2'b01: enable normal mode mbist
    2'b10: enable DRF mode mbist 
    2'b11: enable normal&amp;DRF mode mbist
[4]MBIST_RESUME
[5]MBIST_RESUME_PS
[6]MBIST_DYN_READ_EN
   If MBIST_MSEL_ALL[1]=1 &amp; MBIST_DYN_READ_EN=1, run VDDR mode mbist.
7]MBIST_PHYCLK_STOP</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MBIST_GRP_EN_CTRL0</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description>Used to on-off mbist of memory block in a group.</description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>grp_en_km4_itcm0_e0</name>
              <description></description>
              <bitRange>[31:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_en_km4_icache_e0</name>
              <description></description>
              <bitRange>[22:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_en_km4_dcache_e0</name>
              <description></description>
              <bitRange>[20:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_en_wpoff_e1</name>
              <description></description>
              <bitRange>[18:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_en_wlk4_e0</name>
              <description></description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_en_hper_e0</name>
              <description></description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_en_aonpmc_e0</name>
              <description></description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_en_hsys_e0</name>
              <description></description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MBIST_GRP_EN_CTRL1</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description>Used to on-off mbist of memory block in a group.</description>
          <resetValue>0x000001FF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>grp_en_km0_itcm0_e0</name>
              <description></description>
              <bitRange>[8:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_en_km0_icache_e0</name>
              <description></description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_en_km0_dcache_e0</name>
              <description></description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MBIST_GRP_EN_BT_VIR_E00</name>
          <addressOffset>0x0000000C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x000FFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bt_vir_e0_bist_en_19_0</name>
              <description></description>
              <bitRange>[19:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MBIST_DONE_STA0</name>
          <addressOffset>0x00000010</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>mbist_done_21_0</name>
              <description></description>
              <bitRange>[21:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MBIST_START_PULSE0</name>
          <addressOffset>0x00000014</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>mbist_start_pause_21_0</name>
              <description></description>
              <bitRange>[21:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MBIST_NORM_FAIL0</name>
          <addressOffset>0x00000018</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>mbist_norm_fail_31_0</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MBIST_NORM_FAIL1</name>
          <addressOffset>0x0000001C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>mbist_norm_fail_52_32</name>
              <description></description>
              <bitRange>[20:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MBIST_DRF_FAIL0</name>
          <addressOffset>0x00000020</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>mbist_drf_fail_31_0</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MBIST_DRF_FAIL1</name>
          <addressOffset>0x00000024</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>mbist_drf_fail_52_32</name>
              <description></description>
              <bitRange>[20:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BT_VIR_E0_BIST_DONE0</name>
          <addressOffset>0x00000028</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bt_vir_e0_mbist_done_19_0</name>
              <description></description>
              <bitRange>[19:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BT_VIR_E0_BIST_FAIL0</name>
          <addressOffset>0x0000002C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bt_vir_e0_mbist_fail_19_0</name>
              <description></description>
              <bitRange>[19:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BT_VIR_E0_BIST_DRF_PAUSE0</name>
          <addressOffset>0x00000030</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bt_vir_e0_mbist_drf_pause_19_0</name>
              <description></description>
              <bitRange>[19:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BT_VIR_E0_BIST_RPT</name>
          <addressOffset>0x00000034</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bt_vir_e0_bist_rpt</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BT_VIR_E0_RPT_SEL</name>
          <addressOffset>0x00000038</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bt_vir_e0_rpt_sel</name>
              <description>Select which rom's misr_dataout or bist_status of each memory can be read from bt_vir_e0_bist_rpt</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MISR_DOUT_SEL</name>
          <addressOffset>0x0000003C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>km0_itcm0_e0_misr_sel</name>
              <description></description>
              <bitRange>[7:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>km4_itcm0_e0_misr_sel</name>
              <description></description>
              <bitRange>[4:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>aonpmc_e0_misr_sel</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LSPMC_E0_ROM_MISR0</name>
          <addressOffset>0x00000040</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>lspmc_e0_misr_dout_31_0</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LSPMC_E0_ROM_MISR1</name>
          <addressOffset>0x00000044</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>lspmc_e0_misr_dout_35_32</name>
              <description></description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AONPMC_E0_ROM_MISR1</name>
          <addressOffset>0x00000048</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>aonpmc_e0_misr_dout_31_0</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AONPMC_E0_ROM_MISR2</name>
          <addressOffset>0x0000004C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>aonpmc_e0_misr_dout_35_32</name>
              <description></description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>KM4_ITCM0_E0_ROM_MISR2</name>
          <addressOffset>0x00000050</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>km4_itcm0_e0_misr_dout_31_0</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>KM4_ITCM0_E0_ROM_MISR3</name>
          <addressOffset>0x00000054</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>km4_itcm0_e0_misr_dout_63_32</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>KM0_ITCM0_E0_ROM_MISR3</name>
          <addressOffset>0x00000058</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>km0_itcm0_e0_misr_dout_31_0</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>KM0_ITCM0_E0_ROM_MISR4</name>
          <addressOffset>0x0000005C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>km0_itcm0_e0_misr_dout_63_32</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GRP_PWR_MSK0</name>
          <addressOffset>0x00000060</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>grp_pmsk_km4_dcache_e0</name>
              <description></description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_pmsk_bt_e1</name>
              <description></description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_pmsk_bt_e0</name>
              <description></description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_pmsk_wpon_e0</name>
              <description></description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_pmsk_wpoff_e5</name>
              <description></description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_pmsk_wpoff_e4</name>
              <description></description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_pmsk_wpoff_e3</name>
              <description></description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_pmsk_wpoff_e2</name>
              <description></description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_pmsk_wpoff_e1</name>
              <description></description>
              <bitRange>[21:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_pmsk_wpoff_e0</name>
              <description></description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_pmsk_wlk4_e0</name>
              <description></description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_pmsk_hper_e0</name>
              <description></description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_pmsk_aonpmc_e0</name>
              <description></description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_pmsk_lspmc_e0</name>
              <description></description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_pmsk_lret_e0</name>
              <description></description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_pmsk_hsys_e0</name>
              <description></description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GRP_PWR_MSK1</name>
          <addressOffset>0x00000064</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x000FFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>grp_pmsk_km0_itcm0_e0</name>
              <description></description>
              <bitRange>[19:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_pmsk_km0_icache_e0</name>
              <description></description>
              <bitRange>[14:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_pmsk_km0_dcache_e0</name>
              <description></description>
              <bitRange>[12:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_pmsk_km4_itcm0_e0</name>
              <description></description>
              <bitRange>[10:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_pmsk_km4_icache_e0</name>
              <description></description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GRP_HSYS_E0_CTRL</name>
          <addressOffset>0x00000068</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00034000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>grp_HSYS_E0_msel</name>
              <description>*01 - This memory group can do normal mbist;
*10 - This memory group can do DRF mbist;
*11 - This memory group can do normal &amp; DRF mbist</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_HSYS_E0_loop_mode</name>
              <description>*0 - Assist loop mode;
*1 - Don't assist loop mode</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_HSYS_E0_rstn</name>
              <description>*0 - Reset mbist circuit of this memory group;
*1 - Release mbist circuit of this memory group.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GRP_LRET_E0_CTRL</name>
          <addressOffset>0x0000006C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00034000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>grp_LRET_E0_msel</name>
              <description>*01 - This memory group can do normal mbist;
*10 - This memory group can do DRF mbist;
*11 - This memory group can do normal &amp; DRF mbist</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_LRET_E0_loop_mode</name>
              <description>*0 - Assist loop mode;
*1 - Don't assist loop mode</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_LRET_E0_rstn</name>
              <description>*0 - Reset mbist circuit of this memory group;
*1 - Release mbist circuit of this memory group.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GRP_LSPMC_E0_CTRL</name>
          <addressOffset>0x00000070</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00034000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>grp_LSPMC_E0_msel</name>
              <description>*01 - This memory group can do normal mbist;
*10 - This memory group can do DRF mbist;
*11 - This memory group can do normal &amp; DRF mbist</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_LSPMC_E0_loop_mode</name>
              <description>*0 - Assist loop mode;
*1 - Don't assist loop mode</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_LSPMC_E0_rstn</name>
              <description>*0 - Reset mbist circuit of this memory group;
*1 - Release mbist circuit of this memory group.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GRP_AONPMC_E0_CTRL</name>
          <addressOffset>0x00000074</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00034000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>grp_AONPMC_E0_msel</name>
              <description>*01 - This memory group can do normal mbist;
*10 - This memory group can do DRF mbist;
*11 - This memory group can do normal &amp; DRF mbist</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_AONPMC_E0_loop_mode</name>
              <description>*0 - Assist loop mode;
*1 - Don't assist loop mode</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_AONPMC_E0_rstn</name>
              <description>*0 - Reset mbist circuit of this memory group;
*1 - Release mbist circuit of this memory group.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GRP_HPER_E0_CTRL</name>
          <addressOffset>0x00000078</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00034000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>grp_HPER_E0_msel</name>
              <description>*01 - This memory group can do normal mbist;
*10 - This memory group can do DRF mbist;
*11 - This memory group can do normal &amp; DRF mbist</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_HPER_E0_loop_mode</name>
              <description>*0 - Assist loop mode;
*1 - Don't assist loop mode</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_HPER_E0_rstn</name>
              <description>*0 - Reset mbist circuit of this memory group;
*1 - Release mbist circuit of this memory group.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GRP_WLK4_E0_CTRL</name>
          <addressOffset>0x0000007C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00034000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>grp_WLK4_E0_msel</name>
              <description>*01 - This memory group can do normal mbist;
*10 - This memory group can do DRF mbist;
*11 - This memory group can do normal &amp; DRF mbist</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_WLK4_E0_loop_mode</name>
              <description>*0 - Assist loop mode;
*1 - Don't assist loop mode</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_WLK4_E0_rstn</name>
              <description>*0 - Reset mbist circuit of this memory group;
*1 - Release mbist circuit of this memory group.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GRP_WPOFF_E0_CTRL</name>
          <addressOffset>0x00000080</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00034000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>grp_WPOFF_E0_msel</name>
              <description>*01 - This memory group can do normal mbist;
*10 - This memory group can do DRF mbist;
*11 - This memory group can do normal &amp; DRF mbist</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_WPOFF_E0_loop_mode</name>
              <description>*0 - Assist loop mode;
*1 - Don't assist loop mode</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_WPOFF_E0_rstn</name>
              <description>*0 - Reset mbist circuit of this memory group;
*1 - Release mbist circuit of this memory group.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GRP_WPOFF_E1_CTRL</name>
          <addressOffset>0x00000084</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00034000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>grp_WPOFF_E1_msel</name>
              <description>*01 - This memory group can do normal mbist;
*10 - This memory group can do DRF mbist;
*11 - This memory group can do normal &amp; DRF mbist</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_WPOFF_E1_loop_mode</name>
              <description>*0 - Assist loop mode;
*1 - Don't assist loop mode</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_WPOFF_E1_rstn</name>
              <description>*0 - Reset mbist circuit of this memory group;
*1 - Release mbist circuit of this memory group.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GRP_WPOFF_E2_CTRL</name>
          <addressOffset>0x00000088</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00034000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>grp_WPOFF_E2_msel</name>
              <description>*01 - This memory group can do normal mbist;
*10 - This memory group can do DRF mbist;
*11 - This memory group can do normal &amp; DRF mbist</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_WPOFF_E2_loop_mode</name>
              <description>*0 - Assist loop mode;
*1 - Don't assist loop mode</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_WPOFF_E2_rstn</name>
              <description>*0 - Reset mbist circuit of this memory group;
*1 - Release mbist circuit of this memory group.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GRP_WPOFF_E3_CTRL</name>
          <addressOffset>0x0000008C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00034000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>grp_WPOFF_E3_msel</name>
              <description>*01 - This memory group can do normal mbist;
*10 - This memory group can do DRF mbist;
*11 - This memory group can do normal &amp; DRF mbist</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_WPOFF_E3_loop_mode</name>
              <description>*0 - Assist loop mode;
*1 - Don't assist loop mode</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_WPOFF_E3_rstn</name>
              <description>*0 - Reset mbist circuit of this memory group;
*1 - Release mbist circuit of this memory group.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GRP_WPOFF_E4_CTRL</name>
          <addressOffset>0x00000090</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00034000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>grp_WPOFF_E4_msel</name>
              <description>*01 - This memory group can do normal mbist;
*10 - This memory group can do DRF mbist;
*11 - This memory group can do normal &amp; DRF mbist</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_WPOFF_E4_loop_mode</name>
              <description>*0 - Assist loop mode;
*1 - Don't assist loop mode</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_WPOFF_E4_rstn</name>
              <description>*0 - Reset mbist circuit of this memory group;
*1 - Release mbist circuit of this memory group.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GRP_WPOFF_E5_CTRL</name>
          <addressOffset>0x00000094</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00034000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>grp_WPOFF_E5_msel</name>
              <description>*01 - This memory group can do normal mbist;
*10 - This memory group can do DRF mbist;
*11 - This memory group can do normal &amp; DRF mbist</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_WPOFF_E5_loop_mode</name>
              <description>*0 - Assist loop mode;
*1 - Don't assist loop mode</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_WPOFF_E5_rstn</name>
              <description>*0 - Reset mbist circuit of this memory group;
*1 - Release mbist circuit of this memory group.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GRP_WPON_E0_CTRL</name>
          <addressOffset>0x00000098</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00034000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>grp_WPON_E0_msel</name>
              <description>*01 - This memory group can do normal mbist;
*10 - This memory group can do DRF mbist;
*11 - This memory group can do normal &amp; DRF mbist</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_WPON_E0_loop_mode</name>
              <description>*0 - Assist loop mode;
*1 - Don't assist loop mode</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_WPON_E0_rstn</name>
              <description>*0 - Reset mbist circuit of this memory group;
*1 - Release mbist circuit of this memory group.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GRP_BT_E0_CTRL</name>
          <addressOffset>0x0000009C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00034000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>grp_BT_E0_msel</name>
              <description>*01 - This memory group can do normal mbist;
*10 - This memory group can do DRF mbist;
*11 - This memory group can do normal &amp; DRF mbist</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_BT_E0_loop_mode</name>
              <description>*0 - Assist loop mode;
*1 - Don't assist loop mode</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_BT_E0_rstn</name>
              <description>*0 - Reset mbist circuit of this memory group;
*1 - Release mbist circuit of this memory group.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GRP_BT_E1_CTRL</name>
          <addressOffset>0x000000A0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00034000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>grp_BT_E1_msel</name>
              <description>*01 - This memory group can do normal mbist;
*10 - This memory group can do DRF mbist;
*11 - This memory group can do normal &amp; DRF mbist</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_BT_E1_loop_mode</name>
              <description>*0 - Assist loop mode;
*1 - Don't assist loop mode</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_BT_E1_rstn</name>
              <description>*0 - Reset mbist circuit of this memory group;
*1 - Release mbist circuit of this memory group.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GRP_KM4_DCACHE_E0_CTRL</name>
          <addressOffset>0x000000A4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00034000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>grp_KM4_DCACHE_E0_msel</name>
              <description>*01 - This memory group can do normal mbist;
*10 - This memory group can do DRF mbist;
*11 - This memory group can do normal &amp; DRF mbist</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_KM4_DCACHE_E0_loop_mode</name>
              <description>*0 - Assist loop mode;
*1 - Don't assist loop mode</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_KM4_DCACHE_E0_rstn</name>
              <description>*0 - Reset mbist circuit of this memory group;
*1 - Release mbist circuit of this memory group.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GRP_KM4_ICACHE_E0_CTRL</name>
          <addressOffset>0x000000A8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00034000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>grp_KM4_ICACHE_E0_msel</name>
              <description>*01 - This memory group can do normal mbist;
*10 - This memory group can do DRF mbist;
*11 - This memory group can do normal &amp; DRF mbist</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_KM4_ICACHE_E0_loop_mode</name>
              <description>*0 - Assist loop mode;
*1 - Don't assist loop mode</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_KM4_ICACHE_E0_rstn</name>
              <description>*0 - Reset mbist circuit of this memory group;
*1 - Release mbist circuit of this memory group.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GRP_KM4_ITCM0_E0_CTRL</name>
          <addressOffset>0x000000AC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00034000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>grp_KM4_ITCM0_E0_msel</name>
              <description>*01 - This memory group can do normal mbist;
*10 - This memory group can do DRF mbist;
*11 - This memory group can do normal &amp; DRF mbist</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_KM4_ITCM0_E0_loop_mode</name>
              <description>*0 - Assist loop mode;
*1 - Don't assist loop mode</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_KM4_ITCM0_E0_rstn</name>
              <description>*0 - Reset mbist circuit of this memory group;
*1 - Release mbist circuit of this memory group.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GRP_KM0_DCACHE_E0_CTRL</name>
          <addressOffset>0x000000B0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00034000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>grp_KM0_DCACHE_E0_msel</name>
              <description>*01 - This memory group can do normal mbist;
*10 - This memory group can do DRF mbist;
*11 - This memory group can do normal &amp; DRF mbist</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_KM0_DCACHE_E0_loop_mode</name>
              <description>*0 - Assist loop mode;
*1 - Don't assist loop mode</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_KM0_DCACHE_E0_rstn</name>
              <description>*0 - Reset mbist circuit of this memory group;
*1 - Release mbist circuit of this memory group.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GRP_KM0_ICACHE_E0_CTRL</name>
          <addressOffset>0x000000B4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00034000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>grp_KM0_ICACHE_E0_msel</name>
              <description>*01 - This memory group can do normal mbist;
*10 - This memory group can do DRF mbist;
*11 - This memory group can do normal &amp; DRF mbist</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_KM0_ICACHE_E0_loop_mode</name>
              <description>*0 - Assist loop mode;
*1 - Don't assist loop mode</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_KM0_ICACHE_E0_rstn</name>
              <description>*0 - Reset mbist circuit of this memory group;
*1 - Release mbist circuit of this memory group.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GRP_KM0_ITCM0_E0_CTRL</name>
          <addressOffset>0x000000B8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00034000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>grp_KM0_ITCM0_E0_msel</name>
              <description>*01 - This memory group can do normal mbist;
*10 - This memory group can do DRF mbist;
*11 - This memory group can do normal &amp; DRF mbist</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_KM0_ITCM0_E0_loop_mode</name>
              <description>*0 - Assist loop mode;
*1 - Don't assist loop mode</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_KM0_ITCM0_E0_rstn</name>
              <description>*0 - Reset mbist circuit of this memory group;
*1 - Release mbist circuit of this memory group.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GRP_BT_VIR_E0_CTRL</name>
          <addressOffset>0x000000BC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00034000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>grp_BT_VIR_E0_msel</name>
              <description>*01 - This memory group can do normal mbist;
*10 - This memory group can do DRF mbist;
*11 - This memory group can do normal &amp; DRF mbist</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_BT_VIR_E0_loop_mode</name>
              <description>*0 - Assist loop mode;
*1 - Don't assist loop mode</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_BT_VIR_E0_rstn</name>
              <description>*0 - Reset mbist circuit of this memory group;
*1 - Release mbist circuit of this memory group.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RSEL0</name>
          <addressOffset>0x000000C0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000005</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>rsel0_test1</name>
              <description></description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rsel0_rm</name>
              <description></description>
              <bitRange>[4:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rsel0_rme</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RSEL1</name>
          <addressOffset>0x000000C4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000005</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>rsel1_test1</name>
              <description></description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rsel1_rm</name>
              <description></description>
              <bitRange>[4:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rsel1_rme</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RSEL2</name>
          <addressOffset>0x000000C8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000012</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>rsel2_tmck</name>
              <description></description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rsel2_dvs</name>
              <description></description>
              <bitRange>[4:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rsel2_dvse</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RSEL3</name>
          <addressOffset>0x000000CC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0000000A</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>rsel3_tmck</name>
              <description></description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rsel3_dvs</name>
              <description></description>
              <bitRange>[4:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rsel3_dvse</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RSEL4</name>
          <addressOffset>0x000000D0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000014</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>rsel4_tmck</name>
              <description></description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rsel4_dvs</name>
              <description></description>
              <bitRange>[4:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rsel4_dvse</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RSEL5</name>
          <addressOffset>0x000000D4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0000000A</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>rsel5_dvs</name>
              <description></description>
              <bitRange>[4:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rsel5_dvse</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RSEL6</name>
          <addressOffset>0x000000D8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0000000A</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>rsel6_tmck</name>
              <description></description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rsel6_dvs</name>
              <description></description>
              <bitRange>[4:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rsel6_dvse</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RSEL7</name>
          <addressOffset>0x000000DC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000002</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>rsel7_tmck</name>
              <description></description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rsel7_dvs</name>
              <description></description>
              <bitRange>[4:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rsel7_dvse</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RSEL8</name>
          <addressOffset>0x000000E0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000002</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>rsel8_tmck</name>
              <description></description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rsel8_dvs</name>
              <description></description>
              <bitRange>[4:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rsel8_dvse</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RSEL9</name>
          <addressOffset>0x000000E4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000006</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>rsel9_dvs</name>
              <description></description>
              <bitRange>[4:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rsel9_dvse</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RSEL10</name>
          <addressOffset>0x000000E8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000006</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>rsel10_tmck</name>
              <description></description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rsel10_dvs</name>
              <description></description>
              <bitRange>[4:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rsel10_dvse</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ASEL0</name>
          <addressOffset>0x000000EC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0000002B</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>asel0_waem</name>
              <description></description>
              <bitRange>[5:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>asel0_wae</name>
              <description></description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>asel0_rae</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ASEL1</name>
          <addressOffset>0x000000F0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0000002B</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>asel1_waem</name>
              <description></description>
              <bitRange>[5:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>asel1_wae</name>
              <description></description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>asel1_rae</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ASEL2</name>
          <addressOffset>0x000000F4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0000002B</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>asel2_waem</name>
              <description></description>
              <bitRange>[5:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>asel2_wae</name>
              <description></description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>asel2_rae</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ASEL3</name>
          <addressOffset>0x000000F8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0000002F</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>asel3_waem</name>
              <description></description>
              <bitRange>[5:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>asel3_wae</name>
              <description></description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>asel3_rae</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ASEL4</name>
          <addressOffset>0x000000FC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000027</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>asel4_waem</name>
              <description></description>
              <bitRange>[5:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>asel4_wae</name>
              <description></description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>asel4_rae</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ASEL5</name>
          <addressOffset>0x00000100</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000027</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>asel5_waem</name>
              <description></description>
              <bitRange>[5:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>asel5_wae</name>
              <description></description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>asel5_rae</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BT_FTC_MEM_CTRL</name>
          <addressOffset>0x00000184</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0002AD8C</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BT_DS_ALL</name>
              <description>1 - All BT memory switch to Deep Sleep mode
0 - Power mode of BT memory are controlled by BTPMC</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BT_LVDRF_CLKDIS</name>
              <description></description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BT_TMCK_ALL</name>
              <description></description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BT_ROM_DVSE</name>
              <description></description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BT_ROM_DVS</name>
              <description>FSNOU_A_SPNN</description>
              <bitRange>[18:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BT_1PSR_DVSE</name>
              <description>Not used in Lite</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BT_1PSR_DVS</name>
              <description>Not used in Lite</description>
              <bitRange>[13:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BT_1PRF1_DVSE</name>
              <description></description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BT_1PRF1_DVS</name>
              <description>FSNOU_A_SYNL</description>
              <bitRange>[8:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BT_1PRF0_DVSE</name>
              <description></description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BT_1PRF0_DVS</name>
              <description>FSNOU_A_SYNL</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCAN_CTRL1</name>
          <addressOffset>0x000001C0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SCAN_OCC_DBG_EN_WPHY</name>
              <description>scan occ dbg en wphy</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCAN_OCC_DBG_EN_SEC</name>
              <description>scan occ dbg en sec</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCAN_OCC_DBG_EN_QSPI</name>
              <description>scan occ dbg en qspi</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCAN_OCC_DBG_EN_PSRAM</name>
              <description>scan occ dbg en psram</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCAN_OCC_DBG_EN_SPIC</name>
              <description>scan occ dbg en spic</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCAN_OCC_DBG_EN_HPERI</name>
              <description>scan occ dbg en hperi</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCAN_OCC_DBG_EN_HP</name>
              <description>scan occ dbg en hp</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCAN_CTRL0</name>
          <addressOffset>0x000001C4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SCAN_RET_EN</name>
              <description>scan retention test enable</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCAN_PLL_OUT_SEL</name>
              <description>scan pll out sel</description>
              <bitRange>[11:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCAN_FT1</name>
              <description>scan ft mode1</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCAN_FT0</name>
              <description>scan ft mode0</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCAN_CP1</name>
              <description>scan cp mode1/cp_ret</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCAN_CP0</name>
              <description>scan cp mode0</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCAN_SPC_DISABLE</name>
              <description>scan spc disable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCAN_PLL_BYPASS</name>
              <description>scan pll bypass</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCAN_COMPRESS</name>
              <description>scan compress</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCAN_PAR_LATPS</name>
              <description>Used as scan latch enable bit .
If want to change scan par from func setting , set this bit to 1 first , then write func register will also effect scan shadow register .</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCAN_MODE_SETPS</name>
              <description>scan mode pulse</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Dummy</name>
          <addressOffset>0x000001FC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0000FF00</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description></description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>pad</name>
      <baseAddress>0x41008800</baseAddress>
      <size>0x00000200</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00000200</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>REG_PA0</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00001900</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pA0_dis</name>
              <description>PAD shutdown, only when the whole group's dis signals are all 1, the PAD SHDN will pull down to shutdown the group pad.
1. disable pad
0. enable pad</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pa0_sr</name>
              <description>PAD slew rate control</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA0_smt</name>
              <description>PAD Schmit control</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA0_e2</name>
              <description>PAD driving ability control.
0: low
1: high 
The actual driving current is depend on pad type.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA0_pupdc</name>
              <description>Some pad may have two type of PU/PD resistor, this bit can select it.
1: small resistor
0: big resistor</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA0_ie</name>
              <description>PAD input enable control</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA0_sel</name>
              <description>PAD pinmux function ID selection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PA1</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00001900</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pA1_dis</name>
              <description>PAD shutdown, only when the whole group's dis signals are all 1, the PAD SHDN will pull down to shutdown the group pad.
1. disable pad
0. enable pad</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pa1_sr</name>
              <description>PAD slew rate control</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA1_smt</name>
              <description>PAD Schmit control</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA1_e2</name>
              <description>PAD driving ability control.
0: low
1: high 
The actual driving current is depend on pad type.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA1_pupdc</name>
              <description>Some pad may have two type of PU/PD resistor, this bit can select it.
1: small resistor
0: big resistor</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA1_ie</name>
              <description>PAD input enable control</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA1_sel</name>
              <description>PAD pinmux function ID selection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PA2</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00001900</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pA2_dis</name>
              <description>PAD shutdown, only when the whole group's dis signals are all 1, the PAD SHDN will pull down to shutdown the group pad.
1. disable pad
0. enable pad</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pa2_sr</name>
              <description>PAD slew rate control</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA2_smt</name>
              <description>PAD Schmit control</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA2_e2</name>
              <description>PAD driving ability control.
0: low
1: high 
The actual driving current is depend on pad type.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA2_pupdc</name>
              <description>Some pad may have two type of PU/PD resistor, this bit can select it.
1: small resistor
0: big resistor</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA2_ie</name>
              <description>PAD input enable control</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA2_sel</name>
              <description>PAD pinmux function ID selection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PA3</name>
          <addressOffset>0x0000000C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00001900</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pA3_dis</name>
              <description>PAD shutdown, only when the whole group's dis signals are all 1, the PAD SHDN will pull down to shutdown the group pad.
1. disable pad
0. enable pad</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pa3_sr</name>
              <description>PAD slew rate control</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA3_smt</name>
              <description>PAD Schmit control</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA3_e2</name>
              <description>PAD driving ability control.
0: low
1: high 
The actual driving current is depend on pad type.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA3_pupdc</name>
              <description>Some pad may have two type of PU/PD resistor, this bit can select it.
1: small resistor
0: big resistor</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA3_ie</name>
              <description>PAD input enable control</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA3_sel</name>
              <description>PAD pinmux function ID selection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PA4</name>
          <addressOffset>0x00000010</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00001900</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pA4_dis</name>
              <description>PAD shutdown, only when the whole group's dis signals are all 1, the PAD SHDN will pull down to shutdown the group pad.
1. disable pad
0. enable pad</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pa4_sr</name>
              <description>PAD slew rate control</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA4_smt</name>
              <description>PAD Schmit control</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA4_e2</name>
              <description>PAD driving ability control.
0: low
1: high 
The actual driving current is depend on pad type.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA4_pupdc</name>
              <description>Some pad may have two type of PU/PD resistor, this bit can select it.
1: small resistor
0: big resistor</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA4_ie</name>
              <description>PAD input enable control</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA4_sel</name>
              <description>PAD pinmux function ID selection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PA5</name>
          <addressOffset>0x00000014</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00001900</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pA5_dis</name>
              <description>PAD shutdown, only when the whole group's dis signals are all 1, the PAD SHDN will pull down to shutdown the group pad.
1. disable pad
0. enable pad</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pa5_sr</name>
              <description>PAD slew rate control</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA5_smt</name>
              <description>PAD Schmit control</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA5_e2</name>
              <description>PAD driving ability control.
0: low
1: high 
The actual driving current is depend on pad type.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA5_pupdc</name>
              <description>Some pad may have two type of PU/PD resistor, this bit can select it.
1: small resistor
0: big resistor</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA5_ie</name>
              <description>PAD input enable control</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA5_sel</name>
              <description>PAD pinmux function ID selection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PA6</name>
          <addressOffset>0x00000018</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00003900</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pA6_dis</name>
              <description>PAD shutdown, only when the whole group's dis signals are all 1, the PAD SHDN will pull down to shutdown the group pad.
1. disable pad
0. enable pad</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA6_sr</name>
              <description>PAD slew rate control.
1: slow
0: fast
note: flash pad default  0 (PA0~5, PA12~18); other pads default 1</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA6_smt</name>
              <description>PAD Schmit control</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA6_e2</name>
              <description>PAD driving ability control.
0: low
1: high 
The actual driving current is depend on pad type.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA6_pupdc</name>
              <description>Some pad may have two type of PU/PD resistor, this bit can select it.
1: small resistor
0: big resistor</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA6_ie</name>
              <description>PAD input enable control</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA6_sel</name>
              <description>PAD pinmux function ID selection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PA7</name>
          <addressOffset>0x0000001C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00003900</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pA7_dis</name>
              <description>PAD shutdown, only when the whole group's dis signals are all 1, the PAD SHDN will pull down to shutdown the group pad.
1. disable pad
0. enable pad</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA7_sr</name>
              <description>PAD slew rate control.
1: slow
0: fast
note: flash pad default  0 (PA0~5, PA12~18); other pads default 1</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA7_smt</name>
              <description>PAD Schmit control</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA7_e2</name>
              <description>PAD driving ability control.
0: low
1: high 
The actual driving current is depend on pad type.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA7_pupdc</name>
              <description>Some pad may have two type of PU/PD resistor, this bit can select it.
1: small resistor
0: big resistor</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA7_ie</name>
              <description>PAD input enable control</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA7_sel</name>
              <description>PAD pinmux function ID selection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PA8</name>
          <addressOffset>0x00000020</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00003900</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pA8_dis</name>
              <description>PAD shutdown, only when the whole group's dis signals are all 1, the PAD SHDN will pull down to shutdown the group pad.
1. disable pad
0. enable pad</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA8_sr</name>
              <description>PAD slew rate control.
1: slow
0: fast
note: flash pad default  0 (PA0~5, PA12~18); other pads default 1</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA8_smt</name>
              <description>PAD Schmit control</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA8_e2</name>
              <description>PAD driving ability control.
0: low
1: high 
The actual driving current is depend on pad type.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA8_pupdc</name>
              <description>Some pad may have two type of PU/PD resistor, this bit can select it.
1: small resistor
0: big resistor</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA8_ie</name>
              <description>PAD input enable control</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA8_sel</name>
              <description>PAD pinmux function ID selection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PA9</name>
          <addressOffset>0x00000024</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00003900</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pA9_dis</name>
              <description>PAD shutdown, only when the whole group's dis signals are all 1, the PAD SHDN will pull down to shutdown the group pad.
1. disable pad
0. enable pad</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA9_sr</name>
              <description>PAD slew rate control.
1: slow
0: fast
note: flash pad default  0 (PA0~5, PA12~18); other pads default 1</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA9_smt</name>
              <description>PAD Schmit control</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA9_e2</name>
              <description>PAD driving ability control.
0: low
1: high 
The actual driving current is depend on pad type.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA9_pupdc</name>
              <description>Some pad may have two type of PU/PD resistor, this bit can select it.
1: small resistor
0: big resistor</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA9_ie</name>
              <description>PAD input enable control</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA9_sel</name>
              <description>PAD pinmux function ID selection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PA10</name>
          <addressOffset>0x00000028</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00003900</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pA10_dis</name>
              <description>PAD shutdown, only when the whole group's dis signals are all 1, the PAD SHDN will pull down to shutdown the group pad.
1. disable pad
0. enable pad</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA10_sr</name>
              <description>PAD slew rate control.
1: slow
0: fast
note: flash pad default  0 (PA0~5, PA12~18); other pads default 1</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA10_smt</name>
              <description>PAD Schmit control</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA10_e2</name>
              <description>PAD driving ability control.
0: low
1: high 
The actual driving current is depend on pad type.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA10_pupdc</name>
              <description>Some pad may have two type of PU/PD resistor, this bit can select it.
1: small resistor
0: big resistor</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA10_ie</name>
              <description>PAD input enable control</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA10_sel</name>
              <description>PAD pinmux function ID selection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PA11</name>
          <addressOffset>0x0000002C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00003900</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pA11_dis</name>
              <description>PAD shutdown, only when the whole group's dis signals are all 1, the PAD SHDN will pull down to shutdown the group pad.
1. disable pad
0. enable pad</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA11_sr</name>
              <description>PAD slew rate control.
1: slow
0: fast
note: flash pad default  0 (PA0~5, PA12~18); other pads default 1</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA11_smt</name>
              <description>PAD Schmit control</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA11_e2</name>
              <description>PAD driving ability control.
0: low
1: high 
The actual driving current is depend on pad type.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA11_pupdc</name>
              <description>Some pad may have two type of PU/PD resistor, this bit can select it.
1: small resistor
0: big resistor</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA11_ie</name>
              <description>PAD input enable control</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA11_sel</name>
              <description>PAD pinmux function ID selection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PA12</name>
          <addressOffset>0x00000030</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00001900</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pA12_dis</name>
              <description>PAD shutdown, only when the whole group's dis signals are all 1, the PAD SHDN will pull down to shutdown the group pad.
1. disable pad
0. enable pad</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pa12_sr</name>
              <description>PAD slew rate control</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA12_smt</name>
              <description>PAD Schmit control</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA12_e2</name>
              <description>PAD driving ability control.
0: low
1: high 
The actual driving current is depend on pad type.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA12_pupdc</name>
              <description>Some pad may have two type of PU/PD resistor, this bit can select it.
1: small resistor
0: big resistor</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA12_ie</name>
              <description>PAD input enable control</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA12_sel</name>
              <description>PAD pinmux function ID selection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PA13</name>
          <addressOffset>0x00000034</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00001900</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pA13_dis</name>
              <description>PAD shutdown, only when the whole group's dis signals are all 1, the PAD SHDN will pull down to shutdown the group pad.
1. disable pad
0. enable pad</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pa13_sr</name>
              <description>PAD slew rate control</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA13_smt</name>
              <description>PAD Schmit control</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA13_e2</name>
              <description>PAD driving ability control.
0: low
1: high 
The actual driving current is depend on pad type.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA13_pupdc</name>
              <description>Some pad may have two type of PU/PD resistor, this bit can select it.
1: small resistor
0: big resistor</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA13_ie</name>
              <description>PAD input enable control</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA13_sel</name>
              <description>PAD pinmux function ID selection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PA14</name>
          <addressOffset>0x00000038</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00001900</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pA14_dis</name>
              <description>PAD shutdown, only when the whole group's dis signals are all 1, the PAD SHDN will pull down to shutdown the group pad.
1. disable pad
0. enable pad</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pa14_sr</name>
              <description>PAD slew rate control</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA14_smt</name>
              <description>PAD Schmit control</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA14_e2</name>
              <description>PAD driving ability control.
0: low
1: high 
The actual driving current is depend on pad type.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA14_pupdc</name>
              <description>Some pad may have two type of PU/PD resistor, this bit can select it.
1: small resistor
0: big resistor</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA14_ie</name>
              <description>PAD input enable control</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA14_sel</name>
              <description>PAD pinmux function ID selection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PA15</name>
          <addressOffset>0x0000003C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00001900</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pA15_dis</name>
              <description>PAD shutdown, only when the whole group's dis signals are all 1, the PAD SHDN will pull down to shutdown the group pad.
1. disable pad
0. enable pad</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pa15_sr</name>
              <description>PAD slew rate control</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA15_smt</name>
              <description>PAD Schmit control</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA15_e2</name>
              <description>PAD driving ability control.
0: low
1: high 
The actual driving current is depend on pad type.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA15_pupdc</name>
              <description>Some pad may have two type of PU/PD resistor, this bit can select it.
1: small resistor
0: big resistor</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA15_ie</name>
              <description>PAD input enable control</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA15_sel</name>
              <description>PAD pinmux function ID selection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PA16</name>
          <addressOffset>0x00000040</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00001900</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pA16_dis</name>
              <description>PAD shutdown, only when the whole group's dis signals are all 1, the PAD SHDN will pull down to shutdown the group pad.
1. disable pad
0. enable pad</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pa16_sr</name>
              <description>PAD slew rate control</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA16_smt</name>
              <description>PAD Schmit control</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA16_e2</name>
              <description>PAD driving ability control.
0: low
1: high 
The actual driving current is depend on pad type.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA16_pupdc</name>
              <description>Some pad may have two type of PU/PD resistor, this bit can select it.
1: small resistor
0: big resistor</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA16_ie</name>
              <description>PAD input enable control</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA16_sel</name>
              <description>PAD pinmux function ID selection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PA17</name>
          <addressOffset>0x00000044</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00001900</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pA17_dis</name>
              <description>PAD shutdown, only when the whole group's dis signals are all 1, the PAD SHDN will pull down to shutdown the group pad.
1. disable pad
0. enable pad</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pa17_sr</name>
              <description>PAD slew rate control</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA17_smt</name>
              <description>PAD Schmit control</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA17_e2</name>
              <description>PAD driving ability control.
0: low
1: high 
The actual driving current is depend on pad type.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA17_pupdc</name>
              <description>Some pad may have two type of PU/PD resistor, this bit can select it.
1: small resistor
0: big resistor</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA17_ie</name>
              <description>PAD input enable control</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA17_sel</name>
              <description>PAD pinmux function ID selection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PA18</name>
          <addressOffset>0x00000048</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00001900</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pA18_dis</name>
              <description>PAD shutdown, only when the whole group's dis signals are all 1, the PAD SHDN will pull down to shutdown the group pad.
1. disable pad
0. enable pad</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pa18_sr</name>
              <description>PAD slew rate control</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA18_smt</name>
              <description>PAD Schmit control</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA18_e2</name>
              <description>PAD driving ability control.
0: low
1: high 
The actual driving current is depend on pad type.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA18_pupdc</name>
              <description>Some pad may have two type of PU/PD resistor, this bit can select it.
1: small resistor
0: big resistor</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA18_ie</name>
              <description>PAD input enable control</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA18_sel</name>
              <description>PAD pinmux function ID selection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PA19</name>
          <addressOffset>0x0000004C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00003900</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pA19_dis</name>
              <description>PAD shutdown, only when the whole group's dis signals are all 1, the PAD SHDN will pull down to shutdown the group pad.
1. disable pad
0. enable pad</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA19_sr</name>
              <description>PAD slew rate control.
1: slow
0: fast
note: flash pad default  0 (PA0~5, PA12~18); other pads default 1</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA19_smt</name>
              <description>PAD Schmit control</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA19_e2</name>
              <description>PAD driving ability control.
0: low
1: high 
The actual driving current is depend on pad type.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA19_pupdc</name>
              <description>Some pad may have two type of PU/PD resistor, this bit can select it.
1: small resistor
0: big resistor</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA19_ie</name>
              <description>PAD input enable control</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA19_sel</name>
              <description>PAD pinmux function ID selection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PA20</name>
          <addressOffset>0x00000050</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00003900</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pA20_dis</name>
              <description>PAD shutdown, only when the whole group's dis signals are all 1, the PAD SHDN will pull down to shutdown the group pad.
1. disable pad
0. enable pad</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA20_sr</name>
              <description>PAD slew rate control.
1: slow
0: fast
note: flash pad default  0 (PA0~5, PA12~18); other pads default 1</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA20_smt</name>
              <description>PAD Schmit control</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA20_e2</name>
              <description>PAD driving ability control.
0: low
1: high 
The actual driving current is depend on pad type.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA20_pupdc</name>
              <description>Some pad may have two type of PU/PD resistor, this bit can select it.
1: small resistor
0: big resistor</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA20_ie</name>
              <description>PAD input enable control</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA20_sel</name>
              <description>PAD pinmux function ID selection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PA21</name>
          <addressOffset>0x00000054</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00003900</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pA21_dis</name>
              <description>PAD shutdown, only when the whole group's dis signals are all 1, the PAD SHDN will pull down to shutdown the group pad.
1. disable pad
0. enable pad</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA21_sr</name>
              <description>PAD slew rate control.
1: slow
0: fast
note: flash pad default  0 (PA0~5, PA12~18); other pads default 1</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA21_smt</name>
              <description>PAD Schmit control</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA21_e2</name>
              <description>PAD driving ability control.
0: low
1: high 
The actual driving current is depend on pad type.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA21_pupdc</name>
              <description>Some pad may have two type of PU/PD resistor, this bit can select it.
1: small resistor
0: big resistor</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA21_ie</name>
              <description>PAD input enable control</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA21_sel</name>
              <description>PAD pinmux function ID selection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PA22</name>
          <addressOffset>0x00000058</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00003900</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pA22_dis</name>
              <description>PAD shutdown, only when the whole group's dis signals are all 1, the PAD SHDN will pull down to shutdown the group pad.
1. disable pad
0. enable pad</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA22_sr</name>
              <description>PAD slew rate control.
1: slow
0: fast
note: flash pad default  0 (PA0~5, PA12~18); other pads default 1</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA22_smt</name>
              <description>PAD Schmit control</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA22_e2</name>
              <description>PAD driving ability control.
0: low
1: high 
The actual driving current is depend on pad type.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA22_pupdc</name>
              <description>Some pad may have two type of PU/PD resistor, this bit can select it.
1: small resistor
0: big resistor</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA22_ie</name>
              <description>PAD input enable control</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA22_sel</name>
              <description>PAD pinmux function ID selection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PA23</name>
          <addressOffset>0x0000005C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00003900</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pA23_dis</name>
              <description>PAD shutdown, only when the whole group's dis signals are all 1, the PAD SHDN will pull down to shutdown the group pad.
1. disable pad
0. enable pad</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA23_sr</name>
              <description>PAD slew rate control.
1: slow
0: fast
note: flash pad default  0 (PA0~5, PA12~18); other pads default 1</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA23_smt</name>
              <description>PAD Schmit control</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA23_e2</name>
              <description>PAD driving ability control.
0: low
1: high 
The actual driving current is depend on pad type.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA23_pupdc</name>
              <description>Some pad may have two type of PU/PD resistor, this bit can select it.
1: small resistor
0: big resistor</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA23_ie</name>
              <description>PAD input enable control</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA23_sel</name>
              <description>PAD pinmux function ID selection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PA24</name>
          <addressOffset>0x00000060</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00003900</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pA24_dis</name>
              <description>PAD shutdown, only when the whole group's dis signals are all 1, the PAD SHDN will pull down to shutdown the group pad.
1. disable pad
0. enable pad</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA24_sr</name>
              <description>PAD slew rate control.
1: slow
0: fast
note: flash pad default  0 (PA0~5, PA12~18); other pads default 1</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA24_smt</name>
              <description>PAD Schmit control</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA24_e2</name>
              <description>PAD driving ability control.
0: low
1: high 
The actual driving current is depend on pad type.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA24_pupdc</name>
              <description>Some pad may have two type of PU/PD resistor, this bit can select it.
1: small resistor
0: big resistor</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA24_ie</name>
              <description>PAD input enable control</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA24_sel</name>
              <description>PAD pinmux function ID selection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PA25</name>
          <addressOffset>0x00000064</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00003900</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pA25_dis</name>
              <description>PAD shutdown, only when the whole group's dis signals are all 1, the PAD SHDN will pull down to shutdown the group pad.
1. disable pad
0. enable pad</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA25_sr</name>
              <description>PAD slew rate control.
1: slow
0: fast
note: flash pad default  0 (PA0~5, PA12~18); other pads default 1</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA25_smt</name>
              <description>PAD Schmit control</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA25_e2</name>
              <description>PAD driving ability control.
0: low
1: high 
The actual driving current is depend on pad type.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA25_pupdc</name>
              <description>Some pad may have two type of PU/PD resistor, this bit can select it.
1: small resistor
0: big resistor</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA25_ie</name>
              <description>PAD input enable control</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA25_sel</name>
              <description>PAD pinmux function ID selection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PA26</name>
          <addressOffset>0x00000068</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00003900</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pA26_dis</name>
              <description>PAD shutdown, only when the whole group's dis signals are all 1, the PAD SHDN will pull down to shutdown the group pad.
1. disable pad
0. enable pad</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA26_sr</name>
              <description>PAD slew rate control.
1: slow
0: fast
note: flash pad default  0 (PA0~5, PA12~18); other pads default 1</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA26_smt</name>
              <description>PAD Schmit control</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA26_e2</name>
              <description>PAD driving ability control.
0: low
1: high 
The actual driving current is depend on pad type.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA26_pupdc</name>
              <description>Some pad may have two type of PU/PD resistor, this bit can select it.
1: small resistor
0: big resistor</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA26_ie</name>
              <description>PAD input enable control</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA26_sel</name>
              <description>PAD pinmux function ID selection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PA27</name>
          <addressOffset>0x0000006C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00003900</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pA27_dis</name>
              <description>PAD shutdown, only when the whole group's dis signals are all 1, the PAD SHDN will pull down to shutdown the group pad.
1. disable pad
0. enable pad</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA27_sr</name>
              <description>PAD slew rate control.
1: slow
0: fast
note: flash pad default  0 (PA0~5, PA12~18); other pads default 1</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA27_smt</name>
              <description>PAD Schmit control</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA27_e2</name>
              <description>PAD driving ability control.
0: low
1: high 
The actual driving current is depend on pad type.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA27_pupdc</name>
              <description>Some pad may have two type of PU/PD resistor, this bit can select it.
1: small resistor
0: big resistor</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA27_ie</name>
              <description>PAD input enable control</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA27_sel</name>
              <description>PAD pinmux function ID selection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PA28</name>
          <addressOffset>0x00000070</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00003900</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pA28_dis</name>
              <description>PAD shutdown, only when the whole group's dis signals are all 1, the PAD SHDN will pull down to shutdown the group pad.
1. disable pad
0. enable pad</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA28_sr</name>
              <description>PAD slew rate control.
1: slow
0: fast
note: flash pad default  0 (PA0~5, PA12~18); other pads default 1</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA28_smt</name>
              <description>PAD Schmit control</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA28_e2</name>
              <description>PAD driving ability control.
0: low
1: high 
The actual driving current is depend on pad type.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA28_pupdc</name>
              <description>Some pad may have two type of PU/PD resistor, this bit can select it.
1: small resistor
0: big resistor</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA28_ie</name>
              <description>PAD input enable control</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA28_sel</name>
              <description>PAD pinmux function ID selection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PA29</name>
          <addressOffset>0x00000074</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00003900</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pA29_dis</name>
              <description>PAD shutdown, only when the whole group's dis signals are all 1, the PAD SHDN will pull down to shutdown the group pad.
1. disable pad
0. enable pad</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA29_sr</name>
              <description>PAD slew rate control.
1: slow
0: fast
note: flash pad default  0 (PA0~5, PA12~18); other pads default 1</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA29_smt</name>
              <description>PAD Schmit control</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA29_e2</name>
              <description>PAD driving ability control.
0: low
1: high 
The actual driving current is depend on pad type.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA29_pupdc</name>
              <description>Some pad may have two type of PU/PD resistor, this bit can select it.
1: small resistor
0: big resistor</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA29_ie</name>
              <description>PAD input enable control</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA29_sel</name>
              <description>PAD pinmux function ID selection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PA30</name>
          <addressOffset>0x00000078</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00003900</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pA30_dis</name>
              <description>PAD shutdown, only when the whole group's dis signals are all 1, the PAD SHDN will pull down to shutdown the group pad.
1. disable pad
0. enable pad</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA30_sr</name>
              <description>PAD slew rate control.
1: slow
0: fast
note: flash pad default  0 (PA0~5, PA12~18); other pads default 1</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA30_smt</name>
              <description>PAD Schmit control</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA30_e2</name>
              <description>PAD driving ability control.
0: low
1: high 
The actual driving current is depend on pad type.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA30_pupdc</name>
              <description>Some pad may have two type of PU/PD resistor, this bit can select it.
1: small resistor
0: big resistor</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA30_ie</name>
              <description>PAD input enable control</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA30_sel</name>
              <description>PAD pinmux function ID selection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PA31</name>
          <addressOffset>0x0000007C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00003900</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pA31_dis</name>
              <description>PAD shutdown, only when the whole group's dis signals are all 1, the PAD SHDN will pull down to shutdown the group pad.
1. disable pad
0. enable pad</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA31_sr</name>
              <description>PAD slew rate control.
1: slow
0: fast
note: flash pad default  0 (PA0~5, PA12~18); other pads default 1</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA31_smt</name>
              <description>PAD Schmit control</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA31_e2</name>
              <description>PAD driving ability control.
0: low
1: high 
The actual driving current is depend on pad type.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA31_pupdc</name>
              <description>Some pad may have two type of PU/PD resistor, this bit can select it.
1: small resistor
0: big resistor</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA31_ie</name>
              <description>PAD input enable control</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pA31_sel</name>
              <description>PAD pinmux function ID selection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PB0</name>
          <addressOffset>0x00000080</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00003900</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pB0_dis</name>
              <description>PAD shutdown, only when the whole group's dis signals are all 1, the PAD SHDN will pull down to shutdown the group pad.
1. disable pad
0. enable pad</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB0_sr</name>
              <description>PAD slew rate control.
1: slow
0: fast
note: flash pad default  0 (PA0~5, PA12~18); other pads default 1</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB0_smt</name>
              <description>PAD Schmit control</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB0_e2</name>
              <description>PAD driving ability control.
0: low
1: high 
The actual driving current is depend on pad type.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB0_pupdc</name>
              <description>Some pad may have two type of PU/PD resistor, this bit can select it.
1: small resistor
0: big resistor</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB0_ie</name>
              <description>PAD input enable control</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB0_sel</name>
              <description>PAD pinmux function ID selection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PB1</name>
          <addressOffset>0x00000084</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00003900</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pB1_dis</name>
              <description>PAD shutdown, only when the whole group's dis signals are all 1, the PAD SHDN will pull down to shutdown the group pad.
1. disable pad
0. enable pad</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB1_sr</name>
              <description>PAD slew rate control.
1: slow
0: fast
note: flash pad default  0 (PA0~5, PA12~18); other pads default 1</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB1_smt</name>
              <description>PAD Schmit control</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB1_e2</name>
              <description>PAD driving ability control.
0: low
1: high 
The actual driving current is depend on pad type.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB1_pupdc</name>
              <description>Some pad may have two type of PU/PD resistor, this bit can select it.
1: small resistor
0: big resistor</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB1_ie</name>
              <description>PAD input enable control</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB1_sel</name>
              <description>PAD pinmux function ID selection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PB2</name>
          <addressOffset>0x00000088</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00003900</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pB2_dis</name>
              <description>PAD shutdown, only when the whole group's dis signals are all 1, the PAD SHDN will pull down to shutdown the group pad.
1. disable pad
0. enable pad</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB2_sr</name>
              <description>PAD slew rate control.
1: slow
0: fast
note: flash pad default  0 (PA0~5, PA12~18); other pads default 1</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB2_smt</name>
              <description>PAD Schmit control</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB2_e2</name>
              <description>PAD driving ability control.
0: low
1: high 
The actual driving current is depend on pad type.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB2_pupdc</name>
              <description>Some pad may have two type of PU/PD resistor, this bit can select it.
1: small resistor
0: big resistor</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB2_ie</name>
              <description>PAD input enable control</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB2_sel</name>
              <description>PAD pinmux function ID selection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PB3</name>
          <addressOffset>0x0000008C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00003900</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pB3_dis</name>
              <description>PAD shutdown, only when the whole group's dis signals are all 1, the PAD SHDN will pull down to shutdown the group pad.
1. disable pad
0. enable pad</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB3_sr</name>
              <description>PAD slew rate control.
1: slow
0: fast
note: flash pad default  0 (PA0~5, PA12~18); other pads default 1</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB3_smt</name>
              <description>PAD Schmit control</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB3_e2</name>
              <description>PAD driving ability control.
0: low
1: high 
The actual driving current is depend on pad type.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB3_pupdc</name>
              <description>Some pad may have two type of PU/PD resistor, this bit can select it.
1: small resistor
0: big resistor</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB3_ie</name>
              <description>PAD input enable control</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB3_sel</name>
              <description>PAD pinmux function ID selection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PB4</name>
          <addressOffset>0x00000090</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00003900</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pB4_dis</name>
              <description>PAD shutdown, only when the whole group's dis signals are all 1, the PAD SHDN will pull down to shutdown the group pad.
1. disable pad
0. enable pad</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB4_sr</name>
              <description>PAD slew rate control.
1: slow
0: fast
note: flash pad default  0 (PA0~5, PA12~18); other pads default 1</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB4_smt</name>
              <description>PAD Schmit control</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB4_e2</name>
              <description>PAD driving ability control.
0: low
1: high 
The actual driving current is depend on pad type.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB4_pupdc</name>
              <description>Some pad may have two type of PU/PD resistor, this bit can select it.
1: small resistor
0: big resistor</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB4_ie</name>
              <description>PAD input enable control</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB4_sel</name>
              <description>PAD pinmux function ID selection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PB5</name>
          <addressOffset>0x00000094</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00003900</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pB5_dis</name>
              <description>PAD shutdown, only when the whole group's dis signals are all 1, the PAD SHDN will pull down to shutdown the group pad.
1. disable pad
0. enable pad</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB5_sr</name>
              <description>PAD slew rate control.
1: slow
0: fast
note: flash pad default  0 (PA0~5, PA12~18); other pads default 1</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB5_smt</name>
              <description>PAD Schmit control</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB5_e2</name>
              <description>PAD driving ability control.
0: low
1: high 
The actual driving current is depend on pad type.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB5_pupdc</name>
              <description>Some pad may have two type of PU/PD resistor, this bit can select it.
1: small resistor
0: big resistor</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB5_ie</name>
              <description>PAD input enable control</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB5_sel</name>
              <description>PAD pinmux function ID selection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PB6</name>
          <addressOffset>0x00000098</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00003900</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pB6_dis</name>
              <description>PAD shutdown, only when the whole group's dis signals are all 1, the PAD SHDN will pull down to shutdown the group pad.
1. disable pad
0. enable pad</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB6_sr</name>
              <description>PAD slew rate control.
1: slow
0: fast
note: flash pad default  0 (PA0~5, PA12~18); other pads default 1</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB6_smt</name>
              <description>PAD Schmit control</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB6_e2</name>
              <description>PAD driving ability control.
0: low
1: high 
The actual driving current is depend on pad type.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB6_pupdc</name>
              <description>Some pad may have two type of PU/PD resistor, this bit can select it.
1: small resistor
0: big resistor</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB6_ie</name>
              <description>PAD input enable control</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB6_sel</name>
              <description>PAD pinmux function ID selection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PB7</name>
          <addressOffset>0x0000009C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00003900</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pB7_dis</name>
              <description>PAD shutdown, only when the whole group's dis signals are all 1, the PAD SHDN will pull down to shutdown the group pad.
1. disable pad
0. enable pad</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB7_sr</name>
              <description>PAD slew rate control.
1: slow
0: fast
note: flash pad default  0 (PA0~5, PA12~18); other pads default 1</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB7_smt</name>
              <description>PAD Schmit control</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB7_e2</name>
              <description>PAD driving ability control.
0: low
1: high 
The actual driving current is depend on pad type.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB7_pupdc</name>
              <description>Some pad may have two type of PU/PD resistor, this bit can select it.
1: small resistor
0: big resistor</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB7_ie</name>
              <description>PAD input enable control</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB7_sel</name>
              <description>PAD pinmux function ID selection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PB8</name>
          <addressOffset>0x000000A0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00003900</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pB8_dis</name>
              <description>PAD shutdown, only when the whole group's dis signals are all 1, the PAD SHDN will pull down to shutdown the group pad.
1. disable pad
0. enable pad</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB8_sr</name>
              <description>PAD slew rate control.
1: slow
0: fast
note: flash pad default  0 (PA0~5, PA12~18); other pads default 1</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB8_smt</name>
              <description>PAD Schmit control</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB8_e2</name>
              <description>PAD driving ability control.
0: low
1: high 
The actual driving current is depend on pad type.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB8_pupdc</name>
              <description>Some pad may have two type of PU/PD resistor, this bit can select it.
1: small resistor
0: big resistor</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB8_ie</name>
              <description>PAD input enable control</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB8_sel</name>
              <description>PAD pinmux function ID selection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PB9</name>
          <addressOffset>0x000000A4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00003900</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pB9_dis</name>
              <description>PAD shutdown, only when the whole group's dis signals are all 1, the PAD SHDN will pull down to shutdown the group pad.
1. disable pad
0. enable pad</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB9_sr</name>
              <description>PAD slew rate control.
1: slow
0: fast
note: flash pad default  0 (PA0~5, PA12~18); other pads default 1</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB9_smt</name>
              <description>PAD Schmit control</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB9_e2</name>
              <description>PAD driving ability control.
0: low
1: high 
The actual driving current is depend on pad type.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB9_pupdc</name>
              <description>Some pad may have two type of PU/PD resistor, this bit can select it.
1: small resistor
0: big resistor</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB9_ie</name>
              <description>PAD input enable control</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB9_sel</name>
              <description>PAD pinmux function ID selection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PB10</name>
          <addressOffset>0x000000A8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00003900</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pB10_dis</name>
              <description>PAD shutdown, only when the whole group's dis signals are all 1, the PAD SHDN will pull down to shutdown the group pad.
1. disable pad
0. enable pad</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB10_sr</name>
              <description>PAD slew rate control.
1: slow
0: fast
note: flash pad default  0 (PA0~5, PA12~18); other pads default 1</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB10_smt</name>
              <description>PAD Schmit control</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB10_e2</name>
              <description>PAD driving ability control.
0: low
1: high 
The actual driving current is depend on pad type.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB10_pupdc</name>
              <description>Some pad may have two type of PU/PD resistor, this bit can select it.
1: small resistor
0: big resistor</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB10_ie</name>
              <description>PAD input enable control</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB10_sel</name>
              <description>PAD pinmux function ID selection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PB11</name>
          <addressOffset>0x000000AC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00003900</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pB11_dis</name>
              <description>PAD shutdown, only when the whole group's dis signals are all 1, the PAD SHDN will pull down to shutdown the group pad.
1. disable pad
0. enable pad</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB11_sr</name>
              <description>PAD slew rate control.
1: slow
0: fast
note: flash pad default  0 (PA0~5, PA12~18); other pads default 1</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB11_smt</name>
              <description>PAD Schmit control</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB11_e2</name>
              <description>PAD driving ability control.
0: low
1: high 
The actual driving current is depend on pad type.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB11_pupdc</name>
              <description>Some pad may have two type of PU/PD resistor, this bit can select it.
1: small resistor
0: big resistor</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB11_ie</name>
              <description>PAD input enable control</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB11_sel</name>
              <description>PAD pinmux function ID selection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PB12</name>
          <addressOffset>0x000000B0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00003900</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pB12_dis</name>
              <description>PAD shutdown, only when the whole group's dis signals are all 1, the PAD SHDN will pull down to shutdown the group pad.
1. disable pad
0. enable pad</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB12_sr</name>
              <description>PAD slew rate control.
1: slow
0: fast
note: flash pad default  0 (PA0~5, PA12~18); other pads default 1</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB12_smt</name>
              <description>PAD Schmit control</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB12_e2</name>
              <description>PAD driving ability control.
0: low
1: high 
The actual driving current is depend on pad type.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB12_pupdc</name>
              <description>Some pad may have two type of PU/PD resistor, this bit can select it.
1: small resistor
0: big resistor</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB12_ie</name>
              <description>PAD input enable control</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB12_sel</name>
              <description>PAD pinmux function ID selection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PB13</name>
          <addressOffset>0x000000B4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00003900</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pB13_dis</name>
              <description>PAD shutdown, only when the whole group's dis signals are all 1, the PAD SHDN will pull down to shutdown the group pad.
1. disable pad
0. enable pad</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB13_sr</name>
              <description>PAD slew rate control.
1: slow
0: fast
note: flash pad default  0 (PA0~5, PA12~18); other pads default 1</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB13_smt</name>
              <description>PAD Schmit control</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB13_e2</name>
              <description>PAD driving ability control.
0: low
1: high 
The actual driving current is depend on pad type.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB13_pupdc</name>
              <description>Some pad may have two type of PU/PD resistor, this bit can select it.
1: small resistor
0: big resistor</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB13_ie</name>
              <description>PAD input enable control</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB13_sel</name>
              <description>PAD pinmux function ID selection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PB14</name>
          <addressOffset>0x000000B8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00003900</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pB14_dis</name>
              <description>PAD shutdown, only when the whole group's dis signals are all 1, the PAD SHDN will pull down to shutdown the group pad.
1. disable pad
0. enable pad</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB14_sr</name>
              <description>PAD slew rate control.
1: slow
0: fast
note: flash pad default  0 (PA0~5, PA12~18); other pads default 1</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB14_smt</name>
              <description>PAD Schmit control</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB14_e2</name>
              <description>PAD driving ability control.
0: low
1: high 
The actual driving current is depend on pad type.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB14_pupdc</name>
              <description>Some pad may have two type of PU/PD resistor, this bit can select it.
1: small resistor
0: big resistor</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB14_ie</name>
              <description>PAD input enable control</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB14_sel</name>
              <description>PAD pinmux function ID selection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PB15</name>
          <addressOffset>0x000000BC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00003900</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pB15_dis</name>
              <description>PAD shutdown, only when the whole group's dis signals are all 1, the PAD SHDN will pull down to shutdown the group pad.
1. disable pad
0. enable pad</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB15_sr</name>
              <description>PAD slew rate control.
1: slow
0: fast
note: flash pad default  0 (PA0~5, PA12~18); other pads default 1</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB15_smt</name>
              <description>PAD Schmit control</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB15_e2</name>
              <description>PAD driving ability control.
0: low
1: high 
The actual driving current is depend on pad type.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB15_pupdc</name>
              <description>Some pad may have two type of PU/PD resistor, this bit can select it.
1: small resistor
0: big resistor</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB15_ie</name>
              <description>PAD input enable control</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB15_sel</name>
              <description>PAD pinmux function ID selection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PB16</name>
          <addressOffset>0x000000C0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00003900</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pB16_dis</name>
              <description>PAD shutdown, only when the whole group's dis signals are all 1, the PAD SHDN will pull down to shutdown the group pad.
1. disable pad
0. enable pad</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB16_sr</name>
              <description>PAD slew rate control.
1: slow
0: fast
note: flash pad default  0 (PA0~5, PA12~18); other pads default 1</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB16_smt</name>
              <description>PAD Schmit control</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB16_e2</name>
              <description>PAD driving ability control.
0: low
1: high 
The actual driving current is depend on pad type.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB16_pupdc</name>
              <description>Some pad may have two type of PU/PD resistor, this bit can select it.
1: small resistor
0: big resistor</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB16_ie</name>
              <description>PAD input enable control</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB16_sel</name>
              <description>PAD pinmux function ID selection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PB17</name>
          <addressOffset>0x000000C4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00003900</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pB17_dis</name>
              <description>PAD shutdown, only when the whole group's dis signals are all 1, the PAD SHDN will pull down to shutdown the group pad.
1. disable pad
0. enable pad</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB17_sr</name>
              <description>PAD slew rate control.
1: slow
0: fast
note: flash pad default  0 (PA0~5, PA12~18); other pads default 1</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB17_smt</name>
              <description>PAD Schmit control</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB17_e2</name>
              <description>PAD driving ability control.
0: low
1: high 
The actual driving current is depend on pad type.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB17_pupdc</name>
              <description>Some pad may have two type of PU/PD resistor, this bit can select it.
1: small resistor
0: big resistor</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB17_ie</name>
              <description>PAD input enable control</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB17_sel</name>
              <description>PAD pinmux function ID selection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PB18</name>
          <addressOffset>0x000000C8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00003900</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pB18_dis</name>
              <description>PAD shutdown, only when the whole group's dis signals are all 1, the PAD SHDN will pull down to shutdown the group pad.
1. disable pad
0. enable pad</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB18_sr</name>
              <description>PAD slew rate control.
1: slow
0: fast
note: flash pad default  0 (PA0~5, PA12~18); other pads default 1</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB18_smt</name>
              <description>PAD Schmit control</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB18_e2</name>
              <description>PAD driving ability control.
0: low
1: high 
The actual driving current is depend on pad type.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB18_pupdc</name>
              <description>Some pad may have two type of PU/PD resistor, this bit can select it.
1: small resistor
0: big resistor</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB18_ie</name>
              <description>PAD input enable control</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB18_sel</name>
              <description>PAD pinmux function ID selection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PB19</name>
          <addressOffset>0x000000CC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00003900</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pB19_dis</name>
              <description>PAD shutdown, only when the whole group's dis signals are all 1, the PAD SHDN will pull down to shutdown the group pad.
1. disable pad
0. enable pad</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB19_sr</name>
              <description>PAD slew rate control.
1: slow
0: fast
note: flash pad default  0 (PA0~5, PA12~18); other pads default 1</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB19_smt</name>
              <description>PAD Schmit control</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB19_e2</name>
              <description>PAD driving ability control.
0: low
1: high 
The actual driving current is depend on pad type.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB19_pupdc</name>
              <description>Some pad may have two type of PU/PD resistor, this bit can select it.
1: small resistor
0: big resistor</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB19_ie</name>
              <description>PAD input enable control</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB19_sel</name>
              <description>PAD pinmux function ID selection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PB20</name>
          <addressOffset>0x000000D0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00003900</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pB20_dis</name>
              <description>PAD shutdown, only when the whole group's dis signals are all 1, the PAD SHDN will pull down to shutdown the group pad.
1. disable pad
0. enable pad</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB20_sr</name>
              <description>PAD slew rate control.
1: slow
0: fast
note: flash pad default  0 (PA0~5, PA12~18); other pads default 1</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB20_smt</name>
              <description>PAD Schmit control</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB20_e2</name>
              <description>PAD driving ability control.
0: low
1: high 
The actual driving current is depend on pad type.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB20_pupdc</name>
              <description>Some pad may have two type of PU/PD resistor, this bit can select it.
1: small resistor
0: big resistor</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB20_ie</name>
              <description>PAD input enable control</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB20_sel</name>
              <description>PAD pinmux function ID selection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PB21</name>
          <addressOffset>0x000000D4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00003900</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pB21_dis</name>
              <description>PAD shutdown, only when the whole group's dis signals are all 1, the PAD SHDN will pull down to shutdown the group pad.
1. disable pad
0. enable pad</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB21_sr</name>
              <description>PAD slew rate control.
1: slow
0: fast
note: flash pad default  0 (PA0~5, PA12~18); other pads default 1</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB21_smt</name>
              <description>PAD Schmit control</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB21_e2</name>
              <description>PAD driving ability control.
0: low
1: high 
The actual driving current is depend on pad type.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB21_pupdc</name>
              <description>Some pad may have two type of PU/PD resistor, this bit can select it.
1: small resistor
0: big resistor</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB21_ie</name>
              <description>PAD input enable control</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB21_sel</name>
              <description>PAD pinmux function ID selection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PB22</name>
          <addressOffset>0x000000D8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00003900</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pB22_dis</name>
              <description>PAD shutdown, only when the whole group's dis signals are all 1, the PAD SHDN will pull down to shutdown the group pad.
1. disable pad
0. enable pad</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB22_sr</name>
              <description>PAD slew rate control.
1: slow
0: fast
note: flash pad default  0 (PA0~5, PA12~18); other pads default 1</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB22_smt</name>
              <description>PAD Schmit control</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB22_e2</name>
              <description>PAD driving ability control.
0: low
1: high 
The actual driving current is depend on pad type.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB22_pupdc</name>
              <description>Some pad may have two type of PU/PD resistor, this bit can select it.
1: small resistor
0: big resistor</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB22_ie</name>
              <description>PAD input enable control</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB22_sel</name>
              <description>PAD pinmux function ID selection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PB23</name>
          <addressOffset>0x000000DC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00003900</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pB23_dis</name>
              <description>PAD shutdown, only when the whole group's dis signals are all 1, the PAD SHDN will pull down to shutdown the group pad.
1. disable pad
0. enable pad</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB23_sr</name>
              <description>PAD slew rate control.
1: slow
0: fast
note: flash pad default  0 (PA0~5, PA12~18); other pads default 1</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB23_smt</name>
              <description>PAD Schmit control</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB23_e2</name>
              <description>PAD driving ability control.
0: low
1: high 
The actual driving current is depend on pad type.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB23_pupdc</name>
              <description>Some pad may have two type of PU/PD resistor, this bit can select it.
1: small resistor
0: big resistor</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB23_ie</name>
              <description>PAD input enable control</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB23_sel</name>
              <description>PAD pinmux function ID selection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PB24</name>
          <addressOffset>0x000000E0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00003900</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pB24_dis</name>
              <description>PAD shutdown, only when the whole group's dis signals are all 1, the PAD SHDN will pull down to shutdown the group pad.
1. disable pad
0. enable pad</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB24_sr</name>
              <description>PAD slew rate control.
1: slow
0: fast
note: flash pad default  0 (PA0~5, PA12~18); other pads default 1</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB24_smt</name>
              <description>PAD Schmit control</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB24_e2</name>
              <description>PAD driving ability control.
0: low
1: high 
The actual driving current is depend on pad type.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB24_pupdc</name>
              <description>Some pad may have two type of PU/PD resistor, this bit can select it.
1: small resistor
0: big resistor</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB24_ie</name>
              <description>PAD input enable control</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB24_sel</name>
              <description>PAD pinmux function ID selection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PB25</name>
          <addressOffset>0x000000E4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00003900</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pB25_dis</name>
              <description>PAD shutdown, only when the whole group's dis signals are all 1, the PAD SHDN will pull down to shutdown the group pad.
1. disable pad
0. enable pad</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB25_sr</name>
              <description>PAD slew rate control.
1: slow
0: fast
note: flash pad default  0 (PA0~5, PA12~18); other pads default 1</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB25_smt</name>
              <description>PAD Schmit control</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB25_e2</name>
              <description>PAD driving ability control.
0: low
1: high 
The actual driving current is depend on pad type.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB25_pupdc</name>
              <description>Some pad may have two type of PU/PD resistor, this bit can select it.
1: small resistor
0: big resistor</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB25_ie</name>
              <description>PAD input enable control</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB25_sel</name>
              <description>PAD pinmux function ID selection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PB26</name>
          <addressOffset>0x000000E8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00003900</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pB26_dis</name>
              <description>PAD shutdown, only when the whole group's dis signals are all 1, the PAD SHDN will pull down to shutdown the group pad.
1. disable pad
0. enable pad</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB26_sr</name>
              <description>PAD slew rate control.
1: slow
0: fast
note: flash pad default  0 (PA0~5, PA12~18); other pads default 1</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB26_smt</name>
              <description>PAD Schmit control</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB26_e2</name>
              <description>PAD driving ability control.
0: low
1: high 
The actual driving current is depend on pad type.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB26_pupdc</name>
              <description>Some pad may have two type of PU/PD resistor, this bit can select it.
1: small resistor
0: big resistor</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB26_ie</name>
              <description>PAD input enable control</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB26_sel</name>
              <description>PAD pinmux function ID selection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PB27</name>
          <addressOffset>0x000000EC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00003900</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pB27_dis</name>
              <description>PAD shutdown, only when the whole group's dis signals are all 1, the PAD SHDN will pull down to shutdown the group pad.
1. disable pad
0. enable pad</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB27_sr</name>
              <description>PAD slew rate control.
1: slow
0: fast
note: flash pad default  0 (PA0~5, PA12~18); other pads default 1</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB27_smt</name>
              <description>PAD Schmit control</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB27_e2</name>
              <description>PAD driving ability control.
0: low
1: high 
The actual driving current is depend on pad type.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB27_pupdc</name>
              <description>Some pad may have two type of PU/PD resistor, this bit can select it.
1: small resistor
0: big resistor</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB27_ie</name>
              <description>PAD input enable control</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB27_sel</name>
              <description>PAD pinmux function ID selection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PB28</name>
          <addressOffset>0x000000F0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00003900</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pB28_dis</name>
              <description>PAD shutdown, only when the whole group's dis signals are all 1, the PAD SHDN will pull down to shutdown the group pad.
1. disable pad
0. enable pad</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB28_sr</name>
              <description>PAD slew rate control.
1: slow
0: fast
note: flash pad default  0 (PA0~5, PA12~18); other pads default 1</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB28_smt</name>
              <description>PAD Schmit control</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB28_e2</name>
              <description>PAD driving ability control.
0: low
1: high 
The actual driving current is depend on pad type.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB28_pupdc</name>
              <description>Some pad may have two type of PU/PD resistor, this bit can select it.
1: small resistor
0: big resistor</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB28_ie</name>
              <description>PAD input enable control</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB28_sel</name>
              <description>PAD pinmux function ID selection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PB29</name>
          <addressOffset>0x000000F4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00003900</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pB29_dis</name>
              <description>PAD shutdown, only when the whole group's dis signals are all 1, the PAD SHDN will pull down to shutdown the group pad.
1. disable pad
0. enable pad</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB29_sr</name>
              <description>PAD slew rate control.
1: slow
0: fast
note: flash pad default  0 (PA0~5, PA12~18); other pads default 1</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB29_smt</name>
              <description>PAD Schmit control</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB29_e2</name>
              <description>PAD driving ability control.
0: low
1: high 
The actual driving current is depend on pad type.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB29_pupdc</name>
              <description>Some pad may have two type of PU/PD resistor, this bit can select it.
1: small resistor
0: big resistor</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB29_ie</name>
              <description>PAD input enable control</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB29_sel</name>
              <description>PAD pinmux function ID selection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PB30</name>
          <addressOffset>0x000000F8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00003900</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pB30_dis</name>
              <description>PAD shutdown, only when the whole group's dis signals are all 1, the PAD SHDN will pull down to shutdown the group pad.
1. disable pad
0. enable pad</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB30_sr</name>
              <description>PAD slew rate control.
1: slow
0: fast
note: flash pad default  0 (PA0~5, PA12~18); other pads default 1</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB30_smt</name>
              <description>PAD Schmit control</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB30_e2</name>
              <description>PAD driving ability control.
0: low
1: high 
The actual driving current is depend on pad type.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB30_pupdc</name>
              <description>Some pad may have two type of PU/PD resistor, this bit can select it.
1: small resistor
0: big resistor</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB30_ie</name>
              <description>PAD input enable control</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB30_sel</name>
              <description>PAD pinmux function ID selection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PB31</name>
          <addressOffset>0x000000FC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00003900</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pB31_dis</name>
              <description>PAD shutdown, only when the whole group's dis signals are all 1, the PAD SHDN will pull down to shutdown the group pad.
1. disable pad
0. enable pad</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB31_sr</name>
              <description>PAD slew rate control.
1: slow
0: fast
note: flash pad default  0 (PA0~5, PA12~18); other pads default 1</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB31_smt</name>
              <description>PAD Schmit control</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB31_e2</name>
              <description>PAD driving ability control.
0: low
1: high 
The actual driving current is depend on pad type.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB31_pupdc</name>
              <description>Some pad may have two type of PU/PD resistor, this bit can select it.
1: small resistor
0: big resistor</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB31_ie</name>
              <description>PAD input enable control</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pB31_sel</name>
              <description>PAD pinmux function ID selection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PAD_PU_1</name>
          <addressOffset>0x00000100</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00040022</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pa_pu</name>
              <description>PAD pull up enable when system is in active.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PAD_PU_2</name>
          <addressOffset>0x00000104</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xC0000020</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pb_pu</name>
              <description>PAD pull up enable when system is in active.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PAD_PD_1</name>
          <addressOffset>0x00000108</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pa_pd</name>
              <description>PAD pull down enable when system is in active.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PAD_PD_2</name>
          <addressOffset>0x0000010C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pb_pd</name>
              <description>PAD pull down enable when system is in active.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PAD_PU_SLP_1</name>
          <addressOffset>0x00000110</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pa_pu_slp</name>
              <description>PAD pull up enable when system is in sleep.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PAD_PU_SLP_2</name>
          <addressOffset>0x00000114</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pb_pu_slp</name>
              <description>PAD pull up enable when system is in sleep.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PAD_PD_SLP_1</name>
          <addressOffset>0x00000118</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pa_pd_slp</name>
              <description>PAD pull down enable when system is in sleep.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PAD_PD_SLP_2</name>
          <addressOffset>0x0000011C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pb_pd_slp</name>
              <description>PAD pull down enable when system is in sleep.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PAD_REG_DUMMY_1</name>
          <addressOffset>0x00000120</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0000FE00</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>pad aon dummy bits</description>
              <bitRange>[15:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pad_pupd_slp_mode</name>
              <description>pad pupd sleep mode seletion .</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>VOLTAGE_PROBE_OE</name>
          <addressOffset>0x000001DC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>vprob_syson_oe</name>
              <description>vprob source select, msut one-hot
[0]: AON_OTP  power
[1]: SOC  power 
[2]: BT power
[3]: RSVD</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>vprob_soc_oe</name>
              <description>dummy bit, no use</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>vprob_bt_oe</name>
              <description>dummy bit, no use</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>vprob_en0</name>
              <description>pad vprob function enable</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_I2S_CTRL</name>
          <addressOffset>0x000001E0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SP1_DIO3_MUXSEL</name>
              <description>SPORT1 DIO3 function mux
0: DIN_3 func
1: DOUT_0 func</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SP1_DIO2_MUXSEL</name>
              <description>SPORT1 DIO2 function mux
0: DIN_2 func
1: DOUT_1 func</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SP1_DIO1_MUXSEL</name>
              <description>SPORT1 DIO1 function mux
0: DIN_1 func
1: DOUT_2 func</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SP1_DIO0_MUXSEL</name>
              <description>SPORT1 DIO0 function mux
0: DIN_0 func
1: DOUT_3 func</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SP0_DIO3_MUXSEL</name>
              <description>SPORT0 DIO3 function mux
0: DIN_3 func
1: DOUT_0 func</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SP0_DIO2_MUXSEL</name>
              <description>SPORT0 DIO2 function mux
0: DIN_2 func
1: DOUT_1 func</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SP0_DIO1_MUXSEL</name>
              <description>SPORT0 DIO1 function mux
0: DIN_1 func
1: DOUT_2 func</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SP0_DIO0_MUXSEL</name>
              <description>SPORT0 DIO0 function mux
0: DIN_0 func
1: DOUT_3 func</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DBG_PORT_CTRL</name>
          <addressOffset>0x000001E4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dbg_port_en</name>
              <description></description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dbg_port_en2</name>
              <description></description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dbg_port_sel</name>
              <description></description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DBG_GPIO_MAP_0</name>
          <addressOffset>0x000001E8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x03020100</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>gpio_dmux_sel3</name>
              <description></description>
              <bitRange>[28:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>gpio_dmux_sel2</name>
              <description></description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>gpio_dmux_sel1</name>
              <description></description>
              <bitRange>[12:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>gpio_dmux_sel0</name>
              <description></description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DBG_GPIO_MAP_1</name>
          <addressOffset>0x000001EC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x07060504</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>gpio_dmux_sel7</name>
              <description></description>
              <bitRange>[28:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>gpio_dmux_sel6</name>
              <description></description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>gpio_dmux_sel5</name>
              <description></description>
              <bitRange>[12:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>gpio_dmux_sel4</name>
              <description></description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PINMUX_SUB_CTRL</name>
          <addressOffset>0x000001F0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dbg_clk1_sel</name>
              <description>debug clock1  in CLOCK testmode 
0: osc
1: osc100k
2: osc128k
3: xtal
4: sdm_32.768k
5: sdm_256Hz
6: sdm_1Hz
7: zero</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dbg_clk0_sel</name>
              <description>debug clock0  in CLOCK testmode 
0: osc
1: osc100k
2: osc128k
3: xtal
4: sdm_32.768k
5: sdm_256Hz
6: sdm_1Hz
7: zero</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SWD_SDD_CTRL</name>
          <addressOffset>0x000001F4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000101</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>kscan_pupd_ctrl</name>
              <description>enable kscan pupd hw control logic, active 1</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SWD_PMUX_EN</name>
              <description>1: Force enable share SWD pinmux  function
0: Disable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PAD_REG_DUMMY_0</name>
          <addressOffset>0x000001FC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0000FFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>HW used only , these are for reserved.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>lp_pmc</name>
      <baseAddress>0x41008300</baseAddress>
      <size>0x00000088</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00000088</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>REG_WAK_STATUS0</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>wak_sta_31_0</name>
              <description>wak evt status.
It can't be cleare here, clear at IP side .
Bit0: WIFI_FISR_FESR_IRQ
Bit1: WIFI_FTSR_MAILBOX_IRQ
Bit2: KM4_WAKE_IRQ
Bit3: BT_WAKE_HOST
Bit4: IPC_KM4
Bit5: IWDG0
Bit6: Timer4
Bit7: Timer5
Bit8: Timer6
Bit9: Timer7
Bit10: pmc_timer0
Bit11: pmc_timer1
Bit12: UART0
Bit13: UART1
Bit14: UART2_BT
Bit15: UART_LOG
Bit16: GPIOA
Bit17: GPIOB
Bit18: I2C0
Bit19: I2C1
Bit20: CTOUCH
Bit21: RTC
Bit22: ADC
Bit23: ADC_COMP
Bit24: BOR
Bit25: PWR_DOWN
Bit26: Keyscan
Bit27: AON_TIM
Bit28: AON_WAKEPIN
Bit29: SDIO
Bit30~31: Reserved</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WAK_MASK0_NP</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>wak_km0_imr_31_0</name>
              <description>1:mask enable for wake NP, this used to wak pmc</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WAK_MASK0_AP</name>
          <addressOffset>0x00000010</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>wak_km4_imr_31_0</name>
              <description>1:mask enable for wake AP</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WLPMC_ISR</name>
          <addressOffset>0x00000020</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DUMMY</name>
              <description></description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WL_OFF_IMR</name>
              <description></description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WL_ON_IMR</name>
              <description></description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WL_OFF_ISR</name>
              <description></description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>WL_ON_ISR</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WLAN_PWRCTL</name>
          <addressOffset>0x00000024</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SW_CLR_RDY2ACT</name>
              <description>System infrom WLAN ready to active</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SW_SET_RDY2ACT</name>
              <description></description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WL_RDY2ACT</name>
              <description>System infrom WLAN ready to active</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>WL_REQ2ACT</name>
              <description></description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>WL_HW_RESP_FEN</name>
              <description>1: enable HW auto response</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SYSPMC_CTRL</name>
          <addressOffset>0x00000028</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x061F0030</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PMC_STL_PDSOC</name>
              <description>timer wait for core power power-cut power stable .
000:8us * 2^1
001:8us * 2^2
010:8us * 2^3  // 64us
011:8us * 2^4
100:8us * 2^5
101:8us * 2^6  
110:8us * 2^7  // pon default
111:8us * 2^8</description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PMC_TUTIME</name>
              <description>PMC timeunit setting,  in cycles of osc4M 
e.g, default 0x1F,  timeunit = 8us</description>
              <bitRange>[21:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pmc_mem_slp_mode</name>
              <description>Select memory parameter option
1: sleep setting
0: normal setting
Note:defautl set to sleep setting to save power when snooze</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PMC_POF_WAIT_SLEP</name>
              <description>1.when SW set pmen_slep or pmen_dslp , hw pmc will wait km0 enter sleep mode , then begin to pof seq
0.Not wait km0 sleep</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>KM0_IRQ_MASK</name>
              <description>1.mask all KM0 interrupt
0:release all KM0 interrupt</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>KM4_IRQ_MASK</name>
              <description>1.mask all KM4 interrupt
0:release all KM4 interrupt</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PMC_PMEN_SLEP</name>
              <description>1: Request PMC to enter sleep state,
auto clear to 0 after PMC finishes</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PMC_PMEN_DSLP</name>
              <description>1: Request PMC to enter deep-sleep state,
auto clear to 0 after PMC finishes</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SYSPMC_OPT</name>
          <addressOffset>0x0000002C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x070000C0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PST_CHG_BDML</name>
              <description>normal setting for BT request Core LDO dummy load selection
1: enable dummy load during BT PMC change to sleep mode / normal mode
0: disable dummy load during BT PMC change to sleep mode / normal mode</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PST_G1_USE_MLDO</name>
              <description>1: G1 pad use MLDO 1.8v IO power
0: G1 pad use external power and can't shutdown by pmc</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PST_G0_USE_MLDO</name>
              <description>1: G0 pad use MLDO 1.8v IO power
0: G0 pad use external power and can't shutdown by pmc</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PST_SLEP_WDML</name>
              <description>normal setting for WMAC request Core LDO dummy load selection
1: enable dummy load when PMC enter into sleep mode
0: disable dummy load when PMC enter into sleep mode</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PST_SLEP_BDML</name>
              <description>normal setting for BT request Core LDO dummy load selection
1: enable dummy load when PMC enter into sleep mode
0: disable dummy load when PMC enter into sleep mode</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PST_SLEP_SDML</name>
              <description>normal setting for system request Core LDO dummy load selection
1: enable dummy load when PMC enter into sleep mode
0: disable dummy load when PMC enter into sleep mode</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PST_NORM_WDML</name>
              <description>normal setting for WMAC request Core LDO dummy load selection
1: enable dummy load when PMC enter into normal mode
0: disable dummy load when PMC enter into normal mode</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PST_NORM_BDML</name>
              <description>normal setting for BT request Core LDO dummy load selection
1: enable dummy load when PMC enter into normal mode
0: disable dummy load when PMC enter into normal mode</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PST_NORM_SDML</name>
              <description>normal setting for system request Core LDO dummy load selection
1: enable dummy load when PMC enter into normal mode
0: disable dummy load when PMC enter into normal mode</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PST_SLEP_G1PD</name>
              <description>1: G1 pad used for 1.8v IO power , and will shutdown when LDO3318 off in slep, when dslp , it will always shutoff
0: G1 pad not used as 1.8v IO power</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PST_SLEP_G0PD</name>
              <description>1: G0 pad used for 1.8v IO power , and will shutdown when LDO3318 off in slep,, when dslp , it will always shutoff
0: G0 pad not used as 1.8v IO power</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PST_SLEP_ERCK</name>
              <description>1: Enable lpon clock when PMC enter into sleep mode
0: Gate lpon clock when PMC enter into sleep mode</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PST_SLEP_ESOC</name>
              <description>1: power enable SOC platform when PMC enter into sleep mode (clock-gating)
0: power off SoC domain when PMC enter into sleep mode (power-gating)</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DUMMY_LOAD_CTRL</name>
          <addressOffset>0x00000030</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000004</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SYS_DMYL_SLP</name>
              <description>this bit means the dummy load state when KM4 is sleep
0: disable
1: enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SYS_DMYL_ACT</name>
              <description>this bit means the dummy load state when KM4 is active
0: disable
1: enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SYS_DMYL_MNL</name>
              <description>system use this bit to switch core ldo dummy load control path manually
0: dummy load control is decided by LS/BT/WL PMC arbitration
1: dummy load control is decided by KM4 sleep state</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PMC_PATCH_GRP0_0</name>
          <addressOffset>0x00000034</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PATCH_GRP0_INSTR1_5_0</name>
              <description>instruction1 of  LSYSON PMC patch group0,bit[5:0]</description>
              <bitRange>[31:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PATCH_GRP0_INSTR0</name>
              <description>instruction0 of  LSYSON PMC patch group0</description>
              <bitRange>[25:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PATCH_GRP0_SADDR</name>
              <description>Start address of the first instruction of  LSYSON PMC patch group0</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PMC_PATCH_GRP0_1</name>
          <addressOffset>0x00000038</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PATCH_GRP0_INSTR2</name>
              <description>instruction2 of  LSYSON PMC patch group0</description>
              <bitRange>[29:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PATCH_GRP0_INSTR1_17_6</name>
              <description>instruction1 of  LSYSON PMC patch group0,bit[17:6]</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PMC_PATCH_GRP1_0</name>
          <addressOffset>0x0000003C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PATCH_GRP1_INSTR1_5_0</name>
              <description>instruction1 of  LSYSON PMC patch group1,bit[5:0]</description>
              <bitRange>[31:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PATCH_GRP1_INSTR0</name>
              <description>instruction0 of  LSYSON PMC patch group1</description>
              <bitRange>[25:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PATCH_GRP1_SADDR</name>
              <description>Start address of the first instruction of  LSYSON PMC patch group1</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PMC_PATCH_GRP1_1</name>
          <addressOffset>0x00000040</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PATCH_GRP1_INSTR2</name>
              <description>instruction2 of  LSYSON PMC patch group1</description>
              <bitRange>[29:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PATCH_GRP1_INSTR1_17_6</name>
              <description>instruction1 of  LSYSON PMC patch group1,bit[17:6]</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PMC_PATCH_GRP2_0</name>
          <addressOffset>0x00000044</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PATCH_GRP2_INSTR1_5_0</name>
              <description>instruction1 of  LSYSON PMC patch group2,bit[5:0]</description>
              <bitRange>[31:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PATCH_GRP2_INSTR0</name>
              <description>instruction0 of  LSYSON PMC patch group2</description>
              <bitRange>[25:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PATCH_GRP2_SADDR</name>
              <description>Start address of the first instruction of  LSYSON PMC patch group2</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PMC_PATCH_GRP2_1</name>
          <addressOffset>0x00000048</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PATCH_GRP2_INSTR2</name>
              <description>instruction2 of  LSYSON PMC patch group2</description>
              <bitRange>[29:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PATCH_GRP2_INSTR1_17_6</name>
              <description>instruction1 of  LSYSON PMC patch group2,bit[17:6]</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PMC_PATCH_GRP3_0</name>
          <addressOffset>0x0000004C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PATCH_GRP3_INSTR1_5_0</name>
              <description>instruction1 of  LSYSON PMC patch group3,bit[5:0]</description>
              <bitRange>[31:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PATCH_GRP3_INSTR0</name>
              <description>instruction0 of  LSYSON PMC patch group3</description>
              <bitRange>[25:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PATCH_GRP3_SADDR</name>
              <description>Start address of the first instruction of  LSYSON PMC patch group3</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PMC_PATCH_GRP3_1</name>
          <addressOffset>0x00000050</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PATCH_GRP3_INSTR2</name>
              <description>instruction2 of  LSYSON PMC patch group3</description>
              <bitRange>[29:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PATCH_GRP3_INSTR1_17_6</name>
              <description>instruction1 of  LSYSON PMC patch group3,bit[17:6]</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PMC_PATCH_GRP4_0</name>
          <addressOffset>0x00000054</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PATCH_GRP4_INSTR1_5_0</name>
              <description>instruction1 of  LSYSON PMC patch group4,bit[5:0]</description>
              <bitRange>[31:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PATCH_GRP4_INSTR0</name>
              <description>instruction0 of  LSYSON PMC patch group4</description>
              <bitRange>[25:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PATCH_GRP4_SADDR</name>
              <description>Start address of the first instruction of  LSYSON PMC patch group4</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PMC_PATCH_GRP4_1</name>
          <addressOffset>0x00000058</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PATCH_GRP4_INSTR2</name>
              <description>instruction2 of  LSYSON PMC patch group4</description>
              <bitRange>[29:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PATCH_GRP4_INSTR1_17_6</name>
              <description>instruction1 of  LSYSON PMC patch group4,bit[17:6]</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PMC_PATCH_GRP5_0</name>
          <addressOffset>0x0000005C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PATCH_GRP5_INSTR1_5_0</name>
              <description>instruction1 of  LSYSON PMC patch group5,bit[5:0]</description>
              <bitRange>[31:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PATCH_GRP5_INSTR0</name>
              <description>instruction0 of  LSYSON PMC patch group5</description>
              <bitRange>[25:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PATCH_GRP5_SADDR</name>
              <description>Start address of the first instruction of  LSYSON PMC patch group5</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PMC_PATCH_GRP5_1</name>
          <addressOffset>0x00000060</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PATCH_GRP5_INSTR2</name>
              <description>instruction2 of  LSYSON PMC patch group5</description>
              <bitRange>[29:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PATCH_GRP5_INSTR1_17_6</name>
              <description>instruction1 of  LSYSON PMC patch group5,bit[17:6]</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AIP_TRIGGER</name>
          <addressOffset>0x00000070</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x124B0E00</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>sys_pwm_h</name>
              <description>Set pwm in heavy loading by system (SWR current &gt; 200mA)
1:Heavy
0:Light</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sys_mldo_dml_slp</name>
              <description>mem ldo dummy load slep option 
1:dummy load en
0:dummy load disable</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sys_mldo_dml_norm</name>
              <description>mem ldo dummy load normal option 
1:dummy load en
0:dummy load disable</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sys_mldo_mode_slp</name>
              <description>mem ldo mode slep option 
00:off
01:sleep
10:normal-0
10:normal-1</description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sys_mldo_mode_norm</name>
              <description>mem ldo mode normal option 
00:off
01:sleep
10:normal-0
10:normal-1</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sys_bg_slp</name>
              <description>0: BG OFF   1: BG ON</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sys_bg_norm</name>
              <description>0: BG OFF   1: BG ON</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sys_xtal_slp</name>
              <description>00: OFF    001: LPS wo 40M   010: LPS with 40M , 011: NORM     100: HP</description>
              <bitRange>[21:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sys_xtal_norm</name>
              <description>00: OFF    001: LPS wo 40M   010: LPS with 40M , 011: NORM     100: HP</description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sys_regu_sts_rdy</name>
              <description>Ready signal for system regu state. Software write trg register and sts different value will lead this bit set to 0 by hardware. When REGU PMC finish the flow, this bit will be set to 1 by hardware.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>sys_regu_sts_slp</name>
              <description>000: RSVD     001: state1   010: state2   011: state3
100: state4    101: state5   110: state6   111: RSVD</description>
              <bitRange>[13:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sys_regu_sts_norm</name>
              <description>000: RSVD     
001: state1  0.7/PC/PFM
010: state2  0.8/PC/PFM 
011: state3  0.9/PC/PFM
100: state4  0.9(1.0)/SLP/PFM  
101: state5  0.9(1.0)/SLP/PWM 
110: state6  0.9(1.0)/NORM/PWM 
111: RSVD</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>trg_sys_mldo_dml</name>
              <description></description>
              <bitRange>[4:4]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>trg_sys_mldo_mode</name>
              <description></description>
              <bitRange>[3:3]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>trg_sys_bg</name>
              <description></description>
              <bitRange>[2:2]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>trg_sys_xtal</name>
              <description></description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>trg_sys_regu_sts</name>
              <description>write 1 to trigger sys_regu_sts_norm value to take effect</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AIP_OPTION</name>
          <addressOffset>0x00000074</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>osc4m_ign_volt</name>
              <description>Options if osc4m can auto require voltage , disable it may speedup reponse time when system nevel goto 0.7v
0. osc4m will send volt areq when osc4m enable or disable
1. osc4m never req volt change , make sure , system voltage will nevel goto 0.7v</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ARB_DBC</name>
          <addressOffset>0x00000080</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0A0A0A07</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dbc_cnt_xmd</name>
              <description>xmd debounce counter , cycle based in OSC4M</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dbc_cnt_bg</name>
              <description>bg debounce counter , cycle based in OSC4M</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dbc_cnt_regu_sts</name>
              <description>regu sts debounce counter , cycle based in OSC4M</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dbc_en_xmd</name>
              <description>xtal mode arbit debounce enable
0:disable
1:enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dbc_en_bg</name>
              <description>bg arbit debounce enable
0:disable
1:enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dbc_en_regu_sts</name>
              <description>regu sts arbit debounce enable
0:disable
1:enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ARB_VTH</name>
          <addressOffset>0x00000084</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>iagt_vthd_xmd</name>
              <description>This field used for xmd arb control.</description>
              <bitRange>[27:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>iagt_vthd_bg</name>
              <description>This field used for bg arb control.</description>
              <bitRange>[12:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>iagt_vthd_regu_sts</name>
              <description>This field used for regu sts arb control.</description>
              <bitRange>[8:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>lp_aon</name>
      <baseAddress>0x41008000</baseAddress>
      <size>0x00000100</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00000100</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>REG_PWC</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x041F1F10</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>LPPAD_SHDN_CORE</name>
              <description>1: Release LP PAD SHDN CORE (except G5)
0: Global Assert LP PAD RSTB33
Note:G5 is aon pad, when all LP pad's IO power is ready , aon pmc will release this bit , only in power on init seq .</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LPPAD_RSTB</name>
              <description>1: Release LP PAD RSTB33 (except G5)
0: Global Assert LP PAD RSTB33
Note: aon pmc will auto release this bit in power on init seq</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LPPAD_SHDN</name>
              <description>1: Global Enable LP PAD (except G5)
0: Shutdown LP PAD
Note: aon pmc will auto release this bit in power on init seq</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>G5_PAD_RSTB</name>
              <description>1: Enable G5  group pad
0: Reset PAD
Note: This is AON pad group, direct connect to G5 pad,
 aon pmc will auto release this bit in power on init seq</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>G4_PAD_RSTB</name>
              <description>1: Enable G4  group pad
0: Reset PAD</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>G3_PAD_RSTB</name>
              <description>1: Enable G3 group pad
0: Reset PAD</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>G2_PAD_RSTB</name>
              <description>1: Enable G2 group pad
0: Reset PAD</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>G1_PAD_RSTB</name>
              <description>1: Enable G1 group pad
0: Reset PAD</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>G0_PAD_RSTB</name>
              <description>1: Enable G0 group pad
0: Reset PAD</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>G5_PAD_SHDN</name>
              <description>1: Enable G5 group pad
0: Shutdown PAD
Note: This is AON pad group, aon pmc will auto release this bit in power on init seq</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>G4_PAD_SHDN</name>
              <description>1: Enable G4 group pad
0: Shutdown PAD</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>G3_PAD_SHDN</name>
              <description>1: Enable G3 group pad
0: Shutdown PAD</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>G2_PAD_SHDN</name>
              <description>1: Enable G2 group pad
0: Shutdown PAD</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>G1_PAD_SHDN</name>
              <description>1: Enable G1 group pad
0: Shutdown PAD</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>G0_PAD_SHDN</name>
              <description>1: Enable G0 group pad
0: Shutdown PAD</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pc_step</name>
              <description>power cut enable time step.
0: not valid
1: 10us
2: 20us
3: 30us</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>psw_out_aon_otp</name>
              <description>aon otp domain power switch status
1: power on
0: power off</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>pwc_aon_otp</name>
              <description>OTP power cut enable for core power, high active.
1:enable 
0:disable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ISO</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00003C07</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>G5_PAD_SHDN_CORE</name>
              <description>1: Enable G5 group pad
0: Shutdown PAD
Note: This maybe nouse , for AON pad ,  IO power always on before core power.</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>G4_PAD_SHDN_CORE</name>
              <description>1: Enable G4 group pad
0: Shutdown PAD</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>G3_PAD_SHDN_CORE</name>
              <description>1: Enable G3 group pad
0: Shutdown PAD</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>G2_PAD_SHDN_CORE</name>
              <description>1: Enable G2 group pad
0: Shutdown PAD</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>G1_PAD_SHDN_CORE</name>
              <description>1: Enable G1 group pad
0: Shutdown PAD
Note:default is shutdown, wait pmc enable MLDO power</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>G0_PAD_SHDN_CORE</name>
              <description>1: Enable G0 group pad
0: Shutdown PAD</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>iso_r2a</name>
              <description>1: ISO signals from RTC to AON
0: Release</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>iso_aon_otp</name>
              <description>1: ISO signals from otp core power domain
0: Release</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>iso_lpon</name>
              <description>When LDO core power on, PD_LPON is on.
1: ISO signal of LPON power domain
0: Release</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FEN</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>fen_lpon</name>
              <description>LS global reset
1: Enable LS function
0: Disable</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_otpc</name>
              <description>1: Enable OTP function
0: Disable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_sdm</name>
              <description>1: Enable 32.768K SDM function
0: Disable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_rtc</name>
              <description>1: Enable RTC function
0: Disable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_atim</name>
              <description>1: Enable AON timer
0: Reset AON timer
Note: AON timer starts to run only when event happens.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_iwdg</name>
              <description>1: Enable IWDG by HW autoload.
Once enabled, IWDG can't be disabled unless por asserts.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_bor</name>
              <description>Enable bor reset function, default is 0 when power on</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CLK</name>
          <addressOffset>0x0000000C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000085</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>cke_otpc</name>
              <description>1: Enable OTPC clock
0: Disable
Note: default change to 1 for osc4m req</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_sdm</name>
              <description>1: Enable 32.768K SDM module's clock
0: Disable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_rtc</name>
              <description>1: Enable RTC clock
0: Disable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_atim</name>
              <description>1: Enable AON timer clock
0: Disable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_aon</name>
              <description>if 0, AON clock will be gated except atim and debouce circuit.
Note: AON clock can't be shutdown as analog need.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CKSL</name>
          <addressOffset>0x00000010</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>otpc_flg</name>
              <description>This field is used to indicate OTP autoload field
1: ls 
0:aon
Note:because aon autoload only do once , so after power on , this bit will always be 1 . SW don't change this bit .</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BOOT_REASON_HW</name>
          <addressOffset>0x00000020</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>rstf_ocp</name>
              <description>This bit will be set to 1 when OCP happen, it will let system enter dslp mode.
 Write 1 to clear.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>rstf_warm_km02peri</name>
              <description>This bit will be set to 1 when KM0 warm  resets the system. Write 1 to clear.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>rstf_warm_km42peri</name>
              <description>This bit will be set to 1 when km4 warm  resets the system. Write 1 to clear.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>rstf_wdg2</name>
              <description>This bit will be set to 1 when WDG resets the system. Write 1 to clear.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>rstf_wdg1</name>
              <description>This bit will be set to 1 when WDG resets the system. Write 1 to clear.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>rstf_wdg0</name>
              <description>This bit will be set to 1 when WDG resets the system. Write 1 to clear.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>rstf_iwdg</name>
              <description>This bit will be set to 1 when WDG resets the system. Write 1 to clear.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>rstf_km0_sys</name>
              <description>This bit will be set to 1 when KM0 resets the system. Write 1 to clear.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>rstf_km4_sys</name>
              <description>This bit will be set to 1 when KM4 resets the system. Write 1 to clear.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>rstf_dslp</name>
              <description>This is boot reason for dslp exit, clear by SW write to 1.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>rstf_bor</name>
              <description>This bit will be set to 1 when BOR resets the system. Write 1 to clear.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AON_WAK_EVT</name>
          <addressOffset>0x00000024</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>rtc_isr_evt</name>
              <description>RTC interrupt  wake event occurs.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>gpio_pin1_wakdet_evt</name>
              <description>Wake event for wake pin1
1: wake event detected
0: no wake event
Note: aon gpio only used to wake hw pmc, to interrupt SW, it must enable GPIO interrupt in LP GPIO IP, and the poly must be same as AON GPIO setting.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>gpio_pin0_wakdet_evt</name>
              <description>Wake event for wake pin0
1: wake event detected
0: no wake event
Note: aon gpio only used to wake hw pmc, to interrupt SW, it must enable GPIO interrupt in LP GPIO IP, and the poly must be same as AON GPIO setting.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>aon_tim_isr_evt</name>
              <description>AON timer interrupt event occurs.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bor_isr_evt</name>
              <description>bor interrupt event occurs.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>chipen_lp_isr_evt</name>
              <description>Chipen long press interrupt event occurs.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>chipen_sp_isr_evt</name>
              <description>Chipen short press interrupt event occurs.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TESTING_CFG</name>
          <addressOffset>0x0000002C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x02000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>icfg_sw</name>
              <description>icfg configured by SIC/SW</description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>icfg_sel</name>
              <description>If 1, using icfg_sw to replace trapped icfg value.</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>iboot_sw</name>
              <description>iboot configured by SIC/SW</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>iboot_sel</name>
              <description>If 1, using iboot_sw to replace trapped iboot value.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TIM_CNT</name>
          <addressOffset>0x00000030</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>aon_tim_cnt_cur</name>
              <description>Aon timer current count value.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TIM_SET</name>
          <addressOffset>0x00000034</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>aon_tim_cnt_set</name>
              <description>Set aon time a countdown value, when timer count down, it will trigger a aon_tim event.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TIM_IER</name>
          <addressOffset>0x00000038</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>AON_TIM_IE</name>
              <description>Timer interrupt enable
0:disable
1:enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TIM_ISR</name>
          <addressOffset>0x0000003C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>AON_TIM_ISR</name>
              <description>Timer interrupt status
0:no interrupt
1:interrupt occurs</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_GPIO_CTRL</name>
          <addressOffset>0x00000040</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00010000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>GPIO_WAKDET_POLY</name>
              <description>Wake pin polarity
0: low active
1: high active
bit1: wake pin1 polarity
bit0: wake pin0 polarity
Note: once a wake pin is set, the pads PU/PD will be force by this poly value, and soft config have no use.</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO_DBNC_CYC</name>
              <description>The GPIO signal will be filtered by the number of debounce cycles of specified in this register. (100k/128k)</description>
              <bitRange>[22:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO_DBNC_FEN</name>
              <description>1: Enable gpio debouncer function
0: Disable
Default disable for simualtion issue</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO_WAKE_FEN</name>
              <description>1: Enable wake pin function
0: Disable
Every GPIO has its own enable. 
When aon pmc is not in DSLP, wake pins will not effect PMC state althrougth this bit is set.</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_GPIO_WAKE_ISR</name>
          <addressOffset>0x00000044</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>GPIO_PIN1_WAKE_ISR</name>
              <description>Wake pin1 interrupt status
0:no interrupt
1:interrupt occurs</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>GPIO_PIN0_WAKE_ISR</name>
              <description>Wake pin0 interrupt status
0:no interrupt
1:interrupt occurs</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RTC_IO_CTRL</name>
          <addressOffset>0x00000048</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>rtc_io_opt</name>
              <description>RTC IO option register
[0]: extend diode
[1]: rsvd</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rtc_mode</name>
              <description>RTC IO mode flag
1: RTC IO domain enabled
0: disable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>rtc_io_ctrl</name>
              <description>RTC IO control mode
0: shift disable
1: shift enable
2: rtc mode (once enable , it can't be disabled)
3: iwdg feed</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_IWDG_IO_DIS</name>
          <addressOffset>0x0000004C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>iwdg_io_dis</name>
              <description>IWDG IO disable .
Default enabled in RTC domain .
This bit is protected , and only can be accessed by OTP</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CHIPEN_CTRL</name>
          <addressOffset>0x00000050</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>chipen_st</name>
              <description>CHIP_EN pin status
0: logic '0' on CHIP_EN pin
1: logic '1' on CHIP_EN pin</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>chipen_intr_mode</name>
              <description>Chipen operation mode.
00: reset mode. When chipen pad low, hw will reset all chip
01: interrup mode. It will enable short/long press function.
1X: pulse reset mode. The transation from other value to 2'd2 will gen a posedge to set RST_PULSE_EN in HV domain.
Once in pulse reset mode , this field can't be modified again , and always read out 2'b11</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>chipen_tack</name>
              <description>00: 50ms
01: 100ms
10: 200ms
11: 400ms</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>chipen_tlp</name>
              <description>000: 1000ms
001: 1500ms
010: 2000ms
011: 2500ms
100: 3000ms
101: 3500ms
110: 4000ms
111: 4500ms</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>chipen_tsp</name>
              <description>000: 0ms
001: 50ms
010: 100ms
011: 150ms
100: 200ms
101: 250ms
110: 300ms
111: 350ms</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>chipen_tdbc</name>
              <description>000: 0us
001: 100us
010: 500us
011: 1000us
100: 2000us
101: 4000us
110: 8000us
111: 16000us</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CHIPEN_ISR</name>
          <addressOffset>0x00000054</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CHIPEN_LP_ISR</name>
              <description>chipen long press interrupt status
0:no interrupt
1:interrupt occurs</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CHIPEN_SP_ISR</name>
              <description>chipen short press interrupt status
0:no interrupt
1:interrupt occurs</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BOR_CTRL</name>
          <addressOffset>0x00000058</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bor_intr_mode</name>
              <description>BOR operation mode.
0: reset mode. When analog detect bor, hw will trigger a bor reset.
1: interrup mode. It will raise an interrup first. If this bit set to 0, then trigger a bor reset.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bor_tdbc</name>
              <description>000: 0us
001: 100us
010: 500us
011: 1000us
100: 2000us
101: 4000us
110: 8000us
111: 16000us</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BOR_ISR</name>
          <addressOffset>0x0000005C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BOR_ISR</name>
              <description>BOR interrupt status
0:no interrupt
1:interrupt occurs</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PMC_CTRL</name>
          <addressOffset>0x00000060</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000028</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PMC_STL_CLDO</name>
              <description>wait time for core LDO stable
0: 8*T  (T = 10us)
1: 16*T
2: 32*T
3: 64*T</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PMC_STL_SWR</name>
              <description>wait time for SWR stable
0: 64*T  (T = 10us)
1: 128*T
2: 256*T
3: 512*T</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PMC_OPT</name>
          <addressOffset>0x00000064</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000070</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_xtal_mode</name>
              <description>Select xtal mode when xtal used for adc/ctc/comp.
1: Normal
0: LPS</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>snooze_pdck</name>
              <description>Select xtal auto pdck function for sdm calibration use xtal lps mode
1:Enable
0:Disable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sdm_xtal_mode</name>
              <description>Select xtal mode when xtal used for sdm calibration.
1: Normal
0: LPS</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PST_WAIT_XTAL</name>
              <description>1: When POF , polling xtal invalid signal and then run forward
0: not polling xtal invalid</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PST_DSLP_ERCK</name>
              <description>1: Enable 100K clock for AON register access when PMC enter deep-sleep mode 
0: Disable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PST_DSLP_LDHM</name>
              <description>1: Enable AON LDO enter into sleep mode when  PMC enter deep-sleep mode
0: Disable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_OTP_POWUP_CFG</name>
          <addressOffset>0x00000068</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>otp_powup_sel</name>
              <description>select otp pow up flow is inside control or outside control
0: inside
1: outside</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>otp_powup_cfg</name>
              <description>[0] : penvddr2
[1]: pldo
[2]: pdstb
[3]: ptrim</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BOOT_CFG</name>
          <addressOffset>0x00000070</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>AON_RSVD_SW0</name>
              <description></description>
              <bitRange>[31:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DSLP_RETENTION_RAM_PATCH</name>
              <description>Deepsleep retention RAM patch</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RSVD_FOR_SW1</name>
          <addressOffset>0x00000074</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>WIFI_INIC_NP_READY</name>
              <description>Wi-Fi NP initialization ready flag</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WIFI_RF_1833_SEL</name>
              <description>Indication of RF voltage selection
0: 1.8V
1: 3.3V</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AON_RSVD_SW1</name>
              <description></description>
              <bitRange>[29:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PMC_PATCH_GRP0_1</name>
          <addressOffset>0x00000080</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>INSTR1_G0_3_0</name>
              <description>Instruction1 of AON PMC patch group0</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INSTR0_G0</name>
              <description>Instruction0 of AON PMC patch group0</description>
              <bitRange>[27:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SADDR_G0</name>
              <description>Start address of the first instruction of AON PMC patch group0</description>
              <bitRange>[9:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SEL_PMC_G0</name>
              <description>Select PMC for this patch group 
0:aon pmc
1:regu pmc</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PMC_PATCH_GRP0_2</name>
          <addressOffset>0x00000084</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>INSTR2_G0_17_0</name>
              <description>Instruction2 of AON PMC patch group0</description>
              <bitRange>[31:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INSTR1_G0_17_4</name>
              <description>Instruction1 of AON PMC patch group0</description>
              <bitRange>[13:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PMC_PATCH_GRP1_1</name>
          <addressOffset>0x00000088</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>INSTR1_G1_3_0</name>
              <description>Instruction1 of AON PMC patch group1</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INSTR0_G1</name>
              <description>Instruction0 of AON PMC patch group1</description>
              <bitRange>[27:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SADDR_G1</name>
              <description>Start address of the first instruction of AON PMC patch group0</description>
              <bitRange>[9:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SEL_PMC_G1</name>
              <description>Select PMC for this patch group 
0:aon pmc
1:regu pmc</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PMC_PATCH_GRP1_2</name>
          <addressOffset>0x0000008C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>INSTR2_G1_17_0</name>
              <description>Instruction2 of AON PMC patch group1</description>
              <bitRange>[31:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INSTR1_G1_17_4</name>
              <description>Instruction1 of AON PMC patch group1</description>
              <bitRange>[13:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PMC_PATCH_GRP2_1</name>
          <addressOffset>0x00000090</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>INSTR1_G2_3_0</name>
              <description>Instruction1 of AON PMC patch group2</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INSTR0_G2</name>
              <description>Instruction0 of AON PMC patch group2</description>
              <bitRange>[27:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SADDR_G2</name>
              <description>Start address of the first instruction of AON PMC patch group0</description>
              <bitRange>[9:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SEL_PMC_G2</name>
              <description>Select PMC for this patch group 
0:aon pmc
1:regu pmc</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PMC_PATCH_GRP2_2</name>
          <addressOffset>0x00000094</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>INSTR2_G2_17_0</name>
              <description>Instruction2 of AON PMC patch group2</description>
              <bitRange>[31:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INSTR1_G2_17_4</name>
              <description>Instruction1 of AON PMC patch group2</description>
              <bitRange>[13:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PMC_PATCH_GRP3_1</name>
          <addressOffset>0x00000098</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>INSTR1_G3_3_0</name>
              <description>Instruction1 of AON PMC patch group3</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INSTR0_G3</name>
              <description>Instruction0 of AON PMC patch group3</description>
              <bitRange>[27:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SADDR_G3</name>
              <description>Start address of the first instruction of AON PMC patch group0</description>
              <bitRange>[9:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SEL_PMC_G3</name>
              <description>Select PMC for this patch group 
0:aon pmc
1:regu pmc</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PMC_PATCH_GRP3_2</name>
          <addressOffset>0x0000009C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>INSTR2_G3_17_0</name>
              <description>Instruction2 of AON PMC patch group3</description>
              <bitRange>[31:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INSTR1_G3_17_4</name>
              <description>Instruction1 of AON PMC patch group3</description>
              <bitRange>[13:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PMC_PATCH_GRP4_1</name>
          <addressOffset>0x000000A0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>INSTR1_G4_3_0</name>
              <description>Instruction1 of AON PMC patch group4</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INSTR0_G4</name>
              <description>Instruction0 of AON PMC patch group4</description>
              <bitRange>[27:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SADDR_G4</name>
              <description>Start address of the first instruction of AON PMC patch group0</description>
              <bitRange>[9:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SEL_PMC_G4</name>
              <description>Select PMC for this patch group 
0:aon pmc
1:regu pmc</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PMC_PATCH_GRP4_2</name>
          <addressOffset>0x000000A4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>INSTR2_G4_17_0</name>
              <description>Instruction2 of AON PMC patch group4</description>
              <bitRange>[31:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INSTR1_G4_17_4</name>
              <description>Instruction1 of AON PMC patch group4</description>
              <bitRange>[13:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PMC_PATCH_GRP5_1</name>
          <addressOffset>0x000000A8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>INSTR1_G5_3_0</name>
              <description>Instruction1 of AON PMC patch group5</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INSTR0_G5</name>
              <description>Instruction0 of AON PMC patch group5</description>
              <bitRange>[27:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SADDR_G5</name>
              <description>Start address of the first instruction of AON PMC patch group0</description>
              <bitRange>[9:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SEL_PMC_G5</name>
              <description>Select PMC for this patch group 
0:aon pmc
1:regu pmc</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PMC_PATCH_GRP5_2</name>
          <addressOffset>0x000000AC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>INSTR2_G5_17_0</name>
              <description>HW used only , these are for pmc patch
Note: regu reg 0xF0 must not be used</description>
              <bitRange>[31:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INSTR1_G5_17_4</name>
              <description>HW used only , these are for pmc patch</description>
              <bitRange>[13:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PMC_ADDR01</name>
          <addressOffset>0x000000B0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00F000F0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pmc_patch_addr0</name>
              <description>HW used only , these are for pmc patch</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pmc_patch_addr1</name>
              <description>HW used only , these are for pmc patch</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PMC_ADDR23</name>
          <addressOffset>0x000000B4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00F000F0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pmc_patch_addr2</name>
              <description>HW used only , these are for pmc patch</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pmc_patch_addr3</name>
              <description>HW used only , these are for pmc patch</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PMC_ADDR45</name>
          <addressOffset>0x000000B8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00F000F0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pmc_patch_addr4</name>
              <description>HW used only , these are for pmc patch</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pmc_patch_addr5</name>
              <description>HW used only , these are for pmc patch</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PMC_ADDR67</name>
          <addressOffset>0x000000BC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00F000F0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pmc_patch_addr6</name>
              <description>HW used only , these are for pmc patch</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pmc_patch_addr7</name>
              <description>HW used only , these are for pmc patch</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RTC_IO_SOUT0</name>
          <addressOffset>0x000000C0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>rtc_io_test_dout_31_0</name>
              <description>Note , those bits are shared for RTC domain test
used as shift in pattern</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RTC_IO_SOUT1</name>
          <addressOffset>0x000000C4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>rtc_io_test_dout_63_32</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RTC_IO_SOUT2</name>
          <addressOffset>0x000000C8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>rtc_io_test_dout_95_64</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RTC_IO_SOUT3</name>
          <addressOffset>0x000000CC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>rtc_io_test_dout_127_96</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SYSRST_MSK</name>
          <addressOffset>0x000000D0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000018</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>sysrst_msk_lpon</name>
              <description>LS global reset
1: mask LS reset when sys reset happen 
0: reset by sys reset</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_otp</name>
              <description>1: mask OTP reset when sys reset happen 
0: reset by sys reset</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_sdm32k</name>
              <description>1: mask 32.768K SDM reset when sys reset happen 
0: reset by sys reset</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_rtc</name>
              <description>1: mask RTC reset when sys reset happen 
0: reset by sys reset</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_atim</name>
              <description>1: mask AON timer
0: reset by sys reset OR warm reset
Note: AON timer starts to run only when event happens.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_iwdg</name>
              <description>1: mask AON IWDG reset
0: reset by sys reset OR warm reset</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AON_BACKUP0</name>
          <addressOffset>0x000000E0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>aon_bk0</name>
              <description>Note , those bits are shared for RTC domain test
used as shift in pattern</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AON_BACKUP1</name>
          <addressOffset>0x000000E4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>aon_bk1</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AON_BACKUP2</name>
          <addressOffset>0x000000E8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>aon_bk2</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AON_BACKUP3</name>
          <addressOffset>0x000000EC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>aon_bk3</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BOUNDARY_CHK</name>
          <addressOffset>0x000000F0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xBDC00512</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>HW used only .
Used for access boundary check, AON is 256B which is 000-FF</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DUMMY_AIP_CTRL0</name>
          <addressOffset>0x000000F8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0000000F</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>aip_ctrl_rsvd0</name>
              <description>reserved for aip control</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DUMMY_AIP_INFO0</name>
          <addressOffset>0x000000FC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>aip_info_rsvd0</name>
              <description>reserved for aip info indication</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>lp_sys</name>
      <baseAddress>0x41008200</baseAddress>
      <size>0x00000100</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00000100</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>REG_PWC</name>
          <addressOffset>0x00000000</addressOffset>
          <size>16</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>psw_out_bt</name>
              <description>BT domain power switch status
1: power on
0: power off
Note:there are two group</description>
              <bitRange>[11:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>psw_out_soc</name>
              <description>SOC domain power switch status
1: power on
0: power off
Note:there are two group</description>
              <bitRange>[9:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>pwc_soc_req</name>
              <description>pwc soc req arb result</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>pwc_soc_st</name>
              <description>pwc soc arb result state</description>
              <bitRange>[6:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>pwc_bt</name>
              <description>This is BT function total power cut control 
1: Enable BT power cut
0: Disable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pow_on_soc</name>
              <description>1:SYS PMC request to enable HP SOC power cut and diable ISO
0: SYS PMC request to disable HP SOC power cut and enable ISO</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ISO</name>
          <addressOffset>0x00000002</addressOffset>
          <size>16</size>
          <description></description>
          <resetValue>0x00000002</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>iso_bt</name>
              <description>1: isolate signals from PD_LP_BT to other power domain
0: release iso</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>iso_soc_req</name>
              <description>isolate signals from PD_HP_SOC to other power domain. It is arb result</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FEN_GRP0</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>fen_htim</name>
              <description>1: enable TIMER 14 function
0: disable</description>
              <bitRange>[26:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_pwm</name>
              <description>1: enable PWM TIMER function
0: disable
[1]:pwm
[0]:pulse</description>
              <bitRange>[24:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_sdio</name>
              <description>1: enable sdio device function
0: disable</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_sport</name>
              <description>1: enable SPORT function
0: disable</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_ac</name>
              <description>1: enable audio codec digital ip active function
0: disable</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_trng</name>
              <description>1: enable TRNG function
0: disable</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_ledc</name>
              <description>1: enable LEDC function
0: disable</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_spi</name>
              <description>1: enable SPI1 function
0: disable</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_psram</name>
              <description>1: enable PSRAM function
0: disable</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_kscan</name>
              <description>Flash kscan function enable
1: enable sce
0: disable</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_spic</name>
              <description>Flash spic function enable
1: enable flash
0: disable flash</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_sha</name>
              <description>1: enable IPSEC SHA  function
0: disable</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_aes</name>
              <description>1: enable IPSEC AES  function
0: disable</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_lx</name>
              <description>1: enable LX1 system function
0: disable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_dmac</name>
              <description>1: enable GDMA function
0: disable</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_ipc</name>
              <description>1: enable IPC function
0: reset</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_km4</name>
              <description>1: enable KM4
0: reset</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_km0</name>
              <description>1: enable KM0
0: reset</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_plfm</name>
              <description>1: enable platform
0: reset</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_soc</name>
              <description>1: enable hs soc sytem
0: disable hs soc system 
(Note: used as soc power on reset)</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FEN_GRP1</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00100000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>fen_qspi</name>
              <description>1: enable qspi function
0: disable</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_irda</name>
              <description>1: enable irda function
0: disable</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_ptim</name>
              <description>pmc_timer function enable
1: enable
0: disable</description>
              <bitRange>[26:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_adc</name>
              <description>lp adc  function enable
1: enable
0: disable</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_usb</name>
              <description>usb core function enable
1: enable
0: disable</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_dtim</name>
              <description>Debug timer function enable
1: enable
0: disable</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_ltim</name>
              <description>Basic Timer0-7 function enable
1: enable
0: disable</description>
              <bitRange>[19:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_i2c</name>
              <description>I2C1  function enable
1: enable
0: disable</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_uart</name>
              <description>Uart function enable (Note uart2 if for BT)
1: enable
0: disable</description>
              <bitRange>[8:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_loguart</name>
              <description>Uartlog function enable
1: enable
0: disable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_gpio</name>
              <description>SGPIO  function enable
1: enable
0: disable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_sic</name>
              <description>1: enable SIC function
0: reset</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_wlafe_ctrl</name>
              <description>WL RFAFE control function enable
1: enable
0: disable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_bton</name>
              <description>BTON function enable
1: enable
0: disable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_wlon</name>
              <description>WLON  function enable
1: enable
0: disable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CKE_GRP0</name>
          <addressOffset>0x0000000C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x18001006</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>cke_hp</name>
              <description>1: Enable HP clock
0: Disable</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_lp</name>
              <description>1: Enable LP clock
0: Disable</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_htim</name>
              <description>1: Enable HS basic TIMER clock
0: Disable</description>
              <bitRange>[26:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_pwm</name>
              <description>1: Enable PWM TIMER clock
0: Disable
[1] : pwm timer
[0] : pulse timer</description>
              <bitRange>[24:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_sdio</name>
              <description>1: Enable sdio clock
0: Disable</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_sport</name>
              <description>1: Enable sport1 clock
0: Disable</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_ac</name>
              <description>1: Enable audio codec clock
0: Disable</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_trng</name>
              <description>1: Enable trng bus clock
0: Disable</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_ledc</name>
              <description>1: Enable ledc bus clock
0: Disable</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_spi</name>
              <description>1: Enable SPI1 clock
0: Disable</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_psram</name>
              <description>1: Enable PSRAM bus clock
0: Disable</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_sram</name>
              <description>1: Enable hp sram clock
0: Disable</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_kscan</name>
              <description>1: Enable kscan clock</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_spic</name>
              <description>1: Enable SPIC source clock</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_sha</name>
              <description>1: Enable ipsec SHA clock
0: Disable</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_aes</name>
              <description>1: Enable ipsec AES clock
0: Disable</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_lx</name>
              <description>1: Enable lx1 bus clock
0: Disable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_dmac</name>
              <description>1: Enable GDMA0 clock
0: Disable</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_ipc</name>
              <description>1: Enable IPC clock
0: Disable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_km4</name>
              <description>1: Enable hp KM4 clock
0: Disable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_km0</name>
              <description>1: Enable lp  KM0 clock
0: Disable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_hperi</name>
              <description>1: Enable peri_hclk clock all
0: Disable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_lperi</name>
              <description>1: Enable peri_lclk  clock all
0: Disable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_lpon</name>
              <description>1.Enable lpon clk
0: Disable
Note: this bit is controlled HW PMC, SW shall not modify</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CKE_GRP1</name>
          <addressOffset>0x00000010</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00100004</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>cke_qspi</name>
              <description>1: Enable qsip clock
0: Disable</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_irda</name>
              <description>1: Enable irda clock
0: Disable</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_wmac</name>
              <description>1: Enable WMAC AXI and AHB bus clock
0: Disable</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_ptim</name>
              <description>1: Enable pmc timer clock
0: Disable</description>
              <bitRange>[26:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_ctc</name>
              <description>1: Enable Captouch clock
0: Disable</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_adc</name>
              <description>1: Enable LS ADC clock
0: Disable</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_usb</name>
              <description>1: Enable usb core clock
0: Disable</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_dtim</name>
              <description>1: Enable LS dtim clk
0: Disable</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_ltim</name>
              <description>LS basic Timer0-7 clk enable
0: Disable</description>
              <bitRange>[19:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_i2c</name>
              <description>1: Enable HS I2C0 clock
0: Disable
[1]: i2c1
[0]: i2c0</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_aipc</name>
              <description>1: Enable aipc clock 
0: Disable
Note:HW has auto-gating function , sw needn't set it unless hw failed</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_uart</name>
              <description>1: Enable Uart clock 
0: Disable</description>
              <bitRange>[8:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_loguart</name>
              <description>1: Enable Uartlog clock
0: Disable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_gpio</name>
              <description>1: Enable GPIO clock
0: Disable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_sic</name>
              <description>1: Enable SIC clock
0: Disable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_wdg</name>
              <description>1: Enable wdg bus clock
0: Disable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_bton</name>
              <description>1: Enable BTON clock
0: Disable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_wlon</name>
              <description>1: Enable WLON clock
0: Disable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CKE_GRP2</name>
          <addressOffset>0x00000014</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>cke_ret</name>
              <description>1.Enable Some IP's clock who has retention function when pmc state change
0: Disable
Note: this bit is controlled HW PMC, SW shall not modify</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_osc4m_soc</name>
              <description>1.Enable 4M clk path for soc clk
0: Disable
Note: this bit is controlled HW PMC, SW shall not modify</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CKSL_GRP0</name>
          <addressOffset>0x00000018</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x000C0040</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>cksl_loguart</name>
              <description>Select div_loguart's input clock (div_loguart's output clock is  loguart trx clock )
0: clock is xtal(source is dicided by cksl_loguart_xtal)
1: clock is osc4M</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cksl_uart</name>
              <description>Select div_uart[n]'s input clock (div_uart[n]'s output clock is uart[n] rx clock).  (n=0,1,2)
0: clock is xtal(source is dicided by cksl_uart_xtal)
1: clock is osc4M</description>
              <bitRange>[27:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cksl_loguart_xtal</name>
              <description>loguart_xtal clk select
0:clk_xtal_digi  
1:clk_xtal_digi_div2</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cksl_uart_xtal</name>
              <description>uart xtal clk select, cksl_uart_xtal[n](n=0,1,2)
0: clk_xtal_digi  
1:clk_xtal_digi_div2</description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cksl_sport</name>
              <description>sport clock selection 
0: equal to audio codec main clock (40M)
1: from cpu/dsp pll , after  pll selection(cksl_i2s_pll)</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cksl_otpc</name>
              <description>otpc clock selection
0: osc4m
1: xtal40m
Note: this bit will be set by pmc auto, when SW use otp, 
it must be set to 1 already</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cksl_irda</name>
              <description>IRDA clock selection
0: xtal 40m
1: pll divider out</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cksl_adc4m</name>
              <description>lp adc 4m clk selection
0:  from osc4m
1:  divider from xtal</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cksl_dtim</name>
              <description>dtim clock selection 
0: xtal
1: 32k for sleep</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cksl_ctc</name>
              <description>CTC REG clock selection
0: lbus clock
1: ctc ip clock</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cksl_adc</name>
              <description>ADC INT clock selection
0: lbus clock
1: adc ip clock</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cksl_gpio</name>
              <description>GPIO INT clock selecton:
0: lbus clock
1: 32.768K clock from SDM</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cksl_ptim</name>
              <description>PMC Timer INT clock selecton:
0: lbus clock
1: 32.768K clock from SDM</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cksl_psram</name>
              <description>psram clock select
0: xtal 40m
1: pll divider out</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cksl_spic</name>
              <description>spic clock select
0: xtal 40m
1: pll divider out</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cksl_hperi</name>
              <description>hperi clock seletion
0: xtal 40m
1: pll divider out</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cksl_hp</name>
              <description>HP clock select,used for KM4 and sram
0: xtal 40m
1: pll divider out</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cksl_lp</name>
              <description>LP clock select, used for KM0
0: osc4m
1: xtal_40m
2: NotValid
3: pll divider out</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CKSL_GRP1</name>
          <addressOffset>0x0000001C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>cksl_xtal</name>
              <description>xtal selection, Default=40MHz
No use,only support 40M</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CKD_GRP0</name>
          <addressOffset>0x00000020</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x10703331</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ckd_qspi</name>
              <description>qspi clock divider, it is based on  pll
0: div1
1: div2
2: div3
3/other: divider by this value + 1</description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ckd_utmifs</name>
              <description>usb full-speed 48M clock divider, it is based on cpu pll output
0: not valid
1: div2
2: div3
3/other: divider by this value + 1</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ckd_hp_mbist</name>
              <description>hp(km4) clock divider, it is based on  pll
0: div1
1: div2
2: div3
3/other: divider by this value + 1
Note: this divider just for HW mbist test , SW don't use it</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ckd_sram</name>
              <description>sram clock divider, it is based on  hp_clk
0: div1
1: div2
2: div3
3/other: divider by this value + 1</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ckd_irda</name>
              <description>irda clock divider, it is based on sys pll
0 : not valid
1: div2
2: div3
3/other: divider by this value + 1</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ckd_hperi</name>
              <description>peri_hclk clock divider, it is based on sys pll
0 : not valid
1: div2
2: div3
3/other: divider by this value + 1</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ckd_lp</name>
              <description>KM0 pll clock divider
0: div1
1: div2
2: div3
3/other: divider by this value + 1</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ckd_hp</name>
              <description>hp(km4) clock divider, it is based on  pll
0: div1
1: div2
2: div3
3/other: divider by this value + 1</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CKD_GRP1</name>
          <addressOffset>0x00000024</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x000099E7</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ckd_uart2</name>
              <description>uart2 rx divider, source select by cksl_uart
N:divider by N+1
1:divider by 2
0:divider by 1
Note: If uart need lps wake up when using xtal source , divider must set to 9 , and using xtal_20M input,when using OSC4M source , divider must set  1. (it is constrained by STA)</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ckd_uart1</name>
              <description>uart1 rx divider, source select by cksl_uart
N:divider by N+1
1:divider by 2
0:divider by 1
Note: If uart need lps wake up when using xtal source , divider must set to 9 , and using xtal_20M input,when using OSC4M source , divider must set  1. (it is constrained by STA)</description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ckd_uart0</name>
              <description>uart0 rx divider, source select by cksl_uart
N:divider by N+1
1:divider by 2
0:divider by 1
Note: If uart need lps wake up when using xtal source , divider must set to 9 , and using xtal_20M input,when using OSC4M source , divider must set  1. (it is constrained by STA)</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ckd_loguart</name>
              <description>loguart rx divider, source select by cksl_uart
N:divider by N+1
1:divider by 2
0:divider by 1
Note: If uart need lps wake up when using xtal source , divider must set to 9 , and using xtal_20M input,when using OSC4M source , divider must set  1. (it is constrained by STA)</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ckd_xtal_adc</name>
              <description>xtal 4m divider for adc 
Default is /10 which output 4M</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ckd_xtal_dtim</name>
              <description>xtal 1m divider for dtim 
Default is /40 which output 4M</description>
              <bitRange>[11:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ckd_xtal_htim</name>
              <description>xtal 1m divider for htim 
Default is /40 which output 4M</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SYSTEM_CFG0</name>
          <addressOffset>0x00000028</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_mode</name>
              <description>Indicate PKG_ENG_SEL pad value
0: normal package; 1: engineering mode</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>pll_valid</name>
              <description>Indicator pll is ready</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>xtal_valid</name>
              <description>Indicator xtal 40M is ready</description>
              <bitRange>[29:29]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ptrp_icfg</name>
              <description>Trapped ICFG data value
0: normall mode
XXXX: the other mode (Test Mode)</description>
              <bitRange>[23:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ptrp_uartdl</name>
              <description>Power on trapped uart download value
0: Normal boot
1: uartdownload boot
TODO: it may be overwrited by efuse autoload</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ptrp_iboot</name>
              <description>Internal or external flash boot select</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ptrp_tmode</name>
              <description>0: normal mode
1: test mode</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ptrp_otpbyp</name>
              <description>1: force efuse autoload fail</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>hw_chip_type</name>
              <description>Chip type
00: ASIC
01: FPGA
10: PALADIUM
11: RTL_SIM</description>
              <bitRange>[9:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>hw_cpu_id</name>
              <description>Different CPU reading this register will return different value.
If read by KM0: return 0
If read by KM4: return 1
Other will return 2</description>
              <bitRange>[7:6]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PLAT_CTRL</name>
          <addressOffset>0x00000030</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00008208</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ppe_clk_opt</name>
              <description>1X: always ON
01: always OFF
00: controlled by internal ICG</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI1_MST</name>
              <description>1: SPI1 used as master
0: SPI1 used as slaver</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI0_MST</name>
              <description>1: SPI0 used as master
0: SPI0 used as slaver</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPIC_SPDUP_SIM</name>
              <description>1: SPIC will wait 256 spic_clk cycles before ready
0: SPIC will wait 2^16 spic_clk  cycles before ready</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>psram_spdup_sim</name>
              <description>psramc simulatin speedup enable.
Nouse because config form not specified .</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>qspi_spdup_sim</name>
              <description>qspi simulation speedup enable</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>gdma0_ccm</name>
              <description>GDMA0 clock control mode</description>
              <bitRange>[22:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ppe_glb_sus</name>
              <description>Assert this bit to suspend PPE, active high</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SHARE_BT_MEM</name>
              <description>1: Enable KM4 to share BT memory</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SHARE_WL_MEM</name>
              <description>1: Enable KM4 to share WL memory</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>KM0_RETENTION_MODE</name>
              <description>1: Enable, when KM0 reset, cache will not be cleared 
0: Disable, when KM0 reset, cache will be cleared by HW</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>KM4_RETENTION_MODE</name>
              <description>1: Enable, when KM4 reset, cache will not be cleared 
0: Disable, when KM4 reset, cache will be cleared by HW</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sys_retention_sl</name>
              <description>S/L control signal to retention DFFs at PD_SOC, direct to SL pin, default 1 to prevent leakage
0: normal mode
1: retention data
1-&gt;0: restore data</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>hs_sram2_rd_weight</name>
              <description>Excuted read command number continuously if both read and write command reached
This is for bt/wl share_ram</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>hs_sram0_rd_weight</name>
              <description>Excuted read command number continuously if both read and write command reached
This is for hs_ram 512K</description>
              <bitRange>[4:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HUK_PROT</name>
              <description>0: only cpu can read HUK key
1: no one can read HUK key
This bit will be latch to high when it was write to 1 until reset again .</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PLAT_STATUS</name>
          <addressOffset>0x00000034</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00008000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>init_xo_range_en</name>
              <description></description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>km0_rst_halt</name>
              <description></description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>km4_rst_halt</name>
              <description></description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>km0_dbgrestarted_m</name>
              <description>KM0 debug restart status</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>km0_dbg_mode</name>
              <description>KM0 debug status</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>km0_lockup_m</name>
              <description>KM0 lockup status</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>km0_slp_mode</name>
              <description>KM0 sleep status</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>km4_dbgrestarted_m</name>
              <description>KM4 debug restart status</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>km4_dbg_mode</name>
              <description>KM4 halt status</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>km4_lockup_m</name>
              <description>KM4 lockup status</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>km4_slp_mode</name>
              <description>KM4 sleep status</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_USB_SDIO_CTRL</name>
          <addressOffset>0x0000003C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000008</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ss_scaledown_mode</name>
              <description>use scaled-down timing values for usb, resulting in faster simulations</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sdd_pmux_fen</name>
              <description>after sdio pinmux is configured, set this bit to 1</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>z0_tune_en</name>
              <description>Zo_Tune , 45Ωauto calibration(Port-1 only)
0: Zo_Tune disable
1: Zo_Tune enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ua_lv2hv_en</name>
              <description>enable usb comparator l2h level shifter</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pwc_uahv_en</name>
              <description>enable usb comparator 3.3v power cut</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fs_comp_en</name>
              <description>enable usb full-speed differential comparator</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KM4_XO_CTRL0</name>
          <addressOffset>0x00000040</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>init_xo_base</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KM4_XO_CTRL1</name>
          <addressOffset>0x00000044</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>init_xo_top</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PSRAMC_FLASH_CTRL</name>
          <addressOffset>0x0000004C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>psramc_flash_en</name>
              <description>use psram_spic as flash controller, disable psram_phy</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>flash_feedback_loc</name>
              <description>0: pinmux S0 -&gt; flash_spic, pinmux S1 -&gt; psram_spic(if psramc_flash_en)
1: pinmux S1 -&gt; flash_spic, pinmux S0 -&gt; psram_spic(if psramc_flash_en)</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>psram_frqc_en</name>
              <description>enable psram auto freq change control flow</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>psram_frqc_done</name>
              <description>indicate psram auto freq change is done</description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>psram_frqc_grp</name>
              <description>select psram auto freq change group</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PSRAMC_DPHY_RD_DELAY_CNT</name>
              <description>spic_dphy output dealy cnt,
when set &lt; 3, output data will occur at fourth or fifth axi clock from the rising edge of spi_rx_data_en; when set &gt;= 3, data  will occur after  DPHY_RD_DELAY_CNT + 2 axi clock from the rising edge of spi_rx_data_en</description>
              <bitRange>[20:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PSRAMC_DPHY_EN</name>
              <description>when set, enable spic_dphy function to read data from flash</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PSRAMC_FLASH_CAL_EN</name>
              <description>Flash calibration enable
1: delay flash sout for calibration
0: bypass flash sout to spic</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PSRAMC_FLASH_DIV_EN</name>
              <description>1: enable to generate flash clock (no phase shift) divided by 600M pll clock, HW detect this signal's rising edge to start the no phase shift division circuit.</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PSRAMC_FLASH_PS_DIV_EN</name>
              <description>1: enable to generate flash clock (with phase shift) divided by 600M pll clock, HW detect this signal's rising edge to start the phase shift clock division circuit.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PSRAMC_FLASH_DIV_INT</name>
              <description>Flash clock division ratio, integrate part
0: divided by 1
1: divided by 2
2: divided by 3
3: divided by 4
..
7: divided by 8
8: divided by 9
9: divided by 10
Note: SPI clock frequency is this divided clock/2</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PSRAMC_FLASH_PS_PHASE</name>
              <description>Flash clock phase shift in units of cpu/dsp pll clock cycles.
If selected pll is 500MHz, the step is 2ns.
0: shift 0 step
1: shift 1 step
...
19: shift 19 step.
Note, this value cannot be set more than FLASH_DIV_INT</description>
              <bitRange>[6:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PSRAMC_FLASH_PS_DIV_RDY</name>
              <description>Ready flag of Flash clock with phase shift, Read only (input signal)</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PSRAMC_FLASH_DIV_RDY</name>
              <description>Ready flag of Flash clock, Read only (input signal)</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_I2S0_COMP_STEP</name>
          <addressOffset>0x00000050</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x019B4EC7</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>comp_step_i2s0</name>
              <description>i2s sdm clock interpolation period . This mains every this value's /N cycles , 
it will interpolate one /N+1 or /N-1 clock  to compensate period error.
For example to generate 45.1584M  from pll 600M
(max precsion is 0.1K, step bit must &gt; 400M/0.1K)
1. set i2s0_sdm_ckd = 12 (N=13 , for  600M/13 = 46.xx M , 600/14 = 42.xx M)
2. Calcurate compensation normalized step :
    target_per = 1000/45.1584 = 22.14427ns
    base_per    =  13000/600        = 21.66667ns
    intp_per     =  14000/600        = 23.33333ns
    err_accu = |target_per - base_per| = 0.4776
    err_comp = |target_per - intp_per| = 1.18906
    normalizaiton = err_accu/err_comp = 0.401667.....
     Convert the decimal into hexadecimal. change format to unsigned Q0.26 , which is  floo( normalizaion * (1&lt;&lt;26))</description>
              <bitRange>[25:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_I2S1_COMP_STEP</name>
          <addressOffset>0x00000054</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00763D55</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>comp_step_i2s1</name>
              <description>i2s sdm clock interpolation period . This mains every this value's /N cycles , 
it will interpolate one /N+1 or /N-1 clock  to compensate period error.
For example to generate 98.304M  from pll 600M
1. set i2s0_sdm_ckd = 5 (N=6 , for  600M/6 = 100M , 600/7 = 85.7 M)
2. Calcurate compensation normalized step :
    target_per = 1000/98.304 = 10.172526ns
    base_per    =  6000/600        = 10ns
    intp_per     =  7000/600        = 11.666667ns
    err_accu = |target_per - base_per| = 0.172526
    err_comp = |target_per - intp_per| = 1.494141
   if err_accu&lt;err_comp 
    normalizaiton = err_accu/err_comp = 0.11546835
  else 
   normalizaiton =err_comp/ err_accu  , and modify comp_sel_i2s ,fen_sdm_i2s
    Convert the decimal into hexadecimal. change format to unsigned Q0.26 , which is  floo( normalizaion * (1&lt;&lt;26))</description>
              <bitRange>[25:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_I2S_SDM_CTRL</name>
          <addressOffset>0x00000058</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0205020C</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>comp_sel_i2s1</name>
              <description>Determine to select /N+1  or /N-1 clock when interpolation.
when base_per is is closer to target_per ,please select 1. otherwise select 0.
0: select /(N-1)
1: select /(N+1)</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_sdm_i2s1</name>
              <description>fen enable</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ckd_sdm_i2s1</name>
              <description>Set a divider to nearest the target frequency .
The i2s sdm base divider factor N  is this value + 1</description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>comp_sel_i2s0</name>
              <description>Determine to select /N+1  or /N-1 clock when interpolation.
when base_per is is closer to target_per ,please select 1. otherwise select 0.
0: select /(N-1)
1: select /(N+1)</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_sdm_i2s0</name>
              <description>fen enable</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ckd_sdm_i2s0</name>
              <description>Set a divider to nearest the target frequency .
The i2s sdm base divider factor N  is this value + 1</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SPIC_CTRL</name>
          <addressOffset>0x0000005C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000100</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DPHY_RD_DELAY_CNT</name>
              <description>spic_dphy output dealy cnt,
when set &lt; 3, output data will occur at fourth or fifth axi clock from the rising edge of spi_rx_data_en; when set &gt;= 3, data  will occur after  DPHY_RD_DELAY_CNT + 2 axi clock from the rising edge of spi_rx_data_en</description>
              <bitRange>[20:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DPHY_EN</name>
              <description>when set, enable spic_dphy function to read data from flash</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FLASH_CAL_EN</name>
              <description>Flash calibration enable
1: delay flash sout for calibration
0: bypass flash sout to spic</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FLASH_DIV_EN</name>
              <description>1: enable to generate flash clock (no phase shift) divided by 400M pll clock, HW detect this signal's rising edge to start the no phase shift division circuit.</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FLASH_PS_DIV_EN</name>
              <description>1: enable to generate flash clock (with phase shift) divided by 600M pll clock, HW detect this signal's rising edge to start the phase shift clock division circuit.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FLASH_DIV_INT</name>
              <description>Flash clock division ratio, integrate part
0: not support
1: divided by 2
2: divided by 3
3: divided by 4
..
7: divided by 8
8: divided by 9
9: divided by 10
Note: SPI clock frequency is this divided clock/2</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FLASH_PS_PHASE</name>
              <description>Flash clock phase shift in units of cpu/dsp pll clock cycles.
If selected pll is 500MHz, the step is 2ns.
0: shift 0 step
1: shift 1 step
...
19: shift 19 step.
Note, this value cannot be set more than FLASH_DIV_INT</description>
              <bitRange>[6:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FLASH_PS_DIV_RDY</name>
              <description>Ready flag of Flash clock with phase shift, Read only (input signal)</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FLASH_DIV_RDY</name>
              <description>Ready flag of Flash clock, Read only (input signal)</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SW_RST_CTRL</name>
          <addressOffset>0x00000060</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>km4_sys_rst</name>
              <description>Only when REG_SW_RST_TRIG is 0x96969696 , this reg can be write</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>km0_sys_rst</name>
              <description>Only when REG_SW_RST_TRIG is 0x96969696 , this reg can be write</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>periall_rst_en</name>
              <description>1. warm reset request by one cpu will reset all peri and local cpu
0. warm reset request by one cpu will only reset local cpu
Note : peri rst will use sysrst mst also</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>othercpu_rst_en</name>
              <description>1. warm reset request by one cpu will reset other cpu's core and local cpu
0. warm reset request by one cpu will only reset local cpu</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SW_RST_TRIG</name>
          <addressOffset>0x00000064</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>trig_rst</name>
              <description>System reset trigger register
Write 0x96969696 to enable the write of reset control
Write 0x69696969 will trigger the system if REG_SW_RST_CTRL set .</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BOOT_REASON_SW</name>
          <addressOffset>0x00000068</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>GDMA_CHANNELS</name>
              <description>Indicate the usage status of every GDMA channel.</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dummy</name>
              <description></description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BOOT_CFG</name>
          <addressOffset>0x0000006C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BOOT_KM0_RUN</name>
              <description></description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BOOT_WAKE_FROM_PS_LS</name>
              <description></description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BOOT_WAKE_FROM_PS_HS</name>
              <description></description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BOOT_PATCH_FUNC0</name>
              <description></description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BOOT_PATCH_FUNC1</name>
              <description></description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BOOT_RSVD_SW</name>
              <description></description>
              <bitRange>[26:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ROM_VERSION_SW</name>
              <description></description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SW_PATCH</name>
          <addressOffset>0x00000070</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>sw_patch_saddr</name>
              <description>SW patch code start addr.
OTP physical addr 0x500-0x6FF will autoload to this addr .</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CHIP_INFO</name>
          <addressOffset>0x00000074</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00006845</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>chip_info_en</name>
              <description>Enable Internal Chip Information display.(Don't move 0x74 address , for code is not auto-gen)
0xA: enable.
Others: disable.
Note: CHIP_INFO can be read only if CHIP_INFO_EN[3:0]=0xA, otherwise the read result will return 0x0.</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rl_ver</name>
              <description>CHIP cut verison :
0:  A-cut
1:  B-cut
...</description>
              <bitRange>[19:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>rl_no</name>
              <description>CHIP RL NUMBER :  0x6845</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BT_32K_CTRL0</name>
          <addressOffset>0x00000078</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0004C4B4</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>XTAL_CLK_FREQ_NM</name>
              <description>used for BT 32K clock. indicate the frequence of XTAL Normal Mode, default is 312.5KHz</description>
              <bitRange>[18:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BT_32K_CTRL1</name>
          <addressOffset>0x0000007C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0004C4B4</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>XTAL_CLK_FREQ_LPS</name>
              <description>used for BT 32K clock. indicate the frequence of XTAL LPS Mode, default is 312.5KHz</description>
              <bitRange>[18:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BT_CTRL0</name>
          <addressOffset>0x00000080</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xA090C489</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BT_SWR_STS_NM</name>
              <description>SET SWR state when BT in active mode
000: RSVD     
001: state1  0.7/PC/PFM
010: state2  0.8/PC/PFM 
011: state3  0.9/PC/PFM
100: state4  0.9/SLP/PFM  
101: state5  0.9/SLP/PWM 
110: state6  0.9/NORM/PWM 
111: state7  1.0/NORM/PWM</description>
              <bitRange>[31:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BTWL_USE_LOGUART_PAD_ST</name>
              <description>The state of xor of WL_USE_REQ and BT_USE_REQ.
0: loguart use loguart trx pad
1: bt hci use loguart trx pad</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>WL_MP_STATUS</name>
              <description>Wi-Fi MP status</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BT_USE_EXT_BT</name>
              <description>1: select external BT
0: select internal BT</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WL_USE_REQ</name>
              <description>who uses loguart  trx pad depends on the xor of WL_USE_REQ and BT_USE_REQ, wifi can send use request by change the value of WL_USE_REQ</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FORCE_LOGUART_USE_LOGUART_PAD_B</name>
              <description>Force wifi soc to use loguart pad mandatory if necessary
0: loguart use loguart trx pad
1: who uses loguart trx pad depends on BTWL_USE_LOGUART_PAD_ST</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BT_XTAL_MODE_NM</name>
              <description>SET XTAL state when BT in active mode
000: XTAL OFF
001: XTAL LPS, gating XTAL 40M
010: XTAL LPS, enable XTAL 40M
011: XTAL NM mode
100: XTAL HP mode</description>
              <bitRange>[23:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BT_EN_TST_SI_CTRL_RFC</name>
              <description>进入Test Mode 8 , 且同時 BT_EN_TST_SI_CTRL_RFC=1 , 才將RFC 端的SI  3 wire交由專線BT_SI_*_TST 控制;
若I2C 想要access RFC,设置BT_EN_TST_SI_CTRL_RFC=0 或者 將BT_SI_ENB_TST pull high(如果BT_SI_ENB_TST 有出 PIN)</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BT_USE_EXT_UART</name>
              <description>1: BT use external uart
0: BT use internal uart</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BT_CTRL_RFC_SEL_SI</name>
              <description>Normal mode 或者Test Mode 2,通过此寄存器选择RFC的控制端. BT_CTRL_RFC_SEL_SI = 1,將RFC 端的SI  3 wire交由專線BT_SI_*_TST 控制;BT_CTRL_RFC_SEL_SI = 0,將RFC 端的SI  3 wire交由 I2C 控制.
BT_CTRL_RFC_SEL_SI = 1时,也可通过将BT_SI_ENB_TST pull high,交由PI控制</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BOOT_RSVD_BT_SW1</name>
              <description>RSVD for sotfware</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BOOT_RSVD_BT_SW2</name>
              <description>RSVD for sotfware</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BT_WAKE_HOST_POL</name>
              <description>1:BT_WAKE_HOST to CPU and pinmux 0:pinmux to CPU for external trig</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HOST_WAKE_BT_POL</name>
              <description>1:HOST_WAKE_BT to BT and pinmux 0:pinmux to BT for external trig</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HOST_WAKE_BT</name>
              <description>CPU set this bit to 1 to wake BT</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BT_XTAL_MODE_LPS</name>
              <description>SET XTAL state when BT in LPS mode
000: XTAL OFF
001: XTAL LPS, gating XTAL 40M
010: XTAL LPS, enable XTAL 40M
011: XTAL NM mode
100: XTAL HP mode</description>
              <bitRange>[12:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BT_I2C_TEST_EN</name>
              <description>SW control BT enter I2C test mode</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BT_MEM_PWRC_LPS</name>
              <description>BT DMEM/BFMEM power mode control in SLEEP.
Setted before chip goes to SLEEP.Used to controll power mode of BT memory group when chip is in SLEEP.
For FTC_ULP mem, pwr_lps[2:0] map to {SLP,RET,NAP};
For SNPS mem, pwr_lps[2:0] map to {SD,DS,LS}.
  000 - active
  001 - light sleep
  010 - deep sleep
  100 - shut down</description>
              <bitRange>[8:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SET_BT_OFF_PARAM</name>
              <description>level -&gt; pulse. Write to 1 to disable XTAL and SWR, before BT OFF. Before Write to 1 or after BT OFF,need to write to 0</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BT_SYS_BTDBG_SEL</name>
              <description>0: select debug port from BTTOP
1: debug_port[31:18] from bt_misc; else from BTTOP</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DSWR_REF_BT</name>
              <description>core swr parameter refer BT status</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BT_SWR_STS_LPS</name>
              <description>SET SWR state when BT in LPS mode
000: RSVD     
001: state1  0.7/PC/PFM
010: state2  0.8/PC/PFM 
011: state3  0.9/PC/PFM
100: state4  0.9/SLP/PFM  
101: state5  0.9/SLP/PWM 
110: state6  0.9/NORM/PWM 
111: state7  1.0/NORM/PWM</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BT_CTRL1</name>
          <addressOffset>0x00000084</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFA018000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BT32_DIV_FREQ</name>
              <description>indicate the frequence of BT32K, default is 32KHz</description>
              <bitRange>[31:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CKSL_BT_XTAL32K</name>
              <description>select BT 32K source
1: XTAL
0: OSC</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BT_CKSL_CKANA</name>
              <description>1: enable osc4m when BT enter LPS
0: switch bt_ana_clk from osc4m to ana_100k when BT enter LPS</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BT_PMC_STATE</name>
              <description>indicate bt_misc PMC current state, for debug</description>
              <bitRange>[14:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AIP_CTRL0</name>
          <addressOffset>0x00000088</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ck_cal_start</name>
              <description>Start clk calibration . This bit will auto-set to 0 when cal done .</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ck_cal_sel</name>
              <description>Calibration clock selection . The refrence clock is xtal clock.
0: OSC4M
1: AON100K
2: AON128K for SDM</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ck_cal_rpt</name>
              <description>Clock calibration result</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MON_CTRL</name>
          <addressOffset>0x00000090</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>MSK_MONITOR</name>
              <description>ISR mask , if 1 , cpu will not receive interrup , although isr_monitor is assert</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EN_MONITOR</name>
              <description>Indicates whether enable the monitor function. When The monitor FIFO capture write event, it will trigger the sys illegal write interrupt, the interrupt source will auto clear when read out all the data~</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ISR_MONITOR</name>
              <description>Indicates the monitor FIFO has more</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MON_WREG0</name>
          <addressOffset>0x00000094</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ILL_WADDR</name>
              <description>Illegal write addr. every  read ,it will update waddr and wdata</description>
              <bitRange>[13:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MON_WREG1</name>
          <addressOffset>0x00000098</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ILL_WDATA</name>
              <description>Illegal write value</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_I2C_CTRL</name>
          <addressOffset>0x000000A0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>i2c1_rx_swap</name>
              <description>I2C1 RX swap control</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>i2c1_tx_swap</name>
              <description>I2C1 TX swap control</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>i2c0_rx_swap</name>
              <description>I2C0 RX swap control</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>i2c0_tx_swap</name>
              <description>I2C0 TX swap control</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DW_GPIO_CTRL</name>
          <addressOffset>0x000000A4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>gpio_divcnt_pb</name>
              <description>divider for dw gpiob debounce clk</description>
              <bitRange>[14:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>gpio_divcnt_pa</name>
              <description>divider for dw gpioa debounce clk</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_LXBUS_DBG0</name>
          <addressOffset>0x000000A8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>timeout_addr_mst</name>
              <description>lx sys bus addr debug out</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_LXBUS_DBG1</name>
          <addressOffset>0x000000AC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>timeout_addr_slv</name>
              <description>lx sys bus addr debug out</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_LXBUS_DBG_CTRL</name>
          <addressOffset>0x000000B0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>lx1_lock_ok</name>
              <description>lock lx1 bus lock ok</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>lx1_lock_bus</name>
              <description>lock lx1 bus for debug</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bustimeout</name>
              <description>lx sys bus arb timeout thresh</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>enbustimeout</name>
              <description>lx sys bus arb timeout enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FPGA_CLK_INFO</name>
          <addressOffset>0x000000B4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FPGA_KM0_CLK</name>
              <description>FPGA KM0 clock</description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FPGA_KM4_CLK</name>
              <description>FPGA KM4 clock</description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FPGA_PSRAM_CLK</name>
              <description>FPGA PSRAM clock</description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FPGA_SPIC_CLK</name>
              <description>FPGA SPIC clock</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DSS_CTRL</name>
          <addressOffset>0x000000B8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dss_rstn</name>
              <description></description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dss_wire_sel</name>
              <description></description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dss_speed_en</name>
              <description></description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dss_ro_sel</name>
              <description></description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dss_data_in</name>
              <description></description>
              <bitRange>[19:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DSS_OUT</name>
          <addressOffset>0x000000BC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dss_out_sel</name>
              <description>0: select lvt dss
1: select uhvt dss</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dss_wsort_go</name>
              <description></description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>dss_ready</name>
              <description></description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>dss_data_out</name>
              <description></description>
              <bitRange>[19:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_UPS_CTRL</name>
          <addressOffset>0x000000C4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ups_src_sel</name>
              <description>UPS trigger source select:
000: none
001: gpio trigger
010: comparator output
011: audio zcd_0
100: audio zcd_1
101: audio zcd_2</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ups_out_pwm_trig</name>
              <description>Enable for output trigger to pwm</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ups_out_tim_en</name>
              <description>Enable for output en signal to basic timer</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ups_in_tim_of</name>
              <description>Enable for basic timer overflow input</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ups_rvs_en</name>
              <description>Invert polarity for UPS input
0: posedge polarity
1: negedge polarity</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ups_dbc_cnt</name>
              <description>Debounce count for UPS funciton</description>
              <bitRange>[17:2]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ECO_CTRL</name>
          <addressOffset>0x000000CC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>HW used only, these are for reserved.
ECO: 
dummy[0] means cksl_gpio4m, used to select u_mux_gpio; 
1:osc_4m_lpon
0:sys_32k_lpon

dummy[1], qspi using gdma, requested by SD
1: qspi using gdma with dma handshake signals
0: qspi using ppe with dma handshake signals

dummy[2], set 1 when flash_spic feedback working at 1.8v

dummy[3], set 1 when psram_spic(as flash controller) feedback working at 1.8v</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SYSRST_MSK0</name>
          <addressOffset>0x000000D0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>sysrst_msk_qspi</name>
              <description>1: mask qspi reset when sys reset happen 
0: disable</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_irda</name>
              <description>1: mask irda reset when sys reset happen 
0: disable</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_htim</name>
              <description>1: mask HP TIMER14 reset when sys reset happen 
0: disable</description>
              <bitRange>[26:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_pwm</name>
              <description>1: mask HP TIMER_PWM reset when sys reset happen 
0: disable</description>
              <bitRange>[24:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_sdio</name>
              <description>1: mask sdio reset when sys reset happen 
0: disable</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_sport</name>
              <description>1: mask SPORT1 reset when sys reset happen 
0: disable</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_ac</name>
              <description>1: mask audio codec active reset when sys reset happen 
0: disable</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_trng</name>
              <description>1: mask TRNG reset when sys reset happen 
0: disable</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_ledc</name>
              <description>1: mask LEDC reset when sys reset happen 
0: disable</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_spi</name>
              <description>1: mask SPI1 reset when sys reset happen 
0: disable</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_psram</name>
              <description>1: mask PSRAM reset when sys reset happen 
0: disable</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_kscan</name>
              <description>mask kscan when sys reset happen  mask
1: mask 
0: disable kscan</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_spic</name>
              <description>mask Flash spic reset when sys reset happen  mask
1: mask flash
0: disable flash</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_sha</name>
              <description>1: mask IPSEC SHA reset when sys reset happen 
0: disable</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_aes</name>
              <description>1: mask IPSEC AES reset when sys reset happen 
0: disable</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_lx</name>
              <description>1: mask LX reset when sys reset happen 
0: disable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_dmac</name>
              <description>1: mask GDMA reset when sys reset happen 
0: disable</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_usb</name>
              <description>1: mask usb reset when sys reset happen
0: reset</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_km4</name>
              <description>1: mask KM4 reset when sys reset happen
0: reset</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_km0</name>
              <description>1: mask KM0 reset when sys reset happen
0: reset</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_plfm</name>
              <description>1: mask platform
0: reset</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_hsoc</name>
              <description>1: mask HP_SOC system reset when sys reset happen 
0: reset</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SYSRST_MSK1</name>
          <addressOffset>0x000000D4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>sysrst_msk_ptim</name>
              <description>1: mask pmc timer reset when sys reset happen 
0: disable</description>
              <bitRange>[26:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_adc</name>
              <description>1: mask LS ADC reset when sys reset happen 
0: reset</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_ipc</name>
              <description>1: mask IPC reset when sys reset happen 
0: reset</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_wdg</name>
              <description>1: mask LS WDG 1~4 reset when sys reset happen 
0: reset</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_dtim</name>
              <description>1: mask LP dtim reset when sys reset happen  mask
0: reset</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_ltim</name>
              <description>1: mask LP basic TIMER0-7 reset when sys reset happen 
0: disable</description>
              <bitRange>[19:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_i2c</name>
              <description>1: mask HS I2C1 reset when sys reset happen 
0: reset</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_uart</name>
              <description>1: mask UART reset when sys reset happen 
0: disable</description>
              <bitRange>[8:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_loguart</name>
              <description>1: mask LOGUART reset when sys reset happen 
0: disable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_gpio</name>
              <description>1: mask LS GPIO reset when sys reset happen 
0: reset</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_wlafe_ctrl</name>
              <description>1: mask WL RFAFE control circuit, shall be 1 when mask WL or BT use WL RFAFE
0: reset</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_bton</name>
              <description>mask BTON reset when sys reset happen
1: mask
0: disable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_wlon</name>
              <description>mask WLON reset when sys reset happen  mask
1: mask
0: disable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FLASH_PARA_ADDR</name>
          <addressOffset>0x000000F0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xBDC10512</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>HW used only ,
Used for access boundary check, SYSON is 512B which is 000-1FF.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DUMMY_090</name>
          <addressOffset>0x000000F4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>HW used only , these are for reserved.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DUMMY_AIP_CTRL1</name>
          <addressOffset>0x000000F8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0000000F</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>aip_ctrl_rsvd1</name>
              <description>reserved for aip control</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DUMMY_AIP_INFO1</name>
          <addressOffset>0x000000FC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>aip_info_rsvd1</name>
              <description>reserved for aip info indication</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>RXI-300</name>
      <baseAddress>0x41102000</baseAddress>
      <size>0x00001140</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00001140</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>NAME</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description>RXI300 design name register</description>
          <resetValue>0x00052300</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>NAME</name>
              <description>The design name of RXI-300.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>VER</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description>RXI300 design version register</description>
          <resetValue>0x00000300</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>VER</name>
              <description>The design version of RXI-300.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RVE</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description>RXI300 design reversion register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>REV</name>
              <description>The design reversion of RXI-300.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INST</name>
          <addressOffset>0x0000000C</addressOffset>
          <size>32</size>
          <description>RXI300 design instance number register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>INST</name>
              <description>The design instance number of RXI-300.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IMPL_Y</name>
          <addressOffset>0x00000010</addressOffset>
          <size>32</size>
          <description>RXI300 implementation year register</description>
          <resetValue>0x00002022</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IMPL_Y</name>
              <description>The implementatin year of RXI-300.
Reset value depends on implementation date.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IMPL_D</name>
          <addressOffset>0x00000014</addressOffset>
          <size>32</size>
          <description>RXI300 implementation date register</description>
          <resetValue>0x08081200</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IMPL_D</name>
              <description>The implementatin date of RXI-300.
Reset value depends on implementation date.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DEV</name>
          <addressOffset>0x00000018</addressOffset>
          <size>32</size>
          <description>RXI300 developer register</description>
          <resetValue>0x05207583</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DEV</name>
              <description>The developer of RXI-300.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRO_NUM</name>
          <addressOffset>0x0000001C</addressOffset>
          <size>32</size>
          <description>RXI300 project number register</description>
          <resetValue>0x00006920</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PRO_NUM</name>
              <description>The project number of RXI-300.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ELR_PLD0_S</name>
          <addressOffset>0x00000100</addressOffset>
          <size>32</size>
          <description>Error log payload register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ELR_BSTINDEX_S</name>
              <description>Burst index of the error request.</description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ELR_BSTLEN_S</name>
              <description>Burst Length of the error request.</description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ELR_BSTTYPE_S</name>
              <description>BurstSeq of the error request.</description>
              <bitRange>[13:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ELR_CMD_S</name>
              <description>CMD of the error request.
0x1: Write command
0x2: Read command</description>
              <bitRange>[10:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ELR_SRC_S</name>
              <description>Error source of the error request.
0x10: S0 group address hole default slave
0x11: S1, S2 group address hole default slave</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ELR_PLD1_S</name>
          <addressOffset>0x00000104</addressOffset>
          <size>32</size>
          <description>Error log payload register1</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ELR_LOCK_S</name>
              <description>AxLock of the error request.</description>
              <bitRange>[31:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ELR_CACHE_S</name>
              <description>AxCache of the error request.</description>
              <bitRange>[29:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ElR_PROT_S</name>
              <description>AxProt of the error request.</description>
              <bitRange>[25:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ELR_SIZE_S</name>
              <description>Size of the error request.</description>
              <bitRange>[18:16]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ELR_ID_S</name>
          <addressOffset>0x00000108</addressOffset>
          <size>32</size>
          <description>Error log tagid register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ELR_ID_S</name>
              <description>Tagid of the error request.
9'b00000????: M0 access error
9'b00010????: M1 access error
9'b0010?????: M2 access error
9'b001100???: M3 access error
9'b01110000?: M4-0 access error
9'b01000000?: M4-1 access error
9'b01010000?: M5 access error
9'b01100000?: M6 access error</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ELR_ADR0_S</name>
          <addressOffset>0x0000010C</addressOffset>
          <size>32</size>
          <description>Error log addrress register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ELR_ADR0_S</name>
              <description>Address[31:0] of the error request.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ELR_ADR1_S</name>
          <addressOffset>0x00000110</addressOffset>
          <size>32</size>
          <description>Error log addrress register1</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ELR_ADR1_S</name>
              <description>Address[63:32] of the error request.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ELR_CODE_S</name>
          <addressOffset>0x00000130</addressOffset>
          <size>32</size>
          <description>Error log error code register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ELR_CODE_S</name>
              <description>The error code of error request, if it's 0, indicates that there is no error request. 
8'h00: No error
8'h01: Address hole error</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ELR_INTR_CLR_S</name>
          <addressOffset>0x0000013C</addressOffset>
          <size>32</size>
          <description>Error log interrupt clear register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ELR_INTR_CLR_S</name>
              <description>Error log interrupt clear. Writing 1'b1 to the register will trigger a 1-cycle pulse interrupt clear. It has to write 1'b1 to this register every time when the error excep-tion occurs.
Note that this register is write-only, the return value of reading this register is meaningless.</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IDAU_BA0</name>
          <addressOffset>0x00000200</addressOffset>
          <size>32</size>
          <description>IDAU base address register0</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IDAU_BA0</name>
              <description>It's the base address of region 0 which can be set as non-secure.</description>
              <bitRange>[31:12]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IDAU_LA0</name>
          <addressOffset>0x00000204</addressOffset>
          <size>32</size>
          <description>IDAU top address register0</description>
          <resetValue>0xFFFFF000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IDAU_LA0</name>
              <description>It's the top address of region 0 which can be set as non-secure.
For IDAU_LA0, the default is FFFFF000h; for IDAU_LAx, the default is 00000000h.</description>
              <bitRange>[31:12]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IDAU_BA1</name>
          <addressOffset>0x00000208</addressOffset>
          <size>32</size>
          <description>IDAU base address register1</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IDAU_BA1</name>
              <description>It's the base address of region 1 which can be set as non-secure.</description>
              <bitRange>[31:12]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IDAU_LA1</name>
          <addressOffset>0x0000020C</addressOffset>
          <size>32</size>
          <description>IDAU top address register1</description>
          <resetValue>0xFFFFF000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IDAU_LA1</name>
              <description>It's the top address of region 1 which can be set as non-secure.
For IDAU_LA0, the default is FFFFF000h; for IDAU_LAx, the default is 00000000h.</description>
              <bitRange>[31:12]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IDAU_BA2</name>
          <addressOffset>0x00000210</addressOffset>
          <size>32</size>
          <description>IDAU base address register2</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IDAU_BA2</name>
              <description>It's the base address of region 2 which can be set as non-secure.</description>
              <bitRange>[31:12]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IDAU_LA2</name>
          <addressOffset>0x00000214</addressOffset>
          <size>32</size>
          <description>IDAU top address register2</description>
          <resetValue>0xFFFFF000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IDAU_LA2</name>
              <description>It's the top address of region 2 which can be set as non-secure.
For IDAU_LA0, the default is FFFFF000h; for IDAU_LAx, the default is 00000000h.</description>
              <bitRange>[31:12]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IDAU_BA3</name>
          <addressOffset>0x00000218</addressOffset>
          <size>32</size>
          <description>IDAU base address register3</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IDAU_BA3</name>
              <description>It's the base address of region 3 which can be set as non-secure.</description>
              <bitRange>[31:12]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IDAU_LA3</name>
          <addressOffset>0x0000021C</addressOffset>
          <size>32</size>
          <description>IDAU top address register3</description>
          <resetValue>0xFFFFF000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IDAU_LA3</name>
              <description>It's the top address of region 3 which can be set as non-secure.
For IDAU_LA0, the default is FFFFF000h; for IDAU_LAx, the default is 00000000h.</description>
              <bitRange>[31:12]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IDAU_BA4</name>
          <addressOffset>0x00000220</addressOffset>
          <size>32</size>
          <description>IDAU base address register4</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IDAU_BA4</name>
              <description>It's the base address of region 4 which can be set as non-secure.</description>
              <bitRange>[31:12]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IDAU_LA4</name>
          <addressOffset>0x00000224</addressOffset>
          <size>32</size>
          <description>IDAU top address register4</description>
          <resetValue>0xFFFFF000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IDAU_LA4</name>
              <description>It's the top address of region 4 which can be set as non-secure.
For IDAU_LA0, the default is FFFFF000h; for IDAU_LAx, the default is 00000000h.</description>
              <bitRange>[31:12]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IDAU_BA5</name>
          <addressOffset>0x00000228</addressOffset>
          <size>32</size>
          <description>IDAU base address register5</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IDAU_BA5</name>
              <description>It's the base address of region 5 which can be set as non-secure.</description>
              <bitRange>[31:12]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IDAU_LA5</name>
          <addressOffset>0x0000022C</addressOffset>
          <size>32</size>
          <description>IDAU top address register5</description>
          <resetValue>0xFFFFF000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IDAU_LA5</name>
              <description>It's the top address of region 5 which can be set as non-secure.
For IDAU_LA0, the default is FFFFF000h; for IDAU_LAx, the default is 00000000h.</description>
              <bitRange>[31:12]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IDAU_BA6</name>
          <addressOffset>0x00000230</addressOffset>
          <size>32</size>
          <description>IDAU base address register6</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IDAU_BA6</name>
              <description>It's the base address of region 6 which can be set as non-secure.</description>
              <bitRange>[31:12]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IDAU_LA6</name>
          <addressOffset>0x00000234</addressOffset>
          <size>32</size>
          <description>IDAU top address register6</description>
          <resetValue>0xFFFFF000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IDAU_LA6</name>
              <description>It's the top address of region 6 which can be set as non-secure.
For IDAU_LA0, the default is FFFFF000h; for IDAU_LAx, the default is 00000000h.</description>
              <bitRange>[31:12]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IDAU_BA7</name>
          <addressOffset>0x00000238</addressOffset>
          <size>32</size>
          <description>IDAU base address register7</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IDAU_BA7</name>
              <description>It's the base address of region 7 which can be set as non-secure.</description>
              <bitRange>[31:12]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IDAU_LA7</name>
          <addressOffset>0x0000023C</addressOffset>
          <size>32</size>
          <description>IDAU top address register7</description>
          <resetValue>0xFFFFF000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IDAU_LA7</name>
              <description>It's the top address of region 7 which can be set as non-secure.
For IDAU_LA0, the default is FFFFF000h; for IDAU_LAx, the default is 00000000h.</description>
              <bitRange>[31:12]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IDAU_CTRL</name>
          <addressOffset>0x00000240</addressOffset>
          <size>32</size>
          <description>IDAU enable control register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>WRITE_CTRL</name>
              <description>Write permission address control register.
Bit[23]: controls entry 7.
Bit[22]: controls entry 6.
Bit[21]: controls entry 5.
Bit[20]: controls entry 4.
Bit[19]: controls entry 3.
Bit[18]: controls entry 2.
Bit[17]: controls entry 1.
Bit[16]: controls entry 0.
When the bit[x] is 1'b1, mask the address region as write forbidden attribution; when it is 1'b0, the address region is read/write attribution. 
Note: When the LOCK register is 1'b1, you cannot program this register unless system reset.</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SECURE_CTRL</name>
              <description>MPC secure address control register.
Bit[7]: controls entry 7.
Bit[6]: controls entry 6.
Bit[5]: controls entry 5.
Bit[4]: controls entry 4.
Bit[3]: controls entry 3.
Bit[2]: controls entry 2.
Bit[1]: controls entry 1.
Bit[0]: controls entry 0.
When the bit[x] is 1'b1, mask the address region as non-secure attribution; when it is 1'b0, the address region is secure attribution. 
Note: When the LOCK register is 1'b1, you cannot program this register unless system reset.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IDAU_LOCK</name>
          <addressOffset>0x00000244</addressOffset>
          <size>32</size>
          <description>IDAU lock control register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IDAU_LOCK</name>
              <description>Lock write transfer for all registers in IDAU (including lock register it self) until system reset if it is ebabled.
[0]: lock bit for all registers in IDAU 
0: disable lock
1: enable lock</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PPC1_REG</name>
          <addressOffset>0x00000400</addressOffset>
          <size>32</size>
          <description>PPC1 control register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SPORT1_I2S</name>
              <description>1: Non-secure attribution
0: Secure attribution</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPORT0_I2S</name>
              <description>1: Non-secure attribution
0: Secure attribution</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>QSPI</name>
              <description>1: Non-secure attribution
0: Secure attribution</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPIC_USERMODE</name>
              <description>1: Non-secure attribution
0: Secure attribution</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PSRAM_SPIC_USERMODE</name>
              <description>1: Non-secure attribution
0: Secure attribution</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PSRAM_PHY</name>
              <description>1: Non-secure attribution
0: Secure attribution</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI1</name>
              <description>1: Non-secure attribution
0: Secure attribution</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI0</name>
              <description>1: Non-secure attribution
0: Secure attribution</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SDIO_CFG</name>
              <description>1: Non-secure attribution
0: Secure attribution</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PPE_CFG</name>
              <description>1: Non-secure attribution
0: Secure attribution</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GDMA0_CFG</name>
              <description>1: Non-secure attribution
0: Secure attribution</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SECURE_ENGINE</name>
              <description>1: Non-secure attribution
0: Secure attribution</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BT_CFG</name>
              <description>1: Non-secure attribution
0: Secure attribution</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WIFI_CFG</name>
              <description>1: Non-secure attribution
0: Secure attribution</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PPC2_REG</name>
          <addressOffset>0x00000404</addressOffset>
          <size>32</size>
          <description>PPC2 control register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TIMER_0_7_BASIC</name>
              <description>1: Non-secure attribution
0: Secure attribution</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PMC_TIMER_0_1</name>
              <description>1: Non-secure attribution
0: Secure attribution</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DBG_TIMER</name>
              <description>1: Non-secure attribution
0: Secure attribution</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IPC</name>
              <description>1: Non-secure attribution
0: Secure attribution</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>KEY_SCAN</name>
              <description>1: Non-secure attribution
0: Secure attribution</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CAP_TOUCH</name>
              <description>1: Non-secure attribution
0: Secure attribution</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ADC_ADC_COMP</name>
              <description>1: Non-secure attribution
0: Secure attribution</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO_A_B</name>
              <description>1: Non-secure attribution
0: Secure attribution</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>UART3_LOG</name>
              <description>1: Non-secure attribution
0: Secure attribution</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>UART2_BT</name>
              <description>1: Non-secure attribution
0: Secure attribution</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>UART1</name>
              <description>1: Non-secure attribution
0: Secure attribution</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>UART0</name>
              <description>1: Non-secure attribution
0: Secure attribution</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SYSON</name>
              <description>1: Non-secure attribution
0: Secure attribution</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OTPC_CFG</name>
              <description>1: Non-secure attribution
0: Secure attribution</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PPC3_REG</name>
          <addressOffset>0x00000408</addressOffset>
          <size>32</size>
          <description>PPC3 control register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>I2C1</name>
              <description>1: Non-secure attribution
0: Secure attribution</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>I2C0</name>
              <description>1: Non-secure attribution
0: Secure attribution</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IR</name>
              <description>1: Non-secure attribution
0: Secure attribution</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PDM</name>
              <description>1: Non-secure attribution
0: Secure attribution</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LEDC</name>
              <description>1: Non-secure attribution
0: Secure attribution</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSIP</name>
              <description>1: Non-secure attribution
0: Secure attribution</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXI300</name>
              <description>1: Non-secure attribution
0: Secure attribution</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TRNG_POR1_PORT2</name>
              <description>1: Non-secure attribution
0: Secure attribution</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TIMER_8_9_PULSE_PWM_TIMER10_11</name>
              <description>1: Non-secure attribution
0: Secure attribution</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PPC_LOCK</name>
          <addressOffset>0x0000040C</addressOffset>
          <size>32</size>
          <description>PPC LOCK configure register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>LOCK</name>
              <description>PPC lock register.
When writing 1'b1 to this nit, PPC will be locked.
Note: It can not be written to 1'b0 again until system reset to prevent modification. When PPC is locked, you can not program PPC registers unless system reset.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPIC_ARB_CTRL0</name>
          <addressOffset>0x00001000</addressOffset>
          <size>32</size>
          <description>SPIC arbitration control register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SPIC_ARB_CTRL0</name>
              <description>Arbitration control register.
The arbitration can flexibly set the priority of input port. The arbitration scheme of slots uses round-robin. User can use more slots to remap input ports request and define the order of slots. If one of requests has low-priority or low-bandwidth , maybe user can allocate less slots. Otherwise, user can allocate more slots.
Each slot should be set by a port number. The port number represents a master group. The master group is shown as below:
0x0: KM4
0x1: KM0, GDMA0, WIFI, LX, SDIO
0x2: PPE
And the following shows bit field of each slots:
[3:0]: slot 0 of arbiter
[7:4]: slot 1 of arbiter
[11:8]: slot 2 of arbiter
[15:12]: slot 3 of arbiter
[19:16]: slot 4 of arbiter
[23:20]: slot 5 of arbiter
[27:24]: slot 6 of arbiter
[31:28]: slot 7 of arbiter</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPIC_ARB_CTRL1</name>
          <addressOffset>0x00001004</addressOffset>
          <size>32</size>
          <description>SPIC arbitration control register1</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SPIC_ARB_CTRL1</name>
              <description>This is extended register of SPIC_ARB_CTRL0.
[3:0]: slot 8 of arbiter
[7:4]: slot 9 of arbiter
[11:8]: slot 10 of arbiter
[15:12]: slot 11 of arbiter
[19:16]: slot 12 of arbiter
[23:20]: slot 13 of arbiter
[27:24]: slot 14 of arbiter
[31:28]: slot 15 of arbiter</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HSRAM_ARB_CTRL0</name>
          <addressOffset>0x00001008</addressOffset>
          <size>32</size>
          <description>HSRAM arbitration control register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>HSRAM_ARB_CTRL0</name>
              <description>Arbitration control register.
The arbitration can flexibly set the priority of input port. The arbitration scheme of slots uses round-robin. User can use more slots to remap input ports request and define the order of slots. If one of requests has low-priority or low-bandwidth, maybe user can allocate less slots. Otherwise, user can allocate more slots.
Each slot should be set by a port number. The port number represents a master group:
0x0: KM4
0x1: KM0, GDMA0, WIFI, LX, SDIO, SIC, OTPC
And the following shows bit field of each slots:
[3:0]: slot 0 of arbiter
[7:4]: slot 1 of arbiter
[11:8]: slot 2 of arbiter
[15:12]: slot 3 of arbiter
[19:16]: slot 4 of arbiter
[23:20]: slot 5 of arbiter
[27:24]: slot 6 of arbiter
[31:28]: slot 7 of arbiter</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HSRAM_ARB_CTRL1</name>
          <addressOffset>0x0000100C</addressOffset>
          <size>32</size>
          <description>HSRAM arbitration control register1</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>HSRAM_ARB_CTRL1</name>
              <description>This is extended register of HSRAM_ARB_CTRL0.
[3:0]: slot 8 of arbiter
[7:4]: slot 9 of arbiter
[11:8]: slot 10 of arbiter
[15:12]: slot 11 of arbiter
[19:16]: slot 12 of arbiter
[23:20]: slot 13 of arbiter
[27:24]: slot 14 of arbiter
[31:28]: slot 15 of arbiter</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HPERI_ARB_CTRL0</name>
          <addressOffset>0x00001010</addressOffset>
          <size>32</size>
          <description>HPERI arbitration control register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>HPERI_ARB_CTRL0</name>
              <description>Arbitration control register.
The arbitration can flexibly set the priority of input port. The arbitration scheme of slots uses round-robin.User can use more slots to remap input ports request and define the order of slots. If one of requests has low-priority or low-bandwidth, maybe user can allocate less slots. Otherwise, user can allocate more slots.
Each slot should be set by a port number. The port number represents a master group:
0x0: KM4
0x1: KM0
0x2: GDMA
0x3: SIC
And the following shows bit field of each slots:
[3:0]: slot 0 of arbiter
[7:4]: slot 1 of arbiter
[11:8]: slot 2 of arbiter
[15:12]: slot 3 of arbiter
[19:16]: slot 4 of arbiter
[23:20]: slot 5 of arbiter
[27:24]: slot 6 of arbiter
[31:28]: slot 7 of arbiter</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HPERI_ARB_CTRL1</name>
          <addressOffset>0x00001014</addressOffset>
          <size>32</size>
          <description>HPERI arbitration control register1</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>HPERI_ARB_CTRL1</name>
              <description>This is extended register of HPERI_ARB_CTRL0 slot.
[3:0]: slot 8 of arbiter
[7:4]: slot 9 of arbiter
[11:8]: slot 10 of arbiter
[15:12]: slot 11 of arbiter
[19:16]: slot 12 of arbiter
[23:20]: slot 13 of arbiter
[27:24]: slot 14 of arbiter
[31:28]: slot 15 of arbiter</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PSRAM_ARB_CTRL0</name>
          <addressOffset>0x00001018</addressOffset>
          <size>32</size>
          <description>PSRAM arbitration control register0</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PSRAM_ARB_CTRL0</name>
              <description>Arbitration control register.
The arbitration can flexibly set the priority of input port.The arbitration scheme of slots uses round-robin. User can use more slots to remap input ports request and define the order of slots. If one of requests has low-priority or low-bandwidth, maybe user can allocate less slots. Otherwise, user can allocate more slots.
Each slot should be set by a port number. The port number represents a master group:
0x0: KM4
0x1: KM0, GDMA0, WIFI, LX, SDIO, SIC, OTPC
0x2: PPE
And the following shows bit field of each slots:
[3:0]: slot 0 of arbiter
[7:4]: slot 1 of arbiter
[11:8]: slot 2 of arbiter
[15:12]: slot 3 of arbiter
[19:16]: slot 4 of arbiter
[23:20]: slot 5 of arbiter
[27:24]: slot 6 of arbiter
[31:28]: slot 7 of arbiter</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PSRAM_ARB_CTRL1</name>
          <addressOffset>0x0000101C</addressOffset>
          <size>32</size>
          <description>PSRAM arbitration control register1</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PSRAM_ARB_CTRL1</name>
              <description>This is extended register of PSRAM_ARB_CTRL0 slot.
[3:0]: slot 8 of arbiter
[7:4]: slot 9 of arbiter
[11:8]: slot 10 of arbiter
[15:12]: slot 11 of arbiter
[19:16]: slot 12 of arbiter
[23:20]: slot 13 of arbiter
[27:24]: slot 14 of arbiter
[31:28]: slot 15 of arbiter</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ELR_PLD0</name>
          <addressOffset>0x00001100</addressOffset>
          <size>32</size>
          <description>Error log payload register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ELR_BSTINDEX</name>
              <description>Burst index of the error request.</description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ELR_BSTLEN</name>
              <description>Burst Length of the error request.</description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ELR_BSTTYPE</name>
              <description>BurstSeq of the error request.</description>
              <bitRange>[13:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ELR_CMD</name>
              <description>CMD of the error request.
0x1: Write command
0x2: Read command</description>
              <bitRange>[10:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ELRRC</name>
              <description>Error source of the error request.
0x00: M0 secure default slave
0x01: M1 secure default slave
0x02: M2 secure default slave
0x03: M3 secure default slave
0x04: M4 secure default slave
0x05: M5 secure default slave
0x06: M6 secure default slave
0x10: S0 secure default slave
0x20: S1, S2 secure  default slave
0x21: S6 secure default slave
0x30: S3 AHB group secure default slave
0x31: S3 APB group secure default slave
0x32: S3-11 secure default slave
0x33: S3 AXI group secure default slave
0x34: S3-8, S3-9 secure default slave
0x40: S4 secure default slave
0x41: S5 secure default slave</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ELR_PLD1</name>
          <addressOffset>0x00001104</addressOffset>
          <size>32</size>
          <description>Error log payload register1</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ELR_LOCK</name>
              <description>AxLock of the error request.</description>
              <bitRange>[31:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ELR_CACHE</name>
              <description>AxCache of the error request.</description>
              <bitRange>[29:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ELR_PROT</name>
              <description>AxProt of the error request.</description>
              <bitRange>[25:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ELRIZE</name>
              <description>Size of the error request.</description>
              <bitRange>[18:16]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ELR_ID</name>
          <addressOffset>0x00001108</addressOffset>
          <size>32</size>
          <description>Error log tagid register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ELR_ID</name>
              <description>Tagid of the error request.
9'b00000????: M0 access error
9'b00010????: M1 access error
9'b0010?????: M2 access error
9'b001100???: M3 access error
9'b01110000?: M4-0 access error
9'b01000000?: M4-1 access error
9'b01010000?: M5 access error
9'b01100000?: M6 access error</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ELR_ADR0</name>
          <addressOffset>0x0000110C</addressOffset>
          <size>32</size>
          <description>Error log addrress register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ELR_ADR0</name>
              <description>Address[31:0] of the error request.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ELR_ADR1</name>
          <addressOffset>0x00001110</addressOffset>
          <size>32</size>
          <description>Error log addrress register1</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ELR_ADR1</name>
              <description>Address[63:32] of the error request.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ELR_CODE</name>
          <addressOffset>0x00001130</addressOffset>
          <size>32</size>
          <description>Error log error code register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ELR_CODE</name>
              <description>The error code of error request, if it's 0, indicates that there is no error request.                                                                                                                                          
8'h00: No error
8'h02: Secure fault  error</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ELR_INTR_CLR</name>
          <addressOffset>0x0000113C</addressOffset>
          <size>32</size>
          <description>Error log interrupt clear register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ELR_INTR_CLR</name>
              <description>Error log interrupt clear. Writing 1'b1 to the register will trigger a 1-cycle pulse interrupt clear. It has to write l'b1 to this register every time when the error excep-tion occurs.
Note that this register is write-only, the return value of reading this register is meaningless.</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>adc</name>
      <baseAddress>0x41011000</baseAddress>
      <size>0x000000BC</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x000000BC</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>REG_ADC_CONF</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description>ADC Configuration Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_enable</name>
              <description>This bit is for ADC enable control</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_cvlist_len</name>
              <description>This field defines the number of items in the ADC conversion channel list.</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_op_mod</name>
              <description>These bits selects ADC operation mode.
0: software trigger mode.
1: automatic mode
2: timer-trigger mode.
3: comparator-assist mode</description>
              <bitRange>[3:1]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_IN_TYPE</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description>ADC Input Type Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_in_type_ch10</name>
              <description>This bit reflects which kind of input type channel 10 is. Since channel 10 is a fixed internal channel.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_in_type_ch9</name>
              <description>This bit reflects which kind of input type channel 9 is. Since channel 9 is a fixed internal channel.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_in_type_ch8</name>
              <description>This bit reflects which kind of input type channel 8 is. Since channel 8 is a fixed internal channel.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_in_type_ch7</name>
              <description>This bit reflects which kind of input type channel 7 is. Since channel 7 is a fixed internal channel.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_in_type_ch6</name>
              <description>This bit reflects which kind of input type channel 6 is. Since channel 6 is a fixed single-end input channel.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_in_type_ch5</name>
              <description>This bit controls channel 5 input type. If it's set to differential types (value of this bit is 1), channel 4 should also be set to differential type since they are hardware-fixed differential pair.
0: ADC channel 5 is single-end input.
1: ADC channel 5 is differential input which is paired with channel 4.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_in_type_ch4</name>
              <description>This bit controls channel 4 input type. If it's set to differential types (value of this bit is 1), channel 5 should also be set to differential type since they are hardware-fixed differential pair.
0: ADC channel 4 is single-end input.
1: ADC channel 4 is differential input which is paired with channel 5.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_in_type_ch3</name>
              <description>This bit controls channel 3 input type. If it's set to differential types (value of this bit is 1), channel 2 should also be set to differential type since they are hardware-fixed differential pair.
0: ADC channel 3 is single-end input.
1: ADC channel 3 is differential input which is paired with channel 2.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_in_type_ch2</name>
              <description>This bit controls channel 2 input type. If it's set to differential types (value of this bit is 1), channel 3 should also be set to differential type since they are hardware-fixed differential pair.
0: ADC channel 2 is single-end input.
1: ADC channel 2 is differential input which is paired with channel 3.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_in_type_ch1</name>
              <description>This bit controls channel 1 input type. If it's set to differential types (value of this bit is 1), channel 0 should also be set to differential type since they are hardware-fixed differential pair.
0: ADC channel 1 is single-end input.
1: ADC channel 1 is differential input which is paired with channel 0.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_in_type_ch0</name>
              <description>This bit controls channel 0 input type. If it's set to differential types (value of this bit is 1), channel 1 should also be set to differential type since they are hardware-fixed differential pair.
0: ADC channel 0 is single-end input.
1: ADC channel 0 is differential input which is paired with channel 1.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_COMP_TH_CH0</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description>ADC Channel 0 Comparison Threshold Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_comp_th_h_ch0</name>
              <description>This field defines the higher threshold of channel 0 for ADC automatic comparison.</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_comp_th_l_ch0</name>
              <description>This field defines the lower threshold of channel 0 for ADC automatic comparison.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_COMP_TH_CH1</name>
          <addressOffset>0x0000000C</addressOffset>
          <size>32</size>
          <description>ADC Channel 1 Comparison Threshold Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_comp_th_h_ch1</name>
              <description>This field defines the higher threshold of channel 1 for ADC automatic comparison.</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_comp_th_l_ch1</name>
              <description>This field defines the lower threshold of channel 1 for ADC automatic comparison.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_COMP_TH_CH2</name>
          <addressOffset>0x00000010</addressOffset>
          <size>32</size>
          <description>ADC Channel 2 Comparison Threshold Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_comp_th_h_ch2</name>
              <description>This field defines the higher threshold of channel 2 for ADC automatic comparison.</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_comp_th_l_ch2</name>
              <description>This field defines the lower threshold of channel 2 for ADC automatic comparison.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_COMP_TH_CH3</name>
          <addressOffset>0x00000014</addressOffset>
          <size>32</size>
          <description>ADC Channel 3 Comparison Threshold Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_comp_th_h_ch3</name>
              <description>This field defines the higher threshold of channel 3 for ADC automatic comparison.</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_comp_th_l_ch3</name>
              <description>This field defines the lower threshold of channel 3 for ADC automatic comparison.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_COMP_TH_CH4</name>
          <addressOffset>0x00000018</addressOffset>
          <size>32</size>
          <description>ADC Channel 4 Comparison Threshold Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_comp_th_h_ch4</name>
              <description>This field defines the higher threshold of channel 4 for ADC automatic comparison.</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_comp_th_l_ch4</name>
              <description>This field defines the lower threshold of channel 4 for ADC automatic comparison.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_COMP_TH_CH5</name>
          <addressOffset>0x0000001C</addressOffset>
          <size>32</size>
          <description>ADC Channel 5 Comparison Threshold Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_comp_th_h_ch5</name>
              <description>This field defines the higher threshold of channel 5 for ADC automatic comparison.</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_comp_th_l_ch5</name>
              <description>This field defines the lower threshold of channel 5 for ADC automatic comparison.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_COMP_TH_CH6</name>
          <addressOffset>0x00000020</addressOffset>
          <size>32</size>
          <description>ADC Channel 6 Comparison Threshold Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_comp_th_h_ch6</name>
              <description>This field defines the higher threshold of channel 6 for ADC automatic comparison.</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_comp_th_l_ch6</name>
              <description>This field defines the lower threshold of channel 6 for ADC automatic comparison.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_COMP_TH_CH7</name>
          <addressOffset>0x00000024</addressOffset>
          <size>32</size>
          <description>ADC Channel 7 Comparison Threshold Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_comp_th_h_ch7</name>
              <description>This field defines the higher threshold of channel 7 for ADC automatic comparison.</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_comp_th_l_ch7</name>
              <description>This field defines the lower threshold of channel 7 for ADC automatic comparison.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_COMP_TH_CH8</name>
          <addressOffset>0x00000028</addressOffset>
          <size>32</size>
          <description>ADC Channel 8 Comparison Threshold Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_comp_th_h_ch8</name>
              <description>This field defines the higher threshold of channel 8 for ADC automatic comparison.</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_comp_th_l_ch8</name>
              <description>This field defines the lower threshold of channel 8 for ADC automatic comparison.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_COMP_TH_CH9</name>
          <addressOffset>0x0000002C</addressOffset>
          <size>32</size>
          <description>ADC Channel 9 Comparison Threshold Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_comp_th_h_ch9</name>
              <description>This field defines the higher threshold of channel 9 for ADC automatic comparison.</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_comp_th_l_ch9</name>
              <description>This field defines the lower threshold of channel 9 for ADC automatic comparison.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_COMP_TH_CH10</name>
          <addressOffset>0x00000030</addressOffset>
          <size>32</size>
          <description>ADC Channel 10 Comparison Threshold Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_comp_th_h_ch10</name>
              <description>This field defines the higher threshold of channel 10 for ADC automatic comparison.</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_comp_th_l_ch10</name>
              <description>This field defines the lower threshold of channel 10 for ADC automatic comparison.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_COMP_CTRL</name>
          <addressOffset>0x00000034</addressOffset>
          <size>32</size>
          <description>ADC Comparison Control Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_comp_ctrl_ch10</name>
              <description>This field defines ADC channel comparison criteria which would notify system by interrupt when the criterion matches. Once a criterion matches, ADC should send an interrupt signal to system if the related interrupt mask is unmask. ADC also updates comparison results in reg_adc_comp_sts.
0: When Vin &lt; bit_adc_comp_th_l_chx, comparison criterion matches.
1: When Vin &gt; bit_adc_comp_th_h_chx, comparison criterion matches.
2: When Vin &gt;= bit_adc_comp_th_l_chx and Vin &lt;= bit_adc_comp_th_h_chx, comparison criterion matches.
3: When Vin &lt; bit_adc_comp_th_l_chx or Vin &gt; bit_adc_comp_th_h_chx, comparison criterion matches.</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_comp_ctrl_ch9</name>
              <description>The function is the same as BIT_ADC_COMP_CTRL_CH10.</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_comp_ctrl_ch8</name>
              <description>The function is the same as BIT_ADC_COMP_CTRL_CH10.</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_comp_ctrl_ch7</name>
              <description>The function is the same as BIT_ADC_COMP_CTRL_CH10.</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_comp_ctrl_ch6</name>
              <description>The function is the same as BIT_ADC_COMP_CTRL_CH10.</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_comp_ctrl_ch5</name>
              <description>The function is the same as BIT_ADC_COMP_CTRL_CH10.</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_comp_ctrl_ch4</name>
              <description>The function is the same as BIT_ADC_COMP_CTRL_CH10.</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_comp_ctrl_ch3</name>
              <description>The function is the same as BIT_ADC_COMP_CTRL_CH10.</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_comp_ctrl_ch2</name>
              <description>The function is the same as BIT_ADC_COMP_CTRL_CH10.</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_comp_ctrl_ch1</name>
              <description>The function is the same as BIT_ADC_COMP_CTRL_CH10.</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_comp_ctrl_ch0</name>
              <description>The function is the same as BIT_ADC_COMP_CTRL_CH10.</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_COMP_STS</name>
          <addressOffset>0x00000038</addressOffset>
          <size>32</size>
          <description>ADC Comparison Status Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_comp_sts_ch10</name>
              <description>This field reflects the comparison result of channel 10 immediately</description>
              <bitRange>[21:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_comp_sts_ch9</name>
              <description>This field reflects the comparison result of channel 9 immediately</description>
              <bitRange>[19:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_comp_sts_ch8</name>
              <description>This field reflects the comparison result of channel 8 immediately</description>
              <bitRange>[17:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_comp_sts_ch7</name>
              <description>This field reflects the comparison result of channel 7 immediately</description>
              <bitRange>[15:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_comp_sts_ch6</name>
              <description>This field reflects the comparison result of channel 6 immediately</description>
              <bitRange>[13:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_comp_sts_ch5</name>
              <description>This field reflects the comparison result of channel 5 immediately</description>
              <bitRange>[11:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_comp_sts_ch4</name>
              <description>This field reflects the comparison result of channel 4 immediately</description>
              <bitRange>[9:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_comp_sts_ch3</name>
              <description>This field reflects the comparison result of channel 3 immediately</description>
              <bitRange>[7:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_comp_sts_ch2</name>
              <description>This field reflects the comparison result of channel 2 immediately</description>
              <bitRange>[5:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_comp_sts_ch1</name>
              <description>This field reflects the comparison result of channel 1 immediately</description>
              <bitRange>[3:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_comp_sts_ch0</name>
              <description>This field reflects the comparison result of channel 0 immediately</description>
              <bitRange>[1:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_CHSW_LIST_0</name>
          <addressOffset>0x0000003C</addressOffset>
          <size>32</size>
          <description>ADC Channel Switch List 0 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_chsw_7</name>
              <description>This field defines the number 7 channel to do a conversion when a conversion event takes place.</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_chsw_6</name>
              <description>This field defines the number 6 channel to do a conversion when a conversion event takes place.</description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_chsw_5</name>
              <description>This field defines the number 5 channel to do a conversion when a conversion event takes place.</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_chsw_4</name>
              <description>This field defines the number 4 channel to do a conversion when a conversion event takes place.</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_chsw_3</name>
              <description>This field defines the number 3 channel to do a conversion when a conversion event takes place.</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_chsw_2</name>
              <description>This field defines the number 2 channel to do a conversion when a conversion event takes place.</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_chsw_1</name>
              <description>This field defines the number 1 channel to do a conversion when a conversion event takes place.</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_chsw_0</name>
              <description>This field defines the number 0 channel to do a conversion when a conversion event takes place.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_CHSW_LIST_1</name>
          <addressOffset>0x00000040</addressOffset>
          <size>32</size>
          <description>ADC Channel Switch List 1 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_chsw_15</name>
              <description>This field defines the number 15 channel to do a conversion when a conversion event takes place.</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_chsw_14</name>
              <description>This field defines the number 14 channel to do a conversion when a conversion event takes place.</description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_chsw_13</name>
              <description>This field defines the number 13 channel to do a conversion when a conversion event takes place.</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_chsw_12</name>
              <description>This field defines the number 12 channel to do a conversion when a conversion event takes place.</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_chsw_11</name>
              <description>This field defines the number 11 channel to do a conversion when a conversion event takes place.</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_chsw_10</name>
              <description>This field defines the number 10 channel to do a conversion when a conversion event takes place.</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_chsw_9</name>
              <description>This field defines the number 9 channel to do a conversion when a conversion event takes place.</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_chsw_8</name>
              <description>This field defines the number 8 channel to do a conversion when a conversion event takes place.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_AUTO_CSW_CTRL</name>
          <addressOffset>0x00000048</addressOffset>
          <size>32</size>
          <description>ADC Automatic Channel Switch Control Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_autosw_en</name>
              <description>This bit controls the automatic channel switch enabled or disabled.
0: Disable the automatic channel switch. If an automatic channel switch is in process, writing 0 will terminate the automatic channel switch. 
1: Enable the automatic channel switch. When setting this bit, an automatic channel switch starts from the first channel in the channel switch list.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_SW_TRIG</name>
          <addressOffset>0x0000004C</addressOffset>
          <size>32</size>
          <description>ADC Software Trigger Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_sw_trig</name>
              <description>This bit controls the ADC module to do a conversion.
Every time this bit is set to 1, ADC module would switch to a new channel and do one conversion. Therefore, this bit could be used as a start-convert event which is controlled by software. Every time a conversion is done, software MUST clear this bit manually. The interval between clearing and restart this bit must exceed one sample clock period.
0: Disable the analog module and analog mux.
1: Enable the analog module and analog mux, and then start a new channel conversion.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_LAST_CH</name>
          <addressOffset>0x00000050</addressOffset>
          <size>32</size>
          <description>ADC Last Channel Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_last_ch</name>
              <description>This field reflects the last used channel.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_BUSY_STS</name>
          <addressOffset>0x00000054</addressOffset>
          <size>32</size>
          <description>ADC Busy Status Register</description>
          <resetValue>0x00000004</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_fifo_empty</name>
              <description>0: FIFO in ADC is not empty.
1: FIFO in ADC is empty.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_fifo_full_real</name>
              <description>0: FIFO in ADC is not real full.
1: FIFO in ADC is real full.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_busy_sts</name>
              <description>This bit reflects the ADC is busy or not. If the ADC is processing a conversion of a channel, this bit remains 1 which indicates it's busy. Once a conversion is done, this bit becomes 0 which indicates it's ready to do another conversion.
0: The ADC is ready.
1: The ADC is busy.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_INTR_CTRL</name>
          <addressOffset>0x00000058</addressOffset>
          <size>32</size>
          <description>ADC Interrupt Control Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_it_comp_det_mod</name>
              <description>This bit controls the interrupt bit_adc_it_comp_chx operation. Comparison criterion matching is rising edge.
0: The detection mode is level detection. When the comparison criterion is match, bit_adc_it_comp_chx will send interrupt continuously.
1: The detection mode is edge detection. When the comparison criterion is match, bit_adc_it_comp_chx will send interrupt once at the time of matching.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_it_comp_ch10_en</name>
              <description>The function is the same as BIT_ADC_IT_COMP_CH0_EN</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_it_comp_ch9_en</name>
              <description>The function is the same as BIT_ADC_IT_COMP_CH0_EN</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_it_comp_ch8_en</name>
              <description>The function is the same as BIT_ADC_IT_COMP_CH0_EN</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_it_comp_ch7_en</name>
              <description>The function is the same as BIT_ADC_IT_COMP_CH0_EN</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_it_comp_ch6_en</name>
              <description>The function is the same as BIT_ADC_IT_COMP_CH0_EN</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_it_comp_ch5_en</name>
              <description>The function is the same as BIT_ADC_IT_COMP_CH0_EN</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_it_comp_ch4_en</name>
              <description>The function is the same as BIT_ADC_IT_COMP_CH0_EN</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_it_comp_ch3_en</name>
              <description>The function is the same as BIT_ADC_IT_COMP_CH0_EN</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_it_comp_ch2_en</name>
              <description>The function is the same as BIT_ADC_IT_COMP_CH0_EN</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_it_comp_ch1_en</name>
              <description>The function is the same as BIT_ADC_IT_COMP_CH0_EN</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_it_comp_ch0_en</name>
              <description>This bit controls the interrupt is enabled or not when channel 0 comparison criterion matches.
0: This interrupt is disabled.
1: This interrupt is enabled.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_it_err_en</name>
              <description>This bit controls the interrupt is enabled or not when an error state takes place.
0: This interrupt is disabled.
1: This interrupt is enabled.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_it_dat_ovw_en</name>
              <description>This bit controls the interrupt is enabled or not when a data overwritten situation takes place.
0: This interrupt is disabled.
1: This interrupt is enabled.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_it_fifo_empty_en</name>
              <description>This bit controls the interrupt is enabled or not when a FIFO empty state takes place.
0: This interrupt is disabled.
1: This interrupt is enabled.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_it_fifo_over_en</name>
              <description>This bit controls the interrupt is enabled or not when a FIFO overflow state takes place.
0: This interrupt is disabled.
1: This interrupt is enabled.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_it_fifo_full_en</name>
              <description>This bit controls the interrupt is enabled or not when a FIFO full state takes place.
0: This interrupt is disabled.
1: This interrupt is enabled.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_it_chcv_end_en</name>
              <description>This bit controls the interrupt is enabled or not when a particular channel conversion is done. refer to reg_adc_it_chno_con.
0: This interrupt is disabled.
1: This interrupt is enabled.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_it_cv_end_en</name>
              <description>This bit controls the interrupt is enabled or not every time a conversion is done.
No matter ADC module is in what kind of operation mode. Every time a conversion is executed, ADC module would notify system if This bit is set.
0: This interrupt is disabled.
1: This interrupt is enabled.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_it_cvlist_end_en</name>
              <description>This bit controls the interrupt is enabled or not when a conversion of the last channel in the list is done.
For example, in automatic mode conversions would be executed continuously.
Every time the last channel conversion is done, which means all channel conversions in the list is done, ADC could notify system if This bit is set.
0: This interrupt is disabled.
1: This interrupt is enabled.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_INTR_RAW_STS</name>
          <addressOffset>0x0000005C</addressOffset>
          <size>32</size>
          <description>ADC Interrupt Raw Status Register</description>
          <resetValue>0x00000020</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_it_comp_ch10_raw_sts</name>
              <description></description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_comp_ch9_raw_sts</name>
              <description>merged</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_comp_ch8_raw_sts</name>
              <description>merged</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_comp_ch7_raw_sts</name>
              <description>merged</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_comp_ch6_raw_sts</name>
              <description>merged</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_comp_ch5_raw_sts</name>
              <description>merged</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_comp_ch4_raw_sts</name>
              <description>merged</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_comp_ch3_raw_sts</name>
              <description>merged</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_comp_ch2_raw_sts</name>
              <description>merged</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_comp_ch1_raw_sts</name>
              <description>merged</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_comp_ch0_raw_sts</name>
              <description>merged</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_err_raw_sts</name>
              <description>merged</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_dat_ovw_raw_sts</name>
              <description>merged</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_fifo_empty_raw_sts</name>
              <description>merged</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_fifo_over_raw_sts</name>
              <description>merged</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_fifo_full_raw_sts</name>
              <description>merged</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_chcv_end_raw_sts</name>
              <description>merged</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_cv_end_raw_sts</name>
              <description>merged</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_cvlist_end_raw_sts</name>
              <description>merged</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_INTR_STS</name>
          <addressOffset>0x00000060</addressOffset>
          <size>32</size>
          <description>ADC Interrupt Status Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_it_comp_ch10_sts</name>
              <description></description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_comp_ch9_sts</name>
              <description>merged</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_comp_ch8_sts</name>
              <description>merged</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_comp_ch7_sts</name>
              <description>merged</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_comp_ch6_sts</name>
              <description>merged</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_comp_ch5_sts</name>
              <description>merged</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_comp_ch4_sts</name>
              <description>merged</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_comp_ch3_sts</name>
              <description>merged</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_comp_ch2_sts</name>
              <description>merged</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_comp_ch1_sts</name>
              <description>merged</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_comp_ch0_sts</name>
              <description>merged</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_err_sts</name>
              <description>merged</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_dat_ovw_sts</name>
              <description>merged</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_fifo_empty_sts</name>
              <description>merged</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_fifo_over_sts</name>
              <description>merged</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_fifo_full_sts</name>
              <description>merged</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_chcv_end_sts</name>
              <description>merged</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_cv_end_sts</name>
              <description>merged</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_cvlist_end_sts</name>
              <description>merged</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_IT_CHNO_CON</name>
          <addressOffset>0x00000064</addressOffset>
          <size>32</size>
          <description>ADC Interrupt Channel Number Configuration Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_it_chno_con</name>
              <description>This field defines that ADC module should send interrupt signal to system when a conversion which of channel number is the same as this field. This register is only valid when bit_adc_it_chcv_end_en is set.
bit_adc_it_chno_con: channel number</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_FULL_LVL</name>
          <addressOffset>0x00000068</addressOffset>
          <size>32</size>
          <description>ADC FIFO Full Threshold Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_full_lvl</name>
              <description>This field defines the FIFO full entry threshold level and it's used for FIFO full interrupt. It should be set according to ADC FIFO depth.
A value of 0 sets the threshold for 1 entry, and a value of 15 sets the threshold for 16 entries.</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_EXT_TRIG_TIMER_SEL</name>
          <addressOffset>0x0000006C</addressOffset>
          <size>32</size>
          <description>ADC External Trigger Timer Select Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_ext_trig_timer_sel</name>
              <description>These three bits defines which timer channel would be used to make ADC module do a conversion.
0: Timer module 0 is used as the comparator external trigger source.
1: Timer module 1 is used as the comparator external trigger source.
..
7: Timer module 7 is used as the comparator external trigger source.</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_DATA_CH0</name>
          <addressOffset>0x00000070</addressOffset>
          <size>32</size>
          <description>ADC Channel 0 Data Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_dat_rdy_ch0</name>
              <description>This bit indicates that a conversion is done. Every time a conversion is done, this bit should be set to 1 and it would be cleared to 0 when a read operation of reg_adc_data_ch0.</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_dat_ovw_ch0</name>
              <description>This bit indicates that there is a data overwritten situation in bit_adc_data_global taking place. A data overwritten situation is that a former conversion data is NOT read before a new conversion is written to data field. It would be cleared to 0 when a read operation of reg_adc_data_ch0.
0: There is no data overwritten case.
1: There is a data overwritten case.</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_num_ch0</name>
              <description>This field contains the newest conversion data of channel 0
[19:16]: which channel in channel list the data belongs to, only valid when bit_adc_ch_unmask=1</description>
              <bitRange>[19:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_data_ch0</name>
              <description>This field contains the newest conversion data of channel 0
[15:0]: newest data</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_DATA_CH1</name>
          <addressOffset>0x00000074</addressOffset>
          <size>32</size>
          <description>ADC Channel 1 Data Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_dat_rdy_ch1</name>
              <description>This bit indicates that a conversion is done. Every time a conversion is done, this bit should be set to 1 and it would be cleared to 0 when a read operation of reg_adc_data_ch1.</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_dat_ovw_ch1</name>
              <description>This bit indicates that there is a data overwritten situation in bit_adc_data_global taking place. A data overwritten situation is that a former conversion data is NOT read before a new conversion is written to data field. It would be cleared to 0 when a read operation of reg_adc_data_ch1.
0: There is no data overwritten case.
1: There is a data overwritten case.</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_num_ch1</name>
              <description>This field contains the newest conversion data of channel 1
[19:16]: which channel in channel list the data belongs to, only valid when bit_adc_ch_unmask=1</description>
              <bitRange>[19:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_data_ch1</name>
              <description>This field contains the newest conversion data of channel 1
[15:0]: newest data</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_DATA_CH2</name>
          <addressOffset>0x00000078</addressOffset>
          <size>32</size>
          <description>ADC Channel 2 Data Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_dat_rdy_ch2</name>
              <description>This bit indicates that a conversion is done. Every time a conversion is done, this bit should be set to 1 and it would be cleared to 0 when a read operation of reg_adc_data_ch2.</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_dat_ovw_ch2</name>
              <description>This bit indicates that there is a data overwritten situation in bit_adc_data_global taking place. A data overwritten situation is that a former conversion data is NOT read before a new conversion is written to data field. It would be cleared to 0 when a read operation of reg_adc_data_ch2.
0: There is no data overwritten case.
1: There is a data overwritten case.</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_num_ch2</name>
              <description>This field contains the newest conversion data of channel 2
[19:16]: which channel in channel list the data belongs to, only valid when bit_adc_ch_unmask=1</description>
              <bitRange>[19:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_data_ch2</name>
              <description>This field contains the newest conversion data of channel 2
[15:0]: newest data</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_DATA_CH3</name>
          <addressOffset>0x0000007C</addressOffset>
          <size>32</size>
          <description>ADC Channel 3 Data Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_dat_rdy_ch3</name>
              <description>This bit indicates that a conversion is done. Every time a conversion is done, this bit should be set to 1 and it would be cleared to 0 when a read operation of reg_adc_data_ch3.</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_dat_ovw_ch3</name>
              <description>This bit indicates that there is a data overwritten situation in bit_adc_data_global taking place. A data overwritten situation is that a former conversion data is NOT read before a new conversion is written to data field. It would be cleared to 0 when a read operation of reg_adc_data_ch3.
0: There is no data overwritten case.
1: There is a data overwritten case.</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_num_ch3</name>
              <description>This field contains the newest conversion data of channel 3
[19:16]: which channel in channel list the data belongs to, only valid when bit_adc_ch_unmask=1</description>
              <bitRange>[19:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_data_ch3</name>
              <description>This field contains the newest conversion data of channel 3
[15:0]: newest data</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_DATA_CH4</name>
          <addressOffset>0x00000080</addressOffset>
          <size>32</size>
          <description>ADC Channel 4 Data Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_dat_rdy_ch4</name>
              <description>This bit indicates that a conversion is done. Every time a conversion is done, this bit should be set to 1 and it would be cleared to 0 when a read operation of reg_adc_data_ch4.</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_dat_ovw_ch4</name>
              <description>This bit indicates that there is a data overwritten situation in bit_adc_data_global taking place. A data overwritten situation is that a former conversion data is NOT read before a new conversion is written to data field. It would be cleared to 0 when a read operation of reg_adc_data_ch4.
0: There is no data overwritten case.
1: There is a data overwritten case.</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_num_ch4</name>
              <description>This field contains the newest conversion data of channel 4
[19:16]: which channel in channel list the data belongs to, only valid when bit_adc_ch_unmask=1</description>
              <bitRange>[19:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_data_ch4</name>
              <description>This field contains the newest conversion data of channel 4
[15:0]: newest data</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_DATA_CH5</name>
          <addressOffset>0x00000084</addressOffset>
          <size>32</size>
          <description>ADC Channel 5 Data Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_dat_rdy_ch5</name>
              <description>This bit indicates that a conversion is done. Every time a conversion is done, this bit should be set to 1 and it would be cleared to 0 when a read operation of reg_adc_data_ch5.</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_dat_ovw_ch5</name>
              <description>This bit indicates that there is a data overwritten situation in bit_adc_data_global taking place. A data overwritten situation is that a former conversion data is NOT read before a new conversion is written to data field. It would be cleared to 0 when a read operation of reg_adc_data_ch5.
0: There is no data overwritten case.
1: There is a data overwritten case.</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_num_ch5</name>
              <description>This field contains the newest conversion data of channel 5
[19:16]: which channel in channel list the data belongs to, only valid when bit_adc_ch_unmask=1</description>
              <bitRange>[19:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_data_ch5</name>
              <description>This field contains the newest conversion data of channel 5
[15:0]: newest data</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_DATA_CH6</name>
          <addressOffset>0x00000088</addressOffset>
          <size>32</size>
          <description>ADC Channel 6 Data Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_dat_rdy_ch6</name>
              <description>This bit indicates that a conversion is done. Every time a conversion is done, this bit should be set to 1 and it would be cleared to 0 when a read operation of reg_adc_data_ch6.</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_dat_ovw_ch6</name>
              <description>This bit indicates that there is a data overwritten situation in bit_adc_data_global taking place. A data overwritten situation is that a former conversion data is NOT read before a new conversion is written to data field. It would be cleared to 0 when a read operation of reg_adc_data_ch6.
0: There is no data overwritten case.
1: There is a data overwritten case.</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_num_ch6</name>
              <description>This field contains the newest conversion data of channel 6
[19:16]: which channel in channel list the data belongs to, only valid when bit_adc_ch_unmask=1</description>
              <bitRange>[19:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_data_ch6</name>
              <description>This field contains the newest conversion data of channel 6
[15:0]: newest data</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_DATA_CH7</name>
          <addressOffset>0x0000008C</addressOffset>
          <size>32</size>
          <description>ADC Channel 7 Data Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_dat_rdy_ch7</name>
              <description>This bit indicates that a conversion is done. Every time a conversion is done, this bit should be set to 1 and it would be cleared to 0 when a read operation of reg_adc_data_ch7.</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_dat_ovw_ch7</name>
              <description>This bit indicates that there is a data overwritten situation in bit_adc_data_global taking place. A data overwritten situation is that a former conversion data is NOT read before a new conversion is written to data field. It would be cleared to 0 when a read operation of reg_adc_data_ch7.
0: There is no data overwritten case.
1: There is a data overwritten case.</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_num_ch7</name>
              <description>This field contains the newest conversion data of channel 7
[19:16]: which channel in channel list the data belongs to, only valid when bit_adc_ch_unmask=1</description>
              <bitRange>[19:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_data_ch7</name>
              <description>This field contains the newest conversion data of channel 7
[15:0]: newest data</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_DATA_CH8</name>
          <addressOffset>0x00000090</addressOffset>
          <size>32</size>
          <description>ADC Channel 8 Data Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_dat_rdy_ch8</name>
              <description>This bit indicates that a conversion is done. Every time a conversion is done, this bit should be set to 1 and it would be cleared to 0 when a read operation of reg_adc_data_ch8.</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_dat_ovw_ch8</name>
              <description>This bit indicates that there is a data overwritten situation in bit_adc_data_global taking place. A data overwritten situation is that a former conversion data is NOT read before a new conversion is written to data field. It would be cleared to 0 when a read operation of reg_adc_data_ch8.
0: There is no data overwritten case.
1: There is a data overwritten case.</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_num_ch8</name>
              <description>This field contains the newest conversion data of channel 8
[19:16]: which channel in channel list the data belongs to, only valid when bit_adc_ch_unmask=1</description>
              <bitRange>[19:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_data_ch8</name>
              <description>This field contains the newest conversion data of channel 8
[15:0]: newest data</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_DATA_CH9</name>
          <addressOffset>0x00000094</addressOffset>
          <size>32</size>
          <description>ADC Channel 9 Data Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_dat_rdy_ch9</name>
              <description>This bit indicates that a conversion is done. Every time a conversion is done, this bit should be set to 1 and it would be cleared to 0 when a read operation of reg_adc_data_ch9.</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_dat_ovw_ch9</name>
              <description>This bit indicates that there is a data overwritten situation in bit_adc_data_global taking place. A data overwritten situation is that a former conversion data is NOT read before a new conversion is written to data field. It would be cleared to 0 when a read operation of reg_adc_data_ch9.
0: There is no data overwritten case.
1: There is a data overwritten case.</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_num_ch9</name>
              <description>This field contains the newest conversion data of channel 9
[19:16]: which channel in channel list the data belongs to, only valid when bit_adc_ch_unmask=1</description>
              <bitRange>[19:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_data_ch9</name>
              <description>This field contains the newest conversion data of channel 9
[15:0]: newest data</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_DATA_CH10</name>
          <addressOffset>0x00000098</addressOffset>
          <size>32</size>
          <description>ADC Channel 9 Data Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_dat_rdy_ch10</name>
              <description>This bit indicates that a conversion is done. Every time a conversion is done, this bit should be set to 1 and it would be cleared to 0 when a read operation of reg_adc_data_ch10.</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_dat_ovw_ch10</name>
              <description>This bit indicates that there is a data overwritten situation in bit_adc_data_global taking place. A data overwritten situation is that a former conversion data is NOT read before a new conversion is written to data field. It would be cleared to 0 when a read operation of reg_adc_data_ch10.
0: There is no data overwritten case.
1: There is a data overwritten case.</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_num_ch10</name>
              <description>This field contains the newest conversion data of channel 10
[19:16]: which channel in channel list the data belongs to, only valid when bit_adc_ch_unmask=1</description>
              <bitRange>[19:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_data_ch10</name>
              <description>This field contains the newest conversion data of channel 10
[15:0]: newest data</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_DATA_GLOBAL</name>
          <addressOffset>0x0000009C</addressOffset>
          <size>32</size>
          <description>ADC Global Data Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_dat_rdy_global</name>
              <description>This bit indicates that a conversion is done. Every time a conversion is done, this bit should be set to 1 and it would be cleared to 0 when a read operation of reg_adc_data_global</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_dat_ovw_global</name>
              <description>This bit indicates that there is a data overwritten situation in bit_adc_data_global taking place. A data overwritten situation is that a former conversion data is NOT read before a new conversion is written to data field.
0: there is no data overwritten case.
1: there is a data overwritten case.</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_ch_num_global</name>
              <description>This field contains the newest conversion data of channel in the list.
[19:16]: which channel in channel list the data belongs to, only valid when bit_adc_ch_unmask=1</description>
              <bitRange>[19:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_data_global</name>
              <description>This field contains the newest conversion data of channel in the list.
[15:0]: newest data</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_FLR</name>
          <addressOffset>0x000000A0</addressOffset>
          <size>32</size>
          <description>ADC FIFO Level Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_flr</name>
              <description>This field records the current ADC FIFO entry number.</description>
              <bitRange>[5:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_CLR_FIFO</name>
          <addressOffset>0x000000A4</addressOffset>
          <size>32</size>
          <description>ADC Clear FIFO Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_clr_fifo</name>
              <description>This bit is used to clear FIFO contents and makes it to the default status. Every time this bit is set to 1. FIFO would be cleared to the default status. Software should set this bit to 0 after FIFO is cleared.
0: No effect
1: Clear FIFO</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_CLK_DIV</name>
          <addressOffset>0x000000A8</addressOffset>
          <size>32</size>
          <description>ADC Clock Divider Register</description>
          <resetValue>0x00000003</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_dummy_chn_scnt</name>
              <description>Dummy channel time counter.
In auto mode, ADC shares the dummy channel  for Cap-Touch. This register controls the time of dummy channel, the unit is 4MHz.</description>
              <bitRange>[31:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_settle_ctc_to_adc</name>
              <description>Settle count for sample data from Cap-Touch to ADC, the unit is ADC sample clock.
0: means no need to settle</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_clk_div</name>
              <description>This field defines clock driver level of ADC module. The source clock is OSC4M.
A value of 0 is for clock divided by 4.
A value of 1 is for clock divided by 8.
A value of 2 is for clock divided by 16.
A value of 3 is for clock divided by 24.
A value of 4 is for clock divided by 32.
A value of 5 is for clock divided by 64.
A value of 6 is for clock divided by 128.</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_OVERSAMPLE</name>
          <addressOffset>0x000000AC</addressOffset>
          <size>32</size>
          <description>ADC Oversample Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_osf</name>
              <description>Oversampling right shift
000: no shift
001: shift 1-bit
010: shift 2-bit
011: shift 3-bit
100: shift 4-bit</description>
              <bitRange>[8:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_osr</name>
              <description>Oversample ratio
000: 2x  
001: 4x
010: 8x
011: 16x
100: 32x
101: 64x
110: 128x
111: 256x</description>
              <bitRange>[5:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_ov_mode</name>
              <description>Oversample mode
1: All oversampling conversions done in regular sequence
0: All oversampling conversions done in staggered sequence</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_os_en</name>
              <description>Oversample enable
1: enable
0: disable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_PWR_CTRL</name>
          <addressOffset>0x000000B0</addressOffset>
          <size>32</size>
          <description>ADC Power Control Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_dbg_en</name>
              <description>Debug port enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_dbg_sel</name>
              <description>Debug port select</description>
              <bitRange>[2:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_pwr_ctrl</name>
              <description>This field is used to power control.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_SW_TMODE</name>
          <addressOffset>0x000000B4</addressOffset>
          <size>32</size>
          <description>ADC Software Test Mode</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_sw_tmode</name>
              <description>This bit is used to change the high 4 bits in FIFO.
0: normal mode, the high 4 bits will be null or the channel number.
1: software test mode, the high 4 bits will be the counter number of sample points (loop from 0 to 15).</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_DUMMY</name>
          <addressOffset>0x000000B8</addressOffset>
          <size>32</size>
          <description>ADC Dummy Register</description>
          <resetValue>0x0000FFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>Dummy register</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>comp</name>
      <baseAddress>0x41011800</baseAddress>
      <size>0x00000058</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00000058</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>REG_COMP_REF_CH0</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description>Comparator Channel 0 Reference Voltage Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_comp_ref1_ch0</name>
              <description>This field controls the comparator channel 0 internal reference voltage 1. Vref1 is equal to (the value of bit_comp_ref1)*0.1V. Therefore, when bit_comp_ref1 is 5, Vref1 is 0.5V. Vref1 is used as high level thredshold, so user must keep Vref1 &gt;= Vref0.</description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_ref0_ch0</name>
              <description>This field controls the comparator channel 0 internal reference voltage 0. Vref0 is equal to (the value of bit_comp_ref0)*0.1V. Therefore, when bit_comp_ref0 is 5, Vref0 is 0.5V. Vref0 is used as low level thredshold, so user must keep Vref1 &gt;= Vref0.</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_COMP_REF_CH1</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description>Comparator Channel 1 Reference Voltage Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_comp_ref1_ch1</name>
              <description>This field controls the comparator channel 1 internal reference voltage 1. Vref1 is equal to (the value of bit_comp_ref1)*0.1V. Therefore, when bit_comp_ref1 is 5, Vref1 is 0.5V. Vref1 is used as high level thredshold, so user must keep Vref1 &gt;= Vref0.</description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_ref0_ch1</name>
              <description>This field controls the comparator channel 1 internal reference voltage 0. Vref0 is equal to (the value of bit_comp_ref0)*0.1V. Therefore, when bit_comp_ref0 is 5, Vref0 is 0.5V. Vref0 is used as low level thredshold, so user must keep Vref1 &gt;= Vref0.</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_COMP_REF_CH2</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description>Comparator Channel 2 Reference Voltage Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_comp_ref1_ch2</name>
              <description>This field controls the comparator channel 2 internal reference voltage 1. Vref1 is equal to (the value of bit_comp_ref1)*0.1V. Therefore, when bit_comp_ref1 is 5, Vref1 is 0.5V. Vref1 is used as high level thredshold, so user must keep Vref1 &gt;= Vref0.</description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_ref0_ch2</name>
              <description>This field controls the comparator channel 2 internal reference voltage 0. Vref0 is equal to (the value of bit_comp_ref0)*0.1V. Therefore, when bit_comp_ref0 is 5, Vref0 is 0.5V. Vref0 is used as low level thredshold, so user must keep Vref1 &gt;= Vref0.</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_COMP_REF_CH3</name>
          <addressOffset>0x0000000C</addressOffset>
          <size>32</size>
          <description>Comparator Channel 3 Reference Voltage Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_comp_ref1_ch3</name>
              <description>This field controls the comparator channel 3 internal reference voltage 1. Vref1 is equal to (the value of bit_comp_ref1)*0.1V. Therefore, when bit_comp_ref1 is 5, Vref1 is 0.5V. Vref1 is used as high level thredshold, so user must keep Vref1 &gt;= Vref0.</description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_ref0_ch3</name>
              <description>This field controls the comparator channel 3 internal reference voltage 0. Vref0 is equal to (the value of bit_comp_ref0)*0.1V. Therefore, when bit_comp_ref0 is 5, Vref0 is 0.5V. Vref0 is used as low level thredshold, so user must keep Vref1 &gt;= Vref0.</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_COMP_INTR_CTRL</name>
          <addressOffset>0x00000010</addressOffset>
          <size>32</size>
          <description>Comparator Interrupt Control Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_comp_it_det_mod</name>
              <description>This bit controls the interrupt bit_comp_wk* operation. comparison criterion matching is rising edge or not.
0: The detection mode is level detection. when the comparison criterion is match, bit_comp_wk* will send interrupt continuously.
1: The detection mode is edge detection. when the comparison criterion is match, bit_comp_wk* will send interrupt once at the 
time of matching.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_conti_vs_en</name>
              <description>At continuous mode, channel Vref hysteresis level rising interrupt. 0:disable;  1:enable</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_conti_vh_en</name>
              <description>At continuous mode, channel Vref high level rising interrupt. 0:disable;  1:enable</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_conti_vl_en</name>
              <description>At continuous mode, channel Vref low level rising interrupt. 0:disable;  1:enable</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_wk_sys_ctrl_3</name>
              <description>This field defines the criterion of when comparator channel 3 should wake up system. The comparator should send wakeup signal only when bit_comp_wk_sys_en is 1, if the criterion matches. 
0: When Vin &lt; Vref0, the comparator wakes up system. 
1: When Vin &gt;= Vref1, the comparator wakes up system. 
2: When Vin &gt; Vref0 and Vin &lt; Vref1, the comparator wakes up system.</description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_wk_sys_en_3</name>
              <description>This bit controls whether the comparator channel 3 sends wakeup signal or not when the criterion of bit_comp_wk_sys_ctrl matches. 
0: Disable comparator wakes up system. 
1: Enable comparator wakes up system.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_wk_sys_ctrl_2</name>
              <description>This field defines the criterion of when comparator channel 2 should wake up system. The comparator should send wakeup signal only when bit_comp_wk_sys_en is 1, if the criterion matches. 
0: When Vin &lt; Vref0, the comparator wakes up system. 
1: When Vin &gt;= Vref1, the comparator wakes up system. 
2: When Vin &gt; Vref0 and Vin &lt; Vref1, the comparator wakes up system.</description>
              <bitRange>[24:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_wk_sys_en_2</name>
              <description>This bit controls whether the comparator channel 2 sends wakeup signal or not when the criterion of bit_comp_wk_sys_ctrl matches. 
0: Disable comparator wakes up system. 
1: Enable comparator wakes up system.</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_wk_sys_ctrl_1</name>
              <description>This field defines the criterion of when comparator channel 1 should wake up system. The comparator should send wakeup signal only when bit_comp_wk_sys_en is 1, if the criterion matches. 
0: When Vin &lt; Vref0, the comparator wakes up system. 
1: When Vin &gt;= Vref1, the comparator wakes up system. 
2: When Vin &gt; Vref0 and Vin &lt; Vref1, the comparator wakes up system.</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_wk_sys_en_1</name>
              <description>This bit controls whether the comparator channel 1 sends wakeup signal or not when the criterion of bit_comp_wk_sys_ctrl matches. 
0: Disable comparator wakes up system. 
1: Enable comparator wakes up system.</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_wk_sys_ctrl_0</name>
              <description>This field defines the criterion of when comparator channel 0 should wake up system. The comparator should send wakeup signal only when bit_comp_wk_sys_en is 1, if the criterion matches. 
0: When Vin &lt; Vref0, the comparator wakes up system. 
1: When Vin &gt;= Vref1, the comparator wakes up system. 
2: When Vin &gt; Vref0 and Vin &lt; Vref1, the comparator wakes up system.</description>
              <bitRange>[18:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_wk_sys_en_0</name>
              <description>This bit controls whether the comparator channel 0 sends wakeup signal or not when the criterion of bit_comp_wk_sys_ctrl matches. 
0: Disable comparator wakes up system. 
1: Enable comparator wakes up system.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_wk_adc_ctrl_3</name>
              <description>This field defines the criterion of when comparator channel 3 should wake up ADC. The comparator should send wakeup signal only when bit_comp_wk_adc_en is 1, if the criterion matches. 
0: When Vin &lt; Vref0, the comparator wakes up ADC. 
1: When Vin &gt;= Vref1, the comparator wakes up ADC. 
2: When Vin &gt; Vref0 and Vin &lt; Vref1, the comparator wakes up ADC.</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_wk_adc_en_3</name>
              <description>This bit controls whether the comparator channel 3 sends wakeup signal or not when the criterion of bit_comp_wk_adc_ctrl matches. 
0: Disable comparator wakes up ADC. 
1: Enable comparator wakes up ADC.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_wk_adc_ctrl_2</name>
              <description>This field defines the criterion of when comparator channel 2 should wake up ADC. The comparator should send wakeup signal only when bit_comp_wk_adc_en is 1, if the criterion matches. 
0: When Vin &lt; Vref0, the comparator wakes up ADC. 
1: When Vin &gt;= Vref1, the comparator wakes up ADC. 
2: When Vin &gt; Vref0 and Vin &lt; Vref1, the comparator wakes up ADC.</description>
              <bitRange>[8:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_wk_adc_en_2</name>
              <description>This bit controls whether the comparator channel 2 sends wakeup signal or not when the criterion of bit_comp_wk_adc_ctrl matches. 
0: Disable comparator wakes up ADC. 
1: Enable comparator wakes up ADC.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_wk_adc_ctrl_1</name>
              <description>This field defines the criterion of when comparator channel 1 should wake up ADC. The comparator should send wakeup signal only when bit_comp_wk_adc_en is 1, if the criterion matches. 
0: When Vin &lt; Vref0, the comparator wakes up ADC. 
1: When Vin &gt;= Vref1, the comparator wakes up ADC. 
2: When Vin &gt; Vref0 and Vin &lt; Vref1, the comparator wakes up ADC.</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_wk_adc_en_1</name>
              <description>This bit controls whether the comparator channel 1 sends wakeup signal or not when the criterion of bit_comp_wk_adc_ctrl matches. 
0: Disable comparator wakes up ADC. 
1: Enable comparator wakes up ADC.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_wk_adc_ctrl_0</name>
              <description>This field defines the criterion of when comparator channel 0 should wake up ADC. The comparator should send wakeup signal only when bit_comp_wk_adc_en is 1, if the criterion matches. 
0: When Vin &lt; Vref0, the comparator wakes up ADC. 
1: When Vin &gt;= Vref1, the comparator wakes up ADC. 
2: When Vin &gt; Vref0 and Vin &lt; Vref1, the comparator wakes up ADC.</description>
              <bitRange>[2:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_wk_adc_en_0</name>
              <description>This bit controls whether the comparator channel 0 sends wakeup signal or not when the criterion of bit_comp_wk_adc_ctrl matches. 
0: Disable comparator wakes up ADC. 
1: Enable comparator wakes up ADC.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_COMP_WK_STS</name>
          <addressOffset>0x00000014</addressOffset>
          <size>32</size>
          <description>Comparator Wakeup ADC/SYS Status Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_comp_conti_vs_sts</name>
              <description>At continuous mode, channel Vref hysteresis level rising interrupt status</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_comp_conti_vh_sts</name>
              <description>At continuous mode, channel Vref high level rising interrupt status</description>
              <bitRange>[29:29]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_comp_conti_vl_sts</name>
              <description>At continuous mode, channel Vref low level rising interrupt status</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_comp_wk_sys_sts_3</name>
              <description>Channel 3 system wakeup status</description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_comp_wk_sys_sts_2</name>
              <description>Channel 2 system wakeup status</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_comp_wk_sys_sts_1</name>
              <description>Channel 1 system wakeup status</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_comp_wk_sys_sts_0</name>
              <description>Channel 0 system wakeup status</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_comp_wk_adc_sts_3</name>
              <description>Channel 3 ADC wakeup status</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_comp_wk_adc_sts_2</name>
              <description>Channel 2 ADC wakeup status</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_comp_wk_adc_sts_1</name>
              <description>Channel 1 ADC wakeup status</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_comp_wk_adc_sts_0</name>
              <description>Channel 0 ADC wakeup status</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_COMP_WK_STS_RAW</name>
          <addressOffset>0x00000018</addressOffset>
          <size>32</size>
          <description>Comparator Wakeup Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_comp_conti_vs_raw</name>
              <description>At continuous mode, channel Vref hysteresis level rising interrupt status raw</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_comp_conti_vh_raw</name>
              <description>At continuous mode, channel Vref high level rising interrupt status raw</description>
              <bitRange>[29:29]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_comp_conti_vl_raw</name>
              <description>At continuous mode, channel Vref low level rising interrupt status raw</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>sys_wake_3</name>
              <description>Channle 3 system wakeup status raw</description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>sys_wake_2</name>
              <description>Channel 2 system wakeup status raw</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>sys_wake_1</name>
              <description>Channle 1 system wakeup status raw</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>sys_wake_0</name>
              <description>Channle 0 system wakeup status raw</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>adc_wake_3_raw</name>
              <description>Channle 3 ADC wakeup status raw</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>adc_wake_2_raw</name>
              <description>Channel 2 ADC wakeup status raw</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>adc_wake_1_raw</name>
              <description>Channle 1 ADC wakeup status raw</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>adc_wake_0_raw</name>
              <description>Channle 0 ADC wakeup status raw</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_COMP_CHSW_LIST</name>
          <addressOffset>0x0000001C</addressOffset>
          <size>32</size>
          <description>Comparator Channel Switch List Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_comp_chsw_3</name>
              <description>This field defines the channel 3 to do a comparison when the start-compare event takes place.</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_chsw_2</name>
              <description>This field defines the channel 2 to do a comparison when the start-compare event takes place.</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_chsw_1</name>
              <description>This field defines the channel 1 to do a comparison when the start-compare event takes place.</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_chsw_0</name>
              <description>This field defines the channel 0 to do a comparison when the start-compare event takes place.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_COMP_LAST_CH</name>
          <addressOffset>0x00000020</addressOffset>
          <size>32</size>
          <description>Comparator Last Channel Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_comp_last_ch</name>
              <description>Last channel used</description>
              <bitRange>[1:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_COMP_BUSY_STS</name>
          <addressOffset>0x00000024</addressOffset>
          <size>32</size>
          <description>Comparator Busy Status Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_comp_busy_sts</name>
              <description>This bit reflects whether the comparatos is busy or not. 
0: The comparatos is ready. 
1: The comparator is busy.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_COMP_CH_STS</name>
          <addressOffset>0x00000028</addressOffset>
          <size>32</size>
          <description>Comparator Channel Status Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_comp_ch_sts_3</name>
              <description>This field reflects the channel 3 comparison result.
0: When Vin &lt; Vref0. 
1: When Vin &gt;= Vref1. 
2: When Vin &gt; Vref0 and Vin &lt; Vref1.</description>
              <bitRange>[7:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_comp_ch_sts_2</name>
              <description>This field reflects the channel 2 comparison result.
0: When Vin &lt; Vref0. 
1: When Vin &gt;= Vref1. 
2: When Vin &gt; Vref0 and Vin &lt; Vref1.</description>
              <bitRange>[5:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_comp_ch_sts_1</name>
              <description>This field reflects the channel 1 comparison result.
0: When Vin &lt; Vref0. 
1: When Vin &gt;= Vref1. 
2: When Vin &gt; Vref0 and Vin &lt; Vref1.</description>
              <bitRange>[3:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_comp_ch_sts_0</name>
              <description>This field reflects the channel 0 comparison result.
0: When Vin &lt; Vref0. 
1: When Vin &gt;= Vref1. 
2: When Vin &gt; Vref0 and Vin &lt; Vref1.</description>
              <bitRange>[1:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_COMP_AUTO_SHUT</name>
          <addressOffset>0x0000002C</addressOffset>
          <size>32</size>
          <description>Comparator Automatic Shut Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_comp_auto_shut</name>
              <description>This bit controls the comparator to disable the analog module and mux automatically or not after the analog conversion is done. 
0: The analog module and mux will NOT be disabled. 
1: The analog module and mux will be disabled automatically after the analog conversion is done.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_COMP_EXT_TRIG_CTRL</name>
          <addressOffset>0x00000030</addressOffset>
          <size>32</size>
          <description>Comparator External Trigger Control Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_comp_ext_wk_timer</name>
              <description>This bit controls the external trigger source of general timer enabled or not. If it's enabled, the comparator would execute comparison process when the timer event sends to comparator module. 
0: Disable external timer trigger. 
1: Enable external timer trigger.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_COMP_EXT_TRIG_TIMER_SEL</name>
          <addressOffset>0x00000034</addressOffset>
          <size>32</size>
          <description>Comparator External Trigger Timer Select Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_comp_ext_wk_timer_sel</name>
              <description>This field defines which timer channel would be used to wake up the comparator. 
0: timer module 0 is used as the comparator external trigger source. 
1:timer module 1 is used as the comparator external trigger source. ...so on... 
7:timer module 7 is used as the comparator external trigger source.</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_COMP_RST_LIST</name>
          <addressOffset>0x00000038</addressOffset>
          <size>32</size>
          <description>Comparator Reset Channel List Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_comp_rst_list</name>
              <description>This bit controls to reset the channel switch to default state or not. Once this bit is set, the auto/manual channel switch goes to the first channel as a default state. 0: Do Not reset conversion list to default state. 1:Reset conversion list to default state.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_COMP_AUTOSW_EN</name>
          <addressOffset>0x0000003C</addressOffset>
          <size>32</size>
          <description>Comparator Automatic Channel Switch Enable Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_comp_autosw_en</name>
              <description>This bit controls the automatic channel switch enabled or disabled. 
0: Disable the automatic channel switch. If an automatic channel switch is in process, writing 0 will terminate the automatic channel switch. 
1: Enable the automatic channel switch. When setting this bit, an automatic channel switch starts from the first channel in the channel switch list.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_COMP_EN_TRIG</name>
          <addressOffset>0x00000040</addressOffset>
          <size>32</size>
          <description>Comparator Enable Trigger Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>comp_dbg_en</name>
              <description>The comparator IP debug port enable.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_en_trig</name>
              <description>This bit controls the analog module and the analog mux of comparator to be enabled or not. Every time this bit is written, the comparator switches to a new channel and does one comparison. After this, it shuts down the analog module according to REG_COMP_AUTO_SHUT. Therefore, this bit can be used as a start-compare event which is controlled by software. Every time a comparison is done, software must clear this bit manually.
0: Disable the analog module and analog mux.
1: Enable the analog module and analog mux, then start a new channel comparison.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_enable</name>
              <description>The comparator IP internal enable.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_COMP_CTRL_CNT</name>
          <addressOffset>0x00000044</addressOffset>
          <size>32</size>
          <description>Comparator External Wake Shut Count Register</description>
          <resetValue>0xDCDC012C</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_comp_data_valid_cnt</name>
              <description>This field defines how long the comparator analog module data is valid for digital module after analog module works. It's about 55us.</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_chsw_cnt</name>
              <description>This field defines how long the channel switch can jump to next channel at automatic channel switch mode. It's about 55us.</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_ext_wk_shut_cnt</name>
              <description>This field defines how long to disable comparator analog module when an external trigger event is sent to the comparator. The count must include the comparator response time to get a correct compare result.It's about 75us.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_COMP_CHSW_TIM_DIS</name>
          <addressOffset>0x00000048</addressOffset>
          <size>32</size>
          <description>Comparator Channel Switch Time Disable Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_comp_ch30swtime_dis</name>
              <description>This field defines whether disable the channel switch time(bit_comp_chsw_cnt) from channel list 3 to 0, only valid in auto mode</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_ch23swtime_dis</name>
              <description>This field defines whether disable the channel switch time(bit_comp_chsw_cnt) from channel list 2 to 3, only valid in auto mode</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_ch12swtime_dis</name>
              <description>This field defines whether disable the channel switch time(bit_comp_chsw_cnt) from channel list 1 to 2, only valid in auto mode</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_ch01swtime_dis</name>
              <description>This field defines whether disable the channel switch time(bit_comp_chsw_cnt) from channel list 0 to 1, only valid in auto mode</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_COMP_CONTINUOUS_CTRL_0</name>
          <addressOffset>0x0000004C</addressOffset>
          <size>32</size>
          <description>Comparator Continuous Control Register 0</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_comp_hyst_en</name>
              <description>enable comparator hysteresis circuit function.
hysteresis circuit function can only take effect in continuous function.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_continuous_en</name>
              <description>enable comparator continuous sample function.
continuous sample function can only take effect in autoswitch mode with autoshut is disabled, and 4 channels in list are must configured into same channel</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_zcd_sel</name>
              <description>select output ZCD signals source:
00: none ; 01: comp out Vref1; 10: comp out Vref0; 11: comp hysteresis</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_vs_dbc_cnt</name>
              <description>hysteresis debounce counter for ZCD</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_COMP_CONTINUOUS_CTRL_1</name>
          <addressOffset>0x00000050</addressOffset>
          <size>32</size>
          <description>Comparator Continuous Control Register 1</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_comp_vh_dbc_cnt</name>
              <description>Vref high level debounce counter for ZCD</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_vl_dbc_cnt</name>
              <description>Vref low level debounce counter for ZCD</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_COMP_DUMMY</name>
          <addressOffset>0x00000054</addressOffset>
          <size>32</size>
          <description>Comparator Dummy Register</description>
          <resetValue>0x0000FFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>dummy register</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>Cap-Touch</name>
      <baseAddress>0x41012000</baseAddress>
      <size>0x00000214</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00000214</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>CTC_CTRL</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description>Cap-Touch Control Register</description>
          <resetValue>0x00000100</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>baseline_ini</name>
              <description>1: Baseline initial function enable, HW will clear this bit to "0" after baseline initial</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>debounce_time</name>
              <description>2'b00: 2 times
2'b01: 3 times
2'b10: 4 times
2'b11: 5 times</description>
              <bitRange>[6:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>debounce_en</name>
              <description>0: Disable
1: Enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ct_enable</name>
              <description>0: CTC disable
1: CTC enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCAN_PERIOD</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description>Scan Parameters Register</description>
          <resetValue>0x0006003C</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>sample_ave_ctrl</name>
              <description>ADC sampled number for average function
average number=2^(sample_ave_ctrl+2)</description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sleep_time_cnt</name>
              <description>Code: 0~4095 (0~0xFFF), unit is 1.024kHz cycle (1/32 32.768kHz).
When this register is set to 0 , HW will scan continuously and have no sleep time. Recommend value: 60~480ms</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ETC_CTRL</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description>Environment Tracking Control Register</description>
          <resetValue>0x00001204</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>baseline_upd_step</name>
              <description>Baseline update step for all channels</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>baseline_wt_factor</name>
              <description>Baseline update weight factor (ETC_factor_th) for all channels
ETC_factor_th=2^baseline_wt_factor</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>etc_scan_interval</name>
              <description>ETC update interval between scan period (sleep time) for all channels
Interval=(etc_scan_interval+1)*scan_period</description>
              <bitRange>[7:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>etc_func_ctrl</name>
              <description>Environmental cap tracking calibration function
0: Disable
1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SNR_INF</name>
          <addressOffset>0x0000000C</addressOffset>
          <size>32</size>
          <description>Signal Noise Ratio Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>snr_upd_always</name>
              <description>1: Update SNR info no matter touch or not (used only in debug function)</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>snr_noise_data</name>
              <description>Noise peak to peak signal raw data for SNR monitor</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>snr_touch_data</name>
              <description>Raw data of touch (signal-baseline) for SNR monitor</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DEBUG_MODE_CTRL</name>
          <addressOffset>0x00000010</addressOffset>
          <size>32</size>
          <description>Debug and Channel Swith Mode Register</description>
          <resetValue>0x00000010</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ch_ctrl</name>
              <description>Scan channel control
000: channel 0
001: channel 1
010: channel 2
011: channel 3</description>
              <bitRange>[7:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch_switch_ctrl</name>
              <description>Scan channel switch control
0: Auto switch function disable (manual switch by ch_ctrl)
1: Auto switch to next channel (channel 0 -&gt; channel 3 -&gt; channel 0)</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>continue_sample_en</name>
              <description>Continue sample one channel mode enable, only take effect in debug mode
0: Disable
1: Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>debug_en</name>
              <description>Debug mode enable
0: Disable
1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RAW_CODE_FIFO_STATUS</name>
          <addressOffset>0x00000014</addressOffset>
          <size>32</size>
          <description>FIFO Status Register</description>
          <resetValue>0x00000002</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>afifo_clear</name>
              <description>Clear the FIFO data</description>
              <bitRange>[16:16]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>afifo_full_lvl</name>
              <description>User defines the full level for a FIFO, the valid value is from 0 to 63</description>
              <bitRange>[15:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>afifo_valid_cnt</name>
              <description>Raw code FIFO valid count (push unit number which can be read)</description>
              <bitRange>[9:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>afifo_over_lvl</name>
              <description>0: Raw code FIFO not over level
1: Raw code FIFO over level</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>afifo_empty</name>
              <description>0: Raw code FIFO not empty
1: Raw code FIFO empty</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>afifo_full</name>
              <description>0: Raw code FIFO not oveflow (not full)
1: Raw code FIFO overflow (full)</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RAW_CODE_FIFO_READ</name>
          <addressOffset>0x00000018</addressOffset>
          <size>32</size>
          <description>FIFO Read Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>afifo_rd_data_vld</name>
              <description>Read data from raw code FIFO valid</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>afifo_rd_ch_num</name>
              <description>Read data from raw code FIFO
[15:12] : channel number</description>
              <bitRange>[15:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>afifo_rd_data</name>
              <description>Read data from raw code FIFO
[11:0] : data</description>
              <bitRange>[11:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INTERRUPT_ENABLE</name>
          <addressOffset>0x00000020</addressOffset>
          <size>32</size>
          <description>Interrupt Enable Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ctc_brk_by_adc_intr_en</name>
              <description>Cap-Touch breaked by ADC enable</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>afifo_overlvl_intr_en</name>
              <description>Raw code FIFO over level enable</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>over_n_noise_th_intr_en</name>
              <description>Negative noise threshold overflow enable</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>afifo_overflow_intr_en</name>
              <description>Raw code FIFO overflow enable</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>over_p_noise_th_intr_en</name>
              <description>Positive noise threshold overflow enable</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>touch_release_intr_en</name>
              <description>Channelx single touch release enable, x is 0~3</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>touch_press_intr_en</name>
              <description>Channelx single touch press enable, x is 0~3</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INTERRUPT_STATUS</name>
          <addressOffset>0x00000024</addressOffset>
          <size>32</size>
          <description>interrupt status register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ctc_brk_by_adc_intr</name>
              <description>Cap-Touch breaked by adc interrupt</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>afifo_overlvl_intr</name>
              <description>Raw code FIFO over level interrupt</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>over_n_noise_th_intr</name>
              <description>Negative noise threshold overflow interrupt</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>afifo_overflow_intr</name>
              <description>Raw code FIFO overflow interrupt</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>over_p_noise_th_intr</name>
              <description>Positive noise threshold overflow interrupt</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>touch_release_intr</name>
              <description>Channelx single touch release interrupt, x is 0~3</description>
              <bitRange>[11:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>touch_press_intr</name>
              <description>Channelx single touch press interrupt, x is 0~3</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RAW_INTERRUPT_STATUS</name>
          <addressOffset>0x00000028</addressOffset>
          <size>32</size>
          <description>Raw Interrupt Status Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ctc_brk_by_adc</name>
              <description>Cap-Touch breaked by ADC raw interrupt</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>afifo_overlvl</name>
              <description>Raw code FIFO over level raw interrupt</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>over_n_noise_th</name>
              <description>Negative noise threshold overflow raw interrupt</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>afifo_overflow</name>
              <description>Raw code FIFO overflow raw interrupt</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>over_p_noise_th</name>
              <description>Positive noise threshold overflow raw interrupt</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>touch_release</name>
              <description>Channelx single touch release raw interrupt, x is 0~3</description>
              <bitRange>[11:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>touch_press</name>
              <description>Channelx single touch press raw interrupt, x is 0~3</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INTERRUPT_ALL_CLR</name>
          <addressOffset>0x00000030</addressOffset>
          <size>32</size>
          <description>Interrupt All Clear Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>intr_all_clr</name>
              <description>Write "1" to this register to clear the combined interrupts, all individual interrupts, interrupt status register and raw interrupt status register.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INTERRUPT_STATUS_CLR</name>
          <addressOffset>0x00000034</addressOffset>
          <size>32</size>
          <description>Interrupt Clear Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ctc_brk_by_adc_clr</name>
              <description>Clear Cap-Touch breaked by adc raw interrupt and related register</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>afifo_overlvl_clr</name>
              <description>Clear raw code FIFO over level raw interrupt and related register</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>over_n_noise_th_clr</name>
              <description>Clear negative noise threshold overflow interrupt and related register</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>afifo_overflow_clr</name>
              <description>Clear raw code FIFO overflow interrupt and related register</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>over_p_noise_th_clr</name>
              <description>Clear positive noise threshold overflow interrupt and related register</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>touch_release_clr</name>
              <description>Clear channelx single touch release interrupt and related register</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>touch_press_clr</name>
              <description>Clear channelx single touch press interrupt and related register</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DEBUG_SEL</name>
          <addressOffset>0x00000040</addressOffset>
          <size>32</size>
          <description>Debug Select Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dbg_sel</name>
              <description>Debug information selection
0: dbg_clkrst
1: dbg_apbslv
2: dbg_ctrl
3: dbg_decision
4: dbg_adc_arb
Others: dbg_clkrst</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DEBUG_PORT</name>
          <addressOffset>0x00000044</addressOffset>
          <size>32</size>
          <description>Debug Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dbg_port</name>
              <description>Debug port output value, depending on dbg_sel value</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ECO_USE0</name>
          <addressOffset>0x00000048</addressOffset>
          <size>32</size>
          <description>ECO USE0 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eco_use0</name>
              <description>For ECO use</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ECO_USE1</name>
          <addressOffset>0x0000004C</addressOffset>
          <size>32</size>
          <description>ECO USE1 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eco_use1</name>
              <description>For ECO use</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CTC_COMP_VERSION</name>
          <addressOffset>0x00000050</addressOffset>
          <size>32</size>
          <description>Version Register</description>
          <resetValue>0x20180123</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>comp_version</name>
              <description>CTC version number</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CH0_CTRL</name>
          <addressOffset>0x00000100</addressOffset>
          <size>32</size>
          <description>Channel 0 Control Register</description>
          <resetValue>0x00640000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ch0_d_touch_th</name>
              <description>Difference threshold data of touch judgement for channel 0.
It needs to be configured during development (0x0~0xFFF) (0~4095). 
Init number=0x1E
Recommend data=80%*(signal-baseline)</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch0_baseline</name>
              <description>Digital baseline data of channel 0.
Init number=0x0
It can be initialed by HW when baseline initial function enabled, and can be updated automatically by HW when ETC function enabled.
It could be configured by manual tuning.</description>
              <bitRange>[15:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch0_en</name>
              <description>Cap sensor activity control of channel 0
0: Disable
1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CH0_NOISE_TH</name>
          <addressOffset>0x00000104</addressOffset>
          <size>32</size>
          <description>Channel 0 Noise Threshold Register</description>
          <resetValue>0x00280028</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ch0_n_ent</name>
              <description>The environmental negative noise threshold: the negative maximum capacitance change of raw data that is still considered an environment change.</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch0_p_ent</name>
              <description>The environmental positive noise threshold: the positive maximum capacitance change of raw data that is still considered an environment change.</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CH0_MBIAS_ATH</name>
          <addressOffset>0x00000108</addressOffset>
          <size>32</size>
          <description>Channel 0 Mbias</description>
          <resetValue>0x00000020</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ch0_a_touch_th</name>
              <description>Absolute threshold data of touch judgement for channel 0.
It can be updated by HW when baseline initial function or ETC function enabled, a_touch_th=baseline-d_touch_th, manual tuning when ETC disabled (0x0~0xFFF).
Recommended data=80%*signal</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch0_mbias</name>
              <description>Touch mbias current [7:0] 32u/16u/8u/4u/2u/1u/0.5u/0.25u for channel 0</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CH0_DATA_INF</name>
          <addressOffset>0x0000010C</addressOffset>
          <size>32</size>
          <description>Channel 0 Dtouch Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ch0_diff_data_polarity</name>
              <description>Polarity of ch0_diff_data
0: ch0_data_ave&lt;baseline
1: ch0_data_ave&gt;=baseline</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch0_diff_data</name>
              <description>Difference digital data of channel0 between ch0_data_ave and baseline</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch0_data_ave</name>
              <description>Average of channel 0 raw code</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CH1_CTRL</name>
          <addressOffset>0x00000110</addressOffset>
          <size>32</size>
          <description>Channel 0 Control Register</description>
          <resetValue>0x00640000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ch1_d_touch_th</name>
              <description>Difference threshold data of touch judgement for channel 1.
It needs to be configured during development (0x0~0xFFF) (0~4095). 
Init number=0x1E
Recommend data=80%*(signal-baseline)</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch1_baseline</name>
              <description>Digital baseline data of channel 1.
Init number=0x0
It can be initialed by HW when baseline initial function enabled, and can be updated automatically by HW when ETC function enabled.
It could be configured by manual tuning.</description>
              <bitRange>[15:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch1_en</name>
              <description>Cap sensor activity control of channel 1
0: Disable
1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CH1_NOISE_TH</name>
          <addressOffset>0x00000114</addressOffset>
          <size>32</size>
          <description>Channel 1 Noise Threshold Register</description>
          <resetValue>0x00280028</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ch1_n_ent</name>
              <description>The environmental negative noise threshold: the negative maximum capacitance change of raw data that is still considered an environment change.</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch1_p_ent</name>
              <description>The environmental positive noise threshold: the positive maximum capacitance change of raw data that is still considered an environment change.</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CH1_MBIAS_ATH</name>
          <addressOffset>0x00000118</addressOffset>
          <size>32</size>
          <description>Channel 1 Mbias</description>
          <resetValue>0x00000020</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ch1_a_touch_th</name>
              <description>Absolute threshold data of touch judgement for channel 1.
It can be updated by HW when baseline initial function or ETC function enabled, a_touch_th=baseline-d_touch_th, manual tuning when ETC disabled (0x0~0xFFF).
Recommended data=80%*signal</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch1_mbias</name>
              <description>Touch mbias current [7:0] 32u/16u/8u/4u/2u/1u/0.5u/0.25u for channel 1</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CH1_DATA_INF</name>
          <addressOffset>0x0000011C</addressOffset>
          <size>32</size>
          <description>Channel 1 Dtouch Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ch1_diff_data_polarity</name>
              <description>Polarity of ch1_diff_data
0: ch1_data_ave&lt;baseline
1: ch1_data_ave&gt;=baseline</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch1_diff_data</name>
              <description>Difference digital data of channel1 between ch1_data_ave and baseline</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch1_data_ave</name>
              <description>Average of channel 1 raw code</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CH2_CTRL</name>
          <addressOffset>0x00000120</addressOffset>
          <size>32</size>
          <description>Channel 2 Control Register</description>
          <resetValue>0x00640000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ch2_d_touch_th</name>
              <description>Difference threshold data of touch judgement for channel 2.
It needs to be configured during development (0x0~0xFFF) (0~4095). 
Init number=0x1E
Recommend data=80%*(signal-baseline)</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch2_baseline</name>
              <description>Digital baseline data of channel 2.
Init number=0x0
It can be initialed by HW when baseline initial function enabled, and can be updated automatically by HW when ETC function enabled.
It could be configured by manual tuning.</description>
              <bitRange>[15:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch2_en</name>
              <description>Cap sensor activity control of channel 2
0: Disable
1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CH2_NOISE_TH</name>
          <addressOffset>0x00000124</addressOffset>
          <size>32</size>
          <description>Channel 2 Noise Threshold Register</description>
          <resetValue>0x00280028</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ch2_n_ent</name>
              <description>The environmental negative noise threshold: the negative maximum capacitance change of raw data that is still considered an environment change.</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch2_p_ent</name>
              <description>The environmental positive noise threshold: the positive maximum capacitance change of raw data that is still considered an environment change.</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CH2_MBIAS_ATH</name>
          <addressOffset>0x00000128</addressOffset>
          <size>32</size>
          <description>Channel 2 Mbias</description>
          <resetValue>0x00000020</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ch2_a_touch_th</name>
              <description>Absolute threshold data of touch judgement for channel 2.
It can be updated by HW when baseline initial function or ETC function enabled, a_touch_th=baseline-d_touch_th, manual tuning when ETC disabled (0x0~0xFFF).
Recommended data=80%*signal</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch2_mbias</name>
              <description>Touch mbias current [7:0] 32u/16u/8u/4u/2u/1u/0.5u/0.25u for channel 2</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CH2_DATA_INF</name>
          <addressOffset>0x0000012C</addressOffset>
          <size>32</size>
          <description>Channel 2 Dtouch Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ch2_diff_data_polarity</name>
              <description>Polarity of ch2_diff_data
0: ch2_data_ave&lt;baseline
1: ch2_data_ave&gt;=baseline</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch2_diff_data</name>
              <description>Difference digital data of channel2 between ch2_data_ave and baseline</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch2_data_ave</name>
              <description>Average of channel 2 raw code</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CH3_CTRL</name>
          <addressOffset>0x00000130</addressOffset>
          <size>32</size>
          <description>Channel 3 Control Register</description>
          <resetValue>0x00640000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ch3_d_touch_th</name>
              <description>Difference threshold data of touch judgement for channel 3.
It needs to be configured during development (0x0~0xFFF) (0~4095). 
Init number=0x1E
Recommend data=80%*(signal-baseline)</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch3_baseline</name>
              <description>Digital baseline data of channel 3.
Init number=0x0
It can be initialed by HW when baseline initial function enabled, and can be updated automatically by HW when ETC function enabled.
It could be configured by manual tuning.</description>
              <bitRange>[15:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch3_en</name>
              <description>Cap sensor activity control of channel 3
0: Disable
1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CH3_NOISE_TH</name>
          <addressOffset>0x00000134</addressOffset>
          <size>32</size>
          <description>Channel 3 Noise Threshold Register</description>
          <resetValue>0x00280028</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ch3_n_ent</name>
              <description>The environmental negative noise threshold: the negative maximum capacitance change of raw data that is still considered an environment change.</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch3_p_ent</name>
              <description>The environmental positive noise threshold: the positive maximum capacitance change of raw data that is still considered an environment change.</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CH3_MBIAS_ATH</name>
          <addressOffset>0x00000138</addressOffset>
          <size>32</size>
          <description>Channel 3 Mbias</description>
          <resetValue>0x00000020</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ch3_a_touch_th</name>
              <description>Absolute threshold data of touch judgement for channel 3.
It can be updated by HW when baseline initial function or ETC function enabled, a_touch_th=baseline-d_touch_th, manual tuning when ETC disabled (0x0~0xFFF).
Recommended data=80%*signal</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch3_mbias</name>
              <description>Touch mbias current [7:0] 32u/16u/8u/4u/2u/1u/0.5u/0.25u for channel 3</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CH3_DATA_INF</name>
          <addressOffset>0x0000013C</addressOffset>
          <size>32</size>
          <description>Channel 3 Dtouch Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ch3_diff_data_polarity</name>
              <description>Polarity of ch3_diff_data
0: ch3_data_ave&lt;baseline
1: ch3_data_ave&gt;=baseline</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch3_diff_data</name>
              <description>Difference digital data of channel3 between ch3_data_ave and baseline</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch3_data_ave</name>
              <description>Average of channel 3 raw code</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CTC_SAMPLE_CTRL</name>
          <addressOffset>0x00000200</addressOffset>
          <size>32</size>
          <description>Cap-Touch Sample Control Register</description>
          <resetValue>0x00000004</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>settle_cnt</name>
              <description>Settle count for sample data from ADC to Cap-Touch, the unit is sample clock.
0 means no need to settle</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ctc_clk_div</name>
              <description>This field defines clock driver level of ADC module. The source clock is OSC4M.
A value of 0 is for clock divided by 4.
A value of 1 is for clock divided by 8.
A value of 2 is for clock divided by 16.
A value of 3 is for clock divided by 24.
A value of 4 is for clock divided by 32.
A value of 5 is for clock divided by 64.
A value of 6 is for clock divided by 128.</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CTC_HW_TestMode</name>
          <addressOffset>0x00000204</addressOffset>
          <size>32</size>
          <description>Cap-Touch_Hardware_Test_Mode  Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>hw_clock_tie_value</name>
              <description>this value is the clock tied value in Cap-Touch hardware test mode</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>hw_tmode_en</name>
              <description>0: hardware test mode is disabled.
1: hardware test mode is enabled. The clock sent to AUX Analog from Cap-Touch is tied to fixed value, which depentS on hw_clock_tie_value (410h[1]).</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CTC_FILTER_CTRL0</name>
          <addressOffset>0x00000208</addressOffset>
          <size>32</size>
          <description>Cap-Touch Filter Control0 Register</description>
          <resetValue>0x000A0004</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>mdec</name>
              <description>Decimation of sample point</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>med_coef</name>
              <description>No use
Median filter coefficient
00: disable
01: coefficient is 3
10: coefficient is 5
11: coefficient is 7</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>iir_en</name>
              <description>Enable CTC IIR function</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>flt_en</name>
              <description>Enable CTC filter function (global)</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CTC_FILTER_CTRL1</name>
          <addressOffset>0x0000020C</addressOffset>
          <size>32</size>
          <description>Cap-Touch Filter Control1 Register</description>
          <resetValue>0x025DC4BB</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>iir_gain</name>
              <description>Gain coefficient, Q1.15</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>iir_a1</name>
              <description>Denominator coefficient, Q1.15</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CTC_DUMMY</name>
          <addressOffset>0x00000210</addressOffset>
          <size>32</size>
          <description>Cap-Touch Dummy Register</description>
          <resetValue>0x000000F0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>Dummy register</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>gpio</name>
      <baseAddress>0x41010000</baseAddress>
      <size>0x00000100</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00000100</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>GPIO_DR</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description>PortA/B data register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PORT_DATA</name>
              <description>Values written to this register are output on the I/O signals for Portx if the corresponding data direction bits for Portx are set to output mode and the corresponding control bit for Portx is set to software mode. The value read back equals to the last value written to this register.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_DDR</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description>PortA/B data direction register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PORT_DATA_DIRECTION</name>
              <description>Values written to this register independently control the direction of the corresponding data bit in Portx. The default direction can be configured as input or output after system reset through the GPIO_DFLT_DIR_x parameter.
0: Input (default)
1: Output</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_INT_EN</name>
          <addressOffset>0x00000030</addressOffset>
          <size>32</size>
          <description>PortA/B interrupt enable register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>GPIO_INT_EN</name>
              <description>Allows each bit of Portx to be configured for interrupts. By default, the generation of interrupts is disabled. Whenever a 1 is written to a bit of this register, it configures the corresponding bit on Portx to become an interrupt; otherwise, Portx operates as a normal GPIO signal. Interrupts are disabled on the corresponding bits of Portx if the corresponding data direction register is set to output or if Portx mode is set to hardware.
0: Configure Portx bit as normal GPIO signal (default)
1: Configure Portx bit as interrupt</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_INT_MASK</name>
          <addressOffset>0x00000034</addressOffset>
          <size>32</size>
          <description>PortA/B interrupt mask register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>GPIO_INT_MASK</name>
              <description>Controls whether an interrupt on Portx can create an interrupt for the interrupt controller by not masking it. By default, all interrupts bits are unmasked. Whenever a 1 is written to a bit in this register, it masks the interrupt generation capability for this signal; otherwise interrupts are allowed through. The unmasked status can be read as well as the resultant status after masking.
0: Interrupt bits are unmasked (default)
1: Mask interrupt</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_INT_TYPE</name>
          <addressOffset>0x00000038</addressOffset>
          <size>32</size>
          <description>PortA/B interrupt trigger type register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>GPIO_INT_TYPE</name>
              <description>Controls the type of interrupt that can occur on Portx.
Whenever a 0 is written to a bit of this register, it configures the interrupt type to be level-sensitive; otherwise, it is edge-sensitive.
0: Level-sensitive (default)
1: Edge-sensitive</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_INT_POLARITY</name>
          <addressOffset>0x0000003C</addressOffset>
          <size>32</size>
          <description>PortA/B interrupt polarity register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>GPIO_INT_POLARITY</name>
              <description>Controls the polarity of edge or level sensitivity that can occur on input of Portx. Whenever a 0 is written to a bit of this register, it configures the interrupt type to falling-edge or active-low sensitive; otherwise, it is rising-edge or active-high sensitive.
0: Active-low (default)
1: Active-high</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_INT_STATUS</name>
          <addressOffset>0x00000040</addressOffset>
          <size>32</size>
          <description>PortA/B interrupt status register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>GPIO_INT_STATUS</name>
              <description>Interrupt status of Portx.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_INT_STATUS_RAW</name>
          <addressOffset>0x00000044</addressOffset>
          <size>32</size>
          <description>PortA/B raw interrupt status register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>GPIO_RAW_INT_STATUS</name>
              <description>Raw interrupt status of Portx (premasking bits).</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_DEBOUNCE</name>
          <addressOffset>0x00000048</addressOffset>
          <size>32</size>
          <description>PortA/B interrupt debounce register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>GPIO_DEBOUNCE_EN</name>
              <description>Controls whether an external signal that is the source of an interrupt needs to be debounced to remove any spurious glitches. Writing a 1 to a bit in this register enables the debouncing circuitry. A signal must be valid for two periods of an external clock before it is internally processed.
0: No debounce (default)
1: Enable debounce 
This register is available only if Portx is configured to generate interrupts (GPIO_PORTA_INTR = Include(1)) and when the debounce logic is included (GPIO_DEBOUNCE = Include(1)).</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_INT_EOI</name>
          <addressOffset>0x0000004C</addressOffset>
          <size>32</size>
          <description>PortA/B edge type interrupt clear register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>GPIO_INT_EOI</name>
              <description>Controls the clearing of edge type interrupts from Portx.
When a 1 is written into a corresponding bit of this register, the interrupt is cleared. All interrupts are cleared when Portx is not configured for interrupts.
0: No interrupt clear (default)
1: Clear interrupt</description>
              <bitRange>[31:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_EXT_PORT</name>
          <addressOffset>0x00000050</addressOffset>
          <size>32</size>
          <description>External PortA/B data register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>GPIO_EXT_PORTA</name>
              <description>When Portx is configured as Input, then reading this location reads the values on the signal. When the data direction of Portx is set as output, reading this location reads the data register for Portx.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_ITN_LS_SYNC</name>
          <addressOffset>0x00000060</addressOffset>
          <size>32</size>
          <description>PortA/B level interrupt synchronization</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>GPIO_Level_SYNC</name>
              <description>Writing a 1 to this register results in all level-sensitive interrupts being synchronized to pclk_intr.
0: No synchronization to pclk_intr (default)
1: Synchronize to pclk_intr</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_ID_CODE</name>
          <addressOffset>0x00000064</addressOffset>
          <size>32</size>
          <description>PortA/B GPIO ID code register</description>
          <resetValue>0x00000001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>GPIO_ID_CODE</name>
              <description>This register is available only if Portx is configured to generate interrupts (GPIO_PORTx_INTR = Include(1)) and interrupt detection is configured to generate on both rising and falling edges of external input signal (GPIO_INT_BOTH_EDGE=Include(1)).</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_INT_BOTHEDGE</name>
          <addressOffset>0x00000068</addressOffset>
          <size>32</size>
          <description>PortA/B both edge interrupt register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>GPIO_INT_BOTHEDGE</name>
              <description>Controls the edge types of interrupt that can occur on Portx.
Whenever a particular bit is programmed to 1, it enables the generation of interrupt on both the rising edge and falling edge of an external input signal corresponding to that bit on Portx.
The values programmed in the registers gpio_intype_level and gpio_int_polarity for this particular bit are not considered when the corresponding bit of this register is set to 1.
Whenever a particular bit is programmed to 0, the interrupt type depends on the value of the corresponding bits in the gpio_inttype_level and gpio_int_polarity registers.
0: Disabled. Single edge sensitive
1: Enabled. Both edge sensitive</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_VER_ID_CODE</name>
          <addressOffset>0x0000006C</addressOffset>
          <size>32</size>
          <description>PortA/B GPIO component version register</description>
          <resetValue>0x3231302A</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>GPIO_VER_ID_CODE</name>
              <description>ASCII value for each number in the version, followed by *. For example, 32_30_31_2A represents the version 2.01*.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_DUMMY</name>
          <addressOffset>0x000000FC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DUMMY</name>
              <description>No real register, only for run_espec.py</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>i2c</name>
      <baseAddress>0x41108000</baseAddress>
      <size>0x00000104</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00000104</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>IC_CON</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description>I2C Control Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IC_SLAVE_DISABLE_1</name>
              <description>This bit controls whether I2C has its slave2 (7-bit address) disabled.
* 0: slave2 is enabled
* 1: slave2 is disabled</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IC_SLAVE_DISABLE_0</name>
              <description>This bit controls whether I2C has its slave1 (7-bit or 10-bit address) disabled. 
* 0: slave1 is enabled
* 1: slave1 is disabled</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IC_RESTATRT_EN</name>
              <description>Determine whether RESTART conditions may be sent when acting as a master. 
* 0: disable
* 1: enable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IC_10BITADDR_SLAVE</name>
              <description>When acting as a slave, this bit controls whether the I2C responds to 7- or 10-bit addresses. 
* 0: 7-bit addressing
* 1: 10-bit addressing</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPEED</name>
              <description>These bits control at which speed the I2C operates; its setting is relevant only if one is operating the I2C in master mode. 
* 1: standard mode (0 to 100kbit/s)
* 2: fast mode (&lt;=400kbit/s)
* 3: high speed mode (&lt;=3.4Mbit/s)</description>
              <bitRange>[2:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MASTER_MODE</name>
              <description>This bit controls whether the I2C master is enabled. 
* 0: master disabled
* 1: master enabled</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_TAR</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description>I2C Target Address Register</description>
          <resetValue>0x00000010</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IC_10BITADDR_MASTER</name>
              <description>Control whether I2C starts its transfers in 7- or 10-bit addressing mode when acting as a master.
* 0: 7-bit addressing
* 1: 10-bit addressing</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPECIAL</name>
              <description>This bit indicates whether software performs a General Call or START BYTE command.
* 0: ignore bit 10 GC_OR_START and use IC_TAR normally
* 1: perform special I2C command as specified in GC_OR_START bit</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GC_OR_START</name>
              <description>If SPECIAL is set to 1, then this bit indicates whether a General Call or START BYTE command is to be performed by I2C. (ic_clk domain)
* 0: General Call - after issuing a General Call, only write may be performed
* 1: START BYTE</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IC_TAR</name>
              <description>This is the target address for any master transaction. When transmitting a General Call, these bits are ignored. To generate a START BYTE, the CPU needs to write only once into these bits.</description>
              <bitRange>[9:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_SAR</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description>I2C Slave Address Register</description>
          <resetValue>0x00000011</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IC_SAR</name>
              <description>The IC_SAR holds the slave address when the I2C is operating as slave1. For 7-bit addressing, only IC_SAR[6:0] is used.
The register can be written only when the I2C interface is disabled, which corresponds to the IC_ENABLE register being set to 0. Writes at other times have no effect.</description>
              <bitRange>[9:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_HS_MAR</name>
          <addressOffset>0x0000000C</addressOffset>
          <size>32</size>
          <description>I2C High Speed Master Mode Code Address Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IC_HS_MAR</name>
              <description>This bit field holds the value of the I2C HS mode master code. HS-mode master codes are reserved 8-bit codes (00001xxx) that are not used for slave addressing or other purposes. 
This register can be written only when the I2C interface is disabled, which corresponds to the IC_ENABLE register being set to 0. Write at other times have no effect.</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_DATA_CMD</name>
          <addressOffset>0x00000010</addressOffset>
          <size>32</size>
          <description>I2C Rx/Tx Data Buffer and Command Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>NULL_DATA</name>
              <description>*1: null data transfer</description>
              <bitRange>[11:11]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>CMD_RESTART</name>
              <description>This bit controls whether a RESTART is issued after the byte is sent or received. 
* 1: a RESTART is issued after the data is sent/received (according to the value of CMD_RW), regardless of whether or not the transfer direction is changing from the previous command.</description>
              <bitRange>[10:10]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>CMD_STOP</name>
              <description>This bit controls whether a STOP is issued after the byte is sent or received.
* 1: STOP is issued after this byte, regardless of whether or not the Tx FIFO is empty. If the Tx FIFO is not empty, the master immediately tries to start a new transfer by issuing a START and arbitrating for the bus.
* 0: STOP is not issued after this byte.</description>
              <bitRange>[9:9]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>CMD_RW</name>
              <description>This bit controls whether a read or write is performed. This bit does not control the direction when the I2C acts as a slave. It controls only the direction when it acts as a master.
* 1: Read
* 0: Write</description>
              <bitRange>[8:8]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>IC_DATA</name>
              <description>This register contains the data to be transmitted or received on the I2C bus. If you are writing to this register and want to perform a read, these bits are ignored by the I2C. However, when you read this register, these bits return the value of data received on the I2C interface.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_SS_SCL_HCNT</name>
          <addressOffset>0x00000014</addressOffset>
          <size>32</size>
          <description>Standard Speed I2C Clock SCL High Count Register</description>
          <resetValue>0x00000190</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IC_SS_SCL_HCNT</name>
              <description>This register sets the SCL clock high-period count for standard speed. 
This register must be set before any I2C bus transaction can take place to ensure proper I/O timing. 
This register can be written only when the I2C interface is disabled which corresponds to the IC_ENABLE register being set to 0. Writes at other times have no effect.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_SS_SCL_LCNT</name>
          <addressOffset>0x00000018</addressOffset>
          <size>32</size>
          <description>Standard Speed I2C Clock SCL Low Count Register</description>
          <resetValue>0x000001D6</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IC_SS_SCL_LCNT</name>
              <description>This register sets the SCL clock low-period count for standard speed. 
This register must be set before any I2C bus transaction can take place to ensure proper I/O timing. 
This register can be written only when the I2C interface is disabled which corresponds to the IC_ENABLE register being set to 0. Writes at other times have no effect.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_FS_SCL_HCNT</name>
          <addressOffset>0x0000001C</addressOffset>
          <size>32</size>
          <description>Fast Speed I2C Clock SCL High Count Register</description>
          <resetValue>0x0000003C</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IC_FS_SCL_HCNT</name>
              <description>This register sets the SCL clock high-period count for fast speed. 
This register must be set before any I2C bus transaction can take place to ensure proper I/O timing. 
This register can be written only when the I2C interface is disabled which corresponds to the IC_ENABLE register being set to 0. Writes at other times have no effect.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_FS_SCL_LCNT</name>
          <addressOffset>0x00000020</addressOffset>
          <size>32</size>
          <description>Fast Speed I2C Clock SCL Low Count Register</description>
          <resetValue>0x00000082</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IC_FS_SCL_LCNT</name>
              <description>This register sets the SCL clock low-period count for fast speed. 
This register must be set before any I2C bus transaction can take place to ensure proper I/O timing. 
This register can be written only when the I2C interface is disabled which corresponds to the IC_ENABLE register being set to 0. Writes at other times have no effect.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_HS_SCL_HCNT</name>
          <addressOffset>0x00000024</addressOffset>
          <size>32</size>
          <description>High Speed I2C Clock SCL High Count Register</description>
          <resetValue>0x00000006</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IC_HS_SCL_HCNT</name>
              <description>This register sets the SCL clock high-period count for high speed. 
This register must be set before any I2C bus transaction can take place to ensure proper I/O timing. 
This register can be written only when the I2C interface is disabled which corresponds to the IC_ENABLE register being set to 0. Writes at other times have no effect. 
The SCL High time depends on the loading of the bus. For 100pF loading, the SCL High time is 60ns; for 400pF loading, the SCL High time is 120ns.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_HS_SCL_LCNT</name>
          <addressOffset>0x00000028</addressOffset>
          <size>32</size>
          <description>High Speed I2C Clock SCL Low Count Register</description>
          <resetValue>0x00000010</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IC_HS_SCL_LCNT</name>
              <description>This register sets the SCL clock low-period count for high speed. 
This register must be set before any I2C bus transaction can take place to ensure proper I/O timing. 
This register can be written only when the I2C interface is disabled which corresponds to the IC_ENABLE register being set to 0. Writes at other times have no effect. 
The SCL Low time depends on the loading of the bus. For 100pF loading, the SCL High time is 160ns; for 400pF loading, the SCL High time is 320ns.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_INTR_STAT</name>
          <addressOffset>0x0000002C</addressOffset>
          <size>32</size>
          <description>I2C Interrupt Status Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>R_LP_WAKE_2</name>
              <description>Refer to I2C Raw Interrupt Status Register (IC_RAW_INTR_STAT) for a detailed description of this bit.</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>R_LP_WAKE_1</name>
              <description>Refer to I2C Raw Interrupt Status Register (IC_RAW_INTR_STAT) for a detailed description of this bit.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>R_GEN_CALL</name>
              <description>Refer to I2C Raw Interrupt Status Register (IC_RAW_INTR_STAT) for a detailed description of this bit.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>R_START_DET</name>
              <description>Refer to I2C Raw Interrupt Status Register (IC_RAW_INTR_STAT) for a detailed description of this bit.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>R_STOP_DET</name>
              <description>Refer to I2C Raw Interrupt Status Register (IC_RAW_INTR_STAT) for a detailed description of this bit.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>R_ACTIVITY</name>
              <description>Refer to I2C Raw Interrupt Status Register (IC_RAW_INTR_STAT) for a detailed description of this bit.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>R_RX_DONE</name>
              <description>Refer to I2C Raw Interrupt Status Register (IC_RAW_INTR_STAT) for a detailed description of this bit.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>R_TX_ABRT</name>
              <description>Refer to I2C Raw Interrupt Status Register (IC_RAW_INTR_STAT) for a detailed description of this bit.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>R_RD_REQ</name>
              <description>Refer to I2C Raw Interrupt Status Register (IC_RAW_INTR_STAT) for a detailed description of this bit.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>R_TX_EMPTY</name>
              <description>Refer to I2C Raw Interrupt Status Register (IC_RAW_INTR_STAT) for a detailed description of this bit.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>R_TX_OVER</name>
              <description>Refer to I2C Raw Interrupt Status Register (IC_RAW_INTR_STAT) for a detailed description of this bit.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>R_RX_FULL</name>
              <description>Refer to I2C Raw Interrupt Status Register (IC_RAW_INTR_STAT) for a detailed description of this bit.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>R_RX_OVER</name>
              <description>Refer to I2C Raw Interrupt Status Register (IC_RAW_INTR_STAT) for a detailed description of this bit.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>R_RX_UNDER</name>
              <description>Refer to I2C Raw Interrupt Status Register (IC_RAW_INTR_STAT) for a detailed description of this bit.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_INTR_MASK</name>
          <addressOffset>0x00000030</addressOffset>
          <size>32</size>
          <description>I2C Interrupt Mask Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>M_LP_WAKE_2</name>
              <description>This bit masks the corresponding interrupt status bit in the IC_INTR_STAT register.</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_LP_WAKE_1</name>
              <description>This bit masks the corresponding interrupt status bit in the IC_INTR_STAT register.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_GEN_CALL</name>
              <description>This bit masks the corresponding interrupt status bit in the IC_INTR_STAT register.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_START_DET</name>
              <description>This bit masks the corresponding interrupt status bit in the IC_INTR_STAT register.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_STOP_DET</name>
              <description>This bit masks the corresponding interrupt status bit in the IC_INTR_STAT register.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_ACTIVITY</name>
              <description>This bit masks the corresponding interrupt status bit in the IC_INTR_STAT register.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_RX_DONE</name>
              <description>This bit masks the corresponding interrupt status bit in the IC_INTR_STAT register.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_TX_ABRT</name>
              <description>This bit masks the corresponding interrupt status bit in the IC_INTR_STAT register.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_RD_REQ</name>
              <description>This bit masks the corresponding interrupt status bit in the IC_INTR_STAT register.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_TX_EMPTY</name>
              <description>This bit masks the corresponding interrupt status bit in the IC_INTR_STAT register.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_TX_OVER</name>
              <description>This bit masks the corresponding interrupt status bit in the IC_INTR_STAT register.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_RX_FULL</name>
              <description>This bit masks the corresponding interrupt status bit in the IC_INTR_STAT register.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_RX_OVER</name>
              <description>This bit masks the corresponding interrupt status bit in the IC_INTR_STAT register.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_RX_UNDER</name>
              <description>This bit masks the corresponding interrupt status bit in the IC_INTR_STAT register.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_RAW_INTR_STAT</name>
          <addressOffset>0x00000034</addressOffset>
          <size>32</size>
          <description>I2C Raw Interrupt Status Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>LP_WAKE_2</name>
              <description>Set when address SAR_2 matches with address sending on I2C BUS.</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LP_WAKE_1</name>
              <description>Set when address SAR matches with address sending on I2C BUS.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>GEN_CALL</name>
              <description>Set only when a General Call address is received and it is acknowledged.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>START_DET</name>
              <description>Indicate whether a START or RESTART condition has occurred on the I2C interface regardless of whether I2C is operating in slave or master mode.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>STOP_DET</name>
              <description>Indicate whether a STOP condition has occurred on the I2C interface regardless of whether I2C is operating in slave or master mode.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ACTIVITY</name>
              <description>This bit captures I2C activity.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RX_DONE</name>
              <description>When the I2C is acting as a slave-transmitter, this bit is set to 1 if the master does not acknowledge a transmitted byte. This occurs on the last byte of the transmission, indicating that the transmission is done.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TX_ABRT</name>
              <description>This bit indicates if I2C as a transmitter, is unable to complete the intended actions on the contents of the transmit FIFO. This situation can occur both as an I2C master or an I2C slave, and is referred to as a 'transmit abort'.
* 1: the IC_TX_ABRT_SOURCE register indicates the reason why the transmit abort take places.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RD_REQ</name>
              <description>This bit is set to 1 when I2C is acting as a slave and another I2C master is attempting to read data from I2C. The I2C holds the I2C bus in a wait state (SCL=0) until this interrupt is serviced, which means that the slave has been addressed by a remote master that is asking for data to be transferred. The processor must respond to this interrupt and then write the requested data to the IC_DATA_CMD register.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TX_EMPTY</name>
              <description>This bit is set to 1 when the transmit buffer is at or below the threshold value set in the IC_TX_TL register. It is automatically cleared by hardware when the buffer level goes above the threshold.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TX_OVER</name>
              <description>Set during transmit if the transmit buffer is filled to IC_TX_BUFFER_DEPTH and the processor attempts to issue another I2C command by writing to the IC_DATA_CMD register.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RX_FULL</name>
              <description>Set when the receive buffer goes above the RX_TL threshold in the IC_RX_TL register. It is automatically cleared by hardware when buffer level is equal to or less than the threshold.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RX_OVER</name>
              <description>Not used. Set if the receive buffer is completely filled to IC_RX_BUFFER_DEPTH and an additional byte is received from an external I2C device.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RX_UNDER</name>
              <description>Set if the processor attempts to read the receive buffer when it is empty by reading from the IC_DATA_CMD register.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_RX_TL</name>
          <addressOffset>0x00000038</addressOffset>
          <size>32</size>
          <description>I2C Receive FIFO Threshold Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IC_RX_0_TL</name>
              <description>Receive FIFO Threshold Level.
Control the level of entries (or above) that triggers the RX_FULL interrupt (bit[2] in IC_RAW_INTR_STAT register).</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_TX_TL</name>
          <addressOffset>0x0000003C</addressOffset>
          <size>32</size>
          <description>I2C Transmit FIFO Threshold Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IC_TX_0_TL</name>
              <description>Transmit FIFO Threshold Level.
Control the level of entries (or below) that triggers the TX_EMPTY interrupt (bit[4] in IC_RAW_INTR_STAT register).</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_CLR_INTR</name>
          <addressOffset>0x00000040</addressOffset>
          <size>32</size>
          <description>Clear Combined and Individual Interrupt Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CLR_INRT</name>
              <description>Read this register to clear the combined interrupt, all individual interrupts, and the IC_TX_ABRT_SOURCE register. This bit does not clear hardware clearable interrupts but software clearable interrupts.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_CLR_RX_UNDER</name>
          <addressOffset>0x00000044</addressOffset>
          <size>32</size>
          <description>Clear RX_UNDER Interrupt Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CLR_RX_UNDER</name>
              <description>Read this register to clear the RX_UNDER interrupt (bit[0]) of IC_RAW_INTR_STAT register.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_CLR_RX_OVER</name>
          <addressOffset>0x00000048</addressOffset>
          <size>32</size>
          <description>Clear RX_OVER Interrupt Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CLR_RX_OVER</name>
              <description>Read this register to clear the RX_OVER interrupt (bit[1]) of IC_RAW_INTR_STAT register.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_CLR_TX_OVER</name>
          <addressOffset>0x0000004C</addressOffset>
          <size>32</size>
          <description>Clear TX_OVER Interrupt Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CLR_TX_OVER</name>
              <description>Read this register to clear the TX_OVER interrupt (bit[3]) of IC_RAW_INTR_STAT register.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_CLR_RD_REQ</name>
          <addressOffset>0x00000050</addressOffset>
          <size>32</size>
          <description>Clear RD_REQ Interrupt Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CLR_RD_REQ</name>
              <description>Read this register to clear the RD_REQ interrupt (bit[5]) of IC_RAW_INTR_STAT register.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_CLR_TX_ABRT</name>
          <addressOffset>0x00000054</addressOffset>
          <size>32</size>
          <description>Clear TX_ABRT Interrupt Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CLR_TX_ABRT</name>
              <description>Read this register to clear the TX_ABRT interrupt (bit[6]) of IC_RAW_INTR_STAT register and the IC_TX_ABRT_SOURCE register. This also releases the TxFIFO from the flushed/reset state, allowing more writes to the Tx FIFO.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_CLR_RX_DONE</name>
          <addressOffset>0x00000058</addressOffset>
          <size>32</size>
          <description>Clear RX_DONE Interrupt Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CLR_RX_DONE</name>
              <description>Read this register to clear the RX_DONE interrupt (bit[7]) of IC_RAW_INTR_STAT register.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_CLR_ACTIVITY</name>
          <addressOffset>0x0000005C</addressOffset>
          <size>32</size>
          <description>Clear ACTIVITY Interrupt Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CLR_ACTIVITY</name>
              <description>Read this register to clear the ACTIVITY interrupt if the I2C is not active anymore. If the I2C module is still active on the bus, the ACTIVITY interrupt bit continues to be set. It is automatically cleared by hardware if the module is disabled and if there is no further activity on the bus. The value read from this register to get status of the ACTIVITY interrupt (bit[8]) of the IC_RAW_INTR_STAT register.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_CLR_STOP_DET</name>
          <addressOffset>0x00000060</addressOffset>
          <size>32</size>
          <description>Clear STOP_DET Interrupt Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CLR_STOP_DET</name>
              <description>Read this register to clear the STOP_DET interrupt (bit[9]) of IC_RAW_INTR_STAT register.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_CLR_START_DET</name>
          <addressOffset>0x00000064</addressOffset>
          <size>32</size>
          <description>Clear START_DET Interrupt Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CLR_START_DET</name>
              <description>Read this register to clear the START_DET interrupt (bit[10]) of IC_RAW_INTR_STAT register.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_CLR_GEN_CALL</name>
          <addressOffset>0x00000068</addressOffset>
          <size>32</size>
          <description>Clear GEN_ALL Interrupt Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CLR_GEN_CALL</name>
              <description>Read this register to clear the GEN_CALL interrupt (bit[11]) of IC_RAW_INTR_STAT register.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_ENABLE</name>
          <addressOffset>0x0000006C</addressOffset>
          <size>32</size>
          <description>I2C Enable Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FORCE</name>
              <description>Force master I2C stop transfer immediately after IC_ENABLE set 0.
* 1:  when IC_ENABLE is set 0 during transfer, force master FSM go to IDLE immediately.
* 0:  when IC_ENABLE is set 0 during transfer, master FSM while finish current transition (include RESTART) before go to IDLE.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ENABLE</name>
              <description>Control whether the I2C is enabled.
* 0: Disable I2C (Tx and Rx FIFOs are held in an erased state)
* 1: Enable I2C</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_STATUS</name>
          <addressOffset>0x00000070</addressOffset>
          <size>32</size>
          <description>I2C Status Register</description>
          <resetValue>0x00000006</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SLV_ACTIVITY</name>
              <description>Slave FSM Activity Status. When the Slave FSM is not in the IDLE state, this bit is set.
* 0: Slave FSM is in the IDLE state so the slave part of I2C is not active
* 1: Slave FSM is not he IDLE state so the slave part of I2C is active</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>MST_ACTIVITY</name>
              <description>Master FSM Activity Status. When the Master FSM is not in the IDLE state, this bit is set.
* 0: Master FSM is in the IDLE state so the master part of I2C is not active
* 1: Master FSM is not he IDLE state so the master part of I2C is active</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RFF</name>
              <description>Receive FIFO Completely Full. When the receive FIFO is completely full, this bit is set. When the receive FIFO contains one or more empty location, this bit is cleared.
* 0: Receive FIFO is not full
* 1: Receive FIFO is full</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RFNE</name>
              <description>Receive FIFO Not Empty. This bit is set when the receive FIFO contains one or more entries; it is cleared when the receive FIFO is empty.
* 0: Receive FIFO is empty
* 1: Receive FIFO is not empty</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TFE</name>
              <description>Transmit FIFO Completely Empty. When the transmit FIFO is completely empty, this bit is set. When it contains one or more valid entries, this bit is cleared. This bit field does not request an interrupt.
* 0: Transmit FIFO is not empty
* 1: Transmit FIFO is empty</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TFNF</name>
              <description>Transmit FIFO Not Full. Set when the transmit FIFO contains one or more empty locations, and is cleared when the FIFO is full.
* 0: Transmit FIFO is full
* 1: Transmit FIFO is not full</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>IC_ACTIVITY</name>
              <description>I2C Activity Status.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_TXFLR</name>
          <addressOffset>0x00000074</addressOffset>
          <size>32</size>
          <description>I2C Transmit FIFO Level Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TXFLR</name>
              <description>Transmit FIFO Level. Contains the number of valid data entries in the transmit FIFO.</description>
              <bitRange>[5:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_RXFLR</name>
          <addressOffset>0x00000078</addressOffset>
          <size>32</size>
          <description>I2C Receive FIFO Level Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RXFLR</name>
              <description>Receive FIFO Level. Contains the number of valid data entries in the receive FIFO.</description>
              <bitRange>[5:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_SDA_HOLD</name>
          <addressOffset>0x0000007C</addressOffset>
          <size>32</size>
          <description>I2C SDA Hold Time Length Register</description>
          <resetValue>0x00000001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IC_SDA_HOLD</name>
              <description>Set the required SDA hold time in units of ic_clk period.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_TX_ABRT_SOURCE</name>
          <addressOffset>0x00000080</addressOffset>
          <size>32</size>
          <description>I2C Transmit Abort Source Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ABRT_SLV_ARBLOST</name>
              <description>* 1: Slave losts the bus while transmitting data to a remote master. IC_TX_ABRT_SOURCE[12] is set at the same time.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ABRT_SLVFLUSH_TXFIFO</name>
              <description>* 1: Slave has received a read command and some data exists in the TXFIFO so the slave issues a TX_ABRT interrupt to flush old data in Tx FIFO.</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ARBT_LOST</name>
              <description>* 1: Master has lost arbitration, or if IC_TX_ABRT_SOURCE[14] is also set, then the slave transmitter has lost arbitration.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ABRT_MASTER_DIS</name>
              <description>* 1: User tries to initiate a Master operation with the master mode disabled.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ABRT_10B_RD_NORSTRT</name>
              <description>* 1: The restart is disabled and the master sends a read command in 10-bit addressing mode.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ABRT_SBYTE_NORSTRT</name>
              <description>* 1: The restart is disabled and the user is trying to send a START Byte.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ABRT_HS_NORSTRT</name>
              <description>* 1: The restart is disabled and the user is trying to use the master to transfer data in High Speed mode.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ABRT_SBYTE_ACKDET</name>
              <description>* 1: Master has send a START Byte and the START Byte was acknowledged (wrong behavior).</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ABRT_HS_ACKDET</name>
              <description>* 1: Master is in High Speed mode and the High Speed Master code was acknowledged (wrong behavior).</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ABRT_GCALL_READ</name>
              <description>* 1: I2C in master mode sents a General Call but the user programmed the byte following the General Call to be a read from the bus.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ABRT_GCALL_NOACK</name>
              <description>* 1: I2C in master mode sents a General Call and no slave on the bus acknowledged the General Call.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ABRT_TXDATA_NOACK</name>
              <description>* 1: This is a master-mode only bit. Master has received an acknowledgement for the address, but when it sent data byte(s) following the address, it did not receive an acknowledge from the remote slave(s).</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ABRT_10ADDR2_NOACK</name>
              <description>* 1: Master is in 10-bit address mode and the second byte of the 10-bit address was not acknowledged by any slave.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ABRT_10ADDR1_NOACK</name>
              <description>* 1: Master is in 10-bit address mode and the first 10-bit address byte was not acknowledged by any slave.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ABRT_7B_ADDR_NOACK</name>
              <description>* 1: Master is in 7-bit addressing mode and the address sent was not acknowledged by any slave</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_SLV_DATA_NACK_ONLY</name>
          <addressOffset>0x00000084</addressOffset>
          <size>32</size>
          <description>Generate Slave Data NACK Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>NACK</name>
              <description>Generate NACK. This NACK generation only occurs when I2C is a slave-receiver. If this register is set to a value of 1, it can only generate a NACK after a data byte is received; hence, the data transfer is aborted and the data received is not pushed to the receive buffer.
When the register is set to a value of 0, it generates NACK/ACK, depending on normal criteria.
* 1: generate NACK after data byte received
* 0: generate NACK/ACK normally</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_DMA_CR</name>
          <addressOffset>0x00000088</addressOffset>
          <size>32</size>
          <description>DMA Control Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TDMAE</name>
              <description>Transmit DMA Enable. This bit enables/disables the transmit FIFO DMA channel.
* 0: Transmit DMA disabled
* 1: Transmit DMA enabled</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RDMAE</name>
              <description>Receive DMA Enable. This bit enables/disables the receive FIFO DMA channel.
* 0: Receive DMA disabled
* 1: Receive DMA enabled</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_DMA_TDLR</name>
          <addressOffset>0x0000008C</addressOffset>
          <size>32</size>
          <description>DMA Transmit Data Level Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DMATDL</name>
              <description>Transmit Data Level. This bit field controls the level at which a DMA request is made by the transmit logic. It is equal to the watermark level; that is, the dma_tx_req signal is generated when the number of valid data entries in the transmit FIFO is equal to or below this field value, and TDMAE=1.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_DMA_RDLR</name>
          <addressOffset>0x00000090</addressOffset>
          <size>32</size>
          <description>I2C Receive Data Level Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DMARDL</name>
              <description>Receive Data Level. This bit field controls the level at which a DMA request is made by the receive logic. The watermark level=DMARDL+1; that is, the dma_tx_req signal is generated when the number of valid data entries in the receive FIFO is equal to or more than this field value+1, and RDMAE=1. For instance, when DMARDL is 0, the dma_rx_req is asserted when 1 or more data entries are present in the receive FIFO.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_SDA_SETUP</name>
          <addressOffset>0x00000094</addressOffset>
          <size>32</size>
          <description>I2C SDA Setup Register</description>
          <resetValue>0x00000005</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IC_SDA_SETUP</name>
              <description>Set the required SDA setup time in units of ic_clk period.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_ACK_GENERAL_CALL</name>
          <addressOffset>0x00000098</addressOffset>
          <size>32</size>
          <description>I2C ACK General Call Register</description>
          <resetValue>0x00000001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ACK_GEN_CALL</name>
              <description>* 1: I2C responds with a ACK when it receives a General Call.
* 0: I2C does not generate General Call interrupts.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_ENABLE_STATUS</name>
          <addressOffset>0x0000009C</addressOffset>
          <size>32</size>
          <description>I2C Enable Status Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>busy_in_mode</name>
              <description>* 00: I2C is disable while busy in legacy mode.
* 01: I2C is disable while busy in DMA mode.
* 10: I2C is disable while busy in Descriptor mode.</description>
              <bitRange>[4:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SLV_DISABLE_WHILE_BUSY</name>
              <description>Slave Disabled While Busy (Transmit, Receive). This bit indicates if a potential or active Slave operation has been aborted due to the setting of the IC_SLAVE_DISBALE register from 1 to 0.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>IC_EN</name>
              <description>IC_EN Status. This bit always reflects the value driven on the output port IC_EN.
* 1: I2C is deemed to be in an enabled state.
* 0: I2C is deemed completely inactive.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_DMA_CMD</name>
          <addressOffset>0x000000A0</addressOffset>
          <size>32</size>
          <description>I2C DMA Command Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DMODE_RESTART</name>
              <description>This bit controls whether a RESTART is issued after the byte is sent or received in DMA mode.
* 1: a RESTART is issued after the data is sent/received (according to the value of CMD_RW), regardless of whether or not the transfer direction is changing from the previous command.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DMODE_STOP</name>
              <description>This bit controls whether a STOP is issued after the byte is sent or received in DMA mode.
* 1: STOP is issued after this byte, regardless of whether or not the Tx FIFO is empty. If the Tx FIFO is not empty, the master immediately tries to start a new transfer by issuing a START and arbitrating for the bus.
* 0: STOP is not issued after this byte.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DMODE_CMD</name>
              <description>This bit controls whether a read or write is performed in DMA mode. This bit does not control the direction when the I2C acts as a slave. It controls only the direction when it acts as a master.
* 1: Read
* 0: Write</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DMODE_ENABLE</name>
              <description>* 1: Set to enable DMA mode, cleared when transfer is done</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_DMA_DATA_LEN</name>
          <addressOffset>0x000000A4</addressOffset>
          <size>32</size>
          <description>I2C DMA Mode Transfer Data Length Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DMA_DAT_LEN</name>
              <description>DMA transfer data length</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_DMA_MODE</name>
          <addressOffset>0x000000A8</addressOffset>
          <size>32</size>
          <description>I2C DMA Mode Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DMA_MODE</name>
              <description>* 0: DWC DMA legacy mode
* 1: DMA with control register
* 2: DMA with transfer descriptor</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_DEBUG_SEL</name>
          <addressOffset>0x000000B0</addressOffset>
          <size>32</size>
          <description>I2C Debug SEL Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IC_DEBUG_SEL</name>
              <description>* 0: Debug clock
* 1: Debug APB
* 2: RSVD
* 3: Debug FIFO
* 4: Debug Timing
* 5: Debug Slave Mode Address Match
* 6: Debug Interrupt</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_OUT_SMP_DLY</name>
          <addressOffset>0x000000B4</addressOffset>
          <size>32</size>
          <description>Sample Delay Register</description>
          <resetValue>0x00000002</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IC_OUT_SMP_DLY</name>
              <description>Delay cycles for sample of master derived SCL value. The sample of master derived SCL is used for slave stretch. 
Slave stretch is valid when master drive SCL High, but slave drive SCL low.
Valid value of IC_OUT_SMP_DLY is 0-7. Inicate a delay of 1 to 8 cycles.</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_CLR_ADDR_MATCH</name>
          <addressOffset>0x000000E4</addressOffset>
          <size>32</size>
          <description>Clear Slave Mode Address Match Interrupt Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IC_CLR_ADDR_MATCH</name>
              <description>Read this register to clear the slave mode address match interrupt (bit[13:12]) of IC_RAW_INTR_STAT register.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_CLR_DMA_DONE</name>
          <addressOffset>0x000000E8</addressOffset>
          <size>32</size>
          <description>Clear DMA DONE Interrupt Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IC_CLR_RAW_INTR_STAT</name>
              <description>Read this register to clear the DMA_DONE interrupt (bit[15]) of IC_RAW_INTR_STAT register.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_FILTER</name>
          <addressOffset>0x000000EC</addressOffset>
          <size>32</size>
          <description>I2C Filter Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IC_DIG_FLTR_SEL</name>
              <description>1: Enable filter</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IC_DIG_FLTR_DEG</name>
              <description>DIG_FLTR_DEG is to define frequency range of filter. A greater value of DIG_FLTR_DEG results in a slower transfer speed and hardware would be able to filter a lower frequency.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_SAR2</name>
          <addressOffset>0x000000F4</addressOffset>
          <size>32</size>
          <description>I2C Slave2 Address Register</description>
          <resetValue>0x00000012</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IC_SAR2</name>
              <description>The IC_SAR2 holds the slave address when the I2C is operating as slave2. Slave2 only supports 7-bit address.
The register can be written only when the I2C interface is disabled, which corresponds to the IC_ENABLE register being set to 0. Writes at other times have no effect.</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_COMP_VERSION</name>
          <addressOffset>0x000000FC</addressOffset>
          <size>32</size>
          <description>I2C Component Version Register</description>
          <resetValue>0x20200702</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IC_COMP_VERSION</name>
              <description>I2C version number</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_DUMMY</name>
          <addressOffset>0x00000100</addressOffset>
          <size>32</size>
          <description>IC Dummy Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>Reserved for HW</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>ipc</name>
      <baseAddress>0x41014000</baseAddress>
      <size>0x0000001C</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x0000001C</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>IPC_DATA</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description>Tx_Rx Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>tx0_data</name>
              <description>After preparing descriptor, data and corresponding memory.
1: Writing 1 to the Tx data register (tx0_data) channel x bit, and the data will be mapped to the CPU0's RX data register (rx0_data) channel x bit. And the corresponding Rx full status bit in REG_ISR_CPU0 will be set.
0: Writing 0 has no effect.
If the corresponding Rx full status bit in REG_ISR_CPU0 (e.g. isr_rx0_full_status6) is cleared, the corresponding bit in tx0_data will be cleaned automatically.</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rx0_data</name>
              <description>Rx data automatically maps data from tx0_data of CPU0</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IPC_ISR</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description>Interrupt Empty Full Status Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>isr_tx0_empty_status15</name>
              <description>Refer to the description of isr_tx0_empty_status0</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>isr_tx0_empty_status14</name>
              <description>Refer to the description of isr_tx0_empty_status0</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>isr_tx0_empty_status13</name>
              <description>Refer to the description of isr_tx0_empty_status0</description>
              <bitRange>[29:29]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>isr_tx0_empty_status12</name>
              <description>Refer to the description of isr_tx0_empty_status0</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>isr_tx0_empty_status11</name>
              <description>Refer to the description of isr_tx0_empty_status0</description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>isr_tx0_empty_status10</name>
              <description>Refer to the description of isr_tx0_empty_status0</description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>isr_tx0_empty_status9</name>
              <description>Refer to the description of isr_tx0_empty_status0</description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>isr_tx0_empty_status8</name>
              <description>Refer to the description of isr_tx0_empty_status0</description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>isr_tx0_empty_status7</name>
              <description>Refer to the description of isr_tx0_empty_status0</description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>isr_tx0_empty_status6</name>
              <description>Refer to the description of isr_tx0_empty_status0</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>isr_tx0_empty_status5</name>
              <description>Refer to the description of isr_tx0_empty_status0</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>isr_tx0_empty_status4</name>
              <description>Refer to the description of isr_tx0_empty_status0</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>isr_tx0_empty_status3</name>
              <description>Refer to the description of isr_tx0_empty_status0</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>isr_tx0_empty_status2</name>
              <description>Refer to the description of isr_tx0_empty_status0</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>isr_tx0_empty_status1</name>
              <description>Refer to the description of isr_tx0_empty_status0</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>isr_tx0_empty_status0</name>
              <description>Tx channel 0 empty interrupt status of CPU1 transmit to CPU0. If the corresponding Rx full status bit in REG_ISR_CPU0 (e.g. isr_rx0_full_status0) is cleared, the corresponding Tx empty status bit will be set automatically.
It will be cleared by software writing 1.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>isr_rx0_full_status15</name>
              <description>Refer to the description of isr_rx0_full_status0</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>isr_rx0_full_status14</name>
              <description>Refer to the description of isr_rx0_full_status0</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>isr_rx0_full_status13</name>
              <description>Refer to the description of isr_rx0_full_status0</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>isr_rx0_full_status12</name>
              <description>Refer to the description of isr_rx0_full_status0</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>isr_rx0_full_status11</name>
              <description>Refer to the description of isr_rx0_full_status0</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>isr_rx0_full_status10</name>
              <description>Refer to the description of isr_rx0_full_status0</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>isr_rx0_full_status9</name>
              <description>Refer to the description of isr_rx0_full_status0</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>isr_rx0_full_status8</name>
              <description>Refer to the description of isr_rx0_full_status0</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>isr_rx0_full_status7</name>
              <description>Refer to the description of isr_rx0_full_status0</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>isr_rx0_full_status6</name>
              <description>Refer to the description of isr_rx0_full_status0</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>isr_rx0_full_status5</name>
              <description>Refer to the description of isr_rx0_full_status0</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>isr_rx0_full_status4</name>
              <description>Refer to the description of isr_rx0_full_status0</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>isr_rx0_full_status3</name>
              <description>Refer to the description of isr_rx0_full_status0</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>isr_rx0_full_status2</name>
              <description>Refer to the description of isr_rx0_full_status0</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>isr_rx0_full_status1</name>
              <description>Refer to the description of isr_rx0_full_status0</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>isr_rx0_full_status0</name>
              <description>Rx channel 0 full interrupt status of CPU1. The corresponding Rx full status bit will be set by CPU0's Tx data register (tx0_data) channel 0.
It will be cleared by software writing 1.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IPC_IMR</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description>Interrupt Empty Full Mask Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>imr_tx0_empty_mask</name>
              <description>0: Mask Tx Channel x empty interrupt of CPU1 transmit to CPU0
1: Unmask Tx Channel x empty interrupt of CPU1 transmit to CPU0</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>imr_rx0_full_mask</name>
              <description>0: Mask Rx Channel x full interrupt of CPU1 received from CPU0
1: Unmask Rx Channel x full interrupt of CPU1 received from CPU0</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IPC_ICR</name>
          <addressOffset>0x0000000C</addressOffset>
          <size>32</size>
          <description>Clear Tx Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>icr_tx0_data_clear15</name>
              <description>Refer to the description of icr_tx0_data_clear0</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>icr_tx0_data_clear14</name>
              <description>Refer to the description of icr_tx0_data_clear0</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>icr_tx0_data_clear13</name>
              <description>Refer to the description of icr_tx0_data_clear0</description>
              <bitRange>[29:29]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>icr_tx0_data_clear12</name>
              <description>Refer to the description of icr_tx0_data_clear0</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>icr_tx0_data_clear11</name>
              <description>Refer to the description of icr_tx0_data_clear0</description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>icr_tx0_data_clear10</name>
              <description>Refer to the description of icr_tx0_data_clear0</description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>icr_tx0_data_clear9</name>
              <description>Refer to the description of icr_tx0_data_clear0</description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>icr_tx0_data_clear8</name>
              <description>Refer to the description of icr_tx0_data_clear0</description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>icr_tx0_data_clear7</name>
              <description>Refer to the description of icr_tx0_data_clear0</description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>icr_tx0_data_clear6</name>
              <description>Refer to the description of icr_tx0_data_clear0</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>icr_tx0_data_clear5</name>
              <description>Refer to the description of icr_tx0_data_clear0</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>icr_tx0_data_clear4</name>
              <description>Refer to the description of icr_tx0_data_clear0</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>icr_tx0_data_clear3</name>
              <description>Refer to the description of icr_tx0_data_clear0</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>icr_tx0_data_clear2</name>
              <description>Refer to the description of icr_tx0_data_clear0</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>icr_tx0_data_clear1</name>
              <description>Refer to the description of icr_tx0_data_clear0</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>icr_tx0_data_clear0</name>
              <description>0: Writing 0 has no effect.
1: Clear the Tx data register (tx0_data) channel 0 bit.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>rsvd0</name>
              <description></description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IPC_SEM_0</name>
          <addressOffset>0x00000010</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>sem_0_data</name>
              <description>Used to indicate who owns this semaphore .</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IPC_SEM_1</name>
          <addressOffset>0x00000014</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>sem_1_data</name>
              <description>Used to indicate who owns this semaphore .</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IPC_DUMMY</name>
          <addressOffset>0x00000018</addressOffset>
          <size>32</size>
          <description>Dummy Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>Dummy register</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>ir</name>
      <baseAddress>0x41107000</baseAddress>
      <size>0x00000034</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00000034</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>IR_CLK_DIV</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description>IR clock division register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IR_CLK_DIV</name>
              <description>IR_CLK = IO_CLK/(1 + IR_CLK_DIV)
*Tx mode: divider number to generate IrDA modulation frequency.
For example: sys_clk = 100MHz, modulation_freq = 455kHz, IR_DIV_NUM = (sys_clk/modulation_freq) - 1
*Rx mode: waveform sample clock.
IR_DIV_NUM = (sys_clk/sample clock) - 1
For example: sample clock = 100MHz, IR_DIV_NUM = 0; sample clock = 50MHz, IR_DIV_NUM = 1</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IR_TX_CONFIG</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description>IR Tx configuration register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IR_MODE_SEL</name>
              <description>*0: Tx mode
*1: Rx mode</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IR_TX_START</name>
              <description>*0: FSM stops at idle state.
*1: FSM runs.</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IR_TX_DUTY_NUM</name>
              <description>Duty cycle setting for modulation frequency
For example: for 1/3 duty cycle, IR_DUTY_NUM = (IR_DIV_NUM+1)/3
Note: Set this value equal to IR_DIV_NUM to generate 100% duty waveform.</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IR_TX_OUTPUT_INVERSE</name>
              <description>*0: Not inverse active output
*1: Inverse active output</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IR_TX_DE_INVERSE</name>
              <description>*0: Not inverse FIFO define
*1: Inverse FIFO define</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IR_TX_FIFO_LEVEL_TH</name>
              <description>Tx FIFO interrupt threshold.
When Tx FIFO depth = &lt; threshold value, interrupt is triggered.</description>
              <bitRange>[12:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IR_TX_IDLE_STATE</name>
              <description>Tx output state in idle
*0: Low
*1: High</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IR_TX_FIFO_OVER_INT_MASK</name>
              <description>Tx FIFO overflow interrupt
*0: Unmask
*1: Mask</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IR_TX_FIFO_OVER_INT_EN</name>
              <description>Tx FIFO overflow interrupt
*0: Disable
*1: Enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IR_TX_FIFO_LEVEL_INT_MASK</name>
              <description>Tx FIFO level interrupt
*0: Unmask
*1: Mask</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IR_TX_FIFO_EMPTY_INT_MASK</name>
              <description>Tx FIFO empty interrupt
*0: Unmask
*1: Mask</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IR_TX_FIFO_LEVEL_INT_EN</name>
              <description>Tx FIFO level interrupt
When Tx FIFO offset &lt;= threshold value, interrupt is triggered.
*0: Disable
*1: Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IR_TX_FIFO_EMPTY_INT_EN</name>
              <description>Tx FIFO empty interrupt
*0: Disable
*1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IR_TX_SR</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description>IR Tx FIFO and interrupt status register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IR_TX_FIFO_EMPTY</name>
              <description>*0: Not empty
*1: Empty</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>IR_TX_FIFO_FULL</name>
              <description>*0: Not full
*1: Full</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>IR_TX_FIFO_OFFSET</name>
              <description>Tx FIFO offset is from 0 to 32.
Note: After Tx last packet, hardware can't clear Tx FIFO offset.</description>
              <bitRange>[13:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>IR_TX_STATUS</name>
              <description>*0: Idle
*1: Run</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>IR_TX_FIFO_OVER_INT_STATUS</name>
              <description>Tx FIFO overflow interrupt
*0: Interrupt inactive
*1: Interrupt active</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>IR_TX_FIFO_LEVEL_INT_STATUS</name>
              <description>When Tx FIFO offset &lt;= threshold value, interrupt is triggered.
*0: Interrupt inactive
*1: Interrupt active</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>IR_TX_FIFO_EMPTY_INT_STATUS</name>
              <description>Tx FIFO empty interrupt
*0: Interrupt inactive
*1: Interrupt active</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IR_TX_COMPE_DIV</name>
          <addressOffset>0x0000000C</addressOffset>
          <size>32</size>
          <description>IR Tx compensation division register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TX_COMPE_DIV</name>
              <description>IR_TX_CLK_Period = SCLK/(TX_COMPE_DIV + 1)</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IR_TX_INT_CLR</name>
          <addressOffset>0x00000010</addressOffset>
          <size>32</size>
          <description>IR Tx FIFO and interrupt clear register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IR_TX_FIFO_OVER_INT_CLR</name>
              <description>Tx FIFO overflow interrupt
Write 1 to clear</description>
              <bitRange>[3:3]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>IR_TX_FIFO_LEVEL_INT_CLR</name>
              <description>When Tx FIFO offset &lt;= threshold value, interrupt is triggered.
Write 1 to clear</description>
              <bitRange>[2:2]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>IR_TX_FIFO_EMPTY_INT_CLR</name>
              <description>Tx FIFO empty interrupt
Write 1 to clear</description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>IR_TX_FIFO_CLR</name>
              <description>Write 1 to clear Tx FIFO</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IR_TX_FIFO</name>
          <addressOffset>0x00000014</addressOffset>
          <size>32</size>
          <description>IR Tx FIFO register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IR_TX_DATA_TYPE</name>
              <description>Data type 
*0: Inactive carrier (no carrier)
*1: Active carrier (carrier)</description>
              <bitRange>[31:31]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>IR_TX_DATA_END_FLAG</name>
              <description>*0: Normal packet
*1: Last packet</description>
              <bitRange>[30:30]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>IR_TX_COMPENSATION</name>
              <description>*0x0: IR_TX_CLK_Period = Tsys_clk * IR_CLK_DIV
*0x1: IR_TX_CLK_Period = (1 + 1/2) Tsys_clk * IR_CLK_DIV
*0x2: IR_TX_CLK_Period = (1 + 1/4) Tsys_clk * IR_CLK_DIV
*0x3: IR_TX_CLK_Period = Tsys_clk * (IR_TX_COMPE_DIV + 1)</description>
              <bitRange>[29:28]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>IR_TX_DATA_TIME</name>
              <description>Real active time = (IR_TX_DATA_TIME + 1) * IR_TX_CLK_Period</description>
              <bitRange>[27:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IR_RX_CONFIG</name>
          <addressOffset>0x00000018</addressOffset>
          <size>32</size>
          <description>IR Rx configuration register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IR_RX_START</name>
              <description>*0: FSM stops at idle state.
*1: FSM runs.</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IR_RX_START_MODE</name>
              <description>*0: Manual mode, IR_RX_MAN_START control
*1: Auto-mode, Trigger-mode control</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IR_RX_MAN_START</name>
              <description>If IR_RX_TRIGGER_MODE =0, writing 1 means starting to check the  waveform.</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IR_RX_TRIGGER_MODE</name>
              <description>*00: High --&gt; low trigger
*01: Low -&gt; high trigger
*10: High -&gt; low or low -&gt;high trigger</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IR_RX_FILTER_STAGETX</name>
              <description>*0x0: Filter &lt;= 20ns glitch
*0x1: Filter &lt;= 30ns glitch
*0x2: Filter &lt;= 40ns glitch
*0x3: Filter &lt;= 50ns glitch
...</description>
              <bitRange>[23:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IR_RX_FIFO_ERROR_INT_MASK</name>
              <description>Rx FIFO error read interrupt
When Rx FIFO is empty, read Rx FIFO and trigger interrupt.
*0: Unmask
*1: Mask</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IR_RX_CNT_THR_INT_MASK</name>
              <description>Rx count threshold interrupt
*0: Unmask
*1: Mask</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IR_RX_FIFO_OF_INT_MASK</name>
              <description>Rx FIFO overflow
*0: Unmask
*1: Mask</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IR_RX_CNT_OF_INT_MASK</name>
              <description>RX counter overflow
*0: Unmask
*1: Mask</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IR_RX_FIFO_LEVEL_INT_MASK</name>
              <description>Rx FIFO level interrupt 
*0: Unmask
*1: Mask
When Rx FIFO offset &gt;= threshold value, this interrupt is triggered.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IR_RX_FIFO_FULL_INT_MASK</name>
              <description>Rx FIFO full interrupt
*0: Unmask
*1: Mask</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IR_RX_FIFO_DISCARD_SET</name>
              <description>When FIFO is full, new data is send to FIFO.
*0: Discard oldest data in FIFO.
*1: Reject new data sending to FIFO.</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IR_RX_FIFO_LEVEL_TH</name>
              <description>Rx FIFO interrupt threshold
When Rx FIFO depth &gt; threshold value, this interrupt is triggered.</description>
              <bitRange>[12:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IR_RX_FIFO_ERROR_INT_EN</name>
              <description>Rx FIFO error read interrupt
When Rx FIFO is empty, reading the Rx FIFO triggers this interrupt.
*0: Disable
*1: Enable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IR_RX_CNT_THR_INT_EN</name>
              <description>Rx count threshold interrupt
*0: Disable
*1: Enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IR_RX_FIFO_OF_INT_EN</name>
              <description>RX FIFO overflow
*0: Disable
*1: Enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IR_RX_CNT_OF_INT_EN</name>
              <description>RX counter overflow
*0: Disable
*1: Enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IR_RX_FIFO_LEVEL_INT_EN</name>
              <description>Rx FIFO level interrupt
When Rx FIFO offset &gt;= threshold value, this interrupt is triggered.
*0: Disable
*1: Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IR_RX_FIFO_FULL_INT_EN</name>
              <description>Rx FIFO full interrupt
*0: Disable
*1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IR_RX_SR</name>
          <addressOffset>0x0000001C</addressOffset>
          <size>32</size>
          <description>IR Rx FIFO and interrupt status register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IR_RX_FIFO_EMPTY</name>
              <description>*0: Not empty
*1: Empty</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>IR_RX_FIFO_FULL</name>
              <description>*0: Not full
*1: Full</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>IR_RX_FIFO_OFFSET</name>
              <description>Rx FIFO offset</description>
              <bitRange>[13:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>IR_RX_STATE</name>
              <description>*0: Idle
*1: Run</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>IR_RX_FIFO_ERROR_INT_STATUS</name>
              <description>Rx FIFO error read interrupt status
When Rx FIFO is empty, reading the Rx FIFO triggers this interrupt.
*0: Interrupt is inactive
*1: Interrupt is active</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>IR_RX_CNT_THR_INT_STATUS</name>
              <description>Rx count threshold interrupt status
*0: Interrupt is inactive
*1: Interrupt is active</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>IR_RX_FIFO_OF_INT_STATUS</name>
              <description>Rx FIFO overflow interrupt status
*0: Interrupt is inactive
*1: Interrupt is active</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>IR_RX_CNT_OF_INT_STATUS</name>
              <description>Rx counter overflow interrupt status
*0: Interrupt is inactive
*1: Interrupt is active</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>IR_RX_FIFO_LEVEL_INT_STATUS</name>
              <description>Rx FIFO level interrupt status
*0: Interrupt is inactive
*1: Interrupt is active</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>IR_RX_FIFO_FULL_INT_STATUS</name>
              <description>Rx FIFO full interrupt status
*0: Interrupt is inactive
*1: Interrupt is active</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IR_RX_INT_CLR</name>
          <addressOffset>0x00000020</addressOffset>
          <size>32</size>
          <description>IR Rx FIFO and interrupt clear register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IR_RX_FIFO_CLR</name>
              <description>Write 1 to clear Rx FIFO</description>
              <bitRange>[8:8]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>IR_RX_FIFO_ERROR_INT_CLR</name>
              <description>Rx FIFO error read interrupt
Write 1 to clear</description>
              <bitRange>[5:5]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>IR_RX_CNT_THR_INT_CLR</name>
              <description>Rx count threshold interrupt
Write 1 to clear</description>
              <bitRange>[4:4]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>IR_RX_FIFO_OF_INT_CLR</name>
              <description>Rx FIFO overflow interrupt
Write 1 to clear</description>
              <bitRange>[3:3]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>IR_RX_CNT_OF_INT_CLR</name>
              <description>Rx counter overflow interrupt
Write 1 to clear</description>
              <bitRange>[2:2]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>IR_RX_FIFO_LEVEL_INT_CLR</name>
              <description>Rx FIFO level interrupt
Write 1 to clear</description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>IR_RX_FIFO_FULL_INT_CLR</name>
              <description>Rx FIFO full interrupt
Write 1 to clear</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IR_RX_CNT_INT_SEL</name>
          <addressOffset>0x00000024</addressOffset>
          <size>32</size>
          <description>IR Rx count threshold configure register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IR_RX_CNT_THR_TRIGGER_LV</name>
              <description>Trigger level
*0: When low level counter &gt;= threshold, trigger interrupt
*1: When high level counter &gt;= threshold, trigger interrupt</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IR_RX_CNT_THR</name>
              <description>31-bits threshold</description>
              <bitRange>[30:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IR_RX_FIFO</name>
          <addressOffset>0x00000028</addressOffset>
          <size>32</size>
          <description>IR Rx FIFO register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IR_RX_LEVEL</name>
              <description>Rx Level
*1: High level
*0: Low level</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>IR_RX_CNT</name>
              <description>31 bits cycle duration</description>
              <bitRange>[30:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IR_VERSION</name>
          <addressOffset>0x0000002C</addressOffset>
          <size>32</size>
          <description>IR version register</description>
          <resetValue>0x1410150A</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IR_VERSION</name>
              <description>IR IP version</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IR_DUMMY</name>
          <addressOffset>0x00000030</addressOffset>
          <size>32</size>
          <description>IR Dummy Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>Reserved for HW</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>ledc</name>
      <baseAddress>0x41105000</baseAddress>
      <size>0x000000F8</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x000000F8</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>LEDC_CTRL_REG</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description>LEDC Control Register</description>
          <resetValue>0x0000003C</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TOTAL_DATA_LENGTH</name>
              <description>Total length of transfer data, range from 1 to 8K (unit: 32 bits, only low 24-bit is valid).
Actual transfer package is TOTAL_DATA_LENGTH+1.
The field is recommended to an integer multiple of (LED_NUM+1).
Note: If TOTAL_DATA_LENGTH is greater than (LED_NUM+1) but not integer multiple, the last frame of data will be transfered less than (LED_NUM+1).</description>
              <bitRange>[28:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RESET_LED_EN</name>
              <description>Write operation:
When software writes 1 to this bit, LEDC FSM turns to CPU_RESET_LED state, and CPU triggers LEDC to transfer a reset to LED. 
Note: Only when LEDC is in IDLE state, FSM can turn to CPU_RESET_LED state. 
* When LEDC finishs to send RESET to LED, LEDC FSM returns to the IDLE state, and hardware clears RESET_LED_EN.
* Or when software sets SOFT_RESET, LEDC FSM returns to IDLE state, and hardware clears RESET_LED_EN.
Read operation:
0: LEDC completes the transmission of LED reset operation.
1: LEDC does not complete the transmission of LED reset operation.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LED_POLARITY</name>
              <description>LED DI level when free.
0: Low level
1: High level</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LED_RGB_MODE</name>
              <description>LEDC inputs 24 bits data package in order of {byte2, byte1, byte0}.
000: Output 24 bits data package in order of {byte2, byte1, byte0}
001: Output 24 bits data package in order of {byte2, byte0, byte1}
010: Output 24 bits data package in order of {byte1, byte2, byte0}
011: Output 24 bits data package in order of {byte0, byte2, byte1}
100: Output 24 bits data package in order of {byte1, byte0, byte2}
101: Output 24 bits data package in order of {byte0, byte1, byte2}</description>
              <bitRange>[8:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LED_MSB_TOP</name>
              <description>Source RGB data format.
0: LSB
1: MSB</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LED_MSB_BYTE2</name>
              <description>LEDC outputs 24 bits data package in order of {byte2, byte1, byte0}.
1: Output data byte2 MSB first
0: Output data byte2 LSB first</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LED_MSB_BYTE1</name>
              <description>LEDC outputs 24 bits data package in order of {byte2, byte1, byte0}.
1: Output data byte1 MSB first
0: Output data byte1 LSB first</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LED_MSB_BYTE0</name>
              <description>LEDC outputs 24 bits data package in order of {byte2, byte1, byte0}.
1: Output data byte0 MSB first
0: Output data byte0 LSB first</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LEDC_SOFT_RESET</name>
              <description>LEDC software reset.
If software writes 1 to this bit, the next cycle hardware will clear LEDC_SOFT_RESET to 0, which will generate a pulse.
LEDC soft reset includes all interrupt status register, the control state machine returns to the IDLE state, LEDC FIFO read and write point is cleared to 0, LEDC interrupt is cleared.
The related registers are as below:
* LEDC_CTRL_REG (LEDC_EN is cleared to 0)
* LEDC_DATA_FINISH_CNT_REG (LEDC_DATA_FINISH_CNT is cleared to 0)
* LEDC_INT_STS_REG (all interrupt are cleared)
Other registers remain unchanged.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LEDC_EN</name>
              <description>LEDC enable bit.
0: Disable
1: Enable
This bit enable indicates that LEDC can be started when LEDC data has finished transmission, or this bit is cleared to 0 by hardware when software sets LEDC_SOFT_RESET.
Software clearing LEDC_EN when LEDC FSM is not IDLE doesn't affect data transfer.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LED_T01_Timing_CTRL_REG</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description>LED Timing Control Register</description>
          <resetValue>0x200C0C20</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>T1H_CNT</name>
              <description>LED modulate logical "1" high level time (T1H_TIME). 
Unit: cycle (40MHz), T1H_TIME = 25ns * T1H_CNT, where T1H_CNT&gt;0
T1H_TIME default value is 800ns.</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>T1L_CNT</name>
              <description>LED modulate logical "1" low level time.
Unit: cycle (40MHz), T1L_TIME = 25ns *T1L_CNT, where T1L_CNT&gt;0
T1L_TIME default value is 300ns.</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>T0H_CNT</name>
              <description>LED modulate logical "0" high level time.
Unit: cycle (40MHz), T0H_TIME = 25ns * T0H_CNT, where T0H_CNT&gt;0
T0H_TIME default value is 300ns.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>T0L_CNT</name>
              <description>LED modulate logical "0" low level time.
Unit: cycle (40MHz), T0L_TIME = 25ns *T0L_CNT, where T0L_CNT&gt;0
T0L_TIME default value is 800ns.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LEDC_DATA_FINISH_CNT_REG</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description>LEDC Data Finish Register</description>
          <resetValue>0x2EDF0000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>LED_WAIT_DATA_TIME</name>
              <description>The time that internal FIFO of LEDC is waiting for data.
The default value is 300us by default. 
To avoid to insert LED RESET between two-pixel data, hardware will send WAITDATA_TIMEOUT_INT when wait_time&gt;= min(RESET_TIME, LED_WAIT_DATA_TIME).
The adjust range is from 25ns ~ 819us, LED_WAIT_DATA_TIME = 25ns *(N+1) where N is from 0 to 0x7FFF.
When the setting time is exceeded, LEDC will send WAITDATA_TIMEOUT_INT interrupt. Under this abnormal situation, software should reset LEDC.</description>
              <bitRange>[30:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LED_DATA_FINISH_CNT</name>
              <description>The total LED data have been sent (range: 0 ~ 8K).
When LEDC transfer finishes normally, this register is cleared by hardware when generating trans_finish_int. Software knows LED_DATA_FINISH_CNT equal to TOTAL_DATA_LENGTH.
When LEDC transfer interrupt abnormally, this register will be cleared to 0 by software by setting LEDC_SOFT_RESET.</description>
              <bitRange>[12:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LED_RESET_TIMING_CTRL_REG</name>
          <addressOffset>0x0000000C</addressOffset>
          <size>32</size>
          <description>LED Reset Timing Control Register</description>
          <resetValue>0x2EDF0000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RESET_TIME</name>
              <description>Reset time control of LED lamp.
The default reset time is 300us.
The adjust range is from 25ns to 409.6us. RESET_TIME = 25ns *(N+1) where N is from 0 to 0x3FFF.</description>
              <bitRange>[29:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LED_NUM</name>
              <description>The number of external LED lamp. Maximum up to 1024.
The default value is 0, which indicate that 1 LED lamp is connected.
The range is from 0 to 1023.</description>
              <bitRange>[9:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LEDC_WAIT_TIME0_CTRL_REG</name>
          <addressOffset>0x00000010</addressOffset>
          <size>32</size>
          <description>LED Wait Time 0 Control Register</description>
          <resetValue>0x000001FF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>WAIT_TIME0_EN</name>
              <description>Wait time0 enable. 
When setting this bit, the controller automatically inserts waiting time before next LED package data.
0: Disable
1: Enable</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TOTAL_WAIT_TIME0</name>
              <description>Waiting time between 2 LED data, and LEDC outputs Low level during waiting time0.
The adjust range is from 25ns to 12.5us, WAIT_TIME0 = 25ns*(N+1), where N is from 0 to 0x1FF.</description>
              <bitRange>[8:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LEDC_WAIT_TIME1_CTRL_REG</name>
          <addressOffset>0x00000014</addressOffset>
          <size>32</size>
          <description>LED Wait Time 1 Control Register</description>
          <resetValue>0x01FFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>WAIT_TIME1_EN</name>
              <description>Wait time1 enable. 
When setting this bit, the controller automatically inserts waiting time before next LED frame data.
0: Disable
1: Enable</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TOTAL_WAIT_TIME1</name>
              <description>Waiting time between 2 frame data, and LEDC outputs Low level during waiting time1.
The adjust range is from 25ns to 53s, WAIT_TIME0 = 25ns*(N+1), where N is from 0 to 0x7FFFFFFF.</description>
              <bitRange>[30:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LEDC_DATA_REG</name>
          <addressOffset>0x00000018</addressOffset>
          <size>32</size>
          <description>LED Data Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>LEDC_DATA</name>
              <description>LEDC display data, the lower 24-bit is valid.
Writ this register means push data to LEDC FIFO.
Register LEDC_EN toggling from 0 to 1 will clear LEDC FIFO. Thus, only data pushed when LEDC_EN=1 will be send to LED.</description>
              <bitRange>[23:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LEDC_DMA_CTRL_REG</name>
          <addressOffset>0x0000001C</addressOffset>
          <size>32</size>
          <description>LED DMA Control Register</description>
          <resetValue>0x0000002F</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>LEDC_DMA_EN</name>
              <description>LEDC DMA request enable. 
0: Disable request of DMA transfer data
1: Enable request of DMA transfer data</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LEDC_FIFO_TRIG_LEVEL</name>
              <description>The remaining space of internal FIFO in LEDC.
When the remain space of internal LEDC FIFO is larger than LEDC_FIFO_TRIG_LEVEL, a DMA request or cpu_req_int will generate.
Note: The default value is 15. The adjust range is from 0 to 31, and the recommended configuration is 7 or 15.</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LED_INTERRUPT_CTRL_REG</name>
          <addressOffset>0x00000020</addressOffset>
          <size>32</size>
          <description>LED Interrupt Control Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>GLOBAL_INT_EN</name>
              <description>Global interrupt enable.
0: Disable
1: Enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FIFO_OVERFLOW_INT_EN</name>
              <description>FIFO overflow interrupt enable.
When the data written by software is more than internal FIFO level of LEDC, LEDC is in data loss state.
0: Disable
1: Enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WAITDATA_TIMEOUT_INT_EN</name>
              <description>The internal FIFO in LEDC can't get data after the LED_WAIT_DATA_TIME, the interrupt will be enable.
0: Disable
1: Enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FIFO_CPUREQ_INT_EN</name>
              <description>FIFO request CPU data interrupt enable.
0: Disable
1: Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LED_TRANS_FINISH_INT_EN</name>
              <description>Data transmission complete interrupt enable.
0: Disable
1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LED_INT_STS_REG</name>
          <addressOffset>0x00000024</addressOffset>
          <size>32</size>
          <description>LED FIFO Status Register</description>
          <resetValue>0x00020000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIFO_EMPTY</name>
              <description>FIFO empty status flag. 
When LEDC_EN is 0, FIFO_EMPTY equal 1. This flush residual data when LED_NUM is not integer multiples of burst length.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FIFO_FULL</name>
              <description>FIFO full status flag.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FIFO_OVERFLOW_INT</name>
              <description>FIFO overflow interrupt
Clear 0 when software set LEDC_SOFT_RESET.
The data written by external is more than the maximum storage space of LEDC FIFO. At this time, software needs to deal with the abnormal situation. LEDC performs soft_reset operation to refresh all data.
0: FIFO does not overflow.
1: FIFO overflows.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>WAITDATA_TIMEOUT_INT</name>
              <description>Before transfer a frame: When the internal FIFO in LEDC can't get data after the LED_WAIT_DATA_TIME, this bit is set.
During transfer of a frame (between two pixel of data): to avoid insert LED RESET between two pixel data, hardware will send WAITDATA_TIMEOUT_INT when wait_time&gt;= min(RESET_TIME,LED_WAIT_DATA_TIME).
Clear 0 when software sets LEDC_SOFT_RESET.
When new data arrives at WAIT_DATA state, LEDC will continue sending data. 
Note: Software should note that if the waiting time exceeds the operation of reset time, LEDC may enter refresh state, new data has not been sent.
0: LEDC is not timeout.
1: LEDC is timeout.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FIFO_CPUREQ_INT</name>
              <description>When FIFO data available is less than the threshold left, the interrupt is reported to CPU.
Clear 0 when software sets LEDC_SOFT_RESET.
0: FIFO doesn't request CPU for data.
1: FIFO request CPU to transfer data.
Note: When getting FIFO_CPUREQ_INT, CPU writes 1 data to LEDC Buffer. It is inefficiently compared to DMA mode.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LED_TRANS_FINISH_INT</name>
              <description>When the data configured as TOTAL_DATA_LENGTH has been transferred complete, this bit is set.
Clear 0 when software sets LEDC_SOFT_RESET.
0: Data transfer has not completed.
1: Data transfer has completed.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LEDC_DEBUG_SEL_REG</name>
          <addressOffset>0x00000030</addressOffset>
          <size>32</size>
          <description>LED Debug Select Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>LEDC_DEBUG_SEL_DRIVE</name>
              <description>Drive module debug out select.</description>
              <bitRange>[8:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LEDC_DEBUG_SEL_FIFO</name>
              <description>FIFO module debug out select.
[6:5]: select debug_data of ledc_txfifo, valid range is 0 or 1.
[4:3]: select output data byte when bit[6:5] is 0.
2'b00: byte0
2'b01: byte1
2'b1x: byte2</description>
              <bitRange>[6:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LEDC_DEBUG_SEL_TOP</name>
              <description>LEDC top module debug out select.</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DUMMY_F0</name>
          <addressOffset>0x000000F0</addressOffset>
          <size>32</size>
          <description>Dummy register</description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>Dummy register</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DUMMY_F4</name>
          <addressOffset>0x000000F4</addressOffset>
          <size>32</size>
          <description>Dummy register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>Dummy register</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>loguart</name>
      <baseAddress>0x4100F000</baseAddress>
      <size>0x000000F4</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x000000F4</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>UART_DLL</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description>UART divisor length register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>baud</name>
              <description>The low 8 bits of divisor coefficient (not used)</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_IER</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description>UART interrupt enable register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>etpfei</name>
              <description>Tx Path FIFO Empty interrupt (ETPFEI) (Tx Path FIFO empty) enable control
*000: All Tx Path FIFO empty interrupt disabled
*001: Tx Path1 FIFO Empty interrupt enabled
*010: Tx Path2 FIFO Empty interrupt enabled
*011: Tx Path3 FIFO Empty interrupt enabled
*100: Tx Path4 FIFO Empty interrupt enabled
*Others: Reserved</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>etoi</name>
              <description>Rx timeout interrupt (ETOI) enable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>emdi</name>
              <description>Rx path monitor done interrupt (EMDI) enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>edssi</name>
              <description>Modem Status Interrupt (EDSSI) (modem status transition) enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>elsi</name>
              <description>Receiver Line Status Interrupt (ELSI) (receiver line status) enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>erbi</name>
              <description>Received Data Available Interrupt (ERBFI) (Rx trigger) enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_IIR</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description>UART interrupt identification register</description>
          <resetValue>0x00000001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>int_pend</name>
              <description>Indicate if the interrupt is pending.
*0: Pending, and the IIR contents may be used as a pointer to the appropriate interrupt service routine.
*1: No interrupt is pending.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_LCR</name>
          <addressOffset>0x0000000C</addressOffset>
          <size>32</size>
          <description>UART line control register</description>
          <resetValue>0x00000001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dlab</name>
              <description>Divisor Latch Access bit, and control the accessibility of the DLL, DLM and IER registers
* 0: The divisor latches not accessible; IER accessible
* 1: The divisor latches accessible; DLL and DLM accessible
Note: THR/RBR don't care the value of dlab bit</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>brctl</name>
              <description>Break Control bit
* 0: break signal disable
* 1: break signal enable (logic '0')</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>stkp</name>
              <description>Stick Parity bit
* 0: Not stick parity, the parity type is ODD or EVEN (depending on eps)
* 1: Stick parity, eps=1: low parity (1'b0); eps=0: high parity (1'b1)</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>eps</name>
              <description>Even Parity select
* 0: Odd parity, the number of Logic "1" is odd.
* 1: Even parity, the number of Logic "1" is even.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pen</name>
              <description>Parity Enable
* 0: No parity bit
* 1: Parity bit is generated on each outgoing character and is checked on each incoming one</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>stb</name>
              <description>Stop bits length selection
* 0: 1 stop bit
* 1: 2 stop bits
Note: The receiver always checks the first stop bit only.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>wls0</name>
              <description>Word length selection
* 0: 7 bits data
* 1: 8 bits data</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_MCR</name>
          <addressOffset>0x00000010</addressOffset>
          <size>32</size>
          <description>UART modem control register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>afe</name>
              <description>Auto flow control enable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>loop_en</name>
              <description>LoopBack mode
* 0: Normal operation mode
* 1: Loopback mode</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>out2</name>
              <description>Auxiliary output 2
Bit[3] affects the OUT2_ output in a manner identical to that described above set to 0
In loopback mode, connected to Data Carrier Detect (DCD)</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>out1</name>
              <description>Auxiliary output 1
Bit3 affects the OUT1_ output in a manner identical to that described above set to 0
In loopback mode, connected to Ring Indicator (RI)</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rts</name>
              <description>Request to Send (RTS) signal control
* 0: RTS is logic 1.
* 1: RTS is logic 0.
This bit controls the RTS_ output, Bit 1 affects the RTS_ output in a manner identical to that described above set to 0.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dtr</name>
              <description>Data Terminal Ready (DTR) signal control
* 0: DTR is logic 1.
* 1: DTR is logic 0.
This bit controls the DTR output.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_LSR</name>
          <addressOffset>0x00000014</addressOffset>
          <size>32</size>
          <description>UART line status register</description>
          <resetValue>0x00000200</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>rx_fifo_ptr</name>
              <description>Data bytes count in the receive FIFO: the value of rx_fifo_ptr[7:0] indicates the data bytes number received in the FIFO.</description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>tp4f_not_full</name>
              <description>Tx Path4 FIFO not full indicator</description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>tp3f_not_full</name>
              <description>Tx Path3 FIFO not full indicator</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>tp2f_not_full</name>
              <description>Tx Path2 FIFO not full indicator</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>tp1f_not_full</name>
              <description>Tx Path1 FIFO not full indicator</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>tp4f_empty</name>
              <description>Tx Path4 FIFO empty indicator</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>tp3f_empty</name>
              <description>Tx Path3 FIFO empty indicator</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>tp2f_empty</name>
              <description>Tx Path2 FIFO empty indicator</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>tp1f_empty</name>
              <description>Tx Path1 FIFO empty indicator</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>rp_rxfifo_err</name>
              <description>Relay Path rx_error,only valid when the FCR[12] set to 1
* 0: Clear when the CPU reads the LSR, if there are no subsequent errors in the relay path FIFO
* 1: Parity error, framing error or break indication in the relay path FIFO</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TIMEOUT_INT</name>
              <description>This bit is only set when Rx Timeout interrupt is enabled(ETOI is set)
1: at least one character in the FIFO but no character has been input to the FIFO or reading from it for the time duration, which depends on the value in register REG_RX_PATH_CTRL[31:16]</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RXFIFO_INT</name>
              <description>This bit is only set when Received Data Available Interrupt interrupt is enabled(ERBI is set)
1: FIFO Trigger level reached or Rx FIFO full</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>rp_frm_err</name>
              <description>Relay Path Framing Error (FE) indicator
* 0: No framing error in the current character
* 1: The received character does not have a valid stop bit</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>rp_par_err</name>
              <description>Relay Path Parity Error (PE) indicator
* 0: No parity error in current character
* 1: The received character does not have the correct parity bit</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>rpf_ovr_err</name>
              <description>Relay Path FIFO Overrun Error (OE) indicator
* 0: No Overrun state
* 1: The transmission is continue although the Relay FIFO is full</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>rpf_not_full</name>
              <description>Relay Path FIFO Not FULL (NF) indicator
* 0: Relay path FIFO is full
* 1: Relay path FIFO is not full</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>rpf_drdy</name>
              <description>Relay Path FIFO Data Ready (DR) indicator
* 0: No characters in the Relay Receiver FIFO
* 1: At least one character has been received and transferred into the Relay path FIFO</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>rxfifo_err</name>
              <description>Uart_rx_error, only valid when the FCR bit [0] set to 1
* 0: Clear when the CPU reads the LSR, if there are no subsequent errors in the FIFO
* 1: Parity error, overrun error,framing error or break indication in the FIFO</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>tx_empty</name>
              <description>TX fifo empty indicator</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>monitor_done_int</name>
              <description>This bit is only set when Rx Path Monitor Done interrupt is enabled(EMDI is set)
1: Rx path monitor done</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>break_int</name>
              <description>Break Interrupt (BI) indicator
* 0: No break condition in the current character
* 1: The received data input held in the Spacing ( logic 0) state is longer than a full word transmission time</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>frm_err</name>
              <description>Framing Error (FE) indicator
* 0: No framing error in the current character
* 1: The received character does not have a valid stop bit</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>par_err</name>
              <description>Parity Error (PE) indicator
* 0: No parity error in current character
* 1: The received character does not have the correct parity bit</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ovr_err</name>
              <description>Overrun Error (OE) indicator
* 0: No Overrun state
* 1: The transmission is continue although the Rx FIFO is full</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>drdy</name>
              <description>Data Ready (DR) indicator
* 0: No characters in the Receiver FIFO
* 1: At least one character has been received and transferred into the FIFO</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_MSR</name>
          <addressOffset>0x00000018</addressOffset>
          <size>32</size>
          <description>UART modem status register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_dcd</name>
              <description>Complement of the DCD input or equals to Out2 in loopback mode.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>r_ri</name>
              <description>Complement of the RI input or equals to Out1 in loopback mode.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>r_dsr</name>
              <description>Complement of the DSR input or equals to DTR in loopback mode.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>r_cts</name>
              <description>Complement of the CTS input or equals to RTS in loopback mode.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>d_dcd</name>
              <description>Delta Data Carrier Detect (DDCD) indicator
* 0: Otherwise
* 1: The DCD line has changed its state</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>teri</name>
              <description>Trailing Edge of Ring Indicator (TERI) detector
* 0: Otherwise
* 1: The RI line has changed its state from low to high state</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>d_dsr</name>
              <description>Delta Data Set Ready (DDSR) indicator
* 0: Otherwise
* 1: The DSR line has changed its state</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>d_cts</name>
              <description>Delta Clear to Send (DCTS) indicator
* 0: Otherwise
* 1: The CTS line has changed its state</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_SCR</name>
          <addressOffset>0x0000001C</addressOffset>
          <size>32</size>
          <description>UART scratch pad register</description>
          <resetValue>0x00000030</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>xfactor_adj</name>
              <description>One factor of Baud rate calculation for Tx path</description>
              <bitRange>[26:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dbg_sel</name>
              <description>Debug port selection</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>scratch_7</name>
              <description>clear Rx break signal interrupt status</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>scratch_6_0</name>
              <description>*Bit[6]: Rx break signal interrupt enable
*Bit[5]: fl_set_bi_err
*Bit[4]: fl_frame_err
*Bit[3]: pin_lb_test
*Bit[2:0]: reserved</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_STSR</name>
          <addressOffset>0x00000020</addressOffset>
          <size>32</size>
          <description>UART STS register</description>
          <resetValue>0x00010470</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>xfactor</name>
              <description>Factor of Baud rate calculation for Tx path</description>
              <bitRange>[23:4]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_RBR</name>
          <addressOffset>0x00000024</addressOffset>
          <size>32</size>
          <description>UART receiver buffer register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>rxdatabit</name>
              <description>Tx data bit 0~7
Note: Bit[0] is the least significant bit. It is the first bit serially received/transmitted.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_MISCR</name>
          <addressOffset>0x00000028</addressOffset>
          <size>32</size>
          <description>UART MISC control register</description>
          <resetValue>0x00000420</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>clr_dummy_flag</name>
              <description>Indicate the clearing of dummy data</description>
              <bitRange>[24:24]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>dummy_data</name>
              <description>Store dummy data, when UART is DMA flow controller, dummy data is padded for last RXDMA burst request</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rxdma_owner</name>
              <description>Indicate the DMA flow controller for UART Rx DMA1
* 0: GDMA
* 1: UART, interrupt enable signal other than erpd should be masked</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>irda_rx_inv</name>
              <description>irda_rx_i reverse input enable</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>irda_tx_inv</name>
              <description>irda_tx_o reverse output enable</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rxdma_burstsize</name>
              <description>RXDMA burstsize, maximum value is 16</description>
              <bitRange>[12:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>txdma_burstsize</name>
              <description>TXDMA burstsize, maximum value is 16</description>
              <bitRange>[7:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rxdma_en</name>
              <description>RXDMA enable, valid when dma_mode in FCR is 1'b1</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>txdma_en</name>
              <description>TXDMA enable, valid when dma_mode in FCR is 1'b1</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>irda_enable</name>
              <description>IrDA SIR mode enable
* 0: UART mode only
* 1: UART is co-work with IRDA SIR mode</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_REG_SIR_TX_PWC0</name>
          <addressOffset>0x0000002C</addressOffset>
          <size>32</size>
          <description>UART IRDA SIR Tx pulse width control 0 register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>upperbound_shiftright</name>
              <description>Indicate the shift type of SIR Tx pulse's right edge
* 0: Shift left, minus offset value of upperbound_shiftval
* 1: Shift right, plus offset value of upperbound_shiftval</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>upperbound_shiftval</name>
              <description>The shift value of SIR Tx pulse's right edge</description>
              <bitRange>[30:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>lowbound_shiftright</name>
              <description>Indicate the shift type of SIR Tx pulse's left edge
* 0: Shift left, minus offset value of lowbound_shiftval
* 1: Shift right, plus offset value of lowbound_shiftval</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>lowbound_shiftval</name>
              <description>The shift value of SIR Tx pulse's left edge</description>
              <bitRange>[14:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_REG_SIR_RX_PFC</name>
          <addressOffset>0x00000030</addressOffset>
          <size>32</size>
          <description>UART IRDA SIR Rx pulse filter control register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_sir_rx_filter_thrs</name>
              <description>The threshold of SIR Rx filter. Rx pulse is valid only when Rx pulse width is larger than the threshold.</description>
              <bitRange>[15:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_sir_rx_filter_en</name>
              <description>IrDA SIR Rx filter enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_REG_BAUD_MON</name>
          <addressOffset>0x00000034</addressOffset>
          <size>32</size>
          <description>UART baud monitor register</description>
          <resetValue>0x07000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>toggle_mon_en</name>
              <description>Toggle monitor enable</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>mon_data_vld</name>
              <description>Indicate valid monitoring data</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>falling_thresh</name>
              <description>Indicate the threshold of Rx data rising edge</description>
              <bitRange>[29:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>min_low_period</name>
              <description>Minimum space of consecutive logic "0" of Rx data</description>
              <bitRange>[23:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>min_fall_space</name>
              <description>Minimum space of adjacent falling edge of Rx data</description>
              <bitRange>[11:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_REG_DBG</name>
          <addressOffset>0x0000003C</addressOffset>
          <size>32</size>
          <description>UART debug register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dbg_uart</name>
              <description>The output value of debug port, depend on dbg_sel value in SCR[2:0]</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_REG_RX_PATH_CTRL</name>
          <addressOffset>0x00000040</addressOffset>
          <size>32</size>
          <description>UART Rx path control register</description>
          <resetValue>0x00400000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_rxto_thrs</name>
              <description>Indicate the timeout threshold of Rx path, unit in one-bit time</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rxbaud_adj_10_0</name>
              <description>One factor of Baud rate calculation for Rx path, similar with xfactor_adj</description>
              <bitRange>[13:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_rst_newrx_n</name>
              <description>Reset new Rx path, low active</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_REG_MON_BAUD_CTRL</name>
          <addressOffset>0x00000044</addressOffset>
          <size>32</size>
          <description>UART monitor baud rate control register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_upd_osc_in_xtal</name>
              <description>Update parameter r_cycnum_perbit_osc(during the update of parameter r_cycnum_perbit_xtal) enable</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cycnum_perbit_osc</name>
              <description>Indicate the average OSC clock cycle number of one bit, for Rx path OSC clock
Note: Sortware sets the initial value; hardware updates it depending on the monitor result.</description>
              <bitRange>[28:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_bit_num_thres</name>
              <description>Indicate the bit number threshold of one monitor period, max value is 127.</description>
              <bitRange>[8:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_mon_baud_en</name>
              <description>Monitor Rx baud enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_REG_MON_BAUD_STS</name>
          <addressOffset>0x00000048</addressOffset>
          <size>32</size>
          <description>UART monitor baud rate status register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ro_mon_total_bit</name>
              <description>Indicate the number of bits actually monitored</description>
              <bitRange>[28:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ro_mon_rdy</name>
              <description>Indicate the finish of calculation of actual cycle number per bit. It's cleared when r_mon_baud_en is 0.</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>r_cycnum_perbit_xtal</name>
              <description>Indicate the fractional xtal clock cycle number of one bit, for Rx path xtal clk
Note: Sortware sets the initial value; hardware updates it depending on the monitor result.</description>
              <bitRange>[19:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_REG_MON_CYC_NUM</name>
          <addressOffset>0x0000004C</addressOffset>
          <size>32</size>
          <description>UART monitored cycle number register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ro_mon_total_cycle</name>
              <description>Indicate the number of clock cycle actually monitored</description>
              <bitRange>[27:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_REG_Rx_BYTE_CNT</name>
          <addressOffset>0x00000050</addressOffset>
          <size>32</size>
          <description>UART Rx data byte count register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>clr_rx_byte_cnt</name>
              <description>Write 1 to clear ro_rx_byte_cnt</description>
              <bitRange>[16:16]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>ro_rx_byte_cnt</name>
              <description>Count the byte number of data read from rxfifo</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_FCR</name>
          <addressOffset>0x00000054</addressOffset>
          <size>32</size>
          <description>UART FIFO control register</description>
          <resetValue>0x000010C1</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>rp_recv_clr</name>
              <description>Clear Relay Path receiving</description>
              <bitRange>[13:13]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>rp_fifo_en</name>
              <description>Error report of Relay Path RCVR FIFO field enable,</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>recvtrg</name>
              <description>Define the 16-entry Receiver FIFO Interrupt trigger level (0~15 bytes)
* 00: 1 byte
* 01: FIFO_DEPTH/4
* 10: FIFO_DEPTH/2
* 11: FIFO_DEPTH-2</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dma_mode</name>
              <description>Support DMA mode (cooperating with DW DDMA in the data path)</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>recv_clr</name>
              <description>Clear receiving</description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>fifo_en</name>
              <description>Error report of RCVR FIFO field enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_AGGC</name>
          <addressOffset>0x00000058</addressOffset>
          <size>32</size>
          <description>UART AGG control register</description>
          <resetValue>0x00BB87FF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>rp_en</name>
              <description>Relay Rx Path enable
*0: Disable
*1: Enable</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tp4_en</name>
              <description>Tx Path4 enable
*0: Disable
*1: Enable</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tp3_en</name>
              <description>Tx Path3 enable
*0: Disable
*1: Enable</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tp2_en</name>
              <description>Tx Path2 enable
*0: Disable
*1: Enable</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tp1_en</name>
              <description>Tx Path1 enable
*0: Disable
*1: Enable</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>agg_en</name>
              <description>Tx AGG function enable</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>agg_to</name>
              <description>AGG timeout
Unit is one baudrate period of loguart Tx, default is 1ms if Tx baudrate is 3Mbps.
Data should be sent from log FIFO to tx_fifo if idle time &gt; AGG timeout, even if there is just only one byte in log FIFO of the path.</description>
              <bitRange>[25:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>agg_th</name>
              <description>AGG threshold 
4'0000: 1
4'0111: 8
Numbers above 4'0111 are reserved.</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>agg_sync_pat</name>
              <description>AGG packet Start</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_THR0</name>
          <addressOffset>0x0000005C</addressOffset>
          <size>32</size>
          <description>UART transmitter holding register 0</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>tx0databit</name>
              <description>Tx data bit 0~7
Note: Bit 0 is the least significant bit. It is the first bit serially received/transmitted</description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_THR1</name>
          <addressOffset>0x00000060</addressOffset>
          <size>32</size>
          <description>UART transmitter holding register 1</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>tx1databit</name>
              <description>Tx data bit 0~7
Note: Bit 0 is the least significant bit. It is the first bit serially received/transmitted</description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_THR2</name>
          <addressOffset>0x00000064</addressOffset>
          <size>32</size>
          <description>UART transmitter holding register 2</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>tx2databit</name>
              <description>Tx data bit 0~7
Note: Bit 0 is the least significant bit. It is the first bit serially received/transmitted</description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_THR3</name>
          <addressOffset>0x00000068</addressOffset>
          <size>32</size>
          <description>UART transmitter holding register 3</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>tx3databit</name>
              <description>Tx data bit 0~7
Note: Bit 0 is the least significant bit. It is the first bit serially received/transmitted</description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_RP_LCR</name>
          <addressOffset>0x0000006C</addressOffset>
          <size>32</size>
          <description>UART Relay Rx Path line control register</description>
          <resetValue>0x00000001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>rp_rxbaud_19_0</name>
              <description>Factor of Baud rate calculation for Relay path</description>
              <bitRange>[31:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rp_dlab</name>
              <description>Divisor Latch Access bit, and control the accessibility of the DLL, DLM and IER registers
* 0: The divisor latches not accessible; IER accessible
* 1: The divisor latches accessible; DLL and DLM accessible
Note: THR/RBR don not care the value of dlab bit.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rp_stkp</name>
              <description>Stick Parity bit
* 0: Not stick parity, the parity type is ODD or EVEN (depend on eps)
* 1: Stick parity, eps=1: low parity (1'b0); eps=0: high parity (1'b1)</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rp_eps</name>
              <description>Even Parity select
* 0: Odd parity, the number of Logic "1" is odd.
* 1: Even parity, the number of Logic "1" is even.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rp_pen</name>
              <description>Parity Enable
* 0: No parity bit
* 1: Parity bit is generated on each outgoing character and is checked on each incoming one.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rp_stb</name>
              <description>Stop bits length selection
* 0: 1 stop bit
* 1: 2 stop bits
Note: the receiver always checks the first stop bit only.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rp_wls0</name>
              <description>Word length selection
* 0: 7 bits data
* 1: 8 bits data</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_RP_RX_PATH_CTRL</name>
          <addressOffset>0x00000070</addressOffset>
          <size>32</size>
          <description>UART Relay Rx path control register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>rp_rxbaud_adj_10_0</name>
              <description>One factor of Baud rate calculation for Relay path, similar with xfactor_adj</description>
              <bitRange>[13:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_rst_rp_rx_n</name>
              <description>Reset Relay Rx path, low active</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_ICR</name>
          <addressOffset>0x00000074</addressOffset>
          <size>32</size>
          <description>UART interrupt clear register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RPRLSICF</name>
              <description>Relay Path Receiver Line Statue Interrupt Clear Flag
Writing 1 to this bit clears relay path's PARITY_ERR, OVERRUN_ERR, FRAMING_ERR and RXFIFO_ERR  in the USART_LSR register.</description>
              <bitRange>[3:3]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>MDICF</name>
              <description>Monitor done clear flag</description>
              <bitRange>[2:2]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>TOICF</name>
              <description>Timeout Interrupt Clear Flag</description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>RLSICF</name>
              <description>Receiver Line Statue Interrupt Clear Flag
Writing 1 to this bit clears PARITY_ERR, OVERRUN_ERR, FRAMING_ERR, BREAK_ERR_INT and RXFIFO_ERR  in the USART_LSR register.</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LOGUART_INTERRUPT_MASK</name>
          <addressOffset>0x00000078</addressOffset>
          <size>32</size>
          <description>loguart interrupt mask Register</description>
          <resetValue>0x00000003</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>loguart_intr_mask_km4</name>
              <description>mask loguart interrupt to km4
1:unmask
 0:mask</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>loguart_intr_mask_km0</name>
              <description>mask loguart interrupt to km0
1:unmask
 0:mask</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LOGUART_DUMMY</name>
          <addressOffset>0x000000F0</addressOffset>
          <size>32</size>
          <description>Loguart Dummy Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>rsvd for hw</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>sdm</name>
      <baseAddress>0x41009000</baseAddress>
      <size>0x00000024</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00000024</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>SDM_CTRL0</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description>SDM Control Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SDM_EN</name>
              <description>Enable SDM</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SDM_RST</name>
              <description>0: Reset SDM</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SDM_BYPASSS_MOD_EN</name>
              <description>Bypass mode enable</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SDM_MOD_SEL</name>
              <description>0: Default mode
1: User-defined parameter mode</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CAL_DONE</name>
              <description></description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TIME_LOSS_SET</name>
              <description>Time loss set
1: User-defined</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TIME_LOSS_HIGH</name>
              <description>Decide 32k output compensation direction
1: Mask
0: Add</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ALWAYS_CAL_EN</name>
              <description>1: Enable always_cal</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TIMER_CAL_EN</name>
              <description>1: Enable timer_cal</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_SEL</name>
              <description>XTAL frequency select, default 40M
* 4'h0: XTAL40M
* 4'h1: XTAL25M
* 4'h4: XTAL20M
* 4'h5: XTAL26M
* 4'hD: XTAL27M
* 4'hE: XTAL24M</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SDM_CTRL1</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description>Config observed 128K cycle</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SDM_OBS_CYC</name>
              <description>Set observed 128k cycle, default 1024 128k cycles</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SDM_CTRL2</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description>Set ref counter value</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SDM_OBS_REF_CYC</name>
              <description>Set in observed cycles, refer to counters value, default 312500 XTAL cycles</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SDM_CTRL3</name>
          <addressOffset>0x0000000C</addressOffset>
          <size>32</size>
          <description>Set XTAL period</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>XTAL_PERIOD</name>
              <description>Set reference xtal period (ns)</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SDM_CTRL4</name>
          <addressOffset>0x00000010</addressOffset>
          <size>32</size>
          <description>SDM Debug Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SDM_DBG_EN</name>
              <description>1: Enable SDM debug</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SDM_DBG_SEL</name>
              <description>Set in observed cycles, refer to counters value</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SDM_CTRL5</name>
          <addressOffset>0x00000014</addressOffset>
          <size>32</size>
          <description>Time loss Set</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TIME_LOSS_REG</name>
              <description>Source clock time loss every cycle</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SDM_TIMEOUT</name>
          <addressOffset>0x0000001C</addressOffset>
          <size>32</size>
          <description>Set Timer Trigger Counter Value</description>
          <resetValue>0x02000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TIMEOUT_CNT</name>
              <description>Set SDM timer trigger calibration timeout value</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SDM_DUMMY</name>
          <addressOffset>0x00000020</addressOffset>
          <size>32</size>
          <description>SDM Dummy Register</description>
          <resetValue>0x0000FFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>dummy register</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>otpc</name>
      <baseAddress>0x41000000</baseAddress>
      <size>0x00000044</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00000044</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>OTP_ALD</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>load_fail</name>
              <description>Autoload fail flag</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>load_done</name>
              <description>Autoload done flag</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>srst</name>
              <description>Soft reset data path except register</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OTP_SCAN</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ef_scan_saddr</name>
              <description>EFuse Scan start Address (unit in byte)</description>
              <bitRange>[25:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ef_scan_eaddr</name>
              <description>EFuse Scan End address</description>
              <bitRange>[16:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ef_scan_fail</name>
              <description>Test Scan Report
1: Fail
0: Ok</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ef_scan_thd</name>
              <description>Write this field will trig a scan operation</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OTP_AS</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ef_rd_wr_ns</name>
              <description>Write this bit will trig an indirect read or write.
Write 1: trigger write
write 0: trigger read
After this operation done, this bit will toggle.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ef_mode_sel_ns</name>
              <description>OTP Mode Selection
000: User Mode
001: Initial Margin Read Mode(room temp)
010: Program Margin Read Mode(room temp)
011: Initial Margin Read Mode(high temp)
100: Program Margin Read Mode(high temp)</description>
              <bitRange>[21:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ef_addr_ns</name>
              <description>OTP indirect read or write address</description>
              <bitRange>[18:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ef_data_ns</name>
              <description>OTP indirect read or write data</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OTP_AS_SEC</name>
          <addressOffset>0x0000000C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ef_rd_wr_s</name>
              <description>Write this bit will trig an indirect read or write.
Write 1: trigger write
write 0: trigger read
After this operation done, this bit will toggle.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ef_mode_sel_s</name>
              <description>OTP Mode Selection
000: User Mode
001: Initial Margin Read Mode(room temp)
010: Program Margin Read Mode(room temp)
011: Initial Margin Read Mode(high temp)
100: Program Margin Read Mode(high temp)</description>
              <bitRange>[21:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ef_addr_s</name>
              <description>OTP indirect read or write address</description>
              <bitRange>[18:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ef_data_s</name>
              <description>OTP indirect read or write data</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OTP_TEST_MODE</name>
          <addressOffset>0x00000010</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ef_mode</name>
              <description>OTP Test Mode Selection
0000: User Read Mode
0001: Initial Margin Read Mode(room temp)
0010: Program Margin Read Mode(room temp)
0011: Initial Margin Read Mode(high temp)
0100: Program Margin Read Mode(high temp)
0101: User Write Mode
1001: Repair Margin Read Mode
1010: Repair Check Mode
1011: Repair Program Mode
Bit[3]=0: User mode and Test mode
Bit[3]=1: Use Repair mode</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OTP_CTRL</name>
          <addressOffset>0x00000014</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00061A7F</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ef_pg_pwd</name>
              <description>OTP program password.
OTP can be programed only when this value is 8'h69.</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ef_dslp_tim</name>
              <description>OTP auto return back to dslp if no operation during ef_dslp_tim (40Mhz)</description>
              <bitRange>[18:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OTP_TEST</name>
          <addressOffset>0x00000018</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ef_rp_chk</name>
              <description>Check result
2'b00: Good sample
2'b01: Repairable sample
2'b11: Failure sample</description>
              <bitRange>[4:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ef_trow_en</name>
              <description>Test row enable
2'b01: test row enable
2'b10: test column enable</description>
              <bitRange>[2:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ef_pgrd_imr</name>
              <description>When using mode selection under OTP_Test , this signal needs to be raised to mask mode selection in OTP_AS_SEC/OTP_AS to avoid mode conflict
0: Unmask Program Margin Read Mode and Initial Margin Read Mode of OTP_AS_SEC/OTP_AS register
1: Mask Program Margin Read Mode and Initial Margin Read Mode of OTP_AS_SEC/OTP_AS register</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OTP_TIME</name>
          <addressOffset>0x0000001C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00012492</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ef_pph</name>
              <description>OTP Program Hold time. In the unit of cycle time (5us&lt; Tpph &lt;20us)
For input clock 20 MHz/26 MHz
0: 4us
1: 6us
2: 8us (default)
3: 10us
4: 12us
5: 14us
6: 18us
7: 21us</description>
              <bitRange>[17:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ef_pps</name>
              <description>OTP Program Setup time  time. In the unit of cycle time (5us&lt; Tpps&lt;20us)
For input clock 20 MHz/26 MHz
0: 4us
1: 6us
2: 8us (default)
3: 10us
4: 12us
5: 14us
6: 18us
7: 21us</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ef_ppsr</name>
              <description>OTP Program  Recovery time. In the unit of cycle time (5us&lt; Tppr&lt;100us)
For input clock 20 MHz/26 MHz
0: 4us
1: 15us
2: 30us (default)
3: 45us
4: 60us
5: 75us
6: 90us
7: 101us</description>
              <bitRange>[11:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ef_tpwi</name>
              <description>Program Pulse Interval Time (1us&lt;ef_tpwi&lt;5us)
For input clock 20 MHz/26 MHz
0: 0.5us
1: 1.5us
2: 2us (default)
3: 2.5us
4: 3us
5: 3.5us
6: 4us
7: 5.5us</description>
              <bitRange>[8:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ef_tpw</name>
              <description>Program pulse width time.OTP Program Pulse width Time (20us&lt;ef_tpw&lt;25us)
For input clock 20 MHz/26 MHz
0: 19.5us
1: 23us
2: 23.5us (default)
3: 24us
4: 24.5us
5: 25.5us</description>
              <bitRange>[5:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ef_csp</name>
              <description>IP enable time in program (10us&lt;ef_csp&lt;100us)
For input clock 20 MHz/26 MHz
0: 5us
1: 15us
2: 30us (default)
3: 45us
4: 60us
5: 75us
6: 90us
7: 101us</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OTP_ALD_EN</name>
          <addressOffset>0x00000020</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>user_err_flag</name>
              <description>When the autoload format in the user zone is incorrectly written, the signal will be raised.</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>load_lzon_err</name>
              <description>When the actual autoload data in the logical region is larger than the planned physical interval, this error signal will be high</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>load_en</name>
              <description>Soft load enable, write one auto clear</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>load_lzon</name>
              <description>Logic load zone select (currently only supports software to trigger autoload in rom area)
0bit: 11'h0 - 11'h7 system data
1bit: 11'h8 - 11'h1F AON hareware data
2bit: 11'h140 - 11'h1AF LS hareware data
3bit: 11'h300 - 11'h32F AON pmc patch
4bit: 11'h340 - 11'h36F LS pmc patch
5bit: 11'h380 - 11'h3FF AON register patch
6bit: 11'h400 - 11'h47F LS register patch 
7bit: It's invalid to write 1 or 0.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>load_pzon</name>
              <description>physical load zone select</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OTP_DEBUG</name>
          <addressOffset>0x00000024</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ef_debug_en</name>
              <description>Debug enable</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ef_debug_state</name>
              <description>State machine operating state
[8:5]: autoload state.
[4:3]: rd/wr ctrl state.
[2:0]: wav state.Working status of different modes.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OTP_CRC_DATA</name>
          <addressOffset>0x00000030</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>crc_data_act</name>
              <description>Actual crc data by hw calurate .
Note : even CRC disabled by crc entry , this value will also get by hw.</description>
              <bitRange>[31:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>crc_data_exp</name>
              <description>Expect crc data from physical zone</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OTP_CRC_RESULT</name>
          <addressOffset>0x00000034</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>crc_fail</name>
              <description>CRC compare fail flag .
If CRC is disable by CRC_ENTRY , this bit will be 0</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>crc_trigger_en</name>
              <description>The software enables calculation of the CRC in the secure zone and returns the calculated value(200-36f)</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>crc_entry_en</name>
              <description>one-hot bit for CRC_entry enable flag . 
If this value is 0 , it means CRC is disabled</description>
              <bitRange>[19:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>crc_magic</name>
              <description>magic data read from valid CRC entry</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OTP_REPAIR_TIME</name>
          <addressOffset>0x00000038</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x71F00200</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ef_rep_wcnt</name>
              <description>Configure the maximum address  in  Repair Program Mode.The default values are usually used. Please do not change them arbitrarily</description>
              <bitRange>[31:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ef_rep_rcnt</name>
              <description>Configure the maximum address to read in both read modes of REPAIR (Repair Margin Read Mode, Repair Check Mode )
1. for Repair Margin Read Mode, ef_rep_rcnt is 12'd513
2.for Repair Check Mode, er _rep_rcnt is 12'd0</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OTP_HID_PRO</name>
          <addressOffset>0x0000003C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>hid_pro_w_pwd</name>
              <description>to protect hidden zone</description>
              <bitRange>[31:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OTP_PARAM</name>
          <addressOffset>0x00000040</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>TO DO</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>otpc_sec</name>
      <baseAddress>0x41000000</baseAddress>
      <size>0x00000744</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00000744</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>REG_OTP_SYSCFG0</name>
          <addressOffset>0x00000100</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>USB_DOWNLOAD_EN</name>
              <description>USB download enable
0: disable
1: enable</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>USB_CLK_CAL_EN</name>
              <description>SoC clock calibration for USB
0: disable
1: enable</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BOOT_RAND_DELAY_EN</name>
              <description>Enable random boot delay
0: disable
1: enable</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LOGIC_RDP_EN</name>
              <description>RDP enable</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LOGIC_RSIP_EN</name>
              <description>RSIP enable</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LOGIC_SECURE_BOOT_EN</name>
              <description>Secure boot enable</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LOW_BAUD_LOG_EN</name>
              <description>Loguart Baudrate selection
1: 115200bps
0: 1.5Mbps</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DIS_BOOT_LOG_EN</name>
              <description>Boot log disable</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sw_rsvd_0</name>
              <description>Reserved for SW usage</description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BOOT_CNT_LMT_EN</name>
              <description>Enable boot count limit
0: disable
1: enable</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BOOT_SEL_FLASH</name>
              <description>Boot select. Boot from internal flash or external flash.
0'b0: internal flash
0'b1: external flash</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BOOT_FLASH_BAUD_SEL</name>
              <description>Boot Flash clock selection. Baudrate = 40/(2*(1+x))
0: 20M
1: 10M</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPIC_BOOT_SPEEDUP_DIS</name>
              <description>SPIC boot speed up disable</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPIC_ADDR_4BYTE_EN</name>
              <description>SPIC address 4-byte enable</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FLASH_DEEP_SLEEP_EN</name>
              <description>Flash deepsleep enable</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OTP_CHIPID1</name>
              <description>OTP autuload data reserved for SW</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OTP_CHIPID0</name>
              <description>OTP autuload data reserved for SW</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_OTP_SYSCFG1</name>
          <addressOffset>0x00000104</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SW_RSVD3</name>
              <description>RSVD for SW usage</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SW_RSVD2</name>
              <description>RSVD for SW usage</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SW_RSVD1</name>
              <description>RSVD for SW usage</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SW_RSVD0</name>
              <description>RSVD for SW usage</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_OTP_SYSCFG2</name>
          <addressOffset>0x00000108</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SW_RSVD4</name>
              <description>RSVD for SW usage</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_OTP_SYSCFG3</name>
          <addressOffset>0x0000010C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SW_RSVD5</name>
              <description>RSVD for SW usage</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_OTP_HWCFG</name>
          <addressOffset>0x0000011C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>boot_vol_sel</name>
              <description>BOOT Voltage Selection:
0'b0: 0.9V
0'b1: 1.0V</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SW_RSVD6</name>
              <description>RSVD for SW usage</description>
              <bitRange>[30:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_S_IPSEC1_0</name>
          <addressOffset>0x00000200</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_S_IPSEC1_0</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_S_IPSEC1_1</name>
          <addressOffset>0x00000204</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_S_IPSEC1_1</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_S_IPSEC1_2</name>
          <addressOffset>0x00000208</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_S_IPSEC1_2</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_S_IPSEC1_3</name>
          <addressOffset>0x0000020C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_S_IPSEC1_3</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_S_IPSEC1_4</name>
          <addressOffset>0x00000210</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_S_IPSEC1_4</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_S_IPSEC1_5</name>
          <addressOffset>0x00000214</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_S_IPSEC1_5</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_S_IPSEC1_6</name>
          <addressOffset>0x00000218</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_S_IPSEC1_6</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_S_IPSEC1_7</name>
          <addressOffset>0x0000021C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_S_IPSEC1_7</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_S_IPSEC2_0</name>
          <addressOffset>0x00000220</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_S_IPSEC2_0</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_S_IPSEC2_1</name>
          <addressOffset>0x00000224</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_S_IPSEC2_1</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_S_IPSEC2_2</name>
          <addressOffset>0x00000228</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_S_IPSEC2_2</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_S_IPSEC2_3</name>
          <addressOffset>0x0000022C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_S_IPSEC2_3</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_S_IPSEC2_4</name>
          <addressOffset>0x00000230</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_S_IPSEC2_4</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_S_IPSEC2_5</name>
          <addressOffset>0x00000234</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_S_IPSEC2_5</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_S_IPSEC2_6</name>
          <addressOffset>0x00000238</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_S_IPSEC2_6</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_S_IPSEC2_7</name>
          <addressOffset>0x0000023C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_S_IPSEC2_7</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_NS_IPSEC1_0</name>
          <addressOffset>0x00000240</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_NS_IPSEC1_0</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_NS_IPSEC1_1</name>
          <addressOffset>0x00000244</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_NS_IPSEC1_1</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_NS_IPSEC1_2</name>
          <addressOffset>0x00000248</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_NS_IPSEC1_2</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_NS_IPSEC1_3</name>
          <addressOffset>0x0000024C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_NS_IPSEC1_3</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_NS_IPSEC1_4</name>
          <addressOffset>0x00000250</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_NS_IPSEC1_4</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_NS_IPSEC1_5</name>
          <addressOffset>0x00000254</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_NS_IPSEC1_5</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_NS_IPSEC1_6</name>
          <addressOffset>0x00000258</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_NS_IPSEC1_6</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_NS_IPSEC1_7</name>
          <addressOffset>0x0000025C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_NS_IPSEC1_7</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_NS_IPSEC2_0</name>
          <addressOffset>0x00000260</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_NS_IPSEC2_0</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_NS_IPSEC2_1</name>
          <addressOffset>0x00000264</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_NS_IPSEC2_1</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_NS_IPSEC2_2</name>
          <addressOffset>0x00000268</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_NS_IPSEC2_2</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_NS_IPSEC2_3</name>
          <addressOffset>0x0000026C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_NS_IPSEC2_3</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_NS_IPSEC2_4</name>
          <addressOffset>0x00000270</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_NS_IPSEC2_4</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_NS_IPSEC2_5</name>
          <addressOffset>0x00000274</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_NS_IPSEC2_5</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_NS_IPSEC2_6</name>
          <addressOffset>0x00000278</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_NS_IPSEC2_6</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_NS_IPSEC2_7</name>
          <addressOffset>0x0000027C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_NS_IPSEC2_7</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_RSIP_ECB_0</name>
          <addressOffset>0x000002C0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_RSIP_ECB_0</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_RSIP_ECB_1</name>
          <addressOffset>0x000002C4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_RSIP_ECB_1</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_RSIP_ECB_2</name>
          <addressOffset>0x000002C8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_RSIP_ECB_2</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_RSIP_ECB_3</name>
          <addressOffset>0x000002CC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_RSIP_ECB_3</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_RSIP_ECB_4</name>
          <addressOffset>0x000002D0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_RSIP_ECB_4</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_RSIP_ECB_5</name>
          <addressOffset>0x000002D4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_RSIP_ECB_5</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_RSIP_ECB_6</name>
          <addressOffset>0x000002D8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_RSIP_ECB_6</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_RSIP_ECB_7</name>
          <addressOffset>0x000002DC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_RSIP_ECB_7</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_RSIP_CTR_0</name>
          <addressOffset>0x000002E0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_RSIP_CTR_0</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_RSIP_CTR_1</name>
          <addressOffset>0x000002E4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_RSIP_CTR_1</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_RSIP_CTR_2</name>
          <addressOffset>0x000002E8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_RSIP_CTR_2</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_RSIP_CTR_3</name>
          <addressOffset>0x000002EC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_RSIP_CTR_3</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_RSIP_CTR_4</name>
          <addressOffset>0x000002F0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_RSIP_CTR_4</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_RSIP_CTR_5</name>
          <addressOffset>0x000002F4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_RSIP_CTR_5</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_RSIP_CTR_6</name>
          <addressOffset>0x000002F8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_RSIP_CTR_6</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_RSIP_CTR_7</name>
          <addressOffset>0x000002FC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_RSIP_CTR_7</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_SWD_PWD_0</name>
          <addressOffset>0x00000300</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_SWD_PWD_0</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_SWD_PWD_1</name>
          <addressOffset>0x00000304</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_SWD_PWD_1</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_SWD_PWD_2</name>
          <addressOffset>0x00000308</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_SWD_PWD_2</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_SWD_PWD_3</name>
          <addressOffset>0x0000030C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_SWD_PWD_3</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_NEWKEY_HUK_0</name>
          <addressOffset>0x00000310</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>HUK_0_3</name>
              <description></description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>HUK_0_2</name>
              <description></description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>HUK_0_1</name>
              <description></description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>HUK_0_0</name>
              <description></description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_NEWKEY_HUK_1</name>
          <addressOffset>0x00000314</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>HUK_1_3</name>
              <description></description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>HUK_1_2</name>
              <description></description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>HUK_1_1</name>
              <description></description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>HUK_1_0</name>
              <description></description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_NEWKEY_HUK_2</name>
          <addressOffset>0x00000318</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>HUK_2_3</name>
              <description></description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>HUK_2_2</name>
              <description></description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>HUK_2_1</name>
              <description></description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>HUK_2_0</name>
              <description></description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_NEWKEY_HUK_3</name>
          <addressOffset>0x0000031C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>HUK_3_3</name>
              <description></description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>HUK_3_2</name>
              <description></description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>HUK_3_1</name>
              <description></description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>HUK_3_0</name>
              <description></description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PKKEY_PK1_0</name>
          <addressOffset>0x00000320</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_PK1_0</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PKKEY_PK1_1</name>
          <addressOffset>0x00000324</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_PK1_1</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PKKEY_PK1_2</name>
          <addressOffset>0x00000328</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_PK1_2</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PKKEY_PK1_3</name>
          <addressOffset>0x0000032C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_PK1_3</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PKKEY_PK1_4</name>
          <addressOffset>0x00000330</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_PK1_4</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PKKEY_PK1_5</name>
          <addressOffset>0x00000334</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_PK1_5</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PKKEY_PK1_6</name>
          <addressOffset>0x00000338</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_PK1_6</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PKKEY_PK1_7</name>
          <addressOffset>0x0000033C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_PK1_7</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PKKEY_PK2_0</name>
          <addressOffset>0x00000340</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_PK2_0</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PKKEY_PK2_1</name>
          <addressOffset>0x00000344</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_PK2_1</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PKKEY_PK2_2</name>
          <addressOffset>0x00000348</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_PK2_2</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PKKEY_PK2_3</name>
          <addressOffset>0x0000034C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_PK2_3</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PKKEY_PK2_4</name>
          <addressOffset>0x00000350</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_PK2_4</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PKKEY_PK2_5</name>
          <addressOffset>0x00000354</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_PK2_5</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PKKEY_PK2_6</name>
          <addressOffset>0x00000358</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_PK2_6</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PKKEY_PK2_7</name>
          <addressOffset>0x0000035C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_PK2_7</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SEC_CFG0</name>
          <addressOffset>0x00000360</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>swd_id</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SEC_CFG1</name>
          <addressOffset>0x00000364</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFEFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SWD_PWD_EN</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SWD_DBGEN</name>
              <description></description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SWD_NIDEN</name>
              <description></description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SWD_SPIDEN</name>
              <description></description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SWD_SPNIDEN</name>
              <description></description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SWD_PWD_R_Protection_EN</name>
              <description></description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SWD_PWD_W_Forbidden_EN</name>
              <description></description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>HUK_W_Forbidden_EN</name>
              <description></description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PK1_W_Forbidden_EN</name>
              <description></description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PK2_W_Forbidden_EN</name>
              <description></description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>S_IPSEC_Key1_R_Protection_EN</name>
              <description></description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>S_IPSEC_Key1_W_Forbidden_EN</name>
              <description></description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>S_IPSEC_Key2_R_Protection_EN</name>
              <description></description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>S_IPSEC_Key2_W_Forbidden_EN</name>
              <description></description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>NS_IPSEC_Key1_R_Protection_EN</name>
              <description></description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>NS_IPSEC_Key1_W_Forbidden_EN</name>
              <description></description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>NS_IPSEC_Key2_R_Protection_EN</name>
              <description></description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>NS_IPSEC_Key2_W_Forbidden_EN</name>
              <description></description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ECDSA_PRI_KEY1_R_Protection_EN</name>
              <description></description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ECDSA_PRI_KEY1_W_Forbidden_EN</name>
              <description></description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ECDSA_PRI_KEY2_R_Protection_EN</name>
              <description></description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ECDSA_PRI_KEY2_W_Forbidden_EN</name>
              <description></description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSIP_KEY1_R_Protection_EN</name>
              <description></description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSIP_KEY1_W_Forbidden_EN</name>
              <description></description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSIP_KEY2_R_Protection_EN</name>
              <description></description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSIP_KEY2_W_Forbidden_EN</name>
              <description></description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSIP_MODE_W_Forbidden_EN</name>
              <description></description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SIC_SECURE_EN</name>
              <description></description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CPU_PC_DBG_EN</name>
              <description></description>
              <bitRange>[29:29]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>udf1_Trustzone_EN</name>
              <description></description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>udf2_Trustzone_EN</name>
              <description></description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SEC_CFG2</name>
          <addressOffset>0x00000368</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFD</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>UART_DOWNLOAD_DISABLE</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSIP_EN</name>
              <description></description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SECURE_BOOT_EN</name>
              <description></description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SECURE_BOOT_HW_DIS</name>
              <description></description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RDP_EN</name>
              <description></description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>Anti_Rollback_EN</name>
              <description></description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FAULT_LOG_PRINT_DIS</name>
              <description></description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSIP_MODE</name>
              <description></description>
              <bitRange>[9:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>HUK_DERIV_EN</name>
              <description></description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>User_physical_Trustzone1_EN</name>
              <description></description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>User_physical_Trustzone2_EN</name>
              <description></description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SW_RSVD0</name>
              <description></description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SWTRIG_UART_DOWNLOAD_DISABLE</name>
              <description></description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SPIC_PINMUX_IN_TESTMODE_DISABLE</name>
              <description></description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>rsvd_sw</name>
              <description></description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SECURE_BOOT_AUTH_ALG</name>
              <description></description>
              <bitRange>[27:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SECURE_BOOT_HASH_ALG</name>
              <description></description>
              <bitRange>[31:28]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_OTA_ADDR</name>
          <addressOffset>0x0000036C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ota_addr</name>
              <description></description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BOOTLOADER_VERSION</name>
              <description></description>
              <bitRange>[31:16]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CRC0</name>
          <addressOffset>0x00000370</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>crc_entry0</name>
              <description>[15:0] : magic data
[31:16]: valid crc
Note : this field will be autoload twice time, and stick to L</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CRC1</name>
          <addressOffset>0x00000374</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>crc_entry1</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CRC2</name>
          <addressOffset>0x00000378</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>crc_entry2</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CRC3</name>
          <addressOffset>0x0000037C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>crc_entry3</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RMA</name>
          <addressOffset>0x00000700</addressOffset>
          <size>8</size>
          <description></description>
          <resetValue>0x000000FF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RMA_DATA</name>
              <description>If the number of 1 is odd, it will goto RMA state.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ROM_PATCH</name>
          <addressOffset>0x00000701</addressOffset>
          <size>8</size>
          <description></description>
          <resetValue>0x000000FF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ROM_PATCH_PG</name>
              <description>ROM patch enable.This Bit will programed by FT if ROM patch do not needed</description>
              <bitRange>[1:0]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ROM_PATCH_LWE1</name>
              <description>ROM patch write protection(protect Low 256bits) : 500-51f</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ROM_PATCH_LWE2</name>
              <description>ROM patch write protection(protect Low 256bits) : 520-53f</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ROM_PATCH_LWE3</name>
              <description>ROM patch write protection(protect Low 256bits) : 540-55f</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ROM_PATCH_LWE4</name>
              <description>ROM patch write protection(protect Low 256bits): 560-57f</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ROM_PATCH_LWE5</name>
              <description>ROM patch write protection(protect low 1Kbits)    :580-5ff</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ROM_PATCH_HWE</name>
              <description>ROM patch write protection (protect High 2Kbits)</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SEC_CFG3</name>
          <addressOffset>0x00000702</addressOffset>
          <size>16</size>
          <description></description>
          <resetValue>0x000000FF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RMA_SWD_PWD_R_Protection_EN</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RMA_SWD_PWD_W_Forbidden_EN</name>
              <description></description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RMA_PK_W_Forbidden_EN</name>
              <description></description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>otp_rsvd0</name>
              <description></description>
              <bitRange>[7:3]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SWD_RMA_PWD_0</name>
          <addressOffset>0x00000710</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_RMA_PWD_0</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SWD_RMA_PWD_1</name>
          <addressOffset>0x00000714</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_RMA_PWD_1</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SWD_RMA_PWD_2</name>
          <addressOffset>0x00000718</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_RMA_PWD_2</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SWD_RMA_PWD_3</name>
          <addressOffset>0x0000071C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_RMA_PWD_3</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PKKEY_RMA_PK_0</name>
          <addressOffset>0x00000720</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_RMA_PK_0</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PKKEY_RMA_PK_1</name>
          <addressOffset>0x00000724</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_RMA_PK_1</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PKKEY_RMA_PK_2</name>
          <addressOffset>0x00000728</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_RMA_PK_2</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PKKEY_RMA_PK_3</name>
          <addressOffset>0x0000072C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_RMA_PK_3</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PKKEY_RMA_PK_4</name>
          <addressOffset>0x00000730</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_RMA_PK_4</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PKKEY_RMA_PK_5</name>
          <addressOffset>0x00000734</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_RMA_PK_5</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PKKEY_RMA_PK_6</name>
          <addressOffset>0x00000738</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_RMA_PK_6</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PKKEY_RMA_PK_7</name>
          <addressOffset>0x0000073C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_RMA_PK_7</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OTP_DUMMY</name>
          <addressOffset>0x00000740</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>dummy reg  for hw</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>psram_phy</name>
      <baseAddress>0x40126000</baseAddress>
      <size>0x000000FC</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x000000FC</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>REG_CAL_CTRL</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000031</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CFG_CAL_NBDR_OVF</name>
              <description>The N reachs the boundary , which is 0 or Nmax .
Cleared by write 1 .</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CFG_CAL_NBDR_ALMOST</name>
              <description>The N-J or N+J reachs the boundary , which is 0 or Nmax .
Cleared by write 1 .</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CFG_CAL_ERR_UNSURE</name>
              <description>The Pre N/J may cause current burst receive error  , but it is not sure because the burst len is too small.
Cleared by write 1 .</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CFG_CAL_ERR_ALREADY</name>
              <description>The Pre N/J may cause current burst receive error  , even change J to Jmin , the error still remain .
Cleared by write 1 .</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CFG_CAL_ERR_ALMOST</name>
              <description>The current burst receive correct , but next burst will set J = Jmin .
Cleared by write 1 .</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CFG_CAL_INTR_MASK</name>
              <description>Calibration fail interrupt mask , every bit control one event above (1: enable , 0: disable)
[0] : err almost
[1] : err already
[2] : err unsure
[3] : nbdr almost
[4] : nbdr ovf</description>
              <bitRange>[8:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CFG_CAL_EN</name>
              <description>Hardware auto calibration enable ,  if disable , N,J will be fixed .</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CAL_PAR</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x020E0A0F</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PRE_CAL_PHASE</name>
              <description>one-hot phase select, 4-tap delay line to adjust rwds phase before calibration for large freq range or skew
can be set to 0, bypassing the default 1-tap delay</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CFG_CAL_JMIN</name>
              <description>Minimum J . Hardware may adjust J , if J reach this value , an interrup will be raised to alerm software.</description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CFG_CAL_JMAX</name>
              <description>Maximum J . Hardware may adjust J , but will not exceed this value.</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CFG_CAL_J</name>
              <description>Initial value J calibrated by software .</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CFG_CAL_N</name>
              <description>Initial value N calibrated by software .</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CAL_STATUS</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CFG_CAL_CUR_ST</name>
              <description>Calibration current state .
Cleared by write all 1 .</description>
              <bitRange>[28:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CFG_CAL_PDST</name>
              <description>Calibration check result for last read burst .
[0] : indicate phase n+j , if 1 , means dn == dn+j
[1] : indicate phase n-j , if 1 , means dn == dn-j
[2] : if 1 , means the state is under j = jmin condition</description>
              <bitRange>[18:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CFG_CAL_CUR_J</name>
              <description>Current value J read from hardware.</description>
              <bitRange>[11:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CFG_CAL_CUR_N</name>
              <description>Current value N read from hardware.</description>
              <bitRange>[4:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PHY_INFO</name>
          <addressOffset>0x00000010</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00100000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RX_TIME_OUT_MASK</name>
              <description>read time out interrupt mask</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_TIME_OUT</name>
              <description>read time out interrupt if there's no DQS/DQ from psram, write 1 to clear</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CMD_INFO</name>
              <description>Command information, 1st Byte of Command/Address transaction</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PHY_CTRL</name>
          <addressOffset>0x00000018</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x80000010</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PSRAM_SW_RST_N</name>
              <description>low active, except for phy register(using system reset), psram software reset: psram, phy_ctrl, calibration</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RWDS_CHK_OPT</name>
              <description>0: synced psram_rwds_i direct to controller
1: only check psram_rwds_i at last valid cycle of CA stage, sync this pulse to controller</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RWDS_PD_EN</name>
              <description>psram_phy can control PD pin of rwds iopad, bypass high-Z state at CMD/ADDR stage</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LATENCY_TYPE</name>
              <description>set this bit according to spic &amp; psram latency settings
0: variable latency
1: fixed latency</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CAL_RWDS_PHASE</name>
              <description>one-hot phase select, delay cal_rwds to push sampling data into rfifo</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RFIFO_RDY_DLY</name>
              <description>variable latency: delay read data cycles(phy clk) after detecting first DQS rising edge, must &lt; 4
fixed latency: delay read data cycles(phy clk) after asserting spi_rx_data_en, must &gt; 5
                    4*read_latency - rd_dummy_length + rfifo_rdy_dly = in_physical_cyc</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DBG_SEL</name>
          <addressOffset>0x000000F0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description></description>
              <bitRange>[31:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PSRAM_PHY_DBG_SEL</name>
              <description>psram phy debug select signal.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DBG_INFO</name>
          <addressOffset>0x000000F8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PSRAM_PHY_DBG</name>
              <description>psram phy debug signals.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>rtc</name>
      <baseAddress>0x41008A00</baseAddress>
      <size>0x0000002C</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x0000002C</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>RTC_TR</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description>RTC Time Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DAY</name>
              <description>DAY in binary format</description>
              <bitRange>[31:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PM</name>
              <description>PM:AM/PM notation
*0: AM or 24-hour format
*1: PM</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HT</name>
              <description>Hour tens in BCD format</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HU</name>
              <description>Hour units in BCD format</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MNT</name>
              <description>Minute tens in BCD format</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MNU</name>
              <description>Minute units in BCD format</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ST</name>
              <description>Second tens in BCD format</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SU</name>
              <description>Second units in BCD format</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_CR</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description>RTC Control Register</description>
          <resetValue>0xFF800000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DAY_THRES</name>
              <description>Day threshold in binary format</description>
              <bitRange>[31:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DOVTHIE</name>
              <description>Day over threshold interrupt enable
*0: Day over threshold interrupt disabled
*1: Day over threshold interrupt enabled</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WUTIE</name>
              <description>Wakeup timer interrupt enable
*0: Wakeup timer interrupt disabled
*1: Wakeup timer interrupt enabled</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ALMIE</name>
              <description>Alarm interrupt enable
*0: Alarm interrupt disabled
*1: Alarm interrupt enabled</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WUTE</name>
              <description>Wakeup timer enable
*0: Wakeup timer disabled
*1: Wakeup timer enabled</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ALME</name>
              <description>Alarm enable
*0: Alarm disabled
*1: Alarm enabled</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FMT</name>
              <description>Hour format
*0: 24 hour/day format
*1: AM/PM hour format</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OSEL</name>
              <description>Output selection.
These bits are used to select the flag to be routed to RTC_OUT output.
*00: Output disabled
*01: Alarm output enabled
*10: Clock output is clk_spre (default: 1Hz)
*11: Clock output is clk_apre (default: 256Hz)</description>
              <bitRange>[6:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BYPSHAD</name>
              <description>Bypass the shadow registers.
*0: Calendar values (when reading from RTC_TR) are taken from the shadow register, which are updated once every two RTCCLK cycles.
*1: Calendar values (when reading from RTC_TR) are taken directly from the calendar counters.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BKP</name>
              <description>Backup
This bit can be written by the user to memorize whether the daylight saving time change has been performed or not.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SUB1H</name>
              <description>Subtract one hour (winter time changes)
When this bit is set outside initialization mode, 1 hour is subtracted to the calendar time if the current hour is not 0, and this bit is always read as 0.
*0: No effect
*1: Subtract one hour to the current time</description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>ADD1H</name>
              <description>Add one hour (summer time changes)
When this bit is set outside initialization mode, 1 hour is added to the calendar time, and this bit is always read as 0.
*0: No effect
*1: Add one hour to the current time</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_ISR</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description>RTC Init Mode and Status Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RECALPF</name>
              <description>Recalibration pending flag
The RECALPF status flag is automatically set to '1' when software writes to the RTC_CALIBR register, indicating that the RTCCALIBR register is blocked. When the new calibration settings are taken into account, this bit returns to '0'. Refer to Re-calibration on-the-fly.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DOVTHF</name>
              <description>Day over threshold flag
This flag is set by hardware when the Day in RTC_TR over the DAY_THRES set in RTC_CR register.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>WUTF</name>
              <description>Wakeup timer flag
This flag is set by hardware when the wakeup auto-reload counter reaches to.
This flag must be cleared by software at least 2 RTCCLK periods before WUTF is set to '1' again.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ALMF</name>
              <description>Alarm flag
This flag is set by hardware when the time register (RTC_TR) matches the Alarm registers (RTC_ALMR1L and RTC_ALMR1H).</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>INIT</name>
              <description>Initialization mode
*0: Free running mode.
*1: Initialization mode used to program time and date register (RTC_TR) and prescaler register (RTC_PRER). Counters are stopped and start counting from the new value when INIT is set.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INITF</name>
              <description>Initialization flag.
When this bit is set to '1', the RTC is in initialization state, and the time, date, and prescaler registers can be updated.
*0: Calendar registers update is not allowed.
*1: Calendar registers update is allowed.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSF</name>
              <description>Registers synchronization flag.
This bit is set by hardware each time the calendar registers are copied into the shadow registers (RTC_TR). This bit is cleared by hardware in initialization mode or when in bypass shadow register mode (BYPSHAD=1). This bit can also be cleared by software.
It is cleared either by software or by hardware in initialization mode.
*0: Calendar shadow registers are not yet synchronized.
*1: Calendar shadow registers are synchronized.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>INITS</name>
              <description>This bit is set by hardware when the calendar day field is different from 0 (RTC domain reset state).
*0: Calendar has not been initialized.
*1: Calendar has been initialized.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>WUTWF</name>
              <description>Wakeup timer write flag
This flag is set by hardware when WUT value can be changed, after the WUTE bit has been set to '0' in RTC_CR.
*0: Wakeup timer configuration update not allowed except in initialization mode
*1: Wakeup timer configuration update allowed</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>WUTRSF</name>
              <description>This bit is set by hardware each time the WUTE bit is copied into the shadow register. This bit is cleared by hardware in initialization mode. This bit can also be cleared by software.
It is cleared either by software or by hardware in initialization mode.
*0: WUTE is not yet synchronized.
*1: WUTE is synchronized.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ALMWF</name>
              <description>Alarm write flag
This bit is set by hardware when Alarm values can be changed, after the ALME bit has been set to '0' in RTC_CR.
It is cleared by hardware when ALME bit has been set to '1' in RTC_CR.
*0: Alarm update not allowed
*1: Alarm update allowed</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_PRER</name>
          <addressOffset>0x0000000C</addressOffset>
          <size>32</size>
          <description>RTC Prescaler Register</description>
          <resetValue>0x007F00FF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PREDIV_A</name>
              <description>Asynchronous prescaler factor
This is the asynchronous division factor: clk_apre freq = RTCCLK freq/(PREDIV_A + 1)</description>
              <bitRange>[24:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PREDIV_S</name>
              <description>Synchronous prescaler factor
This is the synchronous division factor: clk_spre freq = clk_apre freq/(PREDIV_S + 1)</description>
              <bitRange>[8:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_CALIBR</name>
          <addressOffset>0x00000010</addressOffset>
          <size>32</size>
          <description>RTC Calibration Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CALP</name>
              <description>Calibration period</description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCE</name>
              <description>Digital calibration enable
*0: Digital calibration disabled
*1: Digital calibration enabled</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCS</name>
              <description>Digital calibration signal
*0: Positive calibration, time update frequency is increased.
*1: Negative calibration, time update frequency is decreased.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DC</name>
              <description>Digital calibration</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_ALMR1L</name>
          <addressOffset>0x00000014</addressOffset>
          <size>32</size>
          <description>RTC Alarm 1 Register Low</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>MSK2</name>
              <description>Alarm hour mask
*0: Alarm set if the hours match
*1: Hours don't care in Alarm comparison</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ALR_PM</name>
              <description>AM/PM notation.
*0: AM or 24-hour format
*1: PM</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ALR_HT</name>
              <description>Hour tens in BCD format</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ALR_HU</name>
              <description>Hour units in BCD format</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MSK1</name>
              <description>Alarm minutes mask.
*0: Alarm set if the minutes match
*1: Minutes don't care in Alarm comparison</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ALR_MNT</name>
              <description>Minute tens in BCD format</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ALR_MNU</name>
              <description>Minute units in BCD format</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MSK0</name>
              <description>Alarm seconds mask
*0: Alarm set if the seconds match
*1: Seconds don't care in Alarm comparison</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ALR_ST</name>
              <description>Second tens in BCD format</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ALR_SU</name>
              <description>Second units in BCD format</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_ALMR1H</name>
          <addressOffset>0x00000018</addressOffset>
          <size>32</size>
          <description>RTC Alarm 1 Register High</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>MSK3</name>
              <description>Alarm day mask
*0: Alarm set if the days match
*1: Days don't care in Alarm comparison</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ALR_DAY</name>
              <description>DAY in binary format</description>
              <bitRange>[8:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_WPR</name>
          <addressOffset>0x0000001C</addressOffset>
          <size>32</size>
          <description>RTC Write Protection Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>KEY</name>
              <description>Write protection key
This byte is written by software. Refer to RTC register write protection for a description of how to unlock RTC register write protection.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_YEAR</name>
          <addressOffset>0x00000020</addressOffset>
          <size>32</size>
          <description>RTC Year Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RESTORE</name>
              <description>Reset Flag. Indicates whether any reset conditions have occurred (except POR/PDR/BOD), so that the bit is set to '1' before reset, and then the global variable that determines whether the recovery time information is needed depending on whether the bit is '1'.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>YEAR</name>
              <description>Year in binary format</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_WUTR</name>
          <addressOffset>0x00000024</addressOffset>
          <size>32</size>
          <description>RTC Wakeup Timer Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>WUT</name>
              <description>Wakeup auto-reload value bits
When the wakeup timer is enabled (WUTE is set to '1'), the WUTF flag is set every (WUT[16:0]+1) cycles. The first assertion of WUTF occurs between WUT and (WUT+1) cycles after WUTE is set.</description>
              <bitRange>[16:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RTC_DUMMY</name>
          <addressOffset>0x00000028</addressOffset>
          <size>32</size>
          <description>RTC Dummy Register</description>
          <resetValue>0x0000FFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>Dummy register</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>spi</name>
      <baseAddress>0x40124000</baseAddress>
      <size>0x00000B0C</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00000B0C</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>CTRLR0</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description>Control Register 0</description>
          <resetValue>0x00000009</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SS_T</name>
              <description>When SCPH is 0 (Relevant only when the SPI is configured as a serial-master device)
0: ss_n_out doesn't toggle between successive frames
1: ss_n_out does toggle between successive frames</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXBITSWAP</name>
              <description>0: Order of receive bit doesn't swap
1: Order of receive bit does swap</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXBYTESWAP</name>
              <description>0: Order of receive byte doesn't swap
1: Order of receive byte does swap</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXBITSWAP</name>
              <description>0: Order of transmit bit doesn't swap
1: Order of transmit bit does swap</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXBYTESWAP</name>
              <description>0: Order of transmit byte doesn't swap
1: Order of transmit byte does swap</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SLV_OE</name>
              <description>Slave Output Enable. Relevant only when the SPI is configured as a serial-slave device. When configured as a serial master, this bit field has no functionality. This bit enables or disables the setting of the ssi_oe_n output from the SPI serial slave. 
When SLV_OE = 1, the ssi_oe_n output can never be active. When the ssi_oe_n output controls the tri-state buffer on the txd output from the slave, a high impedance state is always present on the slave txd output when SLV_OE = 1.
This is useful when the master transmits in broadcast mode (master transmits data to all slave devices). Only one slave may respond with data on the master rxd line. This bit is enabled after reset and must be disabled by software (when broadcast mode is used), if you do not want this device to respond with data.
0: Slave txd is enabled
1: Slave txd is disabled</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TMOD</name>
              <description>Transfer Mode. Relevant only when the SPI is configured as a serial-master device. Selects the mode of transfer for serial communication. This field does not affect the transfer duplicity. Only indicates whether the receive or transmit data are valid. 
In transmit-only mode, data received from the external device is not valid and is not stored in the receive FIFO memory; it is overwritten on the next transfer.
In receive-only mode, transmitted data are not valid. After the first write to the transmit FIFO, the same word is retransmitted for the duration of the transfer.
In transmit-and-receive mode, both transmit and receive data are valid. The transfer continues until the transmit FIFO is empty. Data received from the external device are stored into the receive FIFO memory, where it can be accessed by the host processor.
00: Transmit &amp; Receive
01: Transmit Only
10: Receive Only</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCPOL</name>
              <description>Serial Clock Polarity. Valid when the frame format (FRF) is set to Motorola SPI. Used to select the polarity of the inactive serial clock, which is held inactive when the SPI master is not actively transferring data on the serial bus.
0: Inactive state of serial clock is low
1: Inactive state of serial clock is high</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCPH</name>
              <description>Serial Clock Phase. Valid when the frame format (FRF) is set to Motorola SPI. The serial clock phase selects the relationship of the serial clock with the slave select signal.
When SCPH = 0, data are captured on the first edge of the serial clock. When SCPH = 1, the serial clock starts toggling one cycle after the slave select line is activated, and data are captured on the second edge of the serial clock.
0: Serial clock toggles in middle of the first data bit
1: Serial clock toggles at start of the first data bit</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FRF</name>
              <description>Frame Format. Selects which serial protocol transfers the data.
00: Motorola SPI
Other: Reserved</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DFS</name>
              <description>Data Frame Size. Selects the data frame length. When the data frame size is programmed to be less than 16 bits, the receive data are automatically right-justified by the receive logic, with the upper bits of the receive FIFO zero-padded.
You must right-justify transmit data before writing into the transmit FIFO. The transmit logic ignores the upper unused bits when transmitting the data. For the DFS decode, refer to the following description:
0000/0001/0010: Reserved (undefined operation)
0011: 4-bit serial data transfer
0100: 5-bit serial data transfer
0101: 6-bit serial data transfer
0110: 7-bit serial data transfer
0111: 8-bit serial data transfer
1000: 9-bit serial data transfer
1001: 10-bit serial data transfer
1010: 11-bit serial data transfer
1011: 12-bit serial data transfer
1100: 13-bit serial data transfer
1101: 14-bit serial data transfer
1110: 15-bit serial data transfer
1111: 16-bit serial data transfer</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CTRLR1</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description>Control Register 1</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>NDF</name>
              <description>Number of Data Frames.
When TMOD = 10 or TMOD = 11, this register field sets the number of data frames to be continuously received by the SPI. The SPI continues to receive serial data until the number of data frames received is equal to this register value plus 1, which enables you to receive up to 64 KB of data in a continuous transfer.
When the SPI is configured as a serial slave, the transfer continues for as long as the slave is selected. Therefore, this register serves no purpose and is not present when the SPI is configured as a serial slave.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SSIENR</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description>SSI Enable Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SSI_EN</name>
              <description>SPI Enable. Enables and disables all SPI operations.
When disabled, all serial transfers are halted immediately. Transmit and receive FIFO buffers are cleared when the device is disabled. It is impossible to program some of the SPI control registers when enabled. When disabled, the ssi_sleep output is set (after delay) to inform the system that it is safe to remove the ssi_clk, thus saving power consumption in the system.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SER</name>
          <addressOffset>0x00000010</addressOffset>
          <size>32</size>
          <description>Slave Enable Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SER</name>
              <description>Slave Select Enable Flag.
When this bit is set 1, the corresponding slave select line from the master is activated when a serial transfer begins. It should be noted that setting or clearing bits in this register have no effect on the corresponding slave select outputs until a transfer is started. Before beginning a transfer, you should enable the bit in this register that corresponds to the slave device with which the master wants to communicate.
1: Selected
0: Not selected</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BAUDR</name>
          <addressOffset>0x00000014</addressOffset>
          <size>32</size>
          <description>Baud Rate Select Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SCKDV</name>
              <description>SPI Clock Divider. The LSB for this field is always set to 0 and is unaffected by a write operation, which ensures an even value is held in this register. If the value is 0, the serial output clock (sclk_out) is disabled.
The frequency of the sclk_out is derived from the equation: Fsclk_out =Fssi_clk/SCKDV, where SCKDV is any even value between 2 and 65534.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TXFTLR</name>
          <addressOffset>0x00000018</addressOffset>
          <size>32</size>
          <description>Transmit FIFO Threshold Level Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TFT</name>
              <description>Transmit FIFO Threshold. Controls the level of entries (or below) at which the transmit FIFO controller triggers an interrupt. The FIFO depth is 64; this register is sized to the number of address bits needed to access the FIFO.
If you attempt to set this value greater than or equal to the depth of the FIFO, this field is not written and retains its current value. When the number of transmit FIFO entries is less than or equal to this value, the transmit FIFO empty interrupt is triggered. For TFT decode, refer to the following description:
000000: ssi_txe_intr is asserted when 0 data entry is present in transmit FIFO.
000001: ssi_txe_intr is asserted when 1 data entry is present in transmit FIFO.
000010: ssi_txe_intr is asserted when 2 data entries are present in transmit FIFO.
000011: ssi_txe_intr is asserted when 3 data entries are present in transmit FIFO.
...
111100: ssi_txe_intr is asserted when 60 data entries are present in transmit FIFO.
111101: ssi_txe_intr is asserted when 61 data entries are present in transmit FIFO.
111110: ssi_txe_intr is asserted when 62 data entries are present in transmit FIFO.
111111: ssi_txe_intr is asserted when 63 data entries are present in transmit FIFO.</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RXFTLR</name>
          <addressOffset>0x0000001C</addressOffset>
          <size>32</size>
          <description>Receive FIFO Threshold Level Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RFT</name>
              <description>Receive FIFO Threshold. Controls the level of entries (or above) at which the receive FIFO controller triggers an interrupt. The FIFO depth is configurable in the range 2~64. This register is sized to the number of address bits needed to access the FIFO. If you attempt to set this value greater than the depth of the FIFO, this field is not written and retains its current value.
When the number of receive FIFO entries is greater than or equal to this value + 1, the receive FIFO full interrupt is triggered. For RFT decode, refer to the following description:
000000: ssi_rxf_intr is asserted when 1 or more data entries are present in receive FIFO.
000001: ssi_rxf_intr is asserted when 2 or more data entries are present in receive FIFO.
000010: ssi_rxf_intr is asserted when 3 or more data entries are present in receive FIFO.
000011: ssi_rxf_intr is asserted when 4 or more data entries are present in receive FIFO.
...
111110: ssi_rxf_intr is asserted when 61 or more data entries are present in receive FIFO.
111101: ssi_rxf_intr is asserted when 62 or more data entries are present in receive FIFO.
111110: ssi_rxf_intr is asserted when 63 or more data entries are present in receive FIFO.
111111: ssi_rxf_intr is asserted when 64 or more data entries are present in receive FIFO.</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TXFLR</name>
          <addressOffset>0x00000020</addressOffset>
          <size>32</size>
          <description>Transmit FIFO Level Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TXTFL</name>
              <description>Transmit FIFO Level. Contains the number of valid data entries in the transmit FIFO.</description>
              <bitRange>[6:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RXFLR</name>
          <addressOffset>0x00000024</addressOffset>
          <size>32</size>
          <description>Receive FIFO Level Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RXTFL</name>
              <description>Receive FIFO Level. Contains the number of valid data entries in the receive FIFO.</description>
              <bitRange>[6:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SR</name>
          <addressOffset>0x00000028</addressOffset>
          <size>32</size>
          <description>Status Register</description>
          <resetValue>0x00000006</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DCOL</name>
              <description>Data Collision Error. Relevant only when the SPI is configured as a master device. This bit is set if the SPI master is actively transmitting when another master selects this device as a slave. This informs the processor that the last data transfer was halted before completion. This bit is cleared when read.
0: No error
1: Transmit data collision error</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TXE</name>
              <description>Transmission Error. Set if the transmit FIFO is empty when a transfer is started. This bit can be set only when the SPI is configured as a slave device. Data from the previous transmission is resent on the txd line. This bit is cleared when read.
0: No error
1: Transmission error</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RFF</name>
              <description>Receive FIFO Full. When the receive FIFO is completely full, this bit is set. When the receive FIFO contains one or more empty location, this bit is cleared.
0: Receive FIFO is not full
1: Receive FIFO is full</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RFNE</name>
              <description>Receive FIFO Not Empty. Set when the receive FIFO contains one or more entries and is cleared when the receive FIFO is empty. This bit can be polled by software to completely empty the receive FIFO.
0: Receive FIFO is empty
1: Receive FIFO is not empty</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TFE</name>
              <description>Transmit FIFO Empty. When the transmit FIFO is completely empty, this bit is set. When the transmit FIFO contains one or more valid entries, this bit is cleared. This bit field does not request an interrupt.
0: Transmit FIFO is not empty
1: Transmit FIFO is empty</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TFNF</name>
              <description>Transmit FIFO Not Full. Set when the transmit FIFO contains one or more empty locations, and is cleared when the FIFO is full.
0: Transmit FIFO is full
1: Transmit FIFO is not full</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BUSY</name>
              <description>SSI Busy Flag. When set, indicates that a serial transfer is in progress; when cleared indicates that the SPI is idle or disabled.
0: SPI is idle or disabled
1: SPI is actively transferring data</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IMR</name>
          <addressOffset>0x0000002C</addressOffset>
          <size>32</size>
          <description>Interrupt Mask Register</description>
          <resetValue>0x000000FF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SSRIM</name>
              <description>SS_N Rising Edge Detect Interrupt Mask. This bit field is present only if the SPI is configured as a serial-slave device.
0: ssi_ssr_intr is masked
1: ssi_ssr_intr is not masked</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXUIM</name>
              <description>Transmit FIFO Underflow Interrupt Mask. This bit field is present only if the SPI is configured as a serial-slave device.
0: ssi_txu_intr is masked
1: ssi_txu_intr is not masked</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MSTIM_FAEIM</name>
              <description>When SPI is configured as serial-master, this bit field is present as Multi-Master Contention Interrupt Mask.
0: ssi_mst_intr interrupt is masked
1: ssi_mst_intr interrupt is not masked
When SPI is configured as serial-slave, this bit field is present as Frame Alignment Interrupt Mask. 
0: ssi_fae_intr interrupt is masked
1: ssi_fae_intr interrupt is not masked</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXFIM</name>
              <description>Receive FIFO Full Interrupt Mask.
0: ssi_rxf_intr interrupt is masked
1: ssi_rxf_intr interrupt is not masked</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXOIM</name>
              <description>Receive FIFO Overflow Interrupt Mask.
0: ssi_rxo_intr interrupt is masked
1: ssi_rxo_intr interrupt is not masked</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXUIM</name>
              <description>Receive FIFO Underflow Interrupt Mask.
0: ssi_rxu_intr interrupt is masked
1: ssi_rxu_intr interrupt is not masked</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXOIM</name>
              <description>Transmit FIFO Overflow Interrupt Mask.
0: ssi_txo_intr interrupt is masked
1: ssi_txo_intr interrupt is not masked</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXEIM</name>
              <description>Transmit FIFO Empty Interrupt Mask.
0: ssi_txe_intr interrupt is masked
1: ssi_txe_intr interrupt is not masked</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ISR</name>
          <addressOffset>0x00000030</addressOffset>
          <size>32</size>
          <description>Interrupt Status Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SSRIS</name>
              <description>SS_N Rising Edge Detect Interrupt Status. This bit field is present only if the SPI is configured as a serial-slave device.
0: ssi_ssr_intr interrupt is not active after masking
1: ssi_ssr_intr interrupt is active after masking</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TXUIS</name>
              <description>Transmit FIFO Under Flow Interrupt Status. This bit field is present only if the SPI is configured as a serial-slave device.
0: ssi_txu_intr interrupt is not active after masking
1: ssi_txu_intr interrupt is active after masking</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>MSTIS_FAEIS</name>
              <description>When SPI is configured as serial-master, this bit field is present as Multi-Master Contention Interrupt Status.
0: ssi_mst_intr interrupt is not active after masking
1: ssi_mst_intr interrupt is active after masking
When SPI is configured as serial-slave, this bit field is present as Frame Alignment Interrupt Status. 
0: ssi_fae_intr interrupt not active after masking
1: ssi_fae_intr interrupt is active after masking</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RXFIS</name>
              <description>Receive FIFO Full Interrupt Status.
0: ssi_rxf_intr interrupt is not active after masking
1: ssi_rxf_intr interrupt is full after masking</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RXOIS</name>
              <description>Receive FIFO Overflow Interrupt Status.
0: ssi_rxo_intr interrupt is not active after masking
1: ssi_rxo_intr interrupt is active after masking</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RXUIS</name>
              <description>Receive FIFO Underflow Interrupt Status.
0: ssi_rxu_intr interrupt is not active after masking
1: ssi_rxu_intr interrupt is active after masking</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TXOIS</name>
              <description>Transmit FIFO Overflow Interrupt Status.
0: ssi_txo_intr interrupt is not active after masking
1: ssi_txo_intr interrupt is active after masking</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TXEIS</name>
              <description>Transmit FIFO Empty Interrupt Status.
0: ssi_txe_intr interrupt is not active after masking
1: ssi_txe_intr interrupt is active after masking</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RISR</name>
          <addressOffset>0x00000034</addressOffset>
          <size>32</size>
          <description>Raw Interrupt Status Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SSRIR</name>
              <description>SS_N Rising Edge Detect Raw Interrupt Status. This bit field is present only if the SPI is configured as a serial-slave device.
0: ssi_ssr_intr interrupt is not active prior to masking
1: ssi_ssr_intr interrupt is active prior to masking</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TXUIR</name>
              <description>Transmit FIFO Under Flow Raw Interrupt Status. This bit field is present only if the SPI is configured as a serial-slave device.
0: ssi_txu_intr interrupt is not active prior to masking
1: ssi_txu_intr interrupt is active prior to masking</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>MSTIR_FAEIR</name>
              <description>When SPI is configured as serial-master, this bit field is present as Multi-Master Contention Raw Interrupt Status.
0: ssi_mst_intr interrupt is not active prior to masking
1: ssi_mst_intr interrupt is active prior to masking
When SPI is configured as serial-slave, this bit field is present as Frame Alignment Error Raw Interrupt Status.
0: ssi_fae_intr interrupt not active prior to masking
1: ssi_fae_intr interrupt is active prior to masking</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RXFIR</name>
              <description>Receive FIFO Full Raw Interrupt Status.
0: ssi_rxf_intr interrupt is not active prior to masking
1: ssi_rxf_intr interrupt is active prior to masking</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RXOIR</name>
              <description>Receive FIFO Overflow Raw Interrupt Status.
0: ssi_rxo_intr interrupt is not active prior to masking
1: ssi_rxo_intr interrupt is active prior to masking</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RXUIR</name>
              <description>Receive FIFO Underflow Raw Interrupt Status.
0: ssi_rxu_intr interrupt is not active prior to masking
1: ssi_rxu_intr interrupt is active prior to masking</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TXOIR</name>
              <description>Transmit FIFO Overflow Raw Interrupt Status.
0: ssi_txo_intr interrupt is not active prior to masking
1: ssi_txo_intr interrupt is active prior to masking</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TXEIR</name>
              <description>Transmit FIFO Empty Raw Interrupt Status.
0: ssi_txe_intr interrupt is not active prior to masking
1: ssi_txe_intr interrupt is active prior to masking</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TXOICR</name>
          <addressOffset>0x00000038</addressOffset>
          <size>32</size>
          <description>Transmit FIFO Overflow Interrupt Clear Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TXOICR</name>
              <description>Clear Transmit FIFO Overflow Interrupt. This register reflects the status of the interrupt. A read from this register clears the ssi_txo_intr interrupt; writing has no effect.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RXOICR</name>
          <addressOffset>0x0000003C</addressOffset>
          <size>32</size>
          <description>Receive FIFO Overflow Interrupt Clear Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RXOICR</name>
              <description>Clear Receive FIFO Overflow Interrupt. This register reflects the status of the interrupt. A read from this register clears the ssi_rxo_intr interrupt; writing has no effect.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RXUICR</name>
          <addressOffset>0x00000040</addressOffset>
          <size>32</size>
          <description>Receive FIFO Underflow Interrupt Clear Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RXUICR</name>
              <description>Clear Receive FIFO Underflow Interrupt. This register reflects the status of the interrupt. A read from this register clears the ssi_rxu_intr interrupt; writing has no effect.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MSTICR_FAEICR</name>
          <addressOffset>0x00000044</addressOffset>
          <size>32</size>
          <description>Multi-Master &amp; Frame Alignment Error Interrupt Clear Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>MSTICR_FAEICR</name>
              <description>Multi-Master Interrupt Clear Register/Frame Alignment Error Interrupt Clear Register.
When SPI is configured as serial-master, this bit field is used to Clear Multi-Master Contention Interrupt. A read from this register clears the ssi_mst_intr interrupt; writing has no effect.
When SPI is configured as serial-slave, this bit field is used to Clear Frame Alignment Interrupt. A read from this register clears the ssi_fae_intr interrupt; writing has no effect.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ICR</name>
          <addressOffset>0x00000048</addressOffset>
          <size>32</size>
          <description>Interrupt Clear Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ICR</name>
              <description>Clear Interrupt. This register is set if any of the interrupts below are active. A read clears the ssi_txo_intr, ssi_rxu_intr, ssi_rxo_intr, and the ssi_mst_intr/ssi_fae_intr interrupts. Writing to this register has no effect.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMACR</name>
          <addressOffset>0x0000004C</addressOffset>
          <size>32</size>
          <description>DMA Control Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TDMAE</name>
              <description>Transmit DMA Enable. This bit enables/disables the transmit FIFO DMA channel.
0: Transmit DMA disabled
1: Transmit DMA enabled</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RDMAE</name>
              <description>Receive DMA Enable. This bit enables/disables the receive FIFO DMA channel
0: Receive DMA disabled
1: Receive DMA enabled</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMATDLR</name>
          <addressOffset>0x00000050</addressOffset>
          <size>32</size>
          <description>DMA Transmit Data Level</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DMATDL</name>
              <description>Transmit Data Level. This bit field controls the level at which a DMA request is made by the transmit logic. It is equal to the watermark level; that is, the dma_tx_req signal is generated when the number of valid data entries in the transmit FIFO is equal to or below this field value, and TDMAE = 1. For DMATDL decode, refer to the following description:
000000: dma_tx_req is asserted when 0 data entry is present in transmit FIFO.
000001: dma_tx_req is asserted when 1 data entry is present in transmit FIFO.
000010: dma_tx_req is asserted when 2 data entries are present in transmit FIFO.
000011: dma_tx_req is asserted when 3 data entries are present in transmit FIFO.
...
111100: dma_tx_req is asserted when 60 data entries are present in transmit FIFO.
111101: dma_tx_req is asserted when 61 data entries are present in transmit FIFO.
111110: dma_tx_req is asserted when 62 data entries are present in transmit FIFO.
111111: dma_tx_req is asserted when 63 data entries are present in transmit FIFO.</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMARDLR</name>
          <addressOffset>0x00000054</addressOffset>
          <size>32</size>
          <description>DMA Receive Data Level</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DMARDL</name>
              <description>Receive Data Level. This bit field controls the level at which a DMA request is made by the receive logic. The watermark level = DMARDL+1; that is, dma_rx_req is generated when the number of valid data entries in the receive FIFO is equal to or above this field value + 1, and RDMAE=1. For DMARDL decode, refer to the following description:
000000: dma_rx_req is asserted when 1 or more data entries are present in transmit FIFO.
000001: dma_rx_req is asserted when 2 or more data entries are present in transmit FIFO.
000010: dma_rx_req is asserted when 3 or more data entries are present in transmit FIFO.
000011: dma_rx_req is asserted when 4 or more data entries are present in transmit FIFO.
...
111100: dma_rx_req is asserted when 61 or more data entries are present in transmit FIFO.
111101: dma_rx_req is asserted when 62 or more data entries are present in transmit FIFO.
111110: dma_rx_req is asserted when 63 or more data entries are present in transmit FIFO.
111111: dma_rx_req is asserted when 64 data entries are present in transmit FIFO.</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TXUICR</name>
          <addressOffset>0x00000058</addressOffset>
          <size>32</size>
          <description>Transmit FIFO Underflow Interrupt Clear Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TXUICR</name>
              <description>When SPI is configured as serial-slave, this register is used to Clear Transmit FIFO Underflow Interrupt. This register reflects the status of the interrupt. A read from this register clears the ssi_txu_intr interrupt; writing has no effect.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SSRICR</name>
          <addressOffset>0x0000005C</addressOffset>
          <size>32</size>
          <description>SS_N Rising Edge Detect Interrupt Clear Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SSRICR</name>
              <description>When SPI is configured as serial-slave, this register is used to Clear SS_N Rinsing Edge Detect Interrupt. This register reflects the status of the interrupt. A read from this register clears the ssi_ssr_intr interrupt; writing has no effect.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR0</name>
          <addressOffset>0x00000060</addressOffset>
          <size>32</size>
          <description>Data Register 0</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR0</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR1</name>
          <addressOffset>0x00000064</addressOffset>
          <size>32</size>
          <description>Data Register 1</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR1</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR2</name>
          <addressOffset>0x00000068</addressOffset>
          <size>32</size>
          <description>Data Register 2</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR2</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR3</name>
          <addressOffset>0x0000006C</addressOffset>
          <size>32</size>
          <description>Data Register 3</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR3</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR4</name>
          <addressOffset>0x00000070</addressOffset>
          <size>32</size>
          <description>Data Register 4</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR4</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR5</name>
          <addressOffset>0x00000074</addressOffset>
          <size>32</size>
          <description>Data Register 5</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR5</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR6</name>
          <addressOffset>0x00000078</addressOffset>
          <size>32</size>
          <description>Data Register 6</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR6</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR7</name>
          <addressOffset>0x0000007C</addressOffset>
          <size>32</size>
          <description>Data Register 7</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR7</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR8</name>
          <addressOffset>0x00000080</addressOffset>
          <size>32</size>
          <description>Data Register 8</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR8</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR9</name>
          <addressOffset>0x00000084</addressOffset>
          <size>32</size>
          <description>Data Register 9</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR9</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR10</name>
          <addressOffset>0x00000088</addressOffset>
          <size>32</size>
          <description>Data Register 10</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR10</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR11</name>
          <addressOffset>0x0000008C</addressOffset>
          <size>32</size>
          <description>Data Register 11</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR11</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR12</name>
          <addressOffset>0x00000090</addressOffset>
          <size>32</size>
          <description>Data Register 12</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR12</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR13</name>
          <addressOffset>0x00000094</addressOffset>
          <size>32</size>
          <description>Data Register 13</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR13</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR14</name>
          <addressOffset>0x00000098</addressOffset>
          <size>32</size>
          <description>Data Register 14</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR14</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR15</name>
          <addressOffset>0x0000009C</addressOffset>
          <size>32</size>
          <description>Data Register 15</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR15</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR16</name>
          <addressOffset>0x000000A0</addressOffset>
          <size>32</size>
          <description>Data Register 16</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR16</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR17</name>
          <addressOffset>0x000000A4</addressOffset>
          <size>32</size>
          <description>Data Register 17</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR17</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR18</name>
          <addressOffset>0x000000A8</addressOffset>
          <size>32</size>
          <description>Data Register 18</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR18</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR19</name>
          <addressOffset>0x000000AC</addressOffset>
          <size>32</size>
          <description>Data Register 19</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR19</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR20</name>
          <addressOffset>0x000000B0</addressOffset>
          <size>32</size>
          <description>Data Register 20</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR20</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR21</name>
          <addressOffset>0x000000B4</addressOffset>
          <size>32</size>
          <description>Data Register 21</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR21</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR23</name>
          <addressOffset>0x000000BC</addressOffset>
          <size>32</size>
          <description>Data Register 23</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR23</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR24</name>
          <addressOffset>0x000000C0</addressOffset>
          <size>32</size>
          <description>Data Register 24</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR24</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR25</name>
          <addressOffset>0x000000C4</addressOffset>
          <size>32</size>
          <description>Data Register 25</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR25</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR26</name>
          <addressOffset>0x000000C8</addressOffset>
          <size>32</size>
          <description>Data Register 26</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR26</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR27</name>
          <addressOffset>0x000000CC</addressOffset>
          <size>32</size>
          <description>Data Register 27</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR27</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR28</name>
          <addressOffset>0x000000D0</addressOffset>
          <size>32</size>
          <description>Data Register 28</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR28</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR29</name>
          <addressOffset>0x000000D4</addressOffset>
          <size>32</size>
          <description>Data Register 29</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR29</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR30</name>
          <addressOffset>0x000000D8</addressOffset>
          <size>32</size>
          <description>Data Register 30</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR30</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR31</name>
          <addressOffset>0x000000DC</addressOffset>
          <size>32</size>
          <description>Data Register 31</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR31</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR32</name>
          <addressOffset>0x000000E0</addressOffset>
          <size>32</size>
          <description>Data Register 32</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR32</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR33</name>
          <addressOffset>0x000000E4</addressOffset>
          <size>32</size>
          <description>Data Register 33</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR33</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR34</name>
          <addressOffset>0x000000E8</addressOffset>
          <size>32</size>
          <description>Data Register 34</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR34</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR35</name>
          <addressOffset>0x000000EC</addressOffset>
          <size>32</size>
          <description>Data Register 35</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR35</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RX_SAMPLE_DLY</name>
          <addressOffset>0x000000F0</addressOffset>
          <size>32</size>
          <description>rxd Sample Delay Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSD</name>
              <description>Receive Data (rxd) Sample Delay. This register is used to delay the sample of the rxd input signal. Each value represents a single ssi_clk delay on the sample of the rxd signal.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_DUMMY</name>
          <addressOffset>0x00000100</addressOffset>
          <size>32</size>
          <description>SPI Dummy Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>Reserved for HW</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>debugtimer</name>
      <baseAddress>0x41015000</baseAddress>
      <size>0x00000018</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00000018</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>DBGT_CTRL</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description>Debug Timer control register</description>
          <resetValue>0x00000001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>enable</name>
              <description>Debug timer enable.
1: The counter is enabled.
0: The counter is disabled.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DBGT_CRV</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description>Debug Timer count register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dbgt_crv</name>
              <description>Continue to count from 0 once it's reached 32'hFFFFFFFF.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DBGT_ATOM_INC</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description>Debug Timer atom read increase register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dbgt_atom_inc</name>
              <description>Each read will increase 1 and return to the increased value to bus.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DBGT_ATOM</name>
          <addressOffset>0x0000000C</addressOffset>
          <size>32</size>
          <description>Debug Timer atom register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dbgt_atom</name>
              <description>Return the last increased value of atom counter.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DBGT_SCRATCH</name>
          <addressOffset>0x00000010</addressOffset>
          <size>32</size>
          <description>Debug Timer scratch register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dbgt_scratch</name>
              <description>Reserved</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DBGTIM_DUMMY</name>
          <addressOffset>0x00000014</addressOffset>
          <size>32</size>
          <description>Debug Timer Dummy Register</description>
          <resetValue>0x0000FFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>Dummy register</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>pmctimer</name>
      <baseAddress>0x41016000</baseAddress>
      <size>0x00000034</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00000034</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>TIM_EN</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description>TIM enable register</description>
          <resetValue>0x00000F0F</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>reset_timer3</name>
              <description>Writing 1 will cause a pulse reset timer1. Please wait for 3 work clk before  new timer configuration
1: valid
0: not valid</description>
              <bitRange>[31:31]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>reset_timer2</name>
              <description>Writing 1 will cause a pulse reset timer1. Please wait for 3 work clk before  new timer configuration
1: valid
0: not valid</description>
              <bitRange>[30:30]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>reset_timer1</name>
              <description>Writing 1 will cause a pulse reset timer1. Please wait for 3 work clk before  new timer configuration
1: valid
0: not valid</description>
              <bitRange>[29:29]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>reset_timer0</name>
              <description>Writing 1 will cause a pulse reset timer0. Please wait for 3 work clk before  new timer configuration
1: valid
0: not valid</description>
              <bitRange>[28:28]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>config_valid_timer3</name>
              <description>TIM_SET configuration valid or not. 
1: valid
0: not valid
if compare option enable,
1: vaild value is seted
0: set option is on going</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>config_valid_timer2</name>
              <description>TIM_SET configuration valid or not
1: valid
0: not valid</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>config_valid_timer1</name>
              <description>TIM_SET configuration valid or not
1: valid
0: not valid</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>config_valid_timer0</name>
              <description>TIM_SET configuration valid or not
1: valid
0: not valid</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>cnt_start_timer3</name>
              <description>enable the timer3 counter.
1:enable
0:disable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cnt_start_timer2</name>
              <description>enable the timer2 counter.
1:enable
0:disable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cnt_start_timer1</name>
              <description>enable the timer1 counter.
1:enable
0:disable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cnt_start_timer0</name>
              <description>enable the timer0 counter.
1:enable
0:disable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_DIER</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description>TIM interupt enable register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>uie_timer3</name>
              <description>1: enable update interrupt
0: disable update interrupt</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>uie_timer2</name>
              <description>1: enable update interrupt
0: disable update interrupt</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>uie_timer1</name>
              <description>1: enable update interrupt
0: disable update interrupt</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>uie_timer0</name>
              <description>1: enable update interrupt
0: disable update interrupt</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_ISR</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description>TIM interrupt status register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>isr_timer3</name>
              <description>Timer interrupt status
0: no interrupt
1: interrupt occurs
Write 1 to clear interrupts in interrupt handler.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>isr_timer2</name>
              <description>Timer interrupt status
0: no interrupt
1: interrupt occurs
Write 1 to clear interrupts in interrupt handler.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>isr_timer1</name>
              <description>Timer interrupt status
0: no interrupt
1: interrupt occurs
Write 1 to clear interrupts in interrupt handler.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>isr_timer0</name>
              <description>Timer interrupt status
0: no interrupt
1: interrupt occurs
Write 1 to clear interrupts in interrupt handler.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_CNT0</name>
          <addressOffset>0x0000000C</addressOffset>
          <size>32</size>
          <description>TIM counter0</description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>cnt0</name>
              <description>counter value, counter will stop automatically when it counts down to zero.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_CNT1</name>
          <addressOffset>0x00000010</addressOffset>
          <size>32</size>
          <description>TIM counter1</description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>cnt1</name>
              <description>counter value, counter will stop automatically when it counts down to zero.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_CNT2</name>
          <addressOffset>0x00000014</addressOffset>
          <size>32</size>
          <description>TIM counter2</description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>cnt2</name>
              <description>counter value, counter will stop automatically when it counts down to zero.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_CNT3</name>
          <addressOffset>0x00000018</addressOffset>
          <size>32</size>
          <description>TIM counter3</description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>cnt3</name>
              <description>counter value, counter will stop automatically when it counts down to zero.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_SET0</name>
          <addressOffset>0x0000001C</addressOffset>
          <size>32</size>
          <description>TIM set register0</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>tim_set0</name>
              <description>Set a countdown value.
This value come into force when TIM_EN register bit is enabled. counter will count down from this value immediately.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_SET1</name>
          <addressOffset>0x00000020</addressOffset>
          <size>32</size>
          <description>TIM set register1</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>tim_set1</name>
              <description>Set a countdown value.
This value come into force when TIM_EN register bit is enabled. counter will count down from this value immediately.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_SET2</name>
          <addressOffset>0x00000024</addressOffset>
          <size>32</size>
          <description>TIM set register2</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>tim_set2</name>
              <description>Set a countdown value.
This value come into force when TIM_EN register bit is enabled. counter will count down from this value immediately.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_SET3</name>
          <addressOffset>0x00000028</addressOffset>
          <size>32</size>
          <description>TIM set register3</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>tim_set3</name>
              <description>Set a countdown value.
This value come into force when TIM_EN register bit is enabled. counter will count down from this value immediately.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_com_en</name>
          <addressOffset>0x0000002C</addressOffset>
          <size>32</size>
          <description>TIM  compare register</description>
          <resetValue>0x0000000F</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>com_en</name>
              <description>enable compare option.The set cnt value takes effect only when it is greater than the actual cnt value
0:disable
1:enable
[0] : control tim0 set
......
[3]: control tim3 set</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PMCTIM_DUMMY</name>
          <addressOffset>0x00000030</addressOffset>
          <size>32</size>
          <description>PMCTimer Dummy Register</description>
          <resetValue>0x0000FFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>dummy register</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>timerpwm</name>
      <baseAddress>0x41100000</baseAddress>
      <size>0x00000088</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00000088</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>TIM_EN</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description>TIM enable register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>cnt_en</name>
              <description>Counter working status
* 0: Counter is stopped
* 1: Counter is working</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CEN</name>
              <description>Counter run status
* 0: Counter is disabled
* 1: Counter is enabled</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>cnt_stop</name>
              <description>Disable the counter. 
Poll CNT_RUN to see the counter status. If CNT_RUN is 0, it means that the counter has been disabled internally.</description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>cnt_start</name>
              <description>Enable the counter.
Poll CNT_RUN to see the counter status. If CNT_RUN is 1, it means that the counter has been enabled internally.</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_CR</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description>TIM control register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ETP</name>
              <description>External trigger polarity (TRGI)
* 0: Positive edge is active
* 1: Negative edge is active
* 2 or 3: Both edge is active
Note: These bits are only valid in one-pulse mode.</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ARPE</name>
              <description>Enable  auto-reload preloading
* 0: TIM_ARR register is not buffered
* 1: TIM_ARR register is buffered</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OPM</name>
              <description>One-pulse mode
* 0: Counter is not stopped at UEV
* 1: Counter stops counting at next UEV</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>URS</name>
              <description>Update request source
* 0: Counter overflow and setting the UG bit
* 1: Counter overflow</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>UDIS</name>
              <description>Disable UEV
Shadow registers keep their values. Otherwise, buffered registers are then loaded with their preload values when UEV happens.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_DIER</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description>TIM interrupt enable register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>UIE7</name>
              <description>Enable channel 7 update interrupt</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>UIE6</name>
              <description>Enable channel 6 update interrupt</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>UIE5</name>
              <description>Enable channel 5 update interrupt</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>UIE4</name>
              <description>Enable channel 4 update interrupt</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>UIE3</name>
              <description>Enable channel 3 update interrupt</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>UIE2</name>
              <description>Enable channel 2 update interrupt</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>UIE1</name>
              <description>Enable channel 1 update interrupt</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>UIE0</name>
              <description>Enable channel 0 update interrupt</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC7IE</name>
              <description>Enable Capture/Compare 7 interrupt</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC6IE</name>
              <description>Enable Capture/Compare 6 interrupt</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC5IE</name>
              <description>Enable Capture/Compare 5 interrupt</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC4IE</name>
              <description>Enable Capture/Compare 4 interrupt</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC3IE</name>
              <description>Enable Capture/Compare 3 interrupt</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC2IE</name>
              <description>Enable Capture/Compare 2 interrupt</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC1IE</name>
              <description>Enable Capture/Compare 1 interrupt</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC0IE</name>
              <description>Enable Capture/Compare 0 interrupt</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>UIE</name>
              <description>Enable counter update interrupt</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_SR</name>
          <addressOffset>0x0000000C</addressOffset>
          <size>32</size>
          <description>TIM status register</description>
          <resetValue>0x80000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>UG_DONE</name>
              <description>UG operation status
This bit is cleared by hardware when the UG bit in the TIMx_EGR register is set. When the UG operation is done, hardware sets this bit to '1'. So, software can poll this bit to see the UG operation status.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>UIF7</name>
              <description>Refer to UIF0 description</description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>UIF6</name>
              <description>Refer to UIF0 description</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>UIF5</name>
              <description>Refer to UIF0 description</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>UIF4</name>
              <description>Refer to UIF0 description</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>UIF3</name>
              <description>Refer to UIF0 description</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>UIF2</name>
              <description>Refer to UIF0 description</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>UIF1</name>
              <description>Refer to UIF0 description</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>UIF0</name>
              <description>Update interrupt flag of channel 0
This flag is set by hardware when the UIE0 bit in the TIMx_EGR register is set, and update interrupt of channel 0 happens.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CC7IF</name>
              <description>Refer to CC0IF description</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CC6IF</name>
              <description>Refer to CC0IF description</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CC5IF</name>
              <description>Refer to CC0IF description</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CC4IF</name>
              <description>Refer to CC0IF description</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CC3IF</name>
              <description>Refer to CC0IF description</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CC2IF</name>
              <description>Refer to CC0IF description</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CC1IF</name>
              <description>Refer to CC0IF description</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CC0IF</name>
              <description>Capture/Compare 0 interrupt flag
Channel CC0 configured as output: This flag is set by hardware when the counter TIM_CNT value matches the value of TIM_CCR0 register. It is cleared by software.
Channel CC0 configured as input: This flag is set by hardware and the counter value has been captured in CCR0 field of TIM_CCR0 register when an active edge has been detected. It is cleared by software.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>UIF</name>
              <description>Update interrupt flag</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_EGR</name>
          <addressOffset>0x00000010</addressOffset>
          <size>32</size>
          <description>TIM event generation register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CC7G</name>
              <description>Refer to CC0G description</description>
              <bitRange>[8:8]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>CC6G</name>
              <description>Refer to CC0G description</description>
              <bitRange>[7:7]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>CC5G</name>
              <description>Refer to CC0G description</description>
              <bitRange>[6:6]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>CC4G</name>
              <description>Refer to CC0G description</description>
              <bitRange>[5:5]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>CC3G</name>
              <description>Refer to CC0G description</description>
              <bitRange>[4:4]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>CC2G</name>
              <description>Refer to CC0G description</description>
              <bitRange>[3:3]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>CC1G</name>
              <description>Refer to CC0G description</description>
              <bitRange>[2:2]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>CC0G</name>
              <description>Capture/Compare 0 generation
This bit is set by software and is automatically cleared by hardware.
Channel CC0 configured as output: The CC0IF flag is set, the corresponding interrupt or request is sent if enabled. 
Channel CC0 configured as input: The current value of counter is capture in CCR0 field of TIM_CCR0 register. The CC0IF flag is set, the corresponding interrupt or  request is sent if enabled.</description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>UG</name>
              <description>Update generation
Re-initialize the counter and generate an update of registers. Note that the prescaler counter is cleared too. (anyway the prescaler ratio is not affected)</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_CNT</name>
          <addressOffset>0x00000014</addressOffset>
          <size>32</size>
          <description>TIM counter</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CNT</name>
              <description>Counter value</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_PSC</name>
          <addressOffset>0x00000018</addressOffset>
          <size>32</size>
          <description>TIM prescaler register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PSC</name>
              <description>Prescaler value
PSC contains the value to be loaded in the actual prescaler register at each UEV (including when the counter is cleared through UG bit of TIM_EGR register).</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_ARR</name>
          <addressOffset>0x0000001C</addressOffset>
          <size>32</size>
          <description>TIM auto-reload register</description>
          <resetValue>0x0000FFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ARR</name>
              <description>The value to be loaded in the actual auto-reload register. It can be preloaded by setting ARPE bit in the TIM_CR register.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_CCR0</name>
          <addressOffset>0x00000024</addressOffset>
          <size>32</size>
          <description>TIM Capture/Compare register 0</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>OPM_DL0</name>
              <description>One-pulse mode default level
0: Default level is 0
1: Default level is 1
This bit takes effect only in PWM output one-pulse mode.</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC0M</name>
              <description>CC0 working mode
* 0: PWM mode
* 1: Input capture mode</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC0P</name>
              <description>CC0 channel configured as output:
* 0: OC0 active high
* 1: OC0 active low
CC0 channel configured as input:
* 0: Positive edge of TRGI is active for capture
* 1: Negative edge of TRGI is active for capture</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OC0PE</name>
              <description>Enable output capture 0 preload
* 0: Disable  preload register on CCR0. CCR0 can be written at any time, the new value is taken into account immediately.
* 1: Enable preload register on CCR0. Read/Write operations access the preload register. CCR0 preload value is loaded in the active register at each UEV.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC0E</name>
              <description>Enable CC0</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CCR0</name>
              <description>Capture/Compare 0 value
CC0 channel configured as output: CCR0 is the value to be loaded in the actual capture/compare 0 register (preload value). It is loaded permanently if the preload feature is not selected in the OC0PE bit. Else the preload value is copied in the active capture/compare 0 register when an UEV occurs. The active capture/compare 0 register contains the value to be compared to the counter TIM_CNT and signalled on OC0 output.
CC0 channel configured as pulse mode 1: CCR0 is the counter value transferred by the last input capture event (TRGI)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_CCR1</name>
          <addressOffset>0x00000028</addressOffset>
          <size>32</size>
          <description>TIM Capture/Compare register 1</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>OPM_DL1</name>
              <description>One-pulse mode default level
0: Default level is 0
1: Default level is 1
This bit takes effect only in PWM output one-pulse mode.</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC1M</name>
              <description>CC1 working mode
* 0: PWM mode
* 1: Input capture mode</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC1P</name>
              <description>CC1 channel configured as output:
* 0: OC1 active high
* 1: OC1 active low
CC1 channel configured as input:
* 0: Positive edge of TRGI is active for capture
* 1: Negative edge of TRGI is active for capture</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OC1PE</name>
              <description>Enable output capture 1 preload
* 0: Disable  preload register on CCR1. CCR1 can be written at any time, the new value is taken into account immediately.
* 1: Enable preload register on CCR1. Read/Write operations access the preload register. CCR1 preload value is loaded in the active register at each UEV.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC1E</name>
              <description>Enable CC1</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CCR1</name>
              <description>Capture/Compare 1 value
CC1 channel configured as output: CCR1 is the value to be loaded in the actual capture/compare 1 register (preload value). It is loaded permanently if the preload feature is not selected in the OC1PE bit. Else the preload value is copied in the active capture/compare 1 register when an UEV occurs. The active capture/compare 1 register contains the value to be compared to the counter TIM_CNT and signalled on OC1 output.
CC1 channel configured as pulse mode 1: CCR1 is the counter value transferred by the last input capture event (TRGI)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_CCR2</name>
          <addressOffset>0x0000002C</addressOffset>
          <size>32</size>
          <description>TIM Capture/Compare register 2</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>OPM_DL2</name>
              <description>One-pulse mode default level
0: Default level is 0
1: Default level is 1
This bit takes effect only in PWM output one-pulse mode.</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC2M</name>
              <description>CC2 working mode
* 0: PWM mode
* 1: Input capture mode</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC2P</name>
              <description>CC2 channel configured as output:
* 0: OC2 active high
* 1: OC2 active low
CC2 channel configured as input:
* 0: Positive edge of TRGI is active for capture
* 1: Negative edge of TRGI is active for capture</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OC2PE</name>
              <description>Enable output capture 2 preload
* 0: Disable  preload register on CCR2. CCR2 can be written at any time, the new value is taken into account immediately.
* 1: Enable preload register on CCR2. Read/Write operations access the preload register. CCR2 preload value is loaded in the active register at each UEV.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC2E</name>
              <description>Enable CC2</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CCR2</name>
              <description>Capture/Compare 2 value
CC2 channel configured as output: CCR2 is the value to be loaded in the actual capture/compare 2 register (preload value). It is loaded permanently if the preload feature is not selected in the OC2PE bit. Else the preload value is copied in the active capture/compare 2 register when an UEV occurs. The active capture/compare 2 register contains the value to be compared to the counter TIM_CNT and signalled on OC2 output.
CC2 channel configured as pulse mode 1: CCR2 is the counter value transferred by the last input capture event (TRGI)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_CCR3</name>
          <addressOffset>0x00000030</addressOffset>
          <size>32</size>
          <description>TIM Capture/Compare register 3</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>OPM_DL3</name>
              <description>One-pulse mode default level
0: Default level is 0
1: Default level is 1
This bit takes effect only in PWM output one-pulse mode.</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC3M</name>
              <description>CC3 working mode
* 0: PWM mode
* 1: Input capture mode</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC3P</name>
              <description>CC3 channel configured as output:
* 0: OC3 active high
* 1: OC3 active low
CC3 channel configured as input:
* 0: Positive edge of TRGI is active for capture
* 1: Negative edge of TRGI is active for capture</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OC3PE</name>
              <description>Enable output capture 3 preload
* 0: Disable  preload register on CCR3. CCR3 can be written at any time, the new value is taken into account immediately.
* 1: Enable preload register on CCR3. Read/Write operations access the preload register. CCR3 preload value is loaded in the active register at each UEV.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC3E</name>
              <description>Enable CC3</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CCR3</name>
              <description>Capture/Compare 3 value
CC3 channel configured as output: CCR3 is the value to be loaded in the actual capture/compare 3 register (preload value). It is loaded permanently if the preload feature is not selected in the OC3PE bit. Else the preload value is copied in the active capture/compare 3 register when an UEV occurs. The active capture/compare 3 register contains the value to be compared to the counter TIM_CNT and signalled on OC3 output.
CC3 channel configured as pulse mode 1: CCR3 is the counter value transferred by the last input capture event (TRGI)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_CCR4</name>
          <addressOffset>0x00000034</addressOffset>
          <size>32</size>
          <description>TIM Capture/Compare register 4</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>OPM_DL4</name>
              <description>One-pulse mode default level
0: Default level is 0
1: Default level is 1
This bit takes effect only in PWM output one-pulse mode.</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC4M</name>
              <description>CC4 working mode
* 0: PWM mode
* 1: Input capture mode</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC4P</name>
              <description>CC4 channel configured as output:
* 0: OC4 active high
* 1: OC4 active low
CC4 channel configured as input:
* 0: Positive edge of TRGI is active for capture
* 1: Negative edge of TRGI is active for capture</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OC4PE</name>
              <description>Enable output capture 4 preload
* 0: Disable  preload register on CCR4. CCR4 can be written at any time, the new value is taken into account immediately.
* 1: Enable preload register on CCR4. Read/Write operations access the preload register. CCR4 preload value is loaded in the active register at each UEV.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC4E</name>
              <description>Enable CC4</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CCR4</name>
              <description>Capture/Compare 4 value
CC4 channel configured as output: CCR4 is the value to be loaded in the actual capture/compare 4 register (preload value). It is loaded permanently if the preload feature is not selected in the OC4PE bit. Else the preload value is copied in the active capture/compare 4 register when an UEV occurs. The active capture/compare 4 register contains the value to be compared to the counter TIM_CNT and signalled on OC4 output.
CC4 channel configured as pulse mode 1: CCR4 is the counter value transferred by the last input capture event (TRGI)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_CCR5</name>
          <addressOffset>0x00000038</addressOffset>
          <size>32</size>
          <description>TIM Capture/Compare register 5</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>OPM_DL5</name>
              <description>One-pulse mode default level
0: Default level is 0
1: Default level is 1
This bit takes effect only in PWM output one-pulse mode.</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC5M</name>
              <description>CC5 working mode
* 0: PWM mode
* 1: Input capture mode</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC5P</name>
              <description>CC5 channel configured as output:
* 0: OC5 active high
* 1: OC5 active low
CC5 channel configured as input:
* 0: Positive edge of TRGI is active for capture
* 1: Negative edge of TRGI is active for capture</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OC5PE</name>
              <description>Enable output capture 5 preload
* 0: Disable  preload register on CCR5. CCR5 can be written at any time, the new value is taken into account immediately.
* 1: Enable preload register on CCR5. Read/Write operations access the preload register. CCR5 preload value is loaded in the active register at each UEV.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC5E</name>
              <description>Enable CC5</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CCR5</name>
              <description>Capture/Compare 5 value
CC5 channel configured as output: CCR5 is the value to be loaded in the actual capture/compare 5 register (preload value). It is loaded permanently if the preload feature is not selected in the OC5PE bit. Else the preload value is copied in the active capture/compare 5 register when an UEV occurs. The active capture/compare 5 register contains the value to be compared to the counter TIM_CNT and signalled on OC5 output.
CC5 channel configured as pulse mode 1: CCR5 is the counter value transferred by the last input capture event (TRGI)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_CCR6</name>
          <addressOffset>0x0000003C</addressOffset>
          <size>32</size>
          <description>TIM Capture/Compare register 6</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>OPM_DL6</name>
              <description>One-pulse mode default level
0: Default level is 0
1: Default level is 1
This bit takes effect only in PWM output one-pulse mode.</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC6M</name>
              <description>CC6 working mode
* 0: PWM mode
* 1: Input capture mode</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC6P</name>
              <description>CC6 channel configured as output:
* 0: OC6 active high
* 1: OC6 active low
CC6 channel configured as input:
* 0: Positive edge of TRGI is active for capture
* 1: Negative edge of TRGI is active for capture</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OC6PE</name>
              <description>Enable output capture 6 preload
* 0: Disable  preload register on CCR6. CCR6 can be written at any time, the new value is taken into account immediately.
* 1: Enable preload register on CCR6. Read/Write operations access the preload register. CCR6 preload value is loaded in the active register at each UEV.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC6E</name>
              <description>Enable CC6</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CCR6</name>
              <description>Capture/Compare 6 value
CC6 channel configured as output: CCR6 is the value to be loaded in the actual capture/compare 6 register (preload value). It is loaded permanently if the preload feature is not selected in the OC6PE bit. Else the preload value is copied in the active capture/compare 6 register when an UEV occurs. The active capture/compare 6 register contains the value to be compared to the counter TIM_CNT and signalled on OC6 output.
CC6 channel configured as pulse mode 1: CCR6 is the counter value transferred by the last input capture event (TRGI)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_CCR7</name>
          <addressOffset>0x00000040</addressOffset>
          <size>32</size>
          <description>TIM Capture/Compare register 7</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>OPM_DL7</name>
              <description>One-pulse mode default level
0: Default level is 0
1: Default level is 1
This bit takes effect only in PWM output one-pulse mode.</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC7M</name>
              <description>CC7 working mode
* 0: PWM mode
* 1: Input capture mode</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC7P</name>
              <description>CC7 channel configured as output:
* 0: OC7 active high
* 1: OC7 active low
CC7 channel configured as input:
* 0: Positive edge of TRGI is active for capture
* 1: Negative edge of TRGI is active for capture</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OC7PE</name>
              <description>Enable output capture 7 preload
* 0: Disable  preload register on CCR7. CCR7 can be written at any time, the new value is taken into account immediately.
* 1: Enable preload register on CCR7. Read/Write operations access the preload register. CCR7 preload value is loaded in the active register at each UEV.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC7E</name>
              <description>Enable CC7</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CCR7</name>
              <description>Capture/Compare 7 value
CC7 channel configured as output: CCR7 is the value to be loaded in the actual capture/compare 7 register (preload value). It is loaded permanently if the preload feature is not selected in the OC7PE bit. Else the preload value is copied in the active capture/compare 7 register when an UEV occurs. The active capture/compare 7 register contains the value to be compared to the counter TIM_CNT and signalled on OC7 output.
CC7 channel configured as pulse mode 1: CCR7 is the counter value transferred by the last input capture event (TRGI)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_PSYNC0</name>
          <addressOffset>0x00000044</addressOffset>
          <size>32</size>
          <description>TIM Phase Synchronization register 0</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SYNCEN0</name>
              <description>Enable phase sync function in channel 0. Phase sync takes effect only in output PWM mode.</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SYNCDIR0</name>
              <description>Phase sync direction to the reference counter
0: Delay to the reference counter
1: Ahead to the reference counter</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SYNCPE0</name>
              <description>Enable sync phase parameter preload
* 0: Disable  preload register on PSYNC0. PSYNC0 can be written at any time, the new value is taken into account immediately.
* 1: Enable preload register on PSYNC0. Read/Write operations access the preload register. PSYNC0 preload value is loaded in the active
register at each UEV.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SYNCPHASE0</name>
              <description>The deviation value of channel 0 to the reference counter</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_PSYNC1</name>
          <addressOffset>0x00000048</addressOffset>
          <size>32</size>
          <description>TIM Phase Synchronization register 1</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SYNCEN1</name>
              <description>Enable phase sync function in channel 1. Phase sync takes effect only in output PWM mode.</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SYNCDIR1</name>
              <description>Phase sync direction to the reference counter
0: Delay to the reference counter
1: Ahead to the reference counter</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SYNCPE1</name>
              <description>Enable sync phase parameter preload
* 0: Disable  preload register on PSYNC1. PSYNC1 can be written at any time, the new value is taken into account immediately.
* 1: Enable preload register on PSYNC1. Read/Write operations access the preload register. PSYNC1 preload value is loaded in the active
register at each UEV.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SYNCPHASE1</name>
              <description>The deviation value of channel 1 to the reference counter</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_PSYNC2</name>
          <addressOffset>0x0000004C</addressOffset>
          <size>32</size>
          <description>TIM Phase Synchronization register 2</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SYNCEN2</name>
              <description>Enable phase sync function in channel 2. Phase sync takes effect only in output PWM mode.</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SYNCDIR2</name>
              <description>Phase sync direction to the reference counter
0: Delay to the reference counter
1: Ahead to the reference counter</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SYNCPE2</name>
              <description>Enable sync phase parameter preload
* 0: Disable  preload register on PSYNC2. PSYNC2 can be written at any time, the new value is taken into account immediately.
* 1: Enable preload register on PSYNC2. Read/Write operations access the preload register. PSYNC2 preload value is loaded in the active
register at each UEV.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SYNCPHASE2</name>
              <description>The deviation value of channel 2 to the reference counter</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_PSYNC3</name>
          <addressOffset>0x00000050</addressOffset>
          <size>32</size>
          <description>TIM Phase Synchronization register 3</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SYNCEN3</name>
              <description>Enable phase sync function in channel 3. Phase sync takes effect only in output PWM mode.</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SYNCDIR3</name>
              <description>Phase sync direction to the reference counter
0: Delay to the reference counter
1: Ahead to the reference counter</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SYNCPE3</name>
              <description>Enable sync phase parameter preload
* 0: Disable  preload register on PSYNC3. PSYNC3 can be written at any time, the new value is taken into account immediately.
* 1: Enable preload register on PSYNC3. Read/Write operations access the preload register. PSYNC3 preload value is loaded in the active
register at each UEV.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SYNCPHASE3</name>
              <description>The deviation value of channel 3 to the reference counter</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_PSYNC4</name>
          <addressOffset>0x00000054</addressOffset>
          <size>32</size>
          <description>TIM Phase Synchronization register 4</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SYNCEN4</name>
              <description>Enable phase sync function in channel 4. Phase sync takes effect only in output PWM mode.</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SYNCDIR4</name>
              <description>Phase sync direction to the reference counter
0: Delay to the reference counter
1: Ahead to the reference counter</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SYNCPE4</name>
              <description>Enable sync phase parameter preload
* 0: Disable  preload register on PSYNC4. PSYNC4 can be written at any time, the new value is taken into account immediately.
* 1: Enable preload register on PSYNC4. Read/Write operations access the preload register. PSYNC4 preload value is loaded in the active
register at each UEV.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SYNCPHASE4</name>
              <description>The deviation value of channel 4 to the reference counter</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_PSYNC5</name>
          <addressOffset>0x00000058</addressOffset>
          <size>32</size>
          <description>TIM Phase Synchronization register 5</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SYNCEN5</name>
              <description>Enable phase sync function in channel 5. Phase sync takes effect only in output PWM mode.</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SYNCDIR5</name>
              <description>Phase sync direction to the reference counter
0: Delay to the reference counter
1: Ahead to the reference counter</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SYNCPE5</name>
              <description>Enable sync phase parameter preload
* 0: Disable  preload register on PSYNC5. PSYNC5 can be written at any time, the new value is taken into account immediately.
* 1: Enable preload register on PSYNC5. Read/Write operations access the preload register. PSYNC5 preload value is loaded in the active
register at each UEV.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SYNCPHASE5</name>
              <description>The deviation value of channel 5 to the reference counter</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_PSYNC6</name>
          <addressOffset>0x0000005C</addressOffset>
          <size>32</size>
          <description>TIM Phase Synchronization register 6</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SYNCEN6</name>
              <description>Enable phase sync function in channel 6. Phase sync takes effect only in output PWM mode.</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SYNCDIR6</name>
              <description>Phase sync direction to the reference counter
0: Delay to the reference counter
1: Ahead to the reference counter</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SYNCPE6</name>
              <description>Enable sync phase parameter preload
* 0: Disable  preload register on PSYNC6. PSYNC6 can be written at any time, the new value is taken into account immediately.
* 1: Enable preload register on PSYNC6. Read/Write operations access the preload register. PSYNC6 preload value is loaded in the active
register at each UEV.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SYNCPHASE6</name>
              <description>The deviation value of channel 6 to the reference counter</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_PSYNC7</name>
          <addressOffset>0x00000060</addressOffset>
          <size>32</size>
          <description>TIM Phase Synchronization register 7</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SYNCEN7</name>
              <description>Enable phase sync function in channel 7. Phase sync takes effect only in output PWM mode.</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SYNCDIR7</name>
              <description>Phase sync direction to the reference counter
0: Delay to the reference counter
1: Ahead to the reference counter</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SYNCPE7</name>
              <description>Enable sync phase parameter preload
* 0: Disable  preload register on PSYNC7. PSYNC7 can be written at any time, the new value is taken into account immediately.
* 1: Enable preload register on PSYNC7. Read/Write operations access the preload register. PSYNC7 preload value is loaded in the active
register at each UEV.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SYNCPHASE7</name>
              <description>The deviation value of channel 7 to the reference counter</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_PHASECNT0</name>
          <addressOffset>0x00000064</addressOffset>
          <size>32</size>
          <description>TIM phase counter register 0</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CNT0</name>
              <description>Phase counter value of channel 0</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_PHASECNT1</name>
          <addressOffset>0x00000068</addressOffset>
          <size>32</size>
          <description>TIM phase counter register 1</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CNT1</name>
              <description>Phase counter value of channel 1</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_PHASECNT2</name>
          <addressOffset>0x0000006C</addressOffset>
          <size>32</size>
          <description>TIM phase counter register 2</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CNT2</name>
              <description>Phase counter value of channel 2</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_PHASECNT3</name>
          <addressOffset>0x00000070</addressOffset>
          <size>32</size>
          <description>TIM phase counter register 3</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CNT3</name>
              <description>Phase counter value of channel 3</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_PHASECNT4</name>
          <addressOffset>0x00000074</addressOffset>
          <size>32</size>
          <description>TIM phase counter register 4</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CNT4</name>
              <description>Phase counter value of channel 4</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_PHASECNT5</name>
          <addressOffset>0x00000078</addressOffset>
          <size>32</size>
          <description>TIM phase counter register 5</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CNT5</name>
              <description>Phase counter value of channel 5</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_PHASECNT6</name>
          <addressOffset>0x0000007C</addressOffset>
          <size>32</size>
          <description>TIM phase counter register 6</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CNT6</name>
              <description>Phase counter value of channel 6</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_PHASECNT7</name>
          <addressOffset>0x00000080</addressOffset>
          <size>32</size>
          <description>TIM phase counter register 7</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CNT7</name>
              <description>Phase counter value of channel 7</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TIM_PWM_DUMMY</name>
          <addressOffset>0x00000084</addressOffset>
          <size>32</size>
          <description>Timer PWM Dummy Register</description>
          <resetValue>0x0000FFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>Dummy register</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>uartirda</name>
      <baseAddress>0x4100C000</baseAddress>
      <size>0x00000064</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00000064</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>UART_DLL</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description>UART divisor length register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BAUD</name>
              <description>The low 8 bits of divisor coefficient (not used)</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_IER</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description>UART interrupt enable register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ERXNDI</name>
              <description>Rx noise detected interrupt enable</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ETOI</name>
              <description>Rx timeout interrupt enable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EMDI</name>
              <description>Rx path monitor done interrupt enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EDSSI</name>
              <description>Modem Status Interrupt (EDSSI) (modem status transition) enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ELSI</name>
              <description>Receiver Line Status Interrupt (ELSI) (receiver line status) enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ETBEI</name>
              <description>Transmitter FIFO Empty interrupt (ETBEI) (Tx FIFO empty) enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ERBI</name>
              <description>Received Data Available Interrupt (ERBFI) (Rx trigger) enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_IIR</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description>UART interrupt identification register</description>
          <resetValue>0x00000001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>INT_PEND</name>
              <description>* 0: pending, and the IR contents may be used as a pointer to the appropriate interrupt service routine.
* 1: no interrupt is pending.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_LCR</name>
          <addressOffset>0x0000000C</addressOffset>
          <size>32</size>
          <description>UART line control register</description>
          <resetValue>0x00000001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DLAB</name>
              <description>Divisor Latch Access bit, and control the accessibility of the DLL, DLM and IER registers
* 0: The divisor latches not accessible; IER accessible
* 1: The divisor latches accessible; DLL and DLM accessible
Note: THR/RBR don't care the value of this bit.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BRCTL</name>
              <description>Break Control bit
* 0: break signal disable
* 1: break signal enable (logic '0')</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>STKP</name>
              <description>Stick Parity bit
* 0: Not stick parity, the parity type is ODD or EVEN (depending on EPS)
* 1: Stick parity
**EPS=1: low parity (1'b0)
**EPS=0: high parity (1'b1)</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EPS</name>
              <description>Even Parity selection
* 0: Odd parity, the number of logic '1' is odd.
* 1: Even parity, the number of logic '1' is even.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PEN</name>
              <description>Parity Enable
* 0: No parity bit
* 1: Parity bit is generated on each outgoing character and is checked on each incoming one</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>STB</name>
              <description>Stop bits length selection
* 0: 1 stop bit
* 1: 2 stop bits
Note: The receiver always checks the first stop bit only.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WLS0</name>
              <description>Word length selection
* 0: 7 bits data
* 1: 8 bits data</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_MCR</name>
          <addressOffset>0x00000010</addressOffset>
          <size>32</size>
          <description>UART modem control register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>AFE</name>
              <description>Auto flow control enable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LOOP_EN</name>
              <description>LoopBack mode
* 0: Normal operation mode
* 1: Loopback mode</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT2</name>
              <description>Auxiliary output 2
Bit[3] affects the OUT2_ output in a manner identical to that described above set to 0.
In loopback mode, connected to Data Carrier Detect (DCD).</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT1</name>
              <description>Auxiliary output 1
Bit3 affects the OUT1_ output in a manner identical to that described above set to 0.
In loopback mode, connected to Ring Indicator (RI).</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RTS</name>
              <description>Request to Send (RTS) signal control
* 0: RTS is logic 1.
* 1: RTS is logic 0.
This bit controls the RTS_ output. Bit[1] affects the RTS_ output in a manner identical to that described above set to 0.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DTR</name>
              <description>* 0: DTR is logic 1.
* 1: DTR is logic 0.
This bit controls the DTR output.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_LSR</name>
          <addressOffset>0x00000014</addressOffset>
          <size>32</size>
          <description>UART line status register</description>
          <resetValue>0x00000060</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RXND_INT</name>
              <description>This bit is only set when Rx debouncer has detected noise.
1: Rx path noise detected interrupt</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>MODEM_INT</name>
              <description>This bit is only set when Modem status is pending. 
1: Modem interrupt</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>MONITOR_DONE_INT</name>
              <description>This bit is only set when Rx Path Monitor Done interrupt is enabled (EMDI is set).
1: Rx path monitor done</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TIMEOUT_INT</name>
              <description>This bit is only set when Rx Timeout interrupt is enabled (ETOI is set).
1: at least one character in the FIFO but no character has been input to the FIFO or reading from it for the time duration, which depends on the value in register REG_RX_PATH_CTRL[31:16].</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RXFIFO_INT</name>
              <description>This bit is only set when Received Data Available Interrupt interrupt is enabled (ERBI is set).
1: FIFO Trigger level reached or Rx FIFO full</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RXFIFO_ERR</name>
              <description>Uart_rx_error, depending on the FIFO control register (FCR) bit[0]
* 0: cleared when the CPU reads the LSR, if there are no subsequent errors in the FIFO.
* 1: parity error, overrun error, framing error or break indication in the FIFO.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TX_NOT_FULL</name>
              <description>TXFIFO not full indicator</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TX_EMPTY</name>
              <description>TXFIFO empty indicator</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BREAK_INT</name>
              <description>Break Interrupt (BI) indicator
* 0: No break condition in the current character
* 1: The received data input held in the Spacing (logic 0) state is longer than a full word transmission time</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FRM_ERR</name>
              <description>Framing Error (FE) indicator
* 0: No framing error in the current character
* 1: The received character does not have a valid stop bit</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAR_ERR</name>
              <description>Parity Error (PE) indicator
* 0: No parity error in current character
* 1: The received character does not have the correct parity bit</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>OVR_ERR</name>
              <description>Overrun Error (OE) indicator
* 0: No overrun state
* 1: The transmission is continue although the Rx FIFO is full</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DRDY</name>
              <description>* 0: No characters in the Receiver FIFO
* 1: At least one character has been received and transferred into the FIFO</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_MSR</name>
          <addressOffset>0x00000018</addressOffset>
          <size>32</size>
          <description>UART modem status register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>R_DCD</name>
              <description>Complement of the DCD input or equals to Out2 in loopback mode.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>R_RI</name>
              <description>Complement of the RI input or equals to Out1 in loopback mode.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>R_DSR</name>
              <description>Complement of the DSR input or equals to DTR in loopback mode.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>R_CTS</name>
              <description>Complement of the CTS input or equals to RTS in loopback mode.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>D_DCD</name>
              <description>* 0: Otherwise
* 1: The DCD line has changed its state</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TERI</name>
              <description>* 0: Otherwise
* 1: The RI line has changed its state from low to high state</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>D_DSR</name>
              <description>* 0: Otherwise
* 1: The DSR line has changed its state</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>D_CTS</name>
              <description>* 0: Otherwise
* 1: The CTS line has changed its state</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_SCR</name>
          <addressOffset>0x0000001C</addressOffset>
          <size>32</size>
          <description>UART scratch pad register</description>
          <resetValue>0x00000030</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>XFACTOR_ADJ</name>
              <description>One factor of baud rate calculation for Tx path</description>
              <bitRange>[26:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DBG_SEL</name>
              <description>Debug port selection</description>
              <bitRange>[12:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCRATCH_7</name>
              <description>Clear Rx break signal interrupt status</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCRATCH_6_0</name>
              <description>* Bit[6]: Rx break signal interrupt enable
* Bit[5]: fl_set_bi_err
* Bit[4]: fl_frame_err
* Bit[3]: pin_lb_test
* Bit[2:0]: reserved</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_STS</name>
          <addressOffset>0x00000020</addressOffset>
          <size>32</size>
          <description>UART STS register</description>
          <resetValue>0x00010470</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>XFACTOR</name>
              <description>Factor of baud rate calculation for Tx path</description>
              <bitRange>[23:4]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_RBR_OR_UART_THR</name>
          <addressOffset>0x00000024</addressOffset>
          <size>32</size>
          <description>UART receiver buffer register/UART transmitter holding register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATABIT</name>
              <description>UART_RBR's Rx data bits or UART_THR's Tx data bit[7:0]
Note: Bit[0] is the least significant bit. It is the first bit serially received/transmitted.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_MISCR</name>
          <addressOffset>0x00000028</addressOffset>
          <size>32</size>
          <description>UART MISC control register</description>
          <resetValue>0x00002020</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CLR_DUMMY_FLAG</name>
              <description>Indicate the clearing of dummy data</description>
              <bitRange>[30:30]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>DUMMY_DATA</name>
              <description>Store dummy data, when UART is DMA flow controller, dummy data is padded for last RXDMA burst request.</description>
              <bitRange>[29:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXDMA_OWNER</name>
              <description>* 0: GDMA
* 1: UART, interrupt enable signal other than erpd should be masked</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IRDA_RX_INV</name>
              <description>irda_rx_i reverse input enable</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IRDA_TX_INV</name>
              <description>irda_tx_o reverse output enable</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXDMA_BURSTSIZE</name>
              <description>RXDMA burstsize, maximum value is 16.</description>
              <bitRange>[18:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXDMA_BURSTSIZE</name>
              <description>TXDMA burstsize, maximum value is 16.</description>
              <bitRange>[10:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXDMA_EN</name>
              <description>RXDMA enable, valid when dma_mode in FCR is 1'b1</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXDMA_EN</name>
              <description>TXDMA enable, valid when dma_mode in FCR is 1'b1</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IRDA_ENABLE</name>
              <description>* 0: UART mode only
* 1: UART is co-work with IRDA SIR mode</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_SIR_TX_PWC0</name>
          <addressOffset>0x0000002C</addressOffset>
          <size>32</size>
          <description>UART IRDA SIR TX pulse width control 0 register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>UPPERBOUND_SHIFTRIGHT</name>
              <description>* 0: Shift left, minus offset value of upperbound_shiftval
* 1: Shift right, plus offset value of upperbound_shiftval</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>UPPERBOUND_SHIFTVAL</name>
              <description>The shift value of SIR TX pulse's right edge</description>
              <bitRange>[30:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LOWBOUND_SHIFTRIGHT</name>
              <description>* 0: Shift left, minus offset value of lowbound_shiftval
* 1: Shift right, plus offset value of lowbound_shiftval</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LOWBOUND_SHIFTVAL</name>
              <description>The shift value of SIR TX pulse's left edge</description>
              <bitRange>[14:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_SIR_RX_PFC</name>
          <addressOffset>0x00000030</addressOffset>
          <size>32</size>
          <description>UART IRDA SIR Rx pulse filter control register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>R_SIR_RX_FILTER_THRS</name>
              <description>The threshold of SIR Rx filter, Rx pulse is valid only when Rx pulse width is larger than the threshold.</description>
              <bitRange>[15:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>R_SIR_RX_FILTER_EN</name>
              <description>IrDA SIR Rx filter enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_BAUD_MON</name>
          <addressOffset>0x00000034</addressOffset>
          <size>32</size>
          <description>UART baud monitor register</description>
          <resetValue>0x07000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TOGGLE_MON_EN</name>
              <description>Toggle monitor enable</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MON_DATA_VLD</name>
              <description>Indicate valid monitoring data</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FALLING_THRESH</name>
              <description>Indicate the threshold of Rx data rising edge</description>
              <bitRange>[29:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MIN_LOW_PERIOD</name>
              <description>Minimum space of consecutive logic '0' of Rx data</description>
              <bitRange>[23:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>MIN_FALL_SPACE</name>
              <description>Minimum space of adjacent falling edge of Rx data</description>
              <bitRange>[11:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_DBGR</name>
          <addressOffset>0x0000003C</addressOffset>
          <size>32</size>
          <description>UART debug register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DBG_UART</name>
              <description>The output value of debug port, depending on dbg_sel value in SCR[2:0]</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_RX_PATH_CTRL</name>
          <addressOffset>0x00000040</addressOffset>
          <size>32</size>
          <description>UART Rx path control register</description>
          <resetValue>0x00400000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>R_RXTO_THRS</name>
              <description>Indicate the timeout threshold of Rx path, unit in one-bit time</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXBAUD_ADJ_10_0</name>
              <description>One factor of Baud rate calculation for Rx path, similar with xfactor_adj</description>
              <bitRange>[13:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>R_RST_NEWRX_N</name>
              <description>Reset new Rx path, low active</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_MON_BAUD_CTRL</name>
          <addressOffset>0x00000044</addressOffset>
          <size>32</size>
          <description>UART monitor baud rate control register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>R_UPD_OSC_IN_XTAL</name>
              <description>Update parameter r_cycnum_perbit_osc (during the update of parameter r_cycnum_perbit_xtal) enable</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>R_CYCNUM_PERBIT_OSC</name>
              <description>Indicate the average OSC clock cycle number of one bit, for Rx path OSC clock
NOTE: SW sets the initial value, and HW updates it depending on the monitor result.</description>
              <bitRange>[28:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>R_BIT_NUM_THRES</name>
              <description>Indicate the bit number threshold of one monitor period, max value is 127</description>
              <bitRange>[8:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>R_MON_BAUD_EN</name>
              <description>Monitor Rx baud enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_MON_BAUD_STS</name>
          <addressOffset>0x00000048</addressOffset>
          <size>32</size>
          <description>UART monitor baud rate status register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RO_MON_TOTAL_BIT</name>
              <description>Indicate the number of bits actually monitored</description>
              <bitRange>[28:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RO_MON_RDY</name>
              <description>Indicate the finish of calculation of actual cycle number per bit, it's cleared when r_mon_baud_en is 0.</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>R_CYCNUM_PERBIT_XTAL</name>
              <description>Indicate the fractional xtal clock cycle number of one bit, for Rx path XTAL clock
NOTE: SW sets the initial value, and HW updates it depending on the monitor result.</description>
              <bitRange>[19:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_MON_CYC_NUM</name>
          <addressOffset>0x0000004C</addressOffset>
          <size>32</size>
          <description>UART monitored cycle number register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RO_MON_TOTAL_CYCLE</name>
              <description>Indicate the number of clock cycle actually monitored</description>
              <bitRange>[27:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_RX_BYTE_CNT</name>
          <addressOffset>0x00000050</addressOffset>
          <size>32</size>
          <description>UART Rx data byte count register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CLR_RX_BYTE_CNT</name>
              <description>Write 1 to clear ro_rx_byte_cnt</description>
              <bitRange>[16:16]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>RO_RX_BYTE_CNT</name>
              <description>Count the byte number of data read from RXFIFO</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_FCR</name>
          <addressOffset>0x00000054</addressOffset>
          <size>32</size>
          <description>UART FIFO control register</description>
          <resetValue>0x000000C1</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RECVTRG</name>
              <description>Define the 16-entries Receiver FIFO Interrupt trigger level (0~15 bytes)
* 00: 1 byte
* 01: 16 bytes (FIFO_DEPTH/4)
* 10: 32 bytes (FIFO_DEPTH/2)
* 11: 62 bytes (FIFO_DEPTH-2)</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_MODE</name>
              <description>Support DMA mode (co-operate with DW DDMA in the data path)</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XMIT_CLR</name>
              <description>Clear xmitckt</description>
              <bitRange>[2:2]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>RECV_CLR</name>
              <description>Clear receiving</description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>FIFO_EN</name>
              <description>Error report of RCVR FIFO field enable, only valid when the LSR bit[7] is set to 1.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_ICR</name>
          <addressOffset>0x00000058</addressOffset>
          <size>32</size>
          <description>UART interrupt clear register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RXNDICF</name>
              <description>Rx noise Detected Interrupt Flag</description>
              <bitRange>[4:4]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>MDICF</name>
              <description>Monitor Done Interrupt Flag</description>
              <bitRange>[3:3]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>MICF</name>
              <description>Modem Interrupt Clear Flag</description>
              <bitRange>[2:2]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>TOICF</name>
              <description>Timeout Interrupt Clear Flag</description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>RLSICF</name>
              <description>Receiver Line Statue Interrupt Clear Flag
Writing 1 to this bit clears PARITY_ERR, OVERRUN_ERR, FRAMING_ERR, BREAK_ERR_INT and RXFIFO_ERR in the USART_LSR register.</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_RXDBCR</name>
          <addressOffset>0x0000005C</addressOffset>
          <size>32</size>
          <description>UART RX debounce control register</description>
          <resetValue>0x0000001E</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DBNC_CYC</name>
              <description>Debounce cycles in unit of sclk</description>
              <bitRange>[15:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DBNC_FEN</name>
              <description>UART Rx debounce enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_DUMMY</name>
          <addressOffset>0x00000060</addressOffset>
          <size>32</size>
          <description>UART Dummy Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>Reserved for HW</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>iwdg</name>
      <baseAddress>0x41008C00</baseAddress>
      <size>0x00000014</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00000014</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>WDG_MKEYR</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description>WDG Magic Key register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>MKEY</name>
              <description>0x6969: enable access to register WDG_CR/WDG_RLR/WDG_WINR
0x5A5A: reload WDG counter
0x3C3C: enable WDG function</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WDG_CR</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description>WDG Control regsietr</description>
          <resetValue>0x01000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RVU</name>
              <description>Watchdog counter update by reload command</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EVU</name>
              <description>Watchdog early interrupt function update</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LPEN</name>
              <description>Low power enable
0: WDG will gating when system goes into sleep mode
1: WDG keep running when system goes into sleep mode</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EIC</name>
              <description>Write '1' clear the early interrupt</description>
              <bitRange>[17:17]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>EIE</name>
              <description>Watchdog early interrupt enable</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EICNT</name>
              <description>Early interrupt trigger threshold</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WDG_RLR</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description>WDG Relaod register</description>
          <resetValue>0x00630FFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PRER</name>
              <description>Prescaler counter, configuration only allowed before WDG enable
IWDG: 0x63
System WDG: 0x1F</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RELOAD</name>
              <description>Reload value for watchdog counter</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WDG_WINR</name>
          <addressOffset>0x0000000C</addressOffset>
          <size>32</size>
          <description>WDG Window Register</description>
          <resetValue>0x0000FFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>WINDOW</name>
              <description>Watchdog feed protect window register</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IWDG_DUMMY</name>
          <addressOffset>0x00000010</addressOffset>
          <size>32</size>
          <description>WDG Dummy Register</description>
          <resetValue>0x000000FF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>Reserved for HW</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>TRNG</name>
      <baseAddress>0x41101000</baseAddress>
      <size>0x00000200</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00000200</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>IER</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description>Interrupt Enable Register</description>
          <resetValue>0x0000000E</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BUFFER_FULL_INTERRUPT_ENABLE</name>
              <description>RNG buffer full interrupt enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>APT0_FAIL_INTERRUPT_ENABLE</name>
              <description>Adaptive Proportion Test 0 fail interrupt enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RCT1_FAIL_INTERRUPT_ENABLE</name>
              <description>Repetition Count Test 1 fail interrupt enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RCT0_FAIL_INTERRUPT_ENABLE</name>
              <description>Repetition Count Test 0 fail interrupt enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>READ_ERROR_INTERRUPT_ENABLE</name>
              <description>Read error interrupt enable.
Trigger interrupt when read RNG data register and RNG valid is not 0x1~0x8.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ISR</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description>Interrupt Status Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BUFFER_FULL_INTERRUPT_ACTIVE</name>
              <description></description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>APT0_FAIL_INTERRUPT_ACTIVE</name>
              <description></description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RCT1_FAIL_INTERRUPT_ACTIVE</name>
              <description></description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RCT0_FAIL_INTERRUPT_ACTIVE</name>
              <description></description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>READ_ERROR_INTERRUPT_ACTIVE</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ICR</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description>Interrupt Clear Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BUFFER_FULL_INTERRUPT_CLEAR</name>
              <description></description>
              <bitRange>[4:4]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>APT0_FAIL_INTERRUPT_CLEAR</name>
              <description>Clear the this interrupt also clear the error flags of APT0 health tests</description>
              <bitRange>[3:3]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>RCT1_FAIL_INTERRUPT_CLEAR</name>
              <description>Clear the this interrupt also clear the error flags of RCT1 health tests</description>
              <bitRange>[2:2]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>RCT0_FAIL_INTERRUPT_CLEAR</name>
              <description>Clear the this interrupt also clear the error flags of RCT0 health tests</description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>READ_ERROR_INTERRUPT_CLEAR</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FIFO_STATUS</name>
          <addressOffset>0x0000000C</addressOffset>
          <size>32</size>
          <description>Encoded Status Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>VALID</name>
              <description>Encoded status register.
0x0: buffer empty or APT is not done.
0x1~0x8: number of word is valid.
0xF: APT test fails.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STATUS</name>
          <addressOffset>0x00000030</addressOffset>
          <size>32</size>
          <description>Detail Status Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>APT0_FAIL</name>
              <description>APT0 error detected</description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RCT1_FAIL</name>
              <description>RCT1 error detected</description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RCT0_FAIL</name>
              <description>RCT0 error detected</description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>APT0_DONE</name>
              <description>Adaptive Proportion Test done status. (APT test pass count &gt;= APT done threshold setting)</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BUFFER_OVERFLOW</name>
              <description>Buffer overflow status. It is clear by RNG read out.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BUFFER_ENTRY_LEVEL</name>
              <description>Number of 32-bit random number are valid.
0: empty
8: full</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CTRL</name>
          <addressOffset>0x00000034</addressOffset>
          <size>32</size>
          <description>Control Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SECURITY_CONTROL</name>
              <description>If this field is equal to 0xA, the TRNG becomes a non-secure slave, and all the registers can be accessed by non-secure transaction.
If this field is not equal to 0xA, the non-seucre transaction can only access address 0xC~0x30.
This register is available only when NONSEC_RNG_BUFFER config is 1 that supports TrustZone and dual buffer.</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LWC_COND_RATE</name>
              <description>Compression rate of lightweight-cipher conditioning component.
0: bypass lightweight-cipher conditioning component.
Larger than 0: enable extra TRNG conditioning.
This register is available only when LWC_COND config is 1.</description>
              <bitRange>[7:4]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>LFSR_BYPASS</name>
              <description>LFSR bypass enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DEBIAS_CORRECTOR_BYPASS</name>
              <description>Debias corrector bypass enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NOISE_COLLECTOR_OUTPUT_DISABLE</name>
              <description>Noise collector output disable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SW_RST</name>
          <addressOffset>0x00000038</addressOffset>
          <size>32</size>
          <description>Software Reset Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SW_RESET</name>
              <description>Write 1 to reset TRNG. It triggers a reset generator to reset all the componets of TRNG except control register.
The register settings remain unchange, but other function blocks incuding noise collector(ROSC sampler), debias modules and health tests will be reset.
When SW changes the setting of RCT/APT, it's recommanded to clear error first, and then wirte this register to trigger a reset after apply new setting.</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LFSR_CTRL</name>
          <addressOffset>0x00000108</addressOffset>
          <size>32</size>
          <description>LFSR Control Register</description>
          <resetValue>0x00000140</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FREE_RUN</name>
              <description>0x1: continuously run LFSR when no input data
0x0: only shift LFSR when input 1 bit data</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INIT_DROP_COUNT</name>
              <description>Discard number of bit after reset or re-init. Default shift out 64 bits in LFSR.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RCT0</name>
          <addressOffset>0x00000110</addressOffset>
          <size>32</size>
          <description>Repetition Count Test 0 Control Register</description>
          <resetValue>0x00001F01</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RCT0_CUTOFF_VALUE</name>
              <description>Cutoff value</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RCT0_SAMPLE_SIZE</name>
              <description>Number of bit per test sample. The sample size is the value add 1.
0: 1-bit
1: 2-bit
...
7: 8-bit</description>
              <bitRange>[3:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RCT0_ENABLE</name>
              <description>Test enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RCT1</name>
          <addressOffset>0x00000114</addressOffset>
          <size>32</size>
          <description>Repetition Count Test 1 Control Register</description>
          <resetValue>0x0000050F</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RCT1_CUTOFF_VALUE</name>
              <description>Cutoff value</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RCT1_SAMPLE_SIZE</name>
              <description>Number of bit per test sample. The sample size is the value add 1.
0: 1-bit
1: 2-bit
...
7: 8-bit</description>
              <bitRange>[3:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RCT1_ENABLE</name>
              <description>Test enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>APT</name>
          <addressOffset>0x00000118</addressOffset>
          <size>32</size>
          <description>Adaptive Proportion Test Control Register</description>
          <resetValue>0x124D0003</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>APT0_DONE_THRESHOLD</name>
              <description>Assert test done after how many test pass</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>APT0_CUTOFF_VALUE</name>
              <description>Cutoff value</description>
              <bitRange>[25:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>APT0_SAMPLE_SIZE</name>
              <description>Number of bit per test sample. The sample size is the value add 1.
0: 1-bit
1: 2-bit
...
7: 8-bit</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>APT0_WINDOW_SIZE</name>
              <description>0: 512 bits
1: 1024 bits</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>APT0_ENABLE</name>
              <description>Test enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EN_CTRL0</name>
          <addressOffset>0x000001F4</addressOffset>
          <size>32</size>
          <description>Ring50[29:0] Enable Register</description>
          <resetValue>0x3FFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RING50_ENABLE_0</name>
              <description>Enable Ring #29~0</description>
              <bitRange>[29:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EN_CTRL1</name>
          <addressOffset>0x000001F8</addressOffset>
          <size>32</size>
          <description>Ring50[49:30] Enable Register</description>
          <resetValue>0x001FFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RING50_RNG_ENABLE</name>
              <description>Enable Ring50 noise source</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RING50_ENABLE_1</name>
              <description>Enable Ring #49~30</description>
              <bitRange>[19:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Ring_Sample_CLK_CTRL</name>
          <addressOffset>0x000001FC</addressOffset>
          <size>32</size>
          <description>Sample clock control</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CLOCK_SAMPLE_RATE_CONTROL</name>
              <description>For fine-tune rocs sample clock</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CLOCK_PHASE_CONTROL</name>
              <description>For fine-tune rocs sample clock</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>RSIP</name>
      <baseAddress>0x41104000</baseAddress>
      <size>0x00000300</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00000300</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>SR</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description>Status Register</description>
          <resetValue>0x00000001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>idle</name>
              <description>Indicate whether there is any outstanding transaction.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>key_init_done</name>
              <description>Indicate whether the initialization of the key is completed.
Only used in MIX mode.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>intr_err_tag</name>
              <description>Indicate a GCM tag mismatch error occurred.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>intr_err_resp</name>
              <description>Indicate an error response is received from slave.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>intr_err_apb</name>
              <description>Indicate whether the setting configuration is failed.
When a transaction is in progress, all settings except clear interruption are invalid.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>intr_err_init</name>
              <description>Indicate the transaction was received before the key initialization is completed.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>remap_region_error</name>
              <description>Indicate the read address hits multiple remapping region.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>remap_addr_error</name>
              <description>Indicate the address after adding offset size cross 256MB boundaries.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>control_locked</name>
              <description>Indicate whether the setting is locked.
If it is locked, only ICR and MOR registers can be set.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>key_locked</name>
              <description>Indicate whether the keyx is locked.
If it is locked, keyx cannot be written or read.</description>
              <bitRange>[16:9]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CIR</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description>Component Identification Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>region_number</name>
              <description>Number of supported decryption regions</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>remap_number</name>
              <description>Number of supported remap regions</description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>iv_number</name>
              <description>Number of supported Ivs</description>
              <bitRange>[11:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CTR_key_number</name>
              <description>Number of supported CTR key, valid when SUPPORT_CTR or SUPPORT_GCM is 1.</description>
              <bitRange>[15:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>MIX_key_number</name>
              <description>Number of supported MIX key, valid when support_mix is 1.</description>
              <bitRange>[19:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>support_ctr</name>
              <description>Indicate whether CTR mode is supported.</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>support_mix</name>
              <description>Indicate whether MIX mode is supported.</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>support_gcm</name>
              <description>Indicate whether GCM mode is supported.</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>key_source</name>
              <description>Indicate the key source
0: from dedicated key port
1: from APB register</description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>line_size</name>
              <description>Cache line size
0: 16B = 1 AES block
1: 32B = 2 AES blocks
2: 64B = 4 AES blocks
3: 128B = 8 AES blocks
Indicate how many 128-bit blocks are used to calculate the tag.
cache line size (byte) = 16 * 2BLOCK_SIZE</description>
              <bitRange>[26:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>independent_tag_addr</name>
              <description>Indicate the storage location of the tag
0: consecutive space - interleaved with each data blocks
1: separate space from data - use another base address</description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EALR</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description>Error Address Log Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>error_address</name>
              <description>Recorded address when GCM tag mismatch error or receiving an error response.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ICR</name>
          <addressOffset>0x00000010</addressOffset>
          <size>32</size>
          <description>Interrupt Clear Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>clr_intr</name>
              <description>Interrupt clear
It has to write 1'b1 to this register every time when the error exception occurs.</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CR</name>
          <addressOffset>0x00000014</addressOffset>
          <size>32</size>
          <description>Control Register</description>
          <resetValue>0x00000040</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>tag_size</name>
              <description>Tag size
The size of the tag will affect the length of each tag command.
0: 32 bits
1: 64 bits
2: 128 bits</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>axi_byte_swap</name>
              <description>Determine the endian of ciphertext in slave memory.
Setting to 1 can swap byte order.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>axi_word_swap</name>
              <description>Determine the endian of ciphertext in slave memory.
Setting to 1 can swap word order.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>key_size</name>
              <description>Determine the size of key
0: 128 bits
1: 192 bits
2: 256 bits</description>
              <bitRange>[6:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>aes_en</name>
              <description>Determine whether to enable the AES engine.
0: disable decryption engine (expect remapping function)
1: enable decryption engine and line buffer</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>icg_ctrl_0</name>
              <description>Disable line-buffer auto clock-gating</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>icg_ctrl_1</name>
              <description>Disable fetch-unit auto clock-gating</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>icg_ctrl_2</name>
              <description>Disable AES-engine auto clock-gating</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>icg_ctrl_3</name>
              <description>Disable APB-ctrl auto clock-gating</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>icg_ctrl_4</name>
              <description>Disable key-reg auto clock-gating</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MOR</name>
          <addressOffset>0x00000018</addressOffset>
          <size>32</size>
          <description>Maintenance Operation Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dec_key_init</name>
              <description>Only used in MIX mode.
Whenever the key is changed, write 1 to this bit to initialize the decryption key.
When keys are updated by external port, SEC engine will trigger this bit automatically.
The status of completion can be determined by reading bit 1 of the status register.</description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>clean_cache_line</name>
              <description>Manually clear the line buffer.
Write 1 to clear all after flash data update.</description>
              <bitRange>[2:2]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LR</name>
          <addressOffset>0x0000001C</addressOffset>
          <size>32</size>
          <description>Lock Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>lock_control</name>
              <description>When setting 0xDC to this field, all registers except ICR, MOR and keys are not allowed to be written.
Once the lock is set, the way to unlock is reset the flash SEC engine.
If SW wants to modify the setting of control registers, it should keep this lock unset.</description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TBAR</name>
          <addressOffset>0x00000020</addressOffset>
          <size>32</size>
          <description>GCM Tag Base Address Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>tag_base_0</name>
              <description>Tag base address for reference to the flash SEC engine.
Not equal to actual tag address, need to be calculated.
tag_base = tag_addr - (gcm_region_addr/number_of_byte_per_line) * number_of_byte_per_tag</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GDR</name>
          <addressOffset>0x00000028</addressOffset>
          <size>32</size>
          <description>Gen Date Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>date</name>
              <description>Date of code generation</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>year</name>
              <description>Year of code generation</description>
              <bitRange>[31:16]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>VR</name>
          <addressOffset>0x0000002C</addressOffset>
          <size>32</size>
          <description>Version Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>version</name>
              <description>Version of code generation</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Lock_key0</name>
          <addressOffset>0x00000030</addressOffset>
          <size>32</size>
          <description>Lock key 0 register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>lock_key0</name>
              <description>When setting 0xDC to this field, keyx are not allowed to be written or read.
Once the lock is set, the way to unlock is reset the flash SEC engine.
If SW wants to modify the key registers, it should keep this lock unset.</description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Lock_key1</name>
          <addressOffset>0x00000034</addressOffset>
          <size>32</size>
          <description>Lock key 1 register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>lock_key1</name>
              <description>When setting 0xDC to this field, keyx are not allowed to be written or read.
Once the lock is set, the way to unlock is reset the flash SEC engine.
If SW wants to modify the key registers, it should keep this lock unset.</description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Lock_key2</name>
          <addressOffset>0x00000038</addressOffset>
          <size>32</size>
          <description>Lock key 2 register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>lock_key2</name>
              <description>When setting 0xDC to this field, keyx are not allowed to be written or read.
Once the lock is set, the way to unlock is reset the flash SEC engine.
If SW wants to modify the key registers, it should keep this lock unset.</description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Lock_key3</name>
          <addressOffset>0x0000003C</addressOffset>
          <size>32</size>
          <description>Lock key 3 register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>lock_key3</name>
              <description>When setting 0xDC to this field, keyx are not allowed to be written or read.
Once the lock is set, the way to unlock is reset the flash SEC engine.
If SW wants to modify the key registers, it should keep this lock unset.</description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Lock_key4</name>
          <addressOffset>0x00000040</addressOffset>
          <size>32</size>
          <description>Lock key 4 register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>lock_key4</name>
              <description>When setting 0xDC to this field, keyx are not allowed to be written or read.
Once the lock is set, the way to unlock is reset the flash SEC engine.
If SW wants to modify the key registers, it should keep this lock unset.</description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Lock_key5</name>
          <addressOffset>0x00000044</addressOffset>
          <size>32</size>
          <description>Lock key 5 register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>lock_key5</name>
              <description>When setting 0xDC to this field, keyx are not allowed to be written or read.
Once the lock is set, the way to unlock is reset the flash SEC engine.
If SW wants to modify the key registers, it should keep this lock unset.</description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Lock_key6</name>
          <addressOffset>0x00000048</addressOffset>
          <size>32</size>
          <description>Lock key 6 register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>lock_key6</name>
              <description>When setting 0xDC to this field, keyx are not allowed to be written or read.
Once the lock is set, the way to unlock is reset the flash SEC engine.
If SW wants to modify the key registers, it should keep this lock unset.</description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Lock_key7</name>
          <addressOffset>0x0000004C</addressOffset>
          <size>32</size>
          <description>Lock key 7 register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>lock_key7</name>
              <description>When setting 0xDC to this field, keyx are not allowed to be written or read.
Once the lock is set, the way to unlock is reset the flash SEC engine.
If SW wants to modify the key registers, it should keep this lock unset.</description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Region_0_base</name>
          <addressOffset>0x000000A0</addressOffset>
          <size>32</size>
          <description>Region 0 base address register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>region_0_base</name>
              <description>Region 0 base address register</description>
              <bitRange>[31:5]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Region_0_end</name>
          <addressOffset>0x000000A4</addressOffset>
          <size>32</size>
          <description>Region 0 end address register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>region_0_end</name>
              <description>Region 0 end address register</description>
              <bitRange>[31:5]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Region_0_config</name>
          <addressOffset>0x000000A8</addressOffset>
          <size>32</size>
          <description>Region 0 setting register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>region_0_enable</name>
              <description>Enable region 0 setting</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>region_0_mode</name>
              <description>Mode used in region 0
2'b00: GCM mode
2'b01: CTR mode
2'b10: MIX mode
2'b11: Reserved</description>
              <bitRange>[2:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>region_0_iv_num</name>
              <description>IV used in region 0
Apply which IV register to this region
Number corresponds to IV register</description>
              <bitRange>[5:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>region_0_key_num</name>
              <description>Key used in region 0
Apply which key register to this region
Number corresponds to key register</description>
              <bitRange>[8:6]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Region_1_base</name>
          <addressOffset>0x000000AC</addressOffset>
          <size>32</size>
          <description>Region 1 base address register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>region_1_base</name>
              <description>Region 1 base address register</description>
              <bitRange>[31:5]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Region_1_end</name>
          <addressOffset>0x000000B0</addressOffset>
          <size>32</size>
          <description>Region 1 end address register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>region_1_end</name>
              <description>Region 1 end address register</description>
              <bitRange>[31:5]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Region_1_config</name>
          <addressOffset>0x000000B4</addressOffset>
          <size>32</size>
          <description>Region 1 setting register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>region_1_enable</name>
              <description>Enable region 1 setting</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>region_1_mode</name>
              <description>Mode used in region 1
2'b00: GCM mode
2'b01: CTR mode
2'b10: MIX mode
2'b11: Reserved</description>
              <bitRange>[2:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>region_1_iv_num</name>
              <description>IV used in region 1
Apply which IV register to this region
Number corresponds to IV register</description>
              <bitRange>[5:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>region_1_key_num</name>
              <description>Key used in region 1
Apply which key register to this region
Number corresponds to key register</description>
              <bitRange>[8:6]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Region_2_base</name>
          <addressOffset>0x000000B8</addressOffset>
          <size>32</size>
          <description>Region 2 base address register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>region_2_base</name>
              <description>Region 2 base address register</description>
              <bitRange>[31:5]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Region_2_end</name>
          <addressOffset>0x000000BC</addressOffset>
          <size>32</size>
          <description>Region 2 end address register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>region_2_end</name>
              <description>Region 2 end address register</description>
              <bitRange>[31:5]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Region_2_config</name>
          <addressOffset>0x000000C0</addressOffset>
          <size>32</size>
          <description>Region 2 setting register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>region_2_enable</name>
              <description>Enable region 2 setting</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>region_2_mode</name>
              <description>Mode used in region 2
2'b00: GCM mode
2'b01: CTR mode
2'b10: MIX mode
2'b11: Reserved</description>
              <bitRange>[2:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>region_2_iv_num</name>
              <description>IV used in region 2
Apply which IV register to this region
Number corresponds to IV register</description>
              <bitRange>[5:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>region_2_key_num</name>
              <description>Key used in region 2
Apply which key register to this region
Number corresponds to key register</description>
              <bitRange>[8:6]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Region_3_base</name>
          <addressOffset>0x000000C4</addressOffset>
          <size>32</size>
          <description>Region 3 base address register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>region_3_base</name>
              <description>Region 3 base address register</description>
              <bitRange>[31:5]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Region_3_end</name>
          <addressOffset>0x000000C8</addressOffset>
          <size>32</size>
          <description>Region 3 end address register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>region_3_end</name>
              <description>Region 3 end address register</description>
              <bitRange>[31:5]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Region_3_config</name>
          <addressOffset>0x000000CC</addressOffset>
          <size>32</size>
          <description>Region 3 setting register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>region_3_enable</name>
              <description>Enable region 3 setting</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>region_3_mode</name>
              <description>Mode used in region 3
2'b00: GCM mode
2'b01: CTR mode
2'b10: MIX mode
2'b11: Reserved</description>
              <bitRange>[2:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>region_3_iv_num</name>
              <description>IV used in region 3
Apply which IV register to this region
Number corresponds to IV register</description>
              <bitRange>[5:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>region_3_key_num</name>
              <description>Key used in region 3
Apply which key register to this region
Number corresponds to key register</description>
              <bitRange>[8:6]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Region_4_base</name>
          <addressOffset>0x000000D0</addressOffset>
          <size>32</size>
          <description>Region 4 base address register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>region_4_base</name>
              <description>Region 4 base address register</description>
              <bitRange>[31:5]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Region_4_end</name>
          <addressOffset>0x000000D4</addressOffset>
          <size>32</size>
          <description>Region 4 end address register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>region_4_end</name>
              <description>Region 4 end address register</description>
              <bitRange>[31:5]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Region_4_config</name>
          <addressOffset>0x000000D8</addressOffset>
          <size>32</size>
          <description>Region 4 setting register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>region_4_enable</name>
              <description>Enable region 4 setting</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>region_4_mode</name>
              <description>Mode used in region 4
2'b00: GCM mode
2'b01: CTR mode
2'b10: MIX mode
2'b11: Reserved</description>
              <bitRange>[2:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>region_4_iv_num</name>
              <description>IV used in region 4
Apply which IV register to this region
Number corresponds to IV register</description>
              <bitRange>[5:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>region_4_key_num</name>
              <description>Key used in region 4
Apply which key register to this region
Number corresponds to key register</description>
              <bitRange>[8:6]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Region_5_base</name>
          <addressOffset>0x000000DC</addressOffset>
          <size>32</size>
          <description>Region 5 base address register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>region_5_base</name>
              <description>Region 5 base address register</description>
              <bitRange>[31:5]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Region_5_end</name>
          <addressOffset>0x000000E0</addressOffset>
          <size>32</size>
          <description>Region 5 end address register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>region_5_end</name>
              <description>Region 5 end address register</description>
              <bitRange>[31:5]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Region_5_config</name>
          <addressOffset>0x000000E4</addressOffset>
          <size>32</size>
          <description>Region 5 setting register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>region_5_enable</name>
              <description>Enable region 5 setting</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>region_5_mode</name>
              <description>Mode used in region 5
2'b00: GCM mode
2'b01: CTR mode
2'b10: MIX mode
2'b11: Reserved</description>
              <bitRange>[2:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>region_5_iv_num</name>
              <description>IV used in region 5
Apply which IV register to this region
Number corresponds to IV register</description>
              <bitRange>[5:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>region_5_key_num</name>
              <description>Key used in region 5
Apply which key register to this region
Number corresponds to key register</description>
              <bitRange>[8:6]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Region_6_base</name>
          <addressOffset>0x000000E8</addressOffset>
          <size>32</size>
          <description>Region 6 base address register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>region_6_base</name>
              <description>Region 6 base address register</description>
              <bitRange>[31:5]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Region_6_end</name>
          <addressOffset>0x000000EC</addressOffset>
          <size>32</size>
          <description>Region 6 end address register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>region_6_end</name>
              <description>Region 6 end address register</description>
              <bitRange>[31:5]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Region_6_config</name>
          <addressOffset>0x000000F0</addressOffset>
          <size>32</size>
          <description>Region 6 setting register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>region_6_enable</name>
              <description>Enable region 6 setting</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>region_6_mode</name>
              <description>Mode used in region 6
2'b00: GCM mode
2'b01: CTR mode
2'b10: MIX mode
2'b11: Reserved</description>
              <bitRange>[2:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>region_6_iv_num</name>
              <description>IV used in region 6
Apply which IV register to this region
Number corresponds to IV register</description>
              <bitRange>[5:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>region_6_key_num</name>
              <description>Key used in region 6
Apply which key register to this region
Number corresponds to key register</description>
              <bitRange>[8:6]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Region_7_base</name>
          <addressOffset>0x000000F4</addressOffset>
          <size>32</size>
          <description>Region 7 base address register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>region_7_base</name>
              <description>Region 7 base address register</description>
              <bitRange>[31:5]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Region_7_end</name>
          <addressOffset>0x000000F8</addressOffset>
          <size>32</size>
          <description>Region 7 end address register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>region_7_end</name>
              <description>Region 7 end address register</description>
              <bitRange>[31:5]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Region_7_config</name>
          <addressOffset>0x000000FC</addressOffset>
          <size>32</size>
          <description>Region 7 setting register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>region_7_enable</name>
              <description>Enable region 7 setting</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>region_7_mode</name>
              <description>Mode used in region 7
2'b00: GCM mode
2'b01: CTR mode
2'b10: MIX mode
2'b11: Reserved</description>
              <bitRange>[2:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>region_7_iv_num</name>
              <description>IV used in region 7
Apply which IV register to this region
Number corresponds to IV register</description>
              <bitRange>[5:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>region_7_key_num</name>
              <description>Key used in region 7
Apply which key register to this region
Number corresponds to key register</description>
              <bitRange>[8:6]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REMAP0BAR</name>
          <addressOffset>0x00000100</addressOffset>
          <size>32</size>
          <description>Remap 0 region base address register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>remap_base_0_addr</name>
              <description>Remap region 0 base address [27:5]
Region_Base_Addr = {flash_base[31:28], remap_base_x_addr, {5{1'b0}} }
The region address is configurable, and not cross 256KB.</description>
              <bitRange>[31:9]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REMAP0EAR</name>
          <addressOffset>0x00000104</addressOffset>
          <size>32</size>
          <description>Remap 0 region end address register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>remap_end_0_addr</name>
              <description>Remap region 0 end address [27:5]
Region_End_Addr = {flash_base[31:28], remap_end_0_addr, {5{1'b0}} }
The region address is configurable, and not cross 256KB.</description>
              <bitRange>[31:9]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REMAP0OR</name>
          <addressOffset>0x00000108</addressOffset>
          <size>32</size>
          <description>Remap 0 offset register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>remap_0_enable</name>
              <description>Remap region 0 enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>remap_0_offset</name>
              <description>Remap region 0 offset [27:5]
Region_Offset = {4'b0,remap_0_offset, {5{1'b0}}}
The output address is "Access address - Region_Base_Addr + Region_Offset".</description>
              <bitRange>[31:9]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REMAP1BAR</name>
          <addressOffset>0x0000010C</addressOffset>
          <size>32</size>
          <description>Remap 1 region base address register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>remap_base_1_addr</name>
              <description>Remap region 1 base address [27:5]
Region_Base_Addr = {flash_base[31:28], remap_base_x_addr, {5{1'b0}} }
The region address is configurable, and not cross 256KB.</description>
              <bitRange>[31:9]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REMAP1EAR</name>
          <addressOffset>0x00000110</addressOffset>
          <size>32</size>
          <description>Remap 1 region end address register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>remap_end_1_addr</name>
              <description>Remap region 1 end address [27:5]
Region_End_Addr = {flash_base[31:28], remap_end_1_addr, {5{1'b0}} }
The region address is configurable, and not cross 256KB.</description>
              <bitRange>[31:9]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REMAP1OR</name>
          <addressOffset>0x00000114</addressOffset>
          <size>32</size>
          <description>Remap 1 offset register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>remap_1_enable</name>
              <description>Remap region 1 enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>remap_1_offset</name>
              <description>Remap region 1 offset [27:5]
Region_Offset = {4'b0,remap_1_offset, {5{1'b0}}}
The output address is "Access address - Region_Base_Addr + Region_Offset".</description>
              <bitRange>[31:9]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REMAP2BAR</name>
          <addressOffset>0x00000118</addressOffset>
          <size>32</size>
          <description>Remap 2 region base address register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>remap_base_2_addr</name>
              <description>Remap region 2 base address [27:5]
Region_Base_Addr = {flash_base[31:28], remap_base_x_addr, {5{1'b0}} }
The region address is configurable, and not cross 256KB.</description>
              <bitRange>[31:9]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REMAP2EAR</name>
          <addressOffset>0x0000011C</addressOffset>
          <size>32</size>
          <description>Remap 2 region end address register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>remap_end_2_addr</name>
              <description>Remap region 2 end address [27:5]
Region_End_Addr = {flash_base[31:28], remap_end_2_addr, {5{1'b0}} }
The region address is configurable, and not cross 256KB.</description>
              <bitRange>[31:9]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REMAP2OR</name>
          <addressOffset>0x00000120</addressOffset>
          <size>32</size>
          <description>Remap 2 offset register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>remap_2_enable</name>
              <description>Remap region 2 enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>remap_2_offset</name>
              <description>Remap region 2 offset [27:5]
Region_Offset = {4'b0,remap_2_offset, {5{1'b0}}}
The output address is "Access address - Region_Base_Addr + Region_Offset".</description>
              <bitRange>[31:9]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REMAP3BAR</name>
          <addressOffset>0x00000124</addressOffset>
          <size>32</size>
          <description>Remap 3 region base address register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>remap_base_3_addr</name>
              <description>Remap region 3 base address [27:5]
Region_Base_Addr = {flash_base[31:28], remap_base_x_addr, {5{1'b0}} }
The region address is configurable, and not cross 256KB.</description>
              <bitRange>[31:9]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REMAP3EAR</name>
          <addressOffset>0x00000128</addressOffset>
          <size>32</size>
          <description>Remap 3 region end address register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>remap_end_3_addr</name>
              <description>Remap region 3 end address [27:5]
Region_End_Addr = {flash_base[31:28], remap_end_3_addr, {5{1'b0}} }
The region address is configurable, and not cross 256KB.</description>
              <bitRange>[31:9]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REMAP3OR</name>
          <addressOffset>0x0000012C</addressOffset>
          <size>32</size>
          <description>Remap 3 offset register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>remap_3_enable</name>
              <description>Remap region 3 enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>remap_3_offset</name>
              <description>Remap region 3 offset [27:5]
Region_Offset = {4'b0,remap_3_offset, {5{1'b0}}}
The output address is "Access address - Region_Base_Addr + Region_Offset".</description>
              <bitRange>[31:9]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REMAP4BAR</name>
          <addressOffset>0x00000130</addressOffset>
          <size>32</size>
          <description>Remap 4 region base address register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>remap_base_4_addr</name>
              <description>Remap region 4 base address [27:5]
Region_Base_Addr = {flash_base[31:28], remap_base_x_addr, {5{1'b0}} }
The region address is configurable, and not cross 256KB.</description>
              <bitRange>[31:9]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REMAP4EAR</name>
          <addressOffset>0x00000134</addressOffset>
          <size>32</size>
          <description>Remap 4 region end address register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>remap_end_4_addr</name>
              <description>Remap region 4 end address [27:5]
Region_End_Addr = {flash_base[31:28], remap_end_4_addr, {5{1'b0}} }
The region address is configurable, and not cross 256KB.</description>
              <bitRange>[31:9]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REMAP4OR</name>
          <addressOffset>0x00000138</addressOffset>
          <size>32</size>
          <description>Remap 4 offset register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>remap_4_enable</name>
              <description>Remap region 4 enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>remap_4_offset</name>
              <description>Remap region 4 offset [27:5]
Region_Offset = {4'b0,remap_4_offset, {5{1'b0}}}
The output address is "Access address - Region_Base_Addr + Region_Offset".</description>
              <bitRange>[31:9]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REMAP5BAR</name>
          <addressOffset>0x0000013C</addressOffset>
          <size>32</size>
          <description>Remap 5 region base address register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>remap_base_5_addr</name>
              <description>Remap region 5 base address [27:5]
Region_Base_Addr = {flash_base[31:28], remap_base_x_addr, {5{1'b0}} }
The region address is configurable, and not cross 256KB.</description>
              <bitRange>[31:9]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REMAP5EAR</name>
          <addressOffset>0x00000140</addressOffset>
          <size>32</size>
          <description>Remap 5 region end address register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>remap_end_5_addr</name>
              <description>Remap region 5 end address [27:5]
Region_End_Addr = {flash_base[31:28], remap_end_5_addr, {5{1'b0}} }
The region address is configurable, and not cross 256KB.</description>
              <bitRange>[31:9]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REMAP5OR</name>
          <addressOffset>0x00000144</addressOffset>
          <size>32</size>
          <description>Remap 5 offset register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>remap_5_enable</name>
              <description>Remap region 5 enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>remap_5_offset</name>
              <description>Remap region 5 offset [27:5]
Region_Offset = {4'b0,remap_5_offset, {5{1'b0}}}
The output address is "Access address - Region_Base_Addr + Region_Offset".</description>
              <bitRange>[31:9]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REMAP6BAR</name>
          <addressOffset>0x00000148</addressOffset>
          <size>32</size>
          <description>Remap 6 region base address register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>remap_base_6_addr</name>
              <description>Remap region 6 base address [27:5]
Region_Base_Addr = {flash_base[31:28], remap_base_x_addr, {5{1'b0}} }
The region address is configurable, and not cross 256KB.</description>
              <bitRange>[31:9]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REMAP6EAR</name>
          <addressOffset>0x0000014C</addressOffset>
          <size>32</size>
          <description>Remap 6 region end address register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>remap_end_6_addr</name>
              <description>Remap region 6 end address [27:5]
Region_End_Addr = {flash_base[31:28], remap_end_6_addr, {5{1'b0}} }
The region address is configurable, and not cross 256KB.</description>
              <bitRange>[31:9]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REMAP6OR</name>
          <addressOffset>0x00000150</addressOffset>
          <size>32</size>
          <description>Remap 6 offset register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>remap_6_enable</name>
              <description>Remap region 6 enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>remap_6_offset</name>
              <description>Remap region 6 offset [27:5]
Region_Offset = {4'b0,remap_6_offset, {5{1'b0}}}
The output address is "Access address - Region_Base_Addr + Region_Offset".</description>
              <bitRange>[31:9]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REMAP7BAR</name>
          <addressOffset>0x00000154</addressOffset>
          <size>32</size>
          <description>Remap 7 region base address register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>remap_base_7_addr</name>
              <description>Remap region 7 base address [27:5]
Region_Base_Addr = {flash_base[31:28], remap_base_x_addr, {5{1'b0}} }
The region address is configurable, and not cross 256KB.</description>
              <bitRange>[31:9]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REMAP7EAR</name>
          <addressOffset>0x00000158</addressOffset>
          <size>32</size>
          <description>Remap 7 region end address register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>remap_end_7_addr</name>
              <description>Remap region 7 end address [27:5]
Region_End_Addr = {flash_base[31:28], remap_end_7_addr, {5{1'b0}} }
The region address is configurable, and not cross 256KB.</description>
              <bitRange>[31:9]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REMAP7OR</name>
          <addressOffset>0x0000015C</addressOffset>
          <size>32</size>
          <description>Remap 7 offset register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>remap_7_enable</name>
              <description>Remap region 7 enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>remap_7_offset</name>
              <description>Remap region 7 offset [27:5]
Region_Offset = {4'b0,remap_7_offset, {5{1'b0}}}
The output address is "Access address - Region_Base_Addr + Region_Offset".</description>
              <bitRange>[31:9]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Key0_0</name>
          <addressOffset>0x00000200</addressOffset>
          <size>32</size>
          <description>Key0 Register Bit[31:0]</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key0_0</name>
              <description>Key0 register bit[31:0]
CTR of MIX, GCM, CTR mode using the key</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Key0_1</name>
          <addressOffset>0x00000204</addressOffset>
          <size>32</size>
          <description>Key0 Register Bit[63:32]</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key0_1</name>
              <description>Key0 register bit[63:32]
CTR of MIX, GCM, CTR mode using the key</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Key0_2</name>
          <addressOffset>0x00000208</addressOffset>
          <size>32</size>
          <description>Key0 Register Bit[95:64]</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key0_2</name>
              <description>Key0 register bit[95:64] 
CTR of MIX, GCM, CTR mode using the key</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Key0_3</name>
          <addressOffset>0x0000020C</addressOffset>
          <size>32</size>
          <description>Key0 Register Bit[127:96]</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key0_3</name>
              <description>Key0 register bit[127:96] 
CTR of MIX, GCM, CTR mode using the key</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Key0_4</name>
          <addressOffset>0x00000210</addressOffset>
          <size>32</size>
          <description>Key0 Register Bit[159:128]</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key0_4</name>
              <description>Key0 register bit[159:128]
CTR of MIX, GCM, CTR mode using the key</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Key0_5</name>
          <addressOffset>0x00000214</addressOffset>
          <size>32</size>
          <description>Key0 Register Bit[191:160]</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key0_5</name>
              <description>Key0 register bit[191:160]
CTR of MIX, GCM, CTR mode using the key</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Key0_6</name>
          <addressOffset>0x00000218</addressOffset>
          <size>32</size>
          <description>Key0 Register Bit[223:192]</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key0_6</name>
              <description>Key0 register bit[223:192]
CTR of MIX, GCM, CTR mode using the key</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Key0_7</name>
          <addressOffset>0x0000021C</addressOffset>
          <size>32</size>
          <description>Key0 Register Bit[255:224]</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key0_7</name>
              <description>Key0 register bit[255:224]
CTR of MIX, GCM, CTR mode using the key</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Key1_0</name>
          <addressOffset>0x00000220</addressOffset>
          <size>32</size>
          <description>Key1 Register Bit[31:0]</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key1_0</name>
              <description>Key1 register bit[31:0]
CTR of MIX, GCM, CTR mode using the key</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Key1_1</name>
          <addressOffset>0x00000224</addressOffset>
          <size>32</size>
          <description>Key1 Register Bit[63:32]</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key1_1</name>
              <description>Key1 register bit[63:32]
CTR of MIX, GCM, CTR mode using the key</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Key1_2</name>
          <addressOffset>0x00000228</addressOffset>
          <size>32</size>
          <description>Key1 Register Bit[95:64]</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key1_2</name>
              <description>Key1 register bit[95:64] 
CTR of MIX, GCM, CTR mode using the key</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Key1_3</name>
          <addressOffset>0x0000022C</addressOffset>
          <size>32</size>
          <description>Key1 Register Bit[127:96]</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key1_3</name>
              <description>Key1 register bit[127:96] 
CTR of MIX, GCM, CTR mode using the key</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Key1_4</name>
          <addressOffset>0x00000230</addressOffset>
          <size>32</size>
          <description>Key1 Register Bit[159:128]</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key1_4</name>
              <description>Key1 register bit[159:128]
CTR of MIX, GCM, CTR mode using the key</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Key1_5</name>
          <addressOffset>0x00000234</addressOffset>
          <size>32</size>
          <description>Key1 Register Bit[191:160]</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key1_5</name>
              <description>Key1 register bit[191:160]
CTR of MIX, GCM, CTR mode using the key</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Key1_6</name>
          <addressOffset>0x00000238</addressOffset>
          <size>32</size>
          <description>Key1 Register Bit[223:192]</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key1_6</name>
              <description>Key1 register bit[223:192]
CTR of MIX, GCM, CTR mode using the key</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Key1_7</name>
          <addressOffset>0x0000023C</addressOffset>
          <size>32</size>
          <description>Key1 Register Bit[255:224]</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key1_7</name>
              <description>Key1 register bit[255:224]
CTR of MIX, GCM, CTR mode using the key</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Key2_0</name>
          <addressOffset>0x00000240</addressOffset>
          <size>32</size>
          <description>Key2 Register Bit[31:0]</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key2_0</name>
              <description>Key2 register bit[31:0]
CTR of MIX, GCM, CTR mode using the key</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Key2_1</name>
          <addressOffset>0x00000244</addressOffset>
          <size>32</size>
          <description>Key2 Register Bit[63:32]</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key2_1</name>
              <description>Key2 register bit[63:32]
CTR of MIX, GCM, CTR mode using the key</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Key2_2</name>
          <addressOffset>0x00000248</addressOffset>
          <size>32</size>
          <description>Key2 Register Bit[95:64]</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key2_2</name>
              <description>Key2 register bit[95:64] 
CTR of MIX, GCM, CTR mode using the key</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Key2_3</name>
          <addressOffset>0x0000024C</addressOffset>
          <size>32</size>
          <description>Key2 Register Bit[127:96]</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key2_3</name>
              <description>Key2 register bit[127:96] 
CTR of MIX, GCM, CTR mode using the key</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Key2_4</name>
          <addressOffset>0x00000250</addressOffset>
          <size>32</size>
          <description>Key2 Register Bit[159:128]</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key2_4</name>
              <description>Key2 register bit[159:128]
CTR of MIX, GCM, CTR mode using the key</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Key2_5</name>
          <addressOffset>0x00000254</addressOffset>
          <size>32</size>
          <description>Key2 Register Bit[191:160]</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key2_5</name>
              <description>Key2 register bit[191:160]
CTR of MIX, GCM, CTR mode using the key</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Key2_6</name>
          <addressOffset>0x00000258</addressOffset>
          <size>32</size>
          <description>Key2 Register Bit[223:192]</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key2_6</name>
              <description>Key2 register bit[223:192]
CTR of MIX, GCM, CTR mode using the key</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Key2_7</name>
          <addressOffset>0x0000025C</addressOffset>
          <size>32</size>
          <description>Key2 Register Bit[255:224]</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key2_7</name>
              <description>Key2 register bit[255:224]
CTR of MIX, GCM, CTR mode using the key</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Key3_0</name>
          <addressOffset>0x00000260</addressOffset>
          <size>32</size>
          <description>Key3 Register Bit[31:0]</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key3_0</name>
              <description>Key3 register bit[31:0]
CTR of MIX, GCM, CTR mode using the key</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Key3_1</name>
          <addressOffset>0x00000264</addressOffset>
          <size>32</size>
          <description>Key3 Register Bit[63:32]</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key3_1</name>
              <description>Key3 register bit[63:32]
CTR of MIX, GCM, CTR mode using the key</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Key3_2</name>
          <addressOffset>0x00000268</addressOffset>
          <size>32</size>
          <description>Key3 Register Bit[95:64]</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key3_2</name>
              <description>Key3 register bit[95:64] 
CTR of MIX, GCM, CTR mode using the key</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Key3_3</name>
          <addressOffset>0x0000026C</addressOffset>
          <size>32</size>
          <description>Key3 Register Bit[127:96]</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key3_3</name>
              <description>Key3 register bit[127:96] 
CTR of MIX, GCM, CTR mode using the key</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Key3_4</name>
          <addressOffset>0x00000270</addressOffset>
          <size>32</size>
          <description>Key3 Register Bit[159:128]</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key3_4</name>
              <description>Key3 register bit[159:128]
CTR of MIX, GCM, CTR mode using the key</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Key3_5</name>
          <addressOffset>0x00000274</addressOffset>
          <size>32</size>
          <description>Key3 Register Bit[191:160]</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key3_5</name>
              <description>Key3 register bit[191:160]
CTR of MIX, GCM, CTR mode using the key</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Key3_6</name>
          <addressOffset>0x00000278</addressOffset>
          <size>32</size>
          <description>Key3 Register Bit[223:192]</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key3_6</name>
              <description>Key3 register bit[223:192]
CTR of MIX, GCM, CTR mode using the key</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Key3_7</name>
          <addressOffset>0x0000027C</addressOffset>
          <size>32</size>
          <description>Key3 Register Bit[255:224]</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key3_7</name>
              <description>Key3 register bit[255:224]
CTR of MIX, GCM, CTR mode using the key</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Key4_0</name>
          <addressOffset>0x00000280</addressOffset>
          <size>32</size>
          <description>Key4 Register Bit[31:0]</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key4_0</name>
              <description>Key4 register bit[31:0]
CTR of MIX, GCM, CTR mode using the key</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Key4_1</name>
          <addressOffset>0x00000284</addressOffset>
          <size>32</size>
          <description>Key4 Register Bit[63:32]</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key4_1</name>
              <description>Key4 register bit[63:32]
CTR of MIX, GCM, CTR mode using the key</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Key4_2</name>
          <addressOffset>0x00000288</addressOffset>
          <size>32</size>
          <description>Key4 Register Bit[95:64]</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key4_2</name>
              <description>Key4 register bit[95:64] 
CTR of MIX, GCM, CTR mode using the key</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Key4_3</name>
          <addressOffset>0x0000028C</addressOffset>
          <size>32</size>
          <description>Key4 Register Bit[127:96]</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key4_3</name>
              <description>Key4 register bit[127:96] 
CTR of MIX, GCM, CTR mode using the key</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Key4_4</name>
          <addressOffset>0x00000290</addressOffset>
          <size>32</size>
          <description>Key4 Register Bit[159:128]</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key4_4</name>
              <description>Key4 register bit[159:128]
CTR of MIX, GCM, CTR mode using the key</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Key4_5</name>
          <addressOffset>0x00000294</addressOffset>
          <size>32</size>
          <description>Key4 Register Bit[191:160]</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key4_5</name>
              <description>Key4 register bit[191:160]
CTR of MIX, GCM, CTR mode using the key</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Key4_6</name>
          <addressOffset>0x00000298</addressOffset>
          <size>32</size>
          <description>Key4 Register Bit[223:192]</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key4_6</name>
              <description>Key4 register bit[223:192]
CTR of MIX, GCM, CTR mode using the key</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Key4_7</name>
          <addressOffset>0x0000029C</addressOffset>
          <size>32</size>
          <description>Key4 Register Bit[255:224]</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key4_7</name>
              <description>Key4 register bit[255:224]
CTR of MIX, GCM, CTR mode using the key</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Key5_0</name>
          <addressOffset>0x000002A0</addressOffset>
          <size>32</size>
          <description>Key5 Register Bit[31:0]</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key5_0</name>
              <description>Key5 register bit[31:0]
CTR of MIX, GCM, CTR mode using the key</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Key5_1</name>
          <addressOffset>0x000002A4</addressOffset>
          <size>32</size>
          <description>Key5 Register Bit[63:32]</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key5_1</name>
              <description>Key5 register bit[63:32]
CTR of MIX, GCM, CTR mode using the key</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Key5_2</name>
          <addressOffset>0x000002A8</addressOffset>
          <size>32</size>
          <description>Key5 Register Bit[95:64]</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key5_2</name>
              <description>Key5 register bit[95:64] 
CTR of MIX, GCM, CTR mode using the key</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Key5_3</name>
          <addressOffset>0x000002AC</addressOffset>
          <size>32</size>
          <description>Key5 Register Bit[127:96]</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key5_3</name>
              <description>Key5 register bit[127:96] 
CTR of MIX, GCM, CTR mode using the key</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Key5_4</name>
          <addressOffset>0x000002B0</addressOffset>
          <size>32</size>
          <description>Key5 Register Bit[159:128]</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key5_4</name>
              <description>Key5 register bit[159:128]
CTR of MIX, GCM, CTR mode using the key</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Key5_5</name>
          <addressOffset>0x000002B4</addressOffset>
          <size>32</size>
          <description>Key5 Register Bit[191:160]</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key5_5</name>
              <description>Key5 register bit[191:160]
CTR of MIX, GCM, CTR mode using the key</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Key5_6</name>
          <addressOffset>0x000002B8</addressOffset>
          <size>32</size>
          <description>Key5 Register Bit[223:192]</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key5_6</name>
              <description>Key5 register bit[223:192]
CTR of MIX, GCM, CTR mode using the key</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Key5_7</name>
          <addressOffset>0x000002BC</addressOffset>
          <size>32</size>
          <description>Key5 Register Bit[255:224]</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key5_7</name>
              <description>Key5 register bit[255:224]
CTR of MIX, GCM, CTR mode using the key</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Key6_0</name>
          <addressOffset>0x000002C0</addressOffset>
          <size>32</size>
          <description>Key6 Register Bit[31:0]</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key6_0</name>
              <description>Key6 register bit[31:0]
CTR of MIX, GCM, CTR mode using the key</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Key6_1</name>
          <addressOffset>0x000002C4</addressOffset>
          <size>32</size>
          <description>Key6 Register Bit[63:32]</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key6_1</name>
              <description>Key6 register bit[63:32]
CTR of MIX, GCM, CTR mode using the key</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Key6_2</name>
          <addressOffset>0x000002C8</addressOffset>
          <size>32</size>
          <description>Key6 Register Bit[95:64]</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key6_2</name>
              <description>Key6 register bit[95:64] 
CTR of MIX, GCM, CTR mode using the key</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Key6_3</name>
          <addressOffset>0x000002CC</addressOffset>
          <size>32</size>
          <description>Key6 Register Bit[127:96]</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key6_3</name>
              <description>Key6 register bit[127:96] 
CTR of MIX, GCM, CTR mode using the key</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Key6_4</name>
          <addressOffset>0x000002D0</addressOffset>
          <size>32</size>
          <description>Key6 Register Bit[159:128]</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key6_4</name>
              <description>Key6 register bit[159:128]
CTR of MIX, GCM, CTR mode using the key</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Key6_5</name>
          <addressOffset>0x000002D4</addressOffset>
          <size>32</size>
          <description>Key6 Register Bit[191:160]</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key6_5</name>
              <description>Key6 register bit[191:160]
CTR of MIX, GCM, CTR mode using the key</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Key6_6</name>
          <addressOffset>0x000002D8</addressOffset>
          <size>32</size>
          <description>Key6 Register Bit[223:192]</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key6_6</name>
              <description>Key6 register bit[223:192]
CTR of MIX, GCM, CTR mode using the key</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Key6_7</name>
          <addressOffset>0x000002DC</addressOffset>
          <size>32</size>
          <description>Key6 Register Bit[255:224]</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key6_7</name>
              <description>Key6 register bit[255:224]
CTR of MIX, GCM, CTR mode using the key</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Key7_0</name>
          <addressOffset>0x000002E0</addressOffset>
          <size>32</size>
          <description>Key7 Register Bit[31:0]</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key7_0</name>
              <description>Key7 register bit[31:0]
CTR of MIX, GCM, CTR mode using the key</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Key7_1</name>
          <addressOffset>0x000002E4</addressOffset>
          <size>32</size>
          <description>Key7 Register Bit[63:32]</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key7_1</name>
              <description>Key7 register bit[63:32]
CTR of MIX, GCM, CTR mode using the key</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Key7_2</name>
          <addressOffset>0x000002E8</addressOffset>
          <size>32</size>
          <description>Key7 Register Bit[95:64]</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key7_2</name>
              <description>Key7 register bit[95:64] 
CTR of MIX, GCM, CTR mode using the key</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Key7_3</name>
          <addressOffset>0x000002EC</addressOffset>
          <size>32</size>
          <description>Key7 Register Bit[127:96]</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key7_3</name>
              <description>Key7 register bit[127:96] 
CTR of MIX, GCM, CTR mode using the key</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Key7_4</name>
          <addressOffset>0x000002F0</addressOffset>
          <size>32</size>
          <description>Key7 Register Bit[159:128]</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key7_4</name>
              <description>Key7 register bit[159:128]
CTR of MIX, GCM, CTR mode using the key</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Key7_5</name>
          <addressOffset>0x000002F4</addressOffset>
          <size>32</size>
          <description>Key7 Register Bit[191:160]</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key7_5</name>
              <description>Key7 register bit[191:160]
CTR of MIX, GCM, CTR mode using the key</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Key7_6</name>
          <addressOffset>0x000002F8</addressOffset>
          <size>32</size>
          <description>Key7 Register Bit[223:192]</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key7_6</name>
              <description>Key7 register bit[223:192]
CTR of MIX, GCM, CTR mode using the key</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Key7_7</name>
          <addressOffset>0x000002FC</addressOffset>
          <size>32</size>
          <description>Key7 Register Bit[255:224]</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key7_7</name>
              <description>Key7 register bit[255:224]
CTR of MIX, GCM, CTR mode using the key</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>audio</name>
      <baseAddress>0x41106000</baseAddress>
      <size>0x0000082C</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x0000082C</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>audio_control_0</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description>Audio Control Register 0</description>
          <resetValue>0x00000020</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>audio_ip_en</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>audio_control_0_dummy</name>
              <description>DUMMY</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sys_clk_rate_sel</name>
              <description>Audio sys_clk selection</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>audio_dbg_sel</name>
              <description>Debug probe selection</description>
              <bitRange>[17:13]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>audio_control_1</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description>Audio Control Register 1</description>
          <resetValue>0x00001000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>i2s_data_rnd_en</name>
              <description>i2s_data_rnd_en</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>audio_control_1_dummy</name>
              <description>Dummy</description>
              <bitRange>[16:13]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>clock_control_1</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description>Clock Control Register 1</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ad_0_en</name>
              <description>ADC channel 0 clock enable</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ad_1_en</name>
              <description>ADC channel 1 clock enable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ad_0_fifo_en</name>
              <description>ADC channel 0 FIFO clock enable</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ad_1_fifo_en</name>
              <description>ADC channel 1 FIFO clock enable</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>clock_control_2</name>
          <addressOffset>0x0000000C</addressOffset>
          <size>32</size>
          <description>Clock Control Register 2</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dmic_0_en</name>
              <description>ADC filter channel 0 clock enable: DMIC path</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dmic_1_en</name>
              <description>ADC filter channel 1 clock enable: DMIC path</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ad_0_eq_en</name>
              <description>ADC channel 0 EQ clock enable</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ad_1_eq_en</name>
              <description>ADC channel 1 EQ clock enable</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>clock_control_3</name>
          <addressOffset>0x00000010</addressOffset>
          <size>32</size>
          <description>Clock Control Register 3</description>
          <resetValue>0x00000001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dmic1_clk_sel</name>
              <description>Set clock of digital microphone
3'b000: 5MHz
3'b001: 2.5MHz
3'b010: 1.25MHz
3'b011: 625kHz
3'b100: 312.5kHz
3'b101: Reserved
3'b110: Reserved
3'b111: 769.2kHz</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dmic1_clk_en</name>
              <description>Digital microphone clock enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>clock_control_4</name>
          <addressOffset>0x00000014</addressOffset>
          <size>32</size>
          <description>Clock Control Register 4</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>sample_rate_0</name>
              <description>Set sample rate source 0
4'h0: 48K
4'h1: 96K
4'h2: 192K
4'h3: 32K
4'h4: 176.4K
4'h5: 16K
4'h6: Reserved
4'h7: 8K
4'h8: 44.1K
4'h9: 88.2K
4'ha:24K
4'hb: 12K
4'hc: 22.05K
4'hd: 11.025K
4'he~4'hf: Reserved</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sample_rate_1</name>
              <description>Set sample rate source 1
4'h0: 48K
4'h1: 96K
4'h2: 192K
4'h3: 32K
4'h4: 176.4K
4'h5: 16K
4'h6: Reserved
4'h7: 8K
4'h8: 44.1K
4'h9: 88.2K
4'ha:24K
4'hb: 12K
4'hc: 22.05K
4'hd: 11.025K
4'he~4'hf: Reserved</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>clock_control_5</name>
          <addressOffset>0x00000018</addressOffset>
          <size>32</size>
          <description>Clock Control Register 5</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_0_fs_src_sel</name>
              <description>Channel 0 ADC path sample rate source selection
2'b00: Source 0
2'b01: Source 1
2'b10: Source 2</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_1_fs_src_sel</name>
              <description>Channel 1 ADC path sample rate source selection
2'b00: Source 0
2'b01: Source 1
2'b10: Source 2</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>clock_control_6</name>
          <addressOffset>0x0000001C</addressOffset>
          <size>32</size>
          <description>Clock Control Register 6</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_0_asrc_en</name>
              <description>Channel 0 ADC path ASRC enable
0: Disable
1: Enable
If ASRC is enabled, sample_rate becomes useless.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_1_asrc_en</name>
              <description>Channel 1 ADC path ASRC enable
0: Disable
1: Enable
If ASRC is enabled, sample_rate becomes useless.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>clock_control_7</name>
          <addressOffset>0x00000020</addressOffset>
          <size>32</size>
          <description>Clock Control Register 7</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_0_dmic_lpf_clk_sel</name>
              <description>Channel 0 ADC path DMIC LPF clock
2'b00: 10M
2'b01: 5M
2'b10: 2.5M
2'b11: 769.2*2K</description>
              <bitRange>[8:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_1_dmic_lpf_clk_sel</name>
              <description>Channel 1 ADC path DMIC LPF clock
2'b00: 10M
2'b01: 5M
2'b10: 2.5M
2'b11: 769.2*2K</description>
              <bitRange>[10:9]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>asrc_control_2</name>
          <addressOffset>0x0000002C</addressOffset>
          <size>32</size>
          <description>ASRC Control Register 2</description>
          <resetValue>0x0000001C</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>asrc_rate_sel_rx_0</name>
              <description>0: fs supports 4kHz ~ 60kHz
1: fs supports 60kHz ~ 120kHz
2/3: Reserved</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>asrc_gain_sel_rx_0</name>
              <description>ASRC convergence rate: larger is faster but more noisy</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>asrc_auto_adjust_rx_0</name>
              <description>HW auto adjust convergence rate
0: Disable
1: Enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>asrc_control_3</name>
          <addressOffset>0x00000030</addressOffset>
          <size>32</size>
          <description>ASRC Control Register 3</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>asrc_sdm_inti_rx_0</name>
              <description>Set initial value of tracked frequency</description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>i2s_0_control</name>
          <addressOffset>0x0000003C</addressOffset>
          <size>32</size>
          <description>I2S 0 Control Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>i2s_0_rst_n_reg</name>
              <description>1'b1: rst_n to audio digital IP is de-asserted
1'b0: rst_n to audio digital IP is asserted</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>i2s_0_inv_sclk</name>
              <description>1'b1: I2S/PCM bit clock is inverted</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>i2s_0_self_lpbk_en</name>
              <description>1'b1: internal loopback mode is enabled</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>i2s_0_same_lrc_en</name>
              <description>1'b1: LRC_TX share to LRC_RX</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>i2s_0_tdm_mode_rx</name>
              <description>I2S 0 Rx channel TDM mode
0: 2 channels 
1: 4 channels
2/3: Reserved</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>i2s_0_data_format_sel_tx</name>
              <description>I2S 0 Tx channel data format
2'b00: I2S
2'b01: Left-justified
2'b10: PCM mode A
2'b11: PCM mode B</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>i2s_0_data_format_sel_rx</name>
              <description>I2S 0 Rx channel data format
2'b00: I2S
2'b01: Left-justified
2'b10: PCM mode A
2'b11: PCM mode B</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>i2s_0_data_len_sel_tx</name>
              <description>I2S 0 Tx channel data length
2'b00: 16 bits
2'b10: 24 bits
2'b11: 8 bits</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>i2s_0_data_len_sel_rx</name>
              <description>I2S 0 Rx channel data length
2'b00: 16 bits
2'b10: 24 bits
2'b11: 8 bits</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>i2s_0_ch_len_sel_tx</name>
              <description>I2S 0 Tx channel length
2'b00: 16 bits
2'b01: 32 bits
2'b10: 24 bits
2'b11: 8 bits</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>i2s_0_ch_len_sel_rx</name>
              <description>I2S 0 Rx channel length
2'b00: 16 bits
2'b01: 32 bits
2'b10: 24 bits
2'b11: 8 bits</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>i2s_0_data_ch_sel_tx</name>
              <description>I2S 0 Tx channel data
2'b00: L/R
2'b01: R/L
2'b10: L/L
2'b11: R/R</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>i2s_0_master_sel</name>
              <description>I2S 0 master source selection
1'b0: internal SPORT
1'b1: external I2S</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>i2s_0_control_1</name>
          <addressOffset>0x00000040</addressOffset>
          <size>32</size>
          <description>I2S 0 Control Register 1</description>
          <resetValue>0x0002C688</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>i2s_0_data_ch0_sel_rx</name>
              <description>I2S 0 Rx channel data channel 0
0: CH0
1: CH1
2/3/4/5/6/7: reserved</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>i2s_0_data_ch1_sel_rx</name>
              <description>I2S 0 Rx channel data channel 1
0: CH0
1: CH1
2/3/4/5/6/7: reserved</description>
              <bitRange>[5:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>i2s_0_data_ch2_sel_rx</name>
              <description>I2S 0 Rx channel data channel 2
0: CH0
1: CH1
2/3/4/5/6/7: reserved</description>
              <bitRange>[8:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>i2s_0_data_ch3_sel_rx</name>
              <description>I2S 0 Rx channel data channel 3
0: CH0
1: CH1
2/3/4/5/6/7: reserved</description>
              <bitRange>[11:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>i2s_0_data_ch4_sel_rx</name>
              <description>I2S 0 Rx channel data channel 4
0: CH0
1: CH1
2/3/4/5/6/7: reserved</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>i2s_0_data_ch5_sel_rx</name>
              <description>I2S 0 Rx channel data channel 5
0: CH0
1: CH1
2/3/4/5/6/7: reserved</description>
              <bitRange>[17:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>i2s_0_data_ch6_sel_rx</name>
              <description>I2S 0 Rx channel data channel 6
0: CH0
1: CH1
2/3/4/5/6/7: reserved</description>
              <bitRange>[20:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>i2s_0_data_ch7_sel_rx</name>
              <description>I2S 0 Rx channel data channel 7
0: CH0
1: CH1
2/3/4/5/6/7: reserved</description>
              <bitRange>[23:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>i2s_0_data_ch0_rx_disable</name>
              <description>I2S 0 Rx channel data channel 0
1: disable
0: enable</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>i2s_0_data_ch1_rx_disable</name>
              <description>I2S 0 Rx channel data channel 1
1: disable
0: enable</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>i2s_0_data_ch2_rx_disable</name>
              <description>I2S 0 Rx channel data channel 2
1: disable
0: enable</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>i2s_0_data_ch3_rx_disable</name>
              <description>I2S 0 Rx channel data channel 3
1: disable
0: enable</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>i2s_0_data_ch4_rx_disable</name>
              <description>I2S 0 Rx channel data channel 4
1: disable
0: enable</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>i2s_0_data_ch5_rx_disable</name>
              <description>I2S 0 Rx channel data channel 5
1: disable
0: enable</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>i2s_0_data_ch6_rx_disable</name>
              <description>I2S 0 Rx channel data channel 6
1: disable
0: enable</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>i2s_0_data_ch7_rx_disable</name>
              <description>I2S 0 Rx channel data channel 7
1: disable
0: enable</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_0_control_0</name>
          <addressOffset>0x00000050</addressOffset>
          <size>32</size>
          <description>ADC Channel 0 Control Register 0</description>
          <resetValue>0x20080098</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_0_dmic_src_sel</name>
              <description>Channel 0 DMIC source selection
3'b000: MIC 1 rising
3'b001: MIC 1 falling
3'b010: MIC 2 rising
3'b011: MIC 2 falling
other: reserved</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_0_dmic_lpf2nd_en</name>
              <description>Channel 0 DMIC path SRC 2nd LPF control
0: Disable
1: Enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_0_dmic_lpf1st_en</name>
              <description>Channel 0 DMIC path SRC 1st LPF control
0: Disable
1: Enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_0_dmic_lpf1st_fc_sel</name>
              <description>Channel 0 DMIC path SRC 1st LPF FC</description>
              <bitRange>[6:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_0_dmic_mix_mute</name>
              <description>Channel 0 DMIC input path mute
0: Un-Mute
1: Mute</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_0_ad_zdet_func</name>
              <description>Channel 0 ADC path zero detection function selection
2'b00: immediate change
2'b01: zero detection &amp; immediate change
2'b10: zero detection &amp; step
2'b11: zero detection &amp; timeout step</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_0_ad_zdet_tout</name>
              <description>Channel 0 ADC path zero detection time out selection
2'b00: 1024*16 samples
2'b01: 1024*32 samples
2'b10: 1024*64 samples
2'b11: 64 samples</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_0_ad_mute</name>
              <description>Channel 0 ADC path mute
0: Un-Mute
1: Mute</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_0_hpf_rsvd</name>
              <description>Channel 0 ADC path reserved</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_0_dchpf_en</name>
              <description>Channel 0 ADC path high pass filter enable control (filter DC)
0: Disable
1: Enable</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_0_dchpf_fc_sel</name>
              <description>Channel 0 ADC path high pass filter Fc</description>
              <bitRange>[29:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_0_dmic_lpf2nd_fc_sel</name>
              <description>Uplink Channel 0 DMIC path SRC 2nd LPF FC</description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_0_control_1</name>
          <addressOffset>0x00000054</addressOffset>
          <size>32</size>
          <description>ADC Channel 0 Control Register 1</description>
          <resetValue>0x0000002F</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_0_ad_gain</name>
              <description>Channel 0 ADC digital volume -17.625dB ~ 48dB in 0.375dB step
8'h00: -17.625dB
...
8'h2f: 0dB
8'h30: 0.375dB
...
8'haf: 48dB</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_0_boost_gain</name>
              <description>Channel 0 ADC path boost gain control
00: 0dB
01: 12dB
10: 24dB
11: 36dB</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DUMMY</name>
              <description>Dummy</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_0_rptr_hold</name>
              <description>Channel 0 I2S read point hold number
rptr_hold = (I2S_fs/ad_fs) - 1</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_0_fifo_keep_one</name>
              <description>Channel 0 I2S sample buffering
0: 4 samples
1: 1 sample</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_1_control_0</name>
          <addressOffset>0x00000058</addressOffset>
          <size>32</size>
          <description>ADC Channel 1 Control Register 0</description>
          <resetValue>0x20080098</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_1_dmic_src_sel</name>
              <description>Channel 1 DMIC source selection
3'b000: MIC 1 rising
3'b001: MIC 1 falling
3'b010: MIC 2 rising
3'b011: MIC 2 falling
other: reserved</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_1_dmic_lpf2nd_en</name>
              <description>Channel 1 DMIC path SRC 2nd LPF control
0: Disable
1: Enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_1_dmic_lpf1st_en</name>
              <description>Channel 1 DMIC path SRC 1st LPF control
0: Disable
1: Enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_1_dmic_lpf1st_fc_sel</name>
              <description>Channel 1 DMIC path SRC 1st LPF FC</description>
              <bitRange>[6:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_1_dmic_mix_mute</name>
              <description>Channel 1 DMIC input path mute
0: Un-Mute
1: Mute</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_1_ad_zdet_func</name>
              <description>Channel 1 ADC path zero detection function selection
2'b00: immediate change
2'b01: zero detection &amp; immediate change
2'b10: zero detection &amp; step
2'b11: zero detection &amp; timeout step</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_1_ad_zdet_tout</name>
              <description>Channel 1 ADC path zero detection time out selection
2'b00: 1024*16 samples
2'b01: 1024*32 samples
2'b10: 1024*64 samples
2'b11: 64 samples</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_1_ad_mute</name>
              <description>Channel 1 ADC path mute
0: Un-Mute
1: Mute</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_1_hpf_rsvd</name>
              <description>Channel 1 ADC path reserved</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_1_dchpf_en</name>
              <description>Channel 1 ADC path high pass filter enable control (filter DC)
0: Disable
1: Enable</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_1_dchpf_fc_sel</name>
              <description>Channel 1 ADC path high pass filter Fc</description>
              <bitRange>[29:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_1_dmic_lpf2nd_fc_sel</name>
              <description>Uplink Channel 1 DMIC path SRC 2nd LPF FC</description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_1_control_1</name>
          <addressOffset>0x0000005C</addressOffset>
          <size>32</size>
          <description>ADC Channel 1 Control Register 1</description>
          <resetValue>0x0000002F</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_1_ad_gain</name>
              <description>Channel 1 ADC digital volume -17.625dB ~ 48dB in 0.375dB step
8'h00: -17.625dB
...
8'h2f: 0dB
8'h30: 0.375dB
...
8'haf: 48dB</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_1_boost_gain</name>
              <description>Channel 1 ADC path boost gain control
00: 0dB
01: 12dB
10: 24dB
11: 36dB</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DUMMY</name>
              <description>Dummy</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_1_rptr_hold</name>
              <description>Channel 1 I2S read point hold number
rptr_hold = (I2S_fs/ad_fs) - 1</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_1_fifo_keep_one</name>
              <description>Channel 1 I2S sample buffering
0: 4 samples
1: 1 sample</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_align_control_reg_0</name>
          <addressOffset>0x000000AC</addressOffset>
          <size>32</size>
          <description>ADC Align Control Register 0</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>sp_ad_fifo_align_en</name>
              <description>1: Uplink FIFO will align with I2S
0: Disable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_ad_align_en</name>
              <description>1: Uplink channel will align with I2S
0: Disable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_align_control_reg</name>
          <addressOffset>0x000000B0</addressOffset>
          <size>32</size>
          <description>ADC Align Control Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_0_align_ch_sel</name>
              <description>Uplink CH0 align channel selection
0: CH0
1: CH1
Others: reserved</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_0_align_en</name>
              <description>Uplink CH0 align enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_1_align_ch_sel</name>
              <description>Uplink CH1 align channel selection
0: CH0
1: CH1
Others: reserved</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_1_align_en</name>
              <description>Uplink CH1 align enable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_0_silence_control</name>
          <addressOffset>0x00000100</addressOffset>
          <size>32</size>
          <description>ADC Channel 0 Silence Control Register</description>
          <resetValue>0x00000032</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_0_silence_det_en</name>
              <description>Channel 0 ADC path silence detection enable
0: Disable
1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_0_silence_level_sel</name>
              <description>Channel 0 ADC path silence detection threshold
3'b000: -54db
3'b001: -60db
3'b010: -66db
3'b011: -72db
3'b100: -78db
3'b101: -84db
3'b110: -90db
3'b111: -96db</description>
              <bitRange>[3:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_0_silence_debounce_sel</name>
              <description>Channel 0 ADC path silence detection debounce (48K)
3'b000: 80ms
3'b001: 160ms
3'b010: 320ms
3'b011: 640ms
3'b100: 1.28s
3'b101: 2.56s
3'b110: 5.12s
3'b111: 0.16ms</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_1_silence_control</name>
          <addressOffset>0x00000104</addressOffset>
          <size>32</size>
          <description>ADC Channel 1 Silence Control Register</description>
          <resetValue>0x00000032</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_1_silence_det_en</name>
              <description>Channel 1 ADC path silence detection enable
0: Disable
1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_1_silence_level_sel</name>
              <description>Channel 1 ADC path silence detection threshold
3'b000: -54db
3'b001: -60db
3'b010: -66db
3'b011: -72db
3'b100: -78db
3'b101: -84db
3'b110: -90db
3'b111: -96db</description>
              <bitRange>[3:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_1_silence_debounce_sel</name>
              <description>Channel 1 ADC path silence detection debounce (48K)
3'b000: 80ms
3'b001: 160ms
3'b010: 320ms
3'b011: 640ms
3'b100: 1.28s
3'b101: 2.56s
3'b110: 5.12s
3'b111: 0.16ms</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_0_eq_ctrl</name>
          <addressOffset>0x00000400</addressOffset>
          <size>32</size>
          <description>ADC Channel 0 EQ Control Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_0_biquad_en_0</name>
              <description>ADC channel 0 EQ 0-band biquad enable
0: disable
1: enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_0_biquad_en_1</name>
              <description>ADC channel 0 EQ 1-band biquad enable
0: disable
1: enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_0_biquad_en_2</name>
              <description>ADC channel 0 EQ 2-band biquad enable
0: disable
1: enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_0_biquad_en_3</name>
              <description>ADC channel 0 EQ 3-band biquad enable
0: disable
1: enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_0_biquad_en_4</name>
              <description>ADC channel 0 EQ 4-band biquad enable
0: disable
1: enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_0_biquad_h0_0</name>
          <addressOffset>0x00000404</addressOffset>
          <size>32</size>
          <description>ADC Channel 0 EQ Band 0 Biquad H0 Register</description>
          <resetValue>0x02000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_0_biquad_h0_0</name>
              <description>ADC channel 0 EQ 0-band coef. H0 2's complement in 4.25 format, i.e. the range is from -8~7.99.</description>
              <bitRange>[28:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_0_biquad_b1_0</name>
          <addressOffset>0x00000408</addressOffset>
          <size>32</size>
          <description>ADC Channel 0 EQ Band 0 Biquad B1 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_0_biquad_b1_0</name>
              <description>ADC channel 0 EQ 0-band coef. B1 2's complement in 4.25 format, i.e. the range is from -8~7.99.</description>
              <bitRange>[28:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_0_biquad_b2_0</name>
          <addressOffset>0x0000040C</addressOffset>
          <size>32</size>
          <description>ADC Channel 0 EQ Band 0 Biquad B2 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_0_biquad_b2_0</name>
              <description>ADC channel 0 EQ 0-band coef. B2 2's complement in 4.25 format, i.e. the range is from -8~7.99.</description>
              <bitRange>[28:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_0_biquad_a1_0</name>
          <addressOffset>0x00000410</addressOffset>
          <size>32</size>
          <description>ADC Channel 0 EQ Band 0 Biquad A1 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_0_biquad_a1_0</name>
              <description>ADC channel 0 EQ 0-band coef. A1 2's complement in 4.25 format, i.e. the range is from -8~7.99.</description>
              <bitRange>[28:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_0_biquad_a2_0</name>
          <addressOffset>0x00000414</addressOffset>
          <size>32</size>
          <description>ADC Channel 0 EQ Band 0 Biquad A2 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_0_biquad_a2_0</name>
              <description>ADC channel 0 EQ 0-band coef. A2 2's complement in 4.25 format, i.e. the range is from -8~7.99.</description>
              <bitRange>[28:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_0_biquad_h0_1</name>
          <addressOffset>0x00000418</addressOffset>
          <size>32</size>
          <description>ADC Channel 0 EQ Band 1 Biquad H0 Register</description>
          <resetValue>0x02000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_0_biquad_h0_1</name>
              <description>ADC channel 0 EQ 1-band coef. H0 2's complement in 4.25 format, i.e. the range is from -8~7.99.</description>
              <bitRange>[28:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_0_biquad_b1_1</name>
          <addressOffset>0x0000041C</addressOffset>
          <size>32</size>
          <description>ADC Channel 0 EQ Band 1 Biquad B1 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_0_biquad_b1_1</name>
              <description>ADC channel 0 EQ 1-band coef. B1 2's complement in 4.25 format, i.e. the range is from -8~7.99.</description>
              <bitRange>[28:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_0_biquad_b2_1</name>
          <addressOffset>0x00000420</addressOffset>
          <size>32</size>
          <description>ADC Channel 0 EQ Band 1 Biquad B2 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_0_biquad_b2_1</name>
              <description>ADC channel 0 EQ 1-band coef. B2 2's complement in 4.25 format, i.e. the range is from -8~7.99.</description>
              <bitRange>[28:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_0_biquad_a1_1</name>
          <addressOffset>0x00000424</addressOffset>
          <size>32</size>
          <description>ADC Channel 0 EQ Band 1 Biquad A1 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_0_biquad_a1_1</name>
              <description>ADC channel 0 EQ 1-band coef. A1 2's complement in 4.25 format, i.e. the range is from -8~7.99.</description>
              <bitRange>[28:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_0_biquad_a2_1</name>
          <addressOffset>0x00000428</addressOffset>
          <size>32</size>
          <description>ADC Channel 0 EQ Band 1 Biquad A2 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_0_biquad_a2_1</name>
              <description>ADC channel 0 EQ 1-band coef. A2 2's complement in 4.25 format, i.e. the range is from -8~7.99.</description>
              <bitRange>[28:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_0_biquad_h0_2</name>
          <addressOffset>0x0000042C</addressOffset>
          <size>32</size>
          <description>ADC Channel 0 EQ Band 2 Biquad H0 Register</description>
          <resetValue>0x02000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_0_biquad_h0_2</name>
              <description>ADC channel 0 EQ 2-band coef. H0 2's complement in 4.25 format, i.e. the range is from -8~7.99.</description>
              <bitRange>[28:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_0_biquad_b1_2</name>
          <addressOffset>0x00000430</addressOffset>
          <size>32</size>
          <description>ADC Channel 0 EQ Band 2 Biquad B1 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_0_biquad_b1_2</name>
              <description>ADC channel 0 EQ 2-band coef. B1 2's complement in 4.25 format, i.e. the range is from -8~7.99.</description>
              <bitRange>[28:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_0_biquad_b2_2</name>
          <addressOffset>0x00000434</addressOffset>
          <size>32</size>
          <description>ADC Channel 0 EQ Band 2 Biquad B2 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_0_biquad_b2_2</name>
              <description>ADC channel 0 EQ 2-band coef. B2 2's complement in 4.25 format, i.e. the range is from -8~7.99.</description>
              <bitRange>[28:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_0_biquad_a1_2</name>
          <addressOffset>0x00000438</addressOffset>
          <size>32</size>
          <description>ADC Channel 0 EQ Band 2 Biquad A1 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_0_biquad_a1_2</name>
              <description>ADC channel 0 EQ 2-band coef. A1 2's complement in 4.25 format, i.e. the range is from -8~7.99.</description>
              <bitRange>[28:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_0_biquad_a2_2</name>
          <addressOffset>0x0000043C</addressOffset>
          <size>32</size>
          <description>ADC Channel 0 EQ Band 2 Biquad A2 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_0_biquad_a2_2</name>
              <description>ADC channel 0 EQ 2-band coef. A2 2's complement in 4.25 format, i.e. the range is from -8~7.99.</description>
              <bitRange>[28:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_0_biquad_h0_3</name>
          <addressOffset>0x00000440</addressOffset>
          <size>32</size>
          <description>ADC Channel 0 EQ Band 3 Biquad H0 Register</description>
          <resetValue>0x02000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_0_biquad_h0_3</name>
              <description>ADC channel 0 EQ 3-band coef. H0 2's complement in 4.25 format, i.e. the range is from -8~7.99.</description>
              <bitRange>[28:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_0_biquad_b1_3</name>
          <addressOffset>0x00000444</addressOffset>
          <size>32</size>
          <description>ADC Channel 0 EQ Band 3 Biquad B1 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_0_biquad_b1_3</name>
              <description>ADC channel 0 EQ 3-band coef. B1 2's complement in 4.25 format, i.e. the range is from -8~7.99.</description>
              <bitRange>[28:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_0_biquad_b2_3</name>
          <addressOffset>0x00000448</addressOffset>
          <size>32</size>
          <description>ADC Channel 0 EQ Band 3 Biquad B2 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_0_biquad_b2_3</name>
              <description>ADC channel 0 EQ 3-band coef. B2 2's complement in 4.25 format, i.e. the range is from -8~7.99.</description>
              <bitRange>[28:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_0_biquad_a1_3</name>
          <addressOffset>0x0000044C</addressOffset>
          <size>32</size>
          <description>ADC Channel 0 EQ Band 3 Biquad A1 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_0_biquad_a1_3</name>
              <description>ADC channel 0 EQ 3-band coef. A1 2's complement in 4.25 format, i.e. the range is from -8~7.99.</description>
              <bitRange>[28:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_0_biquad_a2_3</name>
          <addressOffset>0x00000450</addressOffset>
          <size>32</size>
          <description>ADC Channel 0 EQ Band 3 Biquad A2 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_0_biquad_a2_3</name>
              <description>ADC channel 0 EQ 3-band coef. A2 2's complement in 4.25 format, i.e. the range is from -8~7.99.</description>
              <bitRange>[28:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_0_biquad_h0_4</name>
          <addressOffset>0x00000454</addressOffset>
          <size>32</size>
          <description>ADC Channel 0 EQ Band 4 Biquad H0 Register</description>
          <resetValue>0x02000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_0_biquad_h0_4</name>
              <description>ADC channel 0 EQ 4-band coef. H0 2's complement in 4.25 format, i.e. the range is from -8~7.99.</description>
              <bitRange>[28:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_0_biquad_b1_4</name>
          <addressOffset>0x00000458</addressOffset>
          <size>32</size>
          <description>ADC Channel 0 EQ Band 4 Biquad B1 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_0_biquad_b1_4</name>
              <description>ADC channel 0 EQ 4-band coef. B1 2's complement in 4.25 format, i.e. the range is from -8~7.99.</description>
              <bitRange>[28:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_0_biquad_b2_4</name>
          <addressOffset>0x0000045C</addressOffset>
          <size>32</size>
          <description>ADC Channel 0 EQ Band 4 Biquad B2 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_0_biquad_b2_4</name>
              <description>ADC channel 0 EQ 4-band coef. B2 2's complement in 4.25 format, i.e. the range is from -8~7.99.</description>
              <bitRange>[28:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_0_biquad_a1_4</name>
          <addressOffset>0x00000460</addressOffset>
          <size>32</size>
          <description>ADC Channel 0 EQ Band 4 Biquad A1 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_0_biquad_a1_4</name>
              <description>ADC channel 0 EQ 4-band coef. A1 2's complement in 4.25 format, i.e. the range is from -8~7.99.</description>
              <bitRange>[28:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_0_biquad_a2_4</name>
          <addressOffset>0x00000464</addressOffset>
          <size>32</size>
          <description>ADC Channel 0 EQ Band 4 Biquad A2 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_0_biquad_a2_4</name>
              <description>ADC channel 0 EQ 4-band coef. A2 2's complement in 4.25 format, i.e. the range is from -8~7.99.</description>
              <bitRange>[28:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_1_eq_ctrl</name>
          <addressOffset>0x00000468</addressOffset>
          <size>32</size>
          <description>ADC Channel 1 EQ Control Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_1_biquad_en_0</name>
              <description>ADC channel 1 EQ 0-band biquad enable
0: disable
1: enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_1_biquad_en_1</name>
              <description>ADC channel 1 EQ 1-band biquad enable
0: disable
1: enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_1_biquad_en_2</name>
              <description>ADC channel 1 EQ 2-band biquad enable
0: disable
1: enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_1_biquad_en_3</name>
              <description>ADC channel 1 EQ 3-band biquad enable
0: disable
1: enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_1_biquad_en_4</name>
              <description>ADC channel 1 EQ 4-band biquad enable
0: disable
1: enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_1_biquad_h0_0</name>
          <addressOffset>0x0000046C</addressOffset>
          <size>32</size>
          <description>ADC Channel 1 EQ Band 0 Biquad H0 Register</description>
          <resetValue>0x02000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_1_biquad_h0_0</name>
              <description>ADC channel 1 EQ 0-band coef. h0 2's complement in 4.25 format, i.e. the range is from -8~7.99.</description>
              <bitRange>[28:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_1_biquad_b1_0</name>
          <addressOffset>0x00000470</addressOffset>
          <size>32</size>
          <description>ADC Channel 1 EQ Band 0 Biquad B1 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_1_biquad_b1_0</name>
              <description>ADC channel 1 EQ 0-band coef. b1 2's complement in 4.25 format, i.e. the range is from -8~7.99.</description>
              <bitRange>[28:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_1_biquad_b2_0</name>
          <addressOffset>0x00000474</addressOffset>
          <size>32</size>
          <description>ADC Channel 1 EQ Band 0 Biquad B2 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_1_biquad_b2_0</name>
              <description>ADC channel 1 EQ 0-band coef. b2 2's complement in 4.25 format, i.e. the range is from -8~7.99.</description>
              <bitRange>[28:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_1_biquad_a1_0</name>
          <addressOffset>0x00000478</addressOffset>
          <size>32</size>
          <description>ADC Channel 1 EQ Band 0 Biquad A1 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_1_biquad_a1_0</name>
              <description>ADC channel 1 EQ 0-band coef. a1 2's complement in 4.25 format, i.e. the range is from -8~7.99.</description>
              <bitRange>[28:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_1_biquad_a2_0</name>
          <addressOffset>0x0000047C</addressOffset>
          <size>32</size>
          <description>ADC Channel 1 EQ Band 0 Biquad A2 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_1_biquad_a2_0</name>
              <description>ADC channel 1 EQ 0-band coef. a2 2's complement in 4.25 format, i.e. the range is from -8~7.99.</description>
              <bitRange>[28:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_1_biquad_h0_1</name>
          <addressOffset>0x00000480</addressOffset>
          <size>32</size>
          <description>ADC Channel 1 EQ Band 1 Biquad H0 Register</description>
          <resetValue>0x02000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_1_biquad_h0_1</name>
              <description>ADC channel 1 EQ 1-band coef. h0 2's complement in 4.25 format, i.e. the range is from -8~7.99.</description>
              <bitRange>[28:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_1_biquad_b1_1</name>
          <addressOffset>0x00000484</addressOffset>
          <size>32</size>
          <description>ADC Channel 1 EQ Band 1 Biquad B1 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_1_biquad_b1_1</name>
              <description>ADC channel 1 EQ 1-band coef. b1 2's complement in 4.25 format, i.e. the range is from -8~7.99.</description>
              <bitRange>[28:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_1_biquad_b2_1</name>
          <addressOffset>0x00000488</addressOffset>
          <size>32</size>
          <description>ADC Channel 1 EQ Band 1 Biquad B2 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_1_biquad_b2_1</name>
              <description>ADC channel 1 EQ 1-band coef. b2 2's complement in 4.25 format, i.e. the range is from -8~7.99.</description>
              <bitRange>[28:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_1_biquad_a1_1</name>
          <addressOffset>0x0000048C</addressOffset>
          <size>32</size>
          <description>ADC Channel 1 EQ Band 1 Biquad A1 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_1_biquad_a1_1</name>
              <description>ADC channel 1 EQ 1-band coef. a1 2's complement in 4.25 format, i.e. the range is from -8~7.99.</description>
              <bitRange>[28:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_1_biquad_a2_1</name>
          <addressOffset>0x00000490</addressOffset>
          <size>32</size>
          <description>ADC Channel 1 EQ Band 1 Biquad A2 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_1_biquad_a2_1</name>
              <description>ADC channel 1 EQ 1-band coef. a2 2's complement in 4.25 format, i.e. the range is from -8~7.99.</description>
              <bitRange>[28:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_1_biquad_h0_2</name>
          <addressOffset>0x00000494</addressOffset>
          <size>32</size>
          <description>ADC Channel 1 EQ Band 2 Biquad H0 Register</description>
          <resetValue>0x02000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_1_biquad_h0_2</name>
              <description>ADC channel 1 EQ 2-band coef. h0 2's complement in 4.25 format, i.e. the range is from -8~7.99.</description>
              <bitRange>[28:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_1_biquad_b1_2</name>
          <addressOffset>0x00000498</addressOffset>
          <size>32</size>
          <description>ADC Channel 1 EQ Band 2 Biquad B1 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_1_biquad_b1_2</name>
              <description>ADC channel 1 EQ 2-band coef. b1 2's complement in 4.25 format, i.e. the range is from -8~7.99.</description>
              <bitRange>[28:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_1_biquad_b2_2</name>
          <addressOffset>0x0000049C</addressOffset>
          <size>32</size>
          <description>ADC Channel 1 EQ Band 2 Biquad B2 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_1_biquad_b2_2</name>
              <description>ADC channel 1 EQ 2-band coef. b2 2's complement in 4.25 format, i.e. the range is from -8~7.99.</description>
              <bitRange>[28:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_1_biquad_a1_2</name>
          <addressOffset>0x000004A0</addressOffset>
          <size>32</size>
          <description>ADC Channel 1 EQ Band 2 Biquad A1 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_1_biquad_a1_2</name>
              <description>ADC channel 1 EQ 2-band coef. a1 2's complement in 4.25 format, i.e. the range is from -8~7.99.</description>
              <bitRange>[28:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_1_biquad_a2_2</name>
          <addressOffset>0x000004A4</addressOffset>
          <size>32</size>
          <description>ADC Channel 1 EQ Band 2 Biquad A2 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_1_biquad_a2_2</name>
              <description>ADC channel 1 EQ 2-band coef. a2 2's complement in 4.25 format, i.e. the range is from -8~7.99.</description>
              <bitRange>[28:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_1_biquad_h0_3</name>
          <addressOffset>0x000004A8</addressOffset>
          <size>32</size>
          <description>ADC Channel 1 EQ Band 3 Biquad H0 Register</description>
          <resetValue>0x02000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_1_biquad_h0_3</name>
              <description>ADC channel 1 EQ 3-band coef. h0 2's complement in 4.25 format, i.e. the range is from -8~7.99.</description>
              <bitRange>[28:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_1_biquad_b1_3</name>
          <addressOffset>0x000004AC</addressOffset>
          <size>32</size>
          <description>ADC Channel 1 EQ Band 3 Biquad B1 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_1_biquad_b1_3</name>
              <description>ADC channel 1 EQ 3-band coef. b1 2's complement in 4.25 format, i.e. the range is from -8~7.99.</description>
              <bitRange>[28:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_1_biquad_b2_3</name>
          <addressOffset>0x000004B0</addressOffset>
          <size>32</size>
          <description>ADC Channel 1 EQ Band 3 Biquad B2 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_1_biquad_b2_3</name>
              <description>ADC channel 1 EQ 3-band coef. b2 2's complement in 4.25 format, i.e. the range is from -8~7.99.</description>
              <bitRange>[28:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_1_biquad_a1_3</name>
          <addressOffset>0x000004B4</addressOffset>
          <size>32</size>
          <description>ADC Channel 1 EQ Band 3 Biquad A1 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_1_biquad_a1_3</name>
              <description>ADC channel 1 EQ 3-band coef. a1 2's complement in 4.25 format, i.e. the range is from -8~7.99.</description>
              <bitRange>[28:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_1_biquad_a2_3</name>
          <addressOffset>0x000004B8</addressOffset>
          <size>32</size>
          <description>ADC Channel 1 EQ Band 3 Biquad A2 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_1_biquad_a2_3</name>
              <description>ADC channel 1 EQ 3-band coef. a2 2's complement in 4.25 format, i.e. the range is from -8~7.99.</description>
              <bitRange>[28:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_1_biquad_h0_4</name>
          <addressOffset>0x000004BC</addressOffset>
          <size>32</size>
          <description>ADC Channel 1 EQ Band 4 Biquad H0 Register</description>
          <resetValue>0x02000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_1_biquad_h0_4</name>
              <description>ADC channel 1 EQ 4-band coef. h0 2's complement in 4.25 format, i.e. the range is from -8~7.99.</description>
              <bitRange>[28:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_1_biquad_b1_4</name>
          <addressOffset>0x000004C0</addressOffset>
          <size>32</size>
          <description>ADC Channel 1 EQ Band 4 Biquad B1 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_1_biquad_b1_4</name>
              <description>ADC channel 1 EQ 4-band coef. b1 2's complement in 4.25 format, i.e. the range is from -8~7.99.</description>
              <bitRange>[28:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_1_biquad_b2_4</name>
          <addressOffset>0x000004C4</addressOffset>
          <size>32</size>
          <description>ADC Channel 1 EQ Band 4 Biquad B2 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_1_biquad_b2_4</name>
              <description>ADC channel 1 EQ 4-band coef. b2 2's complement in 4.25 format, i.e. the range is from -8~7.99.</description>
              <bitRange>[28:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_1_biquad_a1_4</name>
          <addressOffset>0x000004C8</addressOffset>
          <size>32</size>
          <description>ADC Channel 1 EQ Band 4 Biquad A1 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_1_biquad_a1_4</name>
              <description>ADC channel 1 EQ 4-band coef. a1 2's complement in 4.25 format, i.e. the range is from -8~7.99.</description>
              <bitRange>[28:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_1_biquad_a2_4</name>
          <addressOffset>0x000004CC</addressOffset>
          <size>32</size>
          <description>ADC Channel 1 EQ Band 4 Biquad A2 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_1_biquad_a2_4</name>
              <description>ADC channel 1 EQ 4-band coef. a2 2's complement in 4.25 format, i.e. the range is from -8~7.99.</description>
              <bitRange>[28:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ana_read</name>
          <addressOffset>0x00000800</addressOffset>
          <size>32</size>
          <description>ANA Read Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>micbias_oc</name>
              <description>The status flag of MICBIAS over-current protection</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_0_lpf_rd</name>
          <addressOffset>0x00000804</addressOffset>
          <size>32</size>
          <description>ADC Channel 0 LPF RD Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_0_lpf_rd</name>
              <description>CH 0 ADC LPF out values</description>
              <bitRange>[18:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_1_lpf_rd</name>
          <addressOffset>0x00000808</addressOffset>
          <size>32</size>
          <description>ADC Channel 1 LPF RD Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_1_lpf_rd</name>
              <description>CH 1 ADC LPF out values</description>
              <bitRange>[18:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>silence_inform</name>
          <addressOffset>0x00000824</addressOffset>
          <size>32</size>
          <description>Silence Inform Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_0_silence_det_o</name>
              <description>adc_0_silencedata status (result of silence detection)
1'b0: not adc_0_silencedata
1'b1: adc_0_silenceis detected</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>adc_0_silence_det_status</name>
              <description>Ongoing status of adc_0_silencedetection
1'b0: adc_0_silencedetection is resting (clock is gating)
1'b1: adc_0_silencedetection is working</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>adc_1_silence_det_o</name>
              <description>adc_1_silencedata status (result of silence detection)
1'b0: not adc_1_silencedata
1'b1: adc_1_silenceis detected</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>adc_1_silence_det_status</name>
              <description>Ongoing status of adc_1_silencedetection
1'b0: adc_1_silencedetection is resting (clock is gating)
1'b1: adc_1_silencedetection is working</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>audio_ro_dummy1</name>
          <addressOffset>0x00000828</addressOffset>
          <size>32</size>
          <description>Audio RO Dummy1 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>audio_ro_dummy1</name>
              <description>Dummy register</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>sport</name>
      <baseAddress>0x4012A000</baseAddress>
      <size>0x00000984</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00000984</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>SP_REG_MUX</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description>SPORT MUX Register</description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>sp_reg_mux</name>
              <description>Mux of register write with different base address of the same SPORT.
This field can be set as different value with four different base address in one SPORT, but other registers share the same value with four different base address in one SPORT.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SP_CTRL0</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description>SPORT Control Register 0</description>
          <resetValue>0x01010000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>mclk_sel</name>
              <description>Not used, refer to 0x64
2'b00: MCLK output=dsp_src_clk/4
2'b01: MCLK output=dsp_src_clk/2
2'b10/2'b11: MCLK output=dsp_src_clk</description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_sel_i2s_rx_ch</name>
              <description>2'b00: L/R
2'b01: R/L
2'b10: L/L
2'b11: R/R @ ADC path</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_sel_i2s_tx_ch</name>
              <description>2'b00: L/R
2'b01: R/L
2'b10: L/L
2'b11: R/R @ DAC path</description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_start_rx</name>
              <description>1'b0: Rx is disabled
1'b1: Rx is started</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_rx_disable</name>
              <description>1'b1: SPORT Rx is disabled.
1'b0: SPORT Rx is enabled.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rx_lsb_first_0</name>
              <description>1'b0: MSB first when Rx
1'b1: LSB first</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tx_lsb_first_0</name>
              <description>1'b0: MSB first when Tx
1'b1: LSB first</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_tdm_mode_sel_rx</name>
              <description>2'b00: Without TDM
2'b01: TDM4
2'b10: TDM6
2'b11: TDM8</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_tdm_mode_sel_tx</name>
              <description>2'b00: Without TDM
2'b01: TDM4
2'b10: TDM6
2'b11: TDM8</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_start_tx</name>
              <description>1'b0: Tx is disabled.
1'b1: Tx is started.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_tx_disable</name>
              <description>1'b1: SPORT Tx is disabled.
1'b0: SPORT Tx is enabled.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_i2s_self_lpbk_en</name>
              <description>1'b1: internal loopback mode is enabled</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_data_len_sel_tx_0</name>
              <description>3'b000: 16 bits
3'b001: 20 bits
3'b010: 24 bits
3'b100: 32 bits</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_en_i2s_mono_tx_0</name>
              <description>1'b1: mono
1'b0: stereo</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_inv_i2s_sclk</name>
              <description>1'b1: I2S/PCM bit clock is inverted</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_data_format_sel_tx</name>
              <description>2'b00: I2S
2'b01: Left-justified
2'b10: PCM mode A
2'b11: PCM mode B</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dsp_ctl_mode</name>
              <description>1'b1: DSP and SPORT1 handshaking is enabled.
1'b0: GDMA and SPORT1 handshaking is enabled.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_loopback</name>
              <description>1'b1: self-loopback mode</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_wclk_tx_inverse</name>
              <description>1'b1: I2S/PCM word clock is inverted for Tx (SPK path)</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>slave_data_sel</name>
              <description>1'b1: To be an I2S or PCM slave (data path)</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>slave_clk_sel</name>
              <description>1'b1: To be an I2S or PCM slave (CLK path)</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rx_inv_i2s_sclk</name>
              <description>1'b1: sclk to Rx path (ADC path) is inverted</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tx_inv_i2s_sclk</name>
              <description>1'b1: sclk to Tx path (DAC path) is inverted</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_reset</name>
              <description>1'b1: reset SPORT1 module, and remember to write "1" to reset and then write "0" to release from reset.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SP_CTRL1</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description>SPORT Control Register 1</description>
          <resetValue>0x1100008C</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>rx_fifo_1_reg_1_en</name>
              <description>1'b1: Enable last two channels of RX_FIFO_1. Only enable when RX_FIFO_1_REG_1_EN = 1.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rx_fifo_1_reg_0_en</name>
              <description>1'b1: Enable first two channels of RX_FIFO_1. Only enable when RX_FIFO_0_REG_0_EN = 1.</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rx_fifo_0_reg_1_en</name>
              <description>1'b1: Enable last two channels of RX_FIFO_0. Only enable when RX_FIFO_0_REG_0_EN = 1.</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rx_fifo_0_reg_0_en</name>
              <description>1'b1: Enable first two channels of RX_FIFO_0. Disable 0x0008[28] ~ Disable 0x0008[31] at the same time to reset Rx FIFO.</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tx_fifo_1_reg_1_en</name>
              <description>1'b1: Enable last two channels of TX_FIFO_1. Only enable when TX_FIFO_1_REG_0_EN = 1.</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tx_fifo_1_reg_0_en</name>
              <description>1'b1: Enable first two channels of TX_FIFO_1. Only enable when TX_FIFO_0_REG_0_EN = 1.</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tx_fifo_0_reg_1_en</name>
              <description>1'b1: Enable last two channels of TX_FIFO_0. Only enable when TX_FIFO_0_REG_0_EN = 1.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tx_fifo_0_reg_0_en</name>
              <description>1'b1: Enable first two channels of TX_FIFO_0. Disable 0x0008[24] ~ Disable 0x0008[27] at the same time to reset Tx FIFO.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rx_snk_lr_swap_0</name>
              <description>1'b1: swap L/R audio samples written to the sink memory of RX_FIFO_0</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rx_snk_byte_swap_0</name>
              <description>1'b1: swap H/L bytes written to the sink memory of RX_FIFO_0</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tx_src_lr_swap_0</name>
              <description>1'b1: swap L/R audio samples read from the source memory of TX_FIFO_0</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tx_src_byte_swap_0</name>
              <description>1'b1: swap H/L bytes read from the source memory of TX_FIFO_0</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>direct_mode_en</name>
              <description>1'b1: WS (LRCK) and SCK (BCLK) are from other SPORT</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_direct_src_sel</name>
              <description>2'b00: WS and SCK are from SPORT0.
2'b01: WS and SCK are from SPORT1.
2'b10: WS and SCK are from SPORT2.
2'b11: WS and SCK are from SPORT3.</description>
              <bitRange>[18:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>err_cnt_sat_set</name>
              <description>1'b1: saturation count (65534 -&gt; 65535 -&gt; 65535 ...)
1'b0: wrap count (65534 -&gt; 65535 -&gt; 0 -&gt; 1 -&gt; 2 ...)</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sport_clk_sel</name>
              <description>2'b0x00: dsp_src_clk (BCLK*2)
2'b10: dsp_src_clk (BCLK*4)/2
2'b11: dsp_src_clk (BCLK*8)/4</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>clear_rx_err_cnt</name>
              <description>Write 1'b1 and then write 0 to clear Rx error counter</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>clear_tx_err_cnt</name>
              <description>Write 1'b1 and then write 0 to clear Tx error counter</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>enable_mclk</name>
              <description>Enable mclk.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>debug_bus_sel</name>
              <description>3'b000: debug_bus_a
3'b001: debug_bus_b
...
3'b111: debug_bus_h</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ws_force_val</name>
              <description>When WS_FORCE = 1, ws_out_tx and ws_out_rx = "ws_force_val"</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ws_force</name>
              <description>1'b1: Make ws_out_tx and ws_out_rx = "ws_force_val"</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bclk_reset</name>
              <description>1'b0: Enable bclk
1'b1: Disable and reset bclk</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bclk_pull_zero</name>
              <description>Write 1'b1 to pull bclk to 0 smoothly
Write 1'b0 to reopen bclk</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>multi_io_en_rx</name>
              <description>1'b1: Enable multi-IO of Rx
1'b0: Disable multi-IO of Rx</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>multi_io_en_tx</name>
              <description>1'b1: Enable multi-IO of Tx
1'b0: Disable multi-IO of Tx</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tx_fifo_fill_zero</name>
              <description>X is the burst size of TX_FIFO_0. Y is the burst size of TX_FIFO_1. 
Fill TX_FIFO_0 with X zero data and fill TX_FIFO_1 with Y zero data. 
This control bit is "write 1 clear" type</description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>sp_reset_smooth</name>
              <description>1'b1: reset SPORT1 module with complete LRCK cycle.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SP_INT_CTRL</name>
          <addressOffset>0x0000000C</addressOffset>
          <size>32</size>
          <description>SPORT Interrupt Control Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>int_enable_dsp_1</name>
              <description>Bit[24]: for the interrupt of "sp_ready_to_tx_1"
Bit[25]: for the interrupt of "sp_ready_to_rx_1"
Bit[26]: for the interrupt of "tx_fifo_full_intr_1"
Bit[27]: for the interrupt of "rx_fifo_full_intr_1"
Bit[28]: for the interrupt of "tx_fifo_empty_intr_1"
Bit[29]: for the interrupt of "rx_fifo_empty_intr_1"
Bit[30]: for the interrupt of "tx_i2s_idle_1"
Bit[31]: Reserved</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>int_enable_dsp_0</name>
              <description>Bit[16]: for the interrupt of "sp_ready_to_tx"
Bit[17]: for the interrupt of "sp_ready_to_rx"
Bit[18]: for the interrupt of "tx_fifo_full_intr"
Bit[19]: for the interrupt of "rx_fifo_full_intr"
Bit[20]: for the interrupt of "tx_fifo_empty_intr"
Bit[21]: for the interrupt of "rx_fifo_empty_intr"
Bit[22]: for the interrupt of "tx_i2s_idle"
Bit[23]: Reserved</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DUMMY</name>
              <description>-</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>intr_clr_1</name>
              <description>Bit[9]: for the interrupt of "tx_fifo_full_intr_1"
Bit[10]: for the interrupt of "rx_fifo_full_intr_1"
Bit[11]: for the interrupt of "tx_fifo_empty_intr_1"
Bit[12]: for the interrupt of "rx_fifo_empty_intr_1"
Bit[13]: Reserved</description>
              <bitRange>[13:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rx_dsp_clear_int_1</name>
              <description>For DSP mode (bypass GDMA), F/W writes 1'b1 and then 1'b0 to clear Rx interrupt.
Note: Rx interrupt is to indicate that DSP can get audio data from RX_FIFO_1.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tx_dsp_clear_int_1</name>
              <description>For DSP mode (bypass GDMA), F/W writes 1'b1 and then 1'b0 to clear TX interrupt.
Note: Tx interrupt is to indicate that DSP can write audio data to TX_FIFO_1.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>intr_clr_0</name>
              <description>Bit[2]: for the interrupt of "tx_fifo_full_intr"
Bit[3]: for the interrupt of "rx_fifo_full_intr"
Bit[4]: for the interrupt of "tx_fifo_empty_intr"
Bit[5]: for the interrupt of "rx_fifo_empty_intr"
Bit[6]: Reserved</description>
              <bitRange>[6:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rx_dsp_clear_int_0</name>
              <description>For DSP mode (bypass GDMA), F/W writes 1'b1 and then 1'b0 to clear Rx interrupt.
Note: Rx interrupt is to indicate that DSP can get audio data from RX_FIFO_0.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tx_dsp_clear_int_0</name>
              <description>For DSP mode (bypass GDMA), F/W writes 1'b1 and then 1'b0 to clear Tx interrupt.
Note: Tx interrupt is to indicate that DSP can write audio data to TX_FIFO_0.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SP_TRX_COUNTER_STATUS</name>
          <addressOffset>0x00000014</addressOffset>
          <size>32</size>
          <description>SPORT TRX Counter Status Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>sp_reset_state</name>
              <description>1'b1: sp_reset is enabled.
1'b0: sp_reset is disabled.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>rx_depth_cnt_1</name>
              <description>RX_FIFO_1 depth counter status (MIC path)</description>
              <bitRange>[29:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>tx_depth_cnt_1</name>
              <description>TX_FIFO_1 depth counter status (SPK path)</description>
              <bitRange>[21:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>rx_depth_cnt_0</name>
              <description>RX_FIFO_0 depth counter status (MIC path)</description>
              <bitRange>[13:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>tx_depth_cnt_0</name>
              <description>TX_FIFO_0 depth counter status (SPK path)</description>
              <bitRange>[5:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SP_ERR</name>
          <addressOffset>0x00000018</addressOffset>
          <size>32</size>
          <description>SPORT Error Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>rx_err_cnt</name>
              <description>Rx error counter (MIC path)
Note: This counter should always be zero if everything works well.</description>
              <bitRange>[31:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>tx_err_cnt</name>
              <description>Tx error counter (SPK path)
Note: This counter should always be zero if everything works well.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SR_TX_BCLK</name>
          <addressOffset>0x0000001C</addressOffset>
          <size>32</size>
          <description>SPORT Tx BCLK Register</description>
          <resetValue>0x00300271</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>tx_mi_ni_update</name>
              <description>1'b1: to update "mi" and "ni" to get the new clock rate.
This bit will be reset automatically when the update is done</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tx_ni</name>
              <description>BCLK = 40MHz*(ni/mi)     
For example: BCLK=3.072MHz=40MHz*(48/625)</description>
              <bitRange>[30:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tx_mi</name>
              <description></description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SP_TX_LRCLK</name>
          <addressOffset>0x00000020</addressOffset>
          <size>32</size>
          <description>SPORT Tx LRCLK Register</description>
          <resetValue>0x3F3F1010</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>rx_bclk_div_ratio</name>
              <description>Rx bclk even-bit integer divider. Used in "mode_40mhz" set as 1'b1. 
(rx_bclk_div_ratio + 1) is the number of "sck_out" cycles within a "ws_out_rx" cycle (1/fs).
Default of (rx_bclk_div_ratio + 1) is 64. Set as 64 - 1 = 63. 
Only odd number supported. Maximum is 255.</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tx_bclk_div_ratio</name>
              <description>Tx bclk even-bit integer divider. Used in "mode_40mhz" set as 1'b1. 
(tx_bclk_div_ratio + 1) is the number of "sck_out" cycles within a "ws_out_tx" cycle (1/fs).
Default of (tx_bclk_div_ratio + 1) is 64. Set as 64 - 1 = 63. 
Only odd number supported. Maximum is 255.</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DUMMY1</name>
              <description>-</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rxdma_busrtsize</name>
              <description>Rx DMA burst size</description>
              <bitRange>[13:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DUMMY2</name>
              <description>-</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>txdma_burstsize</name>
              <description>Tx DMA burst size</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SP_FIFO_CTRL</name>
          <addressOffset>0x00000024</addressOffset>
          <size>32</size>
          <description>SPORT FIFO Control Register</description>
          <resetValue>0xCC000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>rx_fifo_empty_0</name>
              <description>1: RX_FIFO_0 is empty</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>tx_fifo_empty_0</name>
              <description>1: TX_FIFO_0 is empty</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>rx_fifo_full_0</name>
              <description>1: RX_FIFO_0 is full</description>
              <bitRange>[29:29]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>tx_fifo_full_0</name>
              <description>1: TX_FIFO_0 is full</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>rx_fifo_empty_1</name>
              <description>1: RX_FIFO_1 is empty</description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>tx_fifo_empty_1</name>
              <description>1: TX_FIFO_1 is empty</description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>rx_fifo_full_1</name>
              <description>1: RX_FIFO_1 is full</description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>tx_fifo_full_1</name>
              <description>1: TX_FIFO_1 is full</description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>tx_i2s_idle_1</name>
              <description>1: Tx is working but FIFO_1 is empty.</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>rx_fifo_empty_intr_1</name>
              <description>1: RX_FIFO_1 is empty (MIC path)</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>tx_fifo_empty_intr_1</name>
              <description>1: TX_FIFO_1 is empty (SPK path)</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>rx_fifo_full_intr_1</name>
              <description>1: RX_FIFO_1 is full (MIC path)</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>tx_fifo_full_intr_1</name>
              <description>1: TX_FIFO_1 is full (SPK path)</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>sp_ready_to_rx_1</name>
              <description>1: It is ready to receive data (MIC path)</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>sp_ready_to_tx_1</name>
              <description>1: It is ready to send data out (SPK path)</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>tx_i2s_idle_0</name>
              <description>1: Tx is working but FIFO_0 is empty.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>rx_fifo_empty_intr_0</name>
              <description>1: RX_FIFO_0 is empty (MIC path)</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>tx_fifo_empty_intr_0</name>
              <description>1: TX_FIFO_0 is empty (SPK path)</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>rx_fifo_full_intr_0</name>
              <description>1: RX_FIFO_0 is full (MIC path)</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>tx_fifo_full_intr_0</name>
              <description>1: TX_FIFO_0 is full (SPK path)</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>sp_ready_to_rx_0</name>
              <description>1: It is ready to receive data (MIC path)</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>sp_ready_to_tx_0</name>
              <description>1: It is ready to send data out (SPK path)</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SP_FORMAT</name>
          <addressOffset>0x00000028</addressOffset>
          <size>32</size>
          <description>SPORT Format Register</description>
          <resetValue>0x44000007</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>trx_same_ch_len</name>
              <description>1: Tx (SPK path) and Rx (MIC path) have the same channel length.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_ch_len_sel_rx</name>
              <description>3'b000: 16 bits
3'b001: 20 bits
3'b010: 24 bits
3'b100: 32 bits</description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DUMMY3</name>
              <description>-</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_ch_len_sel_tx</name>
              <description>3'b000: 16 bits
3'b001: 20 bits
3'b010: 24 bits
3'b100: 32 bits</description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rx_ideal_len_en</name>
              <description>Function enable of rx_ideal_len.</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rx_ideal_len</name>
              <description>sd_in can be received 1 ~ 8 ( = rx_ideal_len + 1 ) BCLK cycle latter.</description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tx_ideal_len_en</name>
              <description>Function enable of tx_ideal_len. PCMA SDO will be delayed 1 LRCK.</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tx_ideal_len</name>
              <description>sd_out can be sent 1 ~ 8 ( = tx_ideal_len + 1 ) BCLK cycle earlier.</description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DUMMY4</name>
              <description>-</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_data_len_sel_rx_0</name>
              <description>Data length of MIC path and it is valid if "trx_same_length" == 1'b0.
3'b000: 16 bits
3'b001: 20 bits
3'b010: 24 bits
3'b100: 32 bits</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_en_i2s_mono_rx_0</name>
              <description>Channel format of MIC path and it is valid if "trx_same_ch" == 1'b0.
1: mono
0: stereo</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>trx_same_lrc</name>
              <description>1: "ws_out_rx" is as same as "ws_out_tx"</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_data_format_sel_rx</name>
              <description>Data format of MIC path and it is valid if "trx_same_fs" == 1'b0.
2'b00: I2S
2'b01: Left-justified
2'b10: PCM mode A
2'b11: PCM mode B</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fixed_bclk</name>
              <description>1: Refer to the description of "fixed_bclk_sel"
0: BCLK = dsp_clk/2 when "mode_40mhz = 0"</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fixed_bclk_sel</name>
              <description>0: BCLK is fixed at dsp_src_clk/4
1: BCLK is fixed at dsp_src_clk/2</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_wclk_rx_inverse</name>
              <description>1: invert the phase of "ws_out_rx" which is also called as "ADCLRC"</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DUMMY5</name>
              <description>-</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sck_out_inverse</name>
              <description>1: invert the phase of "sck_out"</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>trx_same_length</name>
              <description>1: Tx (SPK path) and Rx (MIC path) have the same data length.
      Both are either 16 or 24 bits</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>trx_same_ch</name>
              <description>1: Tx (SPK path) and Rx (MIC path) have the same channel setting.
      Both are either stereo or mono</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>trx_same_fs</name>
              <description>1: Tx (SPK path) and Rx (MIC path) have the same sampling rate</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SP_RX_BCLK</name>
          <addressOffset>0x0000002C</addressOffset>
          <size>32</size>
          <description>SPORT Rx BCLK Register</description>
          <resetValue>0x00300271</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>rx_mi_ni_update</name>
              <description>1'b1: to update "mi" and "ni" to get the new clock rate.
This bit will be reset automatically when the update is done</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rx_ni</name>
              <description>BCLK = 40MHz*(ni/mi)     
For example: BCLK=3.072MHz=40MHz*(48/625)</description>
              <bitRange>[30:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rx_mi</name>
              <description></description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SP_RX_LRCLK</name>
          <addressOffset>0x00000030</addressOffset>
          <size>32</size>
          <description>SPORT Rx LRCLK Register</description>
          <resetValue>0x00000040</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>clr_tx_sport_rdy</name>
              <description>0x001: clear tx_sport_interrupt signal This control bit is "write 1 clear" type 
For read, the read data is from clr_tx_sport_rdy</description>
              <bitRange>[31:31]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>en_tx_sport_interrupt</name>
              <description>Enable tx_sport_interrupt</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>en_fs_phase_latch</name>
              <description>0x001: Latch the value of tx_fs_phase_rpt, rx_fs_phase_rpt, tx_sport_sounter, rx_sport_sounter at the same time.
This control bit is "write 1 clear" type</description>
              <bitRange>[29:29]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>DUMMY6</name>
              <description></description>
              <bitRange>[28:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tx_sport_compare_val</name>
              <description>X = (tx_sport_compare_val). When counter equal X. SPORT will send tx_sport_interrupt to DSP. 
FW should take care X={32~134217727}</description>
              <bitRange>[26:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SP_DSP_COUNTER</name>
          <addressOffset>0x00000034</addressOffset>
          <size>32</size>
          <description>SPORT DSP Counter Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>tx_sport_counter</name>
              <description>For DSP read instant Tx SPORT counter value, counter down</description>
              <bitRange>[31:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>tx_fs_phase_rpt</name>
              <description>Report Tx phase</description>
              <bitRange>[4:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SP_DIRECT_CTRL0</name>
          <addressOffset>0x0000003C</addressOffset>
          <size>32</size>
          <description>SPORT Direct Control Register 0</description>
          <resetValue>0x76543210</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>tx_ch7_data_sel</name>
              <description>4'h0: tx_fifo_0_reg_0_l
4'h1: tx_fifo_0_reg_0_r
4'h2: tx_fifo_0_reg_1_l
4'h3: tx_fifo_0_reg_1_r 
4'h4: tx_fifo_1_reg_0_l
4'h5: tx_fifo_1_reg_0_r
4'h6: tx_fifo_1_reg_1_l
4'h7: tx_fifo_1_reg_1_r 
4'h8: direct_reg_7</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tx_ch6_data_sel</name>
              <description>4'h8: direct_reg_6</description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tx_ch5_data_sel</name>
              <description>4'h8: direct_reg_5</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tx_ch4_data_sel</name>
              <description>4'h8: direct_reg_4</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tx_ch3_data_sel</name>
              <description>4'h8: direct_reg_3</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tx_ch2_data_sel</name>
              <description>4'h8: direct_reg_2</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tx_ch1_data_sel</name>
              <description>4'h8: direct_reg_1</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tx_ch0_data_sel</name>
              <description>4'h8: direct_reg_0</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SP_FIFO_IRQ</name>
          <addressOffset>0x00000044</addressOffset>
          <size>32</size>
          <description>SPORT FIFO IRQ Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>rx_lsb_first_1</name>
              <description>1'b0: MSB first when Tx
1'b1: LSB first</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tx_lsb_first_1</name>
              <description>1'b0: MSB first when Tx
1'b1: LSB first</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rx_snk_lr_swap_1</name>
              <description>1'b1: swap L/R audio samples written to the sink memory of RX_FIFO_1</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rx_snk_byte_swap_1</name>
              <description>1'b1: swap H/L bytes written to the sink memory of RX_FIFO_1</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tx_src_lr_swap_1</name>
              <description>1'b1: swap L/R audio samples read from the source memory of TX_FIFO_1</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tx_src_byte_swap_1</name>
              <description>1'b1: swap H/L bytes read from the source memory of TX_FIFO_1</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DUMMY7</name>
              <description>-</description>
              <bitRange>[25:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>int_enable_mcu_1</name>
              <description>Bit8]: for the interrupt of "sp_ready_to_tx"
Bit9]: for the interrupt of "sp_ready_to_rx"
Bit10]: for the interrupt of "tx_fifo_full_intr"
Bit11]: for the interrupt of "rx_fifo_full_intr"
Bit12]: for the interrupt of "tx_fifo_empty_intr"
Bit13]: for the interrupt of "rx_fifo_empty_intr"
Bit14]: for the interrupt of "tx_i2s_idle"
Bit15]: reserved</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>int_enable_mcu_0</name>
              <description>Bit0]: for the interrupt of "sp_ready_to_tx"
Bit1]: for the interrupt of "sp_ready_to_rx"
Bit2]: for the interrupt of "tx_fifo_full_intr"
Bit3]: for the interrupt of "rx_fifo_full_intr"
Bit4]: for the interrupt of "tx_fifo_empty_intr"
Bit5]: for the interrupt of "rx_fifo_empty_intr"
Bit6]: for the interrupt of "tx_i2s_idle"
Bit7]: reserved</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SP_DIRECT_CTRL1</name>
          <addressOffset>0x00000048</addressOffset>
          <size>32</size>
          <description>SPORT Direct Control Register 1</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>sp_en_i2s_mono_rx_1</name>
              <description>Channel format of MIC path and it is valid if "trx_same_ch" == 1'b0.
1'b1: mono
1'b0: stereo</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_data_len_sel_rx_1</name>
              <description>Data length of MIC path and it is valid if "trx_same_length" == 1'b0.
3'b000: 16 bits
3'b001: 20 bits
3'b010: 24 bits
3'b100: 32 bits</description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_en_i2s_mono_tx_1</name>
              <description>1'b1: mono
1'b0: stereo</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_data_len_sel_tx_1</name>
              <description>3'b000: 16 bits
3'b001: 20 bits
3'b010: 24 bits
3'b100: 32 bits</description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>direct_reg_3_en</name>
              <description>1'b1: Enable direct_reg_3.</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>direct_reg_3_sel</name>
              <description>5'h0: spa_direct_in_0
5'h1: spa_direct_in_1
5'h2: spa_direct_in_2
5'h3: spa_direct_in_3
5'h4: spa_direct_in_4
5'h5: spa_direct_in_5
5'h6: spa_direct_in_6
5'h7: spa_direct_in_7
5'h8: spb_direct_in_0
5'h9: spb_direct_in_1
5'ha: spb_direct_in_2
5'hb: spb_direct_in_3
5'hc: spb_direct_in_4
5'hd: spb_direct_in_5
5'he: spb_direct_in_6
5'hf: spb_direct_in_7
5'h10: spc_direct_in_0
5'h11: spc_direct_in_1
5'h12: spc_direct_in_2
5'h13: spc_direct_in_3
5'h14: spc_direct_in_4
5'h15: spc_direct_in_5
5'h16: spc_direct_in_6
5'h17: spc_direct_in_7
5'h18: sp0_direct_in_tx_fifo_0_reg_0_l
5'h19: sp0_direct_in_tx_fifo_0_reg_0_r
5'h1a: sp0_direct_in_tx_fifo_0_reg_1_l
5'h1b: sp0_direct_in_tx_fifo_0_reg_1_r
5'h1c: TDM_RX_CH3
SPORT0: a = 1, b = 2, c = 3
SPORT1: a = 0, b = 2, c = 3
SPORT2: a = 0, b = 1, c = 3
SPORT3: a = 0, b = 1, c = 2</description>
              <bitRange>[22:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>direct_reg_2_en</name>
              <description>1'b1: Enable direct_reg_2.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>direct_reg_2_sel</name>
              <description>5'h1c: TDM_RX_CH2</description>
              <bitRange>[16:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>direct_reg_1_en</name>
              <description>1'b1: Enable direct_reg_1.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>direct_reg_1_sel</name>
              <description>5'h1c: TDM_RX_CH1</description>
              <bitRange>[10:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>direct_reg_0_en</name>
              <description>1'b1: Enable direct_reg_0.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>direct_reg_0_sel</name>
              <description>5'h1c: TDM_RX_CH0</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SP_DIRECT_CTRL2</name>
          <addressOffset>0x0000004C</addressOffset>
          <size>32</size>
          <description>SPORT Direct Control Register 2</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>sp_direct_out_7_en</name>
              <description>Enable sp_direct_out_7.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_direct_out_6_en</name>
              <description>Enable sp_direct_out_6.</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_direct_out_5_en</name>
              <description>Enable sp_direct_out_5.</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_direct_out_4_en</name>
              <description>Enable sp_direct_out_4.</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_direct_out_3_en</name>
              <description>Enable sp_direct_out_3.</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_direct_out_2_en</name>
              <description>Enable sp_direct_out_2.</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_direct_out_1_en</name>
              <description>Enable sp_direct_out_1.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_direct_out_0_en</name>
              <description>Enable sp_direct_out_0.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>direct_reg_7_en</name>
              <description>1'b1: Enable direct_reg_7.</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>direct_reg_7_sel</name>
              <description>5'h0: spa_direct_in_0
5'h1: spa_direct_in_1
5'h2: spa_direct_in_2
5'h3: spa_direct_in_3
5'h4: spa_direct_in_4
5'h5: spa_direct_in_5
5'h6: spa_direct_in_6
5'h7: spa_direct_in_7
5'h8: spb_direct_in_0
5'h9: spb_direct_in_1
5'ha: spb_direct_in_2
5'hb: spb_direct_in_3
5'hc: spb_direct_in_4
5'hd: spb_direct_in_5
5'he: spb_direct_in_6
5'hf: spb_direct_in_7
5'h10: spc_direct_in_0
5'h11: spc_direct_in_1
5'h12: spc_direct_in_2
5'h13: spc_direct_in_3
5'h14: spc_direct_in_4
5'h15: spc_direct_in_5
5'h16: spc_direct_in_6
5'h17: spc_direct_in_7
5'h18: sp0_direct_in_tx_fifo_0_reg_0_l
5'h19: sp0_direct_in_tx_fifo_0_reg_0_r
5'h1a: sp0_direct_in_tx_fifo_0_reg_1_l
5'h1b: sp0_direct_in_tx_fifo_0_reg_1_r
5'h1c: TDM_RX_CH7
SPORT0: a = 1, b = 2, c = 3
SPORT1: a = 0, b = 2, c = 3
SPORT2: a = 0, b = 1, c = 3
SPORT3: a = 0, b = 1, c = 2</description>
              <bitRange>[22:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>direct_reg_6_en</name>
              <description>1'b1: Enable direct_reg_6.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>direct_reg_6_sel</name>
              <description>5'h1c: TDM_RX_CH6</description>
              <bitRange>[16:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>direct_reg_5_en</name>
              <description>1'b1: Enable direct_reg_5.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>direct_reg_5_sel</name>
              <description>5'h1c: TDM_RX_CH5</description>
              <bitRange>[10:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>direct_reg_4_en</name>
              <description>1'b1: Enable direct_reg_4.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>direct_reg_4_sel</name>
              <description>5'h1c: TDM_RX_CH4</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SP_DIRECT_CTRL3</name>
          <addressOffset>0x00000054</addressOffset>
          <size>32</size>
          <description>SPORT Direct Control Register 3</description>
          <resetValue>0x03020100</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DUMMY8</name>
              <description>-</description>
              <bitRange>[31:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rx_fifo_0_reg_1_r_sel</name>
              <description>5'd0: RX_CH0_data_out (MIC path)
5'd1: RX_CH1_data_out (MIC path)
5'd2: RX_CH2_data_out (MIC path)
5'd3: RX_CH3_data_out (MIC path)
5'd4: RX_CH4_data_out (MIC path)
5'd5: RX_CH5_data_out (MIC path)
5'd6: RX_CH6_data_out (MIC path)
5'd7: RX_CH7_data_out (MIC path)
5'd8:  spa_direct_in_0 
5'd9:  spa_direct_in_1
5'd10: spa_direct_in_2
5'd11: spa_direct_in_3
5'd12: spa_direct_in_4
5'd13: spa_direct_in_5
5'd14: spa_direct_in_6
5'd15: spa_direct_in_7
5'd16: spb_direct_in_0
5'd17: spb_direct_in_1
5'd18: spb_direct_in_2
5'd19: spb_direct_in_3
5'd20: spb_direct_in_4
5'd21: spb_direct_in_5
5'd22: spb_direct_in_6
5'd23: spb_direct_in_7
5'd24: spc_direct_in_0
5'd25: spc_direct_in_1
5'd26: spc_direct_in_2
5'd27: spc_direct_in_3
5'd28: spc_direct_in_4
5'd29: spc_direct_in_5
5'd30: spc_direct_in_6
5'd31: spc_direct_in_7
SPORT0: a = 1, b = 2, c = 3
SPORT1: a = 0, b = 2, c = 3
SPORT2: a = 0, b = 1, c = 3
SPORT3: a = 0, b = 1, c = 2</description>
              <bitRange>[28:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DUMMY9</name>
              <description></description>
              <bitRange>[23:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rx_fifo_0_reg_1_l_sel</name>
              <description></description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DUMMY10</name>
              <description></description>
              <bitRange>[15:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rx_fifo_0_reg_0_r_sel</name>
              <description></description>
              <bitRange>[12:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DUMMY11</name>
              <description></description>
              <bitRange>[7:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rx_fifo_0_reg_0_l_sel</name>
              <description></description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SP_DIRECT_CTRL4</name>
          <addressOffset>0x00000058</addressOffset>
          <size>32</size>
          <description>SPORT Direct Control Register 4</description>
          <resetValue>0x07060504</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DUMMY12</name>
              <description></description>
              <bitRange>[31:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rx_fifo_1_reg_1_r_sel</name>
              <description>5'd0: RX_CH0_data_out (MIC path)
5'd1: RX_CH1_data_out (MIC path)
5'd2: RX_CH2_data_out (MIC path)
5'd3: RX_CH3_data_out (MIC path)
5'd4: RX_CH4_data_out (MIC path)
5'd5: RX_CH5_data_out (MIC path)
5'd6: RX_CH6_data_out (MIC path)
5'd7: RX_CH7_data_out (MIC path)
5'd8:  spa_direct_in_0
5'd9:  spa_direct_in_1
5'd10: spa_direct_in_2
5'd11: spa_direct_in_3
5'd12: spa_direct_in_4
5'd13: spa_direct_in_5
5'd14: spa_direct_in_6
5'd15: spa_direct_in_7
5'd16: spb_direct_in_0
5'd17: spb_direct_in_1
5'd18: spb_direct_in_2
5'd19: spb_direct_in_3
5'd20: spb_direct_in_4
5'd21: spb_direct_in_5
5'd22: spb_direct_in_6
5'd23: spb_direct_in_7
5'd24: spc_direct_in_0
5'd25: spc_direct_in_1
5'd26: spc_direct_in_2
5'd27: spc_direct_in_3
5'd28: spc_direct_in_4
5'd29: spc_direct_in_5
5'd30: spc_direct_in_6
5'd31: spc_direct_in_7
SPORT0: a = 1, b = 2, c = 3
SPORT1: a = 0, b = 2, c = 3
SPORT2: a = 0, b = 1, c = 3
SPORT3: a = 0, b = 1, c = 2</description>
              <bitRange>[28:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DUMMY13</name>
              <description></description>
              <bitRange>[23:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rx_fifo_1_reg_1_l_sel</name>
              <description></description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DUMMY14</name>
              <description></description>
              <bitRange>[15:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rx_fifo_1_reg_0_r_sel</name>
              <description></description>
              <bitRange>[12:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DUMMY15</name>
              <description></description>
              <bitRange>[7:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rx_fifo_1_reg_0_l_sel</name>
              <description></description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SP_RX_COUNTER1</name>
          <addressOffset>0x0000005C</addressOffset>
          <size>32</size>
          <description>SPORT Rx Counter Register 1</description>
          <resetValue>0x00000040</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>clr_rx_sport_rdy</name>
              <description>X = (tx_sport_compare_val). When counter equal X. SPORT will send tx_sport_interrupt to DSP. 
FW should take care X={32~8191}</description>
              <bitRange>[31:31]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>en_rx_sport_interrupt</name>
              <description>Enable rx sport interrupt.</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DUMMY16</name>
              <description></description>
              <bitRange>[29:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rx_sport_compare_val</name>
              <description>X = (rx_sport_compare_val). When counter equal X. SPORT will send rx_sport_interrupt to DSP. 
FW should take care X={32~134217727}</description>
              <bitRange>[26:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SP_RX_COUNTER2</name>
          <addressOffset>0x00000060</addressOffset>
          <size>32</size>
          <description>SPORT Rx Counter Register 2</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>rx_sport_counter</name>
              <description>For DSP read instant Rx SPORT counter value, counter down</description>
              <bitRange>[31:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>rx_fs_phase_rpt</name>
              <description>Report Rx phase</description>
              <bitRange>[4:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SP_MCLK</name>
          <addressOffset>0x00000064</addressOffset>
          <size>32</size>
          <description>SPORT MCLK Register</description>
          <resetValue>0x00C00271</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>mclk_mi_ni_update</name>
              <description>1'b1: to update "mi" and "ni" to get the new clock rate.
This bit will be reset automatically when the update is done</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>mclk_ni</name>
              <description>mclk_out = 40MHz*(ni/mi)     
For example: mclk_out=3.072MHz=40MHz*(48/625)</description>
              <bitRange>[30:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>mclk_mi</name>
              <description></description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TX_FIFO_0_WR_ADDR</name>
          <addressOffset>0x00000800</addressOffset>
          <size>32</size>
          <description>TX FIFO 0 Write Address Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TX_FIFO_0_WR_ADDR</name>
              <description>TX_FIFO_0 write address</description>
              <bitRange>[31:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RX_FIFO_0_RD_ADDR</name>
          <addressOffset>0x00000880</addressOffset>
          <size>32</size>
          <description>RX FIFO 0 Read Address Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RX_FIFO_0_RD_ADDR</name>
              <description>RX_FIFO_0 read address</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TX_FIFO_1_WR_ADDR</name>
          <addressOffset>0x00000900</addressOffset>
          <size>32</size>
          <description>TX FIFO 1 Write Address Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TX_FIFO_1_WR_ADDR</name>
              <description>TX_FIFO_1 write address</description>
              <bitRange>[31:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RX_FIFO_1_RD_ADDR</name>
          <addressOffset>0x00000980</addressOffset>
          <size>32</size>
          <description>RX FIFO 1 Read Address Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RX_FIFO_1_RD_ADDR</name>
              <description>RX_FIFO_1 read address</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>ipsec</name>
      <baseAddress>0x40100000</baseAddress>
      <size>0x0000101C</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x0000101C</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>REG_SDSR</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description>Source Descriptor Status Register</description>
          <resetValue>0x40000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>src_rst</name>
              <description>Source descriptor reset. (only for pk_up = 1'b1)</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pk_up</name>
              <description>Packet base update wptr to engine.
If pk_up =1, the total number of source descriptor in one packet can't be over 16, and the total number of destination descriptor in one packet can't be over 8.</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>src_fail_status</name>
              <description>Source descriptor failed status.
2'd1: Users write the first word twice consecutively
2'd2: Users write the second word directly without writing first word in the beginning
2'd3: Overflow (Detect users try to write source descriptor, but there isn't available FIFO node to use).</description>
              <bitRange>[26:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>src_fail</name>
              <description>Source descriptor failed interrupt.
Write 1 to clear this bit.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SRPTR</name>
              <description>Source descriptor FIFO read pointer.
When engine reads a descriptor and finishes it, SRPTR = SRPTR+2.</description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SWPTR</name>
              <description>Source descriptor FIFO write pointer.
When write descriptor to SDSW successfully, SWPTR = SWPTR+2.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>src_des_fifo_empty_cnt</name>
              <description>Source descriptor FIFO empty counter.
Use this field to check how many available FIFO nodes in source descriptor FIFO could use.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SDFWR</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description>Source Descriptor First Word Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SDFW</name>
              <description>Source Descriptor First Word</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SDSWR</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description>Source Descriptor Second Word Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SDSW</name>
              <description>Source Descriptor Second Word</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_IPSCSR_RSTEACONFISR</name>
          <addressOffset>0x00000010</addressOffset>
          <size>32</size>
          <description>Reset Engine and Configure Interrupt Service Routine Register</description>
          <resetValue>0x04010000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ipsec_rst</name>
              <description>IPsec engine reset.
Write '1' to reset the crypto engine and DMA engine (used to clear fatal error).</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ahb_err_int_mask</name>
              <description></description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>clr_ahb_err_int</name>
              <description></description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ahb_err_int</name>
              <description></description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>clear_ok_int_num</name>
              <description>Clear ok interrupt number.
In interrupt counter mode, if the programmer wants to clear ok_intr_cnt, need to write ok_intr_cnt to this field first, then write '1' to cmd_ok.</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ok_intr_cnt</name>
              <description>Ok interrupt counter.
Reading this field can know how many interrupts are coming to notify that crypto engine has calculated cryptographic feature results. Use this field in interrupt counter mode.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>intr_mode</name>
              <description>Select ok interrupt mode:
1'd0: Interrupt mode is general mode.
1'd1: Interrupt mode is counter mode.
· General mode means no matter how many interrupts are coming to notify that crypto engine has calculated cryptographic feature results. There is always one interrupt signal shows in cmd_ok field, and nothing in ok_intr_cnt. So if the programmer want to clear this signal, just write '1' to cmd_ok.
· Counter mode means the programmer can know how many interrupts are coming to notify that crypto engine has calculated cryptographic feature results from ok_intr_cnt. The programmer also can know there are at least one interrupt from reading cmd_ok. So if the programmer want to clear ok_intr_cnt signals, need to write ok_intr_cnt into clear_ok_int_num, then write '1' to cmd_ok.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cmd_ok</name>
              <description>Command ok Interrupt.
Reading this field to detect whether crypto engine has calculated a cryptographic feature result. 
Even if interrupt mode is counter mode, still can use this field to detect whether an interrupt is coming.
Write '1' to clear this interrupt signal.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dma_busy</name>
              <description>Detect whether IPsec DMA is busy:
1'd0: DMA is not busy
1'd1: DMA is busy
Used for debug to avoid data coherence issue (when user gets crypto finish calculated interrupt, user can make sure DMA engine has already move data to result buffer.)</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>soft_rst</name>
              <description>Software reset.
Write '1' to reset the crypto engine.</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_IPSCSR_INTM</name>
          <addressOffset>0x00000014</addressOffset>
          <size>32</size>
          <description>Interrupt Mask Register</description>
          <resetValue>0x0007FFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>des_err5_m</name>
              <description>Destination Descriptor Error 5 Interrupt Mask
1'd0: Disable mask
1'd1: Enable mask</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>des_err4_m</name>
              <description>Destination Descriptor Error 4 Interrupt Mask
1'd0: Disable mask
1'd1: Enable mask</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>des_err3_m</name>
              <description>Destination Descriptor Error 3 Interrupt Mask
1'd0: Disable mask
1'd1: Enable mask</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>des_err2_m</name>
              <description>Destination Descriptor Error 2 Interrupt Mask
1'd0: Disable mask
1'd1: Enable mask</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>des_err1_m</name>
              <description>Destination Descriptor Error 1 Interrupt Mask
1'd0: Disable mask
1'd1: Enable mask</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>des_err0_m</name>
              <description>Destination Descriptor Error 0 Interrupt Mask
1'd0: Disable mask
1'd1: Enable mask</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>src_err9_m</name>
              <description>Source Descriptor Error 9 Interrupt Mask
1'd0: Disable mask
1'd1: Enable mask</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>src_err8_m</name>
              <description>Source Descriptor Error 8 Interrupt Mask
1'd0: Disable mask
1'd1: Enable mask</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>src_err7_m</name>
              <description>Source Descriptor Error 7 Interrupt Mask
1'd0: Disable mask
1'd1: Enable mask</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>src_err6_m</name>
              <description>Source Descriptor Error 6 Interrupt Mask
1'd0: Disable mask
1'd1: Enable mask</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>src_err5_m</name>
              <description>Source Descriptor Error 5 Interrupt Mask
1'd0: Disable mask
1'd1: Enable mask</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>src_err4_m</name>
              <description>Source Descriptor Error 4 Interrupt Mask
1'd0: Disable mask
1'd1: Enable mask</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>src_err3_m</name>
              <description>Source Descriptor Error 3 Interrupt Mask
1'd0: Disable mask
1'd1: Enable mask</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>src_err2_m</name>
              <description>Source Descriptor Error 2 Interrupt Mask
1'd0: Disable mask
1'd1: Enable mask</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>src_err1_m</name>
              <description>Source Descriptor Error 1 Interrupt Mask
1'd0: Disable mask
1'd1: Enable mask</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>src_err0_m</name>
              <description>Source Descriptor Error 0 Interrupt Mask
1'd0: Disable mask
1'd1: Enable mask</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>des_fail_m</name>
              <description>Source Descriptor fail interrupt mask.
1'd0: Disable mask
1'd1: Enable mask</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>src_fail_m</name>
              <description>Destination Descriptor fail interrupt mask.
1'd0: Disable mask
1'd1: Enable mask</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cmd_ok_m</name>
              <description>Command ok Interrupt Mask.
1'd0: Disable mask
1'd1: Enable mask
If the programmer wants to disable cmd_ok interrupt signal, write '1' to enable interrupt mask.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_IPSCSR_DBG</name>
          <addressOffset>0x00000018</addressOffset>
          <size>32</size>
          <description>Debug Register</description>
          <resetValue>0x00010000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>debug_wb</name>
              <description>Debug: write back mode.
1'd0: Disable DMA write back mode.
1'd1: Enable DMA write back mode.
Enable this field, crypto DMA will move data from source address to destination address. During this period, the data won't be processed in any calculation (encryption, decryption, hash), then the programmer can check whether the source data is the same as destination data.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>mst_bad_sel</name>
              <description>(For debug port) select Lexra master data bus (option)
2'd0: mst_ipsec_bad[07:00]
2'd1: mst_ipsec_bad[15:08]
2'd2: mst_ipsec_bad[23:16]
2'd3: mst_ipsec_bad[31:24]</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>engine_clk_en</name>
              <description>IPsec engine clock enable
1'd0: Disable IPsec engine clock
1'd1: Enable IPsec engine clock</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>debug_port_sel</name>
              <description>Debug port selection
4'd0: engine_debug
4'd1: dma_lexra_debug
4'd2: dma_rx_debug
4'd3: dma_tx_debug</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>arbiter_mode</name>
              <description>DMA arbiter mode:
1'd0: round-robin
1'd1: detect fifo wasted level
There are 2 FIFOs in DMA, that are read-FIFO and write-FIFO. Detecting FIFO wasted level means that DMA will process which FIFO first depends on which wasted level is high. Because the wasted level is high means there are many FIFO nodes waiting to be processed in this FIFO, so DMA must process them in hurry.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dma_wait_cycle</name>
              <description>Setting DMA wait cycles to assert next DMA request</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_IPSCSR_ERR_INT</name>
          <addressOffset>0x0000001C</addressOffset>
          <size>32</size>
          <description>Error Interrupt Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>lx_fail_3</name>
              <description>When a burst done, burst length != burst cnt.
Write "1" to clear this error signal.</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>lx_fail_2</name>
              <description>When IPsec is working, rdata from bus != rdata of ipsec or wdata of ipsec != wdata on bus
Write "1" to clear this error signal.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>lx_fail_1</name>
              <description>LX bus timing issue
Write "1" to clear this error signal.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>des_err5</name>
              <description>Destination Descriptor Error 5 Interrupt.
The error condition is authentication digest length error in destination descriptor.
MD5: adl != 16 or
SHA1: adl != 20 or
SHA2-224: adl != 28 or adl != 32 when set sequential hash and not sequential hash last
SHA2-256: adl != 32 or
SHA2-384: adl != 48 or adl != 64 when set sequential hash and not sequential hash last
SHA2-512: adl != 64
Write '1' to clear this error signal.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>des_err4</name>
              <description>Destination Descriptor Error 4 Interrupt.
The error condition is authentication digest length error in destination descriptor.
MD5: adl &gt; 16 or
SHA1: adl &gt; 20 or
SHA2-224: adl &gt; 28 or adl &gt; 32when set sequential hash and not sequential hash last
SHA2-256: adl &gt; 32 or
SHA2-384: adl &gt; 48 or adl &gt; 64when set sequential hash and not sequential hash last
SHA2-512: adl &gt; 64
Write '1' to clear this error signal.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>des_err3</name>
              <description>Destination Descriptor Error 3 Interrupt.
One of the error condition is that the sum of enl is greater than Encryption Total Length. The other error condition is about destination descriptor length error ((enl(Encryption length)==0) &amp; (adl(authentication data length)==0)).
Write '1' to clear this error signal.
Sum of enl reference the register REG_IPSCSR_SENLR (offset 0x24).</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>des_err2</name>
              <description>Destination Descriptor Error 2 Interrupt.
The error condition is the bit field ENC=1'b0 (active Hash engine to process hash data), but only active cipher engine.
Write '1' to clear this error signal.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>des_err1</name>
              <description>Destination Descriptor Error 1 Interrupt.
The error condition is the bit field ENC=1'b1 (active cipher engine to process cipher data), but only active hash engine.
Write '1' to clear this error signal.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>des_err0</name>
              <description>Destination Descriptor Error 0 Interrupt.
One of the error condition is destination descriptor starting address error (DDSA[1:0]!=2'd0 [At least 4 bytes-aligned]). The other error condition is memory protection event.
Write '1' to clear this error signal.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>src_err9</name>
              <description>Source Descriptor Error 9 Interrupt.
The error condition is that sum of epl is not equal to EPTL (Encryption Padding Total Length). 
Write '1' to clear this error signal.
Sum of epl reference the register REG_IPSCSR_SEPLR (offset 0x2C).</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>src_err8</name>
              <description>Source Descriptor Error 8 Interrupt.
The error condition is that sum of apl is not equal to HPTL (Hash Padding Total Length). 
Write '1' to clear this error signal.
Sum of apl reference the register REG_IPSCSR_SAPLR (offset 0x28).</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>src_err7</name>
              <description>Source Descriptor Error 7 Interrupt.
The error condition is that sum of enl is not equal to ETL (Encryption Total Length). 
Write '1' to clear this error signal.
Sum of enl reference the register REG_IPSCSR_SENLR (offset 0x24).</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>src_err6</name>
              <description>Source Descriptor Error 6 Interrupt.
The error condition is that sum of a2eo is not equal to HTL (Header Total Length). 
Write '1' to clear this error signal.
Sum of a2eo reference the register REG_IPSCSR_SAADLR (offset 0x20).</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>src_err5</name>
              <description>Source Descriptor Error 5 Interrupt.
The error condition is that there is a source descriptor, but the data length ((a2eo/epl) +(enl) + (apl)) is 0.
Write '1' to clear this error signal.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>src_err4</name>
              <description>Source Descriptor Error 4 Interrupt.
The error condition is source data buffer pointer error (SDBP[1:0]!=2'd0 [At least 4 byte aligned]).
Write '1' to clear this error signal.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>src_err3</name>
              <description>Source Descriptor Error 3 Interrupt.
About source descriptor length error. One of the error condition is setting the first descriptor but (CL!=3). The other error condition is that there is a source descriptor but CL, KL, IL, PL, SHIVL are all 0.
Write '1' to clear this error signal.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>src_err2</name>
              <description>Source Descriptor Error 2 Interrupt.
One of the error condition is source descriptor starting address error (SDSA[1:0]!=2'd0 [At least 4 bytes-aligned]). The other error condition is memory protection event.
Write '1' to clear this error signal.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>src_err1</name>
              <description>Source Descriptor Error 1 Interrupt.
The error condition is last segment descriptor is set (LS=1), when descriptor is pointing to the first segment of the packet.
Write '1' to clear this error signal.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>src_err0</name>
              <description>Source Descriptor Error 0 Interrupt.
One of the error condition is that first segment descriptor is not set (FS=0), when descriptor is pointing to the first segment of the packet. The other error condition is that first segment descriptor is set (FS=1), when descriptor is not pointing to the first segment of the packet. 
Write '1' to clear this error signal.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_IPSCSR_SADDLR</name>
          <addressOffset>0x00000020</addressOffset>
          <size>32</size>
          <description>Sum of Additional Authentication Data Length Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>a2eo_sum</name>
              <description>Sum of additional authentication data length.</description>
              <bitRange>[10:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_IPSCSR_SENLR</name>
          <addressOffset>0x00000024</addressOffset>
          <size>32</size>
          <description>Sum of Encryption Data Length Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>enl_sum</name>
              <description>Sum of encryption data length.</description>
              <bitRange>[23:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_IPSCSR_SAPLR</name>
          <addressOffset>0x00000028</addressOffset>
          <size>32</size>
          <description>Sum of Authentication Padding Data Length Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>apl_sum</name>
              <description>Sum of authentication padding data length.[Mix mode uses this field]</description>
              <bitRange>[11:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_IPSCSR_SEPLR</name>
          <addressOffset>0x0000002C</addressOffset>
          <size>32</size>
          <description>Sum of Encryption Padding Data Length Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>epl_sum</name>
              <description>Sum of encryption padding data length. [Mix mode uses this field]</description>
              <bitRange>[5:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_IPSCSR_SWAPABURSTR</name>
          <addressOffset>0x00000030</addressOffset>
          <size>32</size>
          <description>Swap and Burst Register</description>
          <resetValue>0x00100000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>cha_input_data_byte_swap</name>
              <description>Byte swap for CHA input data
1: Enable
0: Disable</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cha_output_data_byte_swap</name>
              <description>Byte swap for CHA output data
1: Enable
0: Disable</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>md5_input_data_byte_swap</name>
              <description>Byte swap for MD5 input data
1: Enable
0: Disable</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>md5_output_data_byte_swap</name>
              <description>Byte swap for MD5 output data
1: Enable
0: Disable</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dma_burst_length</name>
              <description>Set DMA burst length.
The maximum setting length is 16 bursts.
The minimum setting length is 1 burst.
Note: If all bits are zero (6'd0), it means that the maximum burst size or undefined burst size.</description>
              <bitRange>[21:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tx_wd_swap</name>
              <description>Word swap for dma_tx engine input data:
1'd0: Disable
1'd1: Enable</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rx_wd_swap</name>
              <description>Word swap for dma_rx engine output data:
1'd0: Disable
1'd1: Enable</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>mac_out_little_endian</name>
              <description>Output mac is little endian:
1'd0: Big endian
1'd1: Little endian</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>data_out_little_endian</name>
              <description>Output data is little endian:
1'd0: Big endian
1'd1: Little endian</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tx_byte_swap</name>
              <description>Byte swap for dma_tx engine input data:
1'd0: Disable
1'd1: Enable</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>auto_padding_swap</name>
              <description>Byte swap for padding_len input data
1: Enable
0: Disable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>data_in_little_endian</name>
              <description>Input data is little endian:
1'd0: Big endian
1'd1: Little endian</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>hash_initial_value_swap</name>
              <description>Byte swap for sequential hash initial value:
1'd0: Disable
1'd1: Enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>key_pad_swap</name>
              <description>Byte swap for HMAC key pad:
1'd0: Disable
1'd1: Enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>key_iv_swap</name>
              <description>Byte swap for Cipher key and Initial Vector:
1'd0: Disable
1'd1: Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>set_swap</name>
              <description>Byte swap for command setting data:
1'd0: Disable
1'd1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_IPSEKCR</name>
          <addressOffset>0x00000034</addressOffset>
          <size>32</size>
          <description>Key Control Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>efuse_key_req</name>
              <description>Request of loading key from OTP, cleared by key_rdy</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>efuse_key_id</name>
              <description>2'b00: load key from OTP key1
2'b01: load key from OTP key2
2'b10: load key from OTP RSIP key_ecb
2'b11: load key from OTP RSIP key_ctr</description>
              <bitRange>[30:29]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ENG_DBG</name>
          <addressOffset>0x00000040</addressOffset>
          <size>32</size>
          <description>Crypto Engine Debug Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_dbg</name>
              <description>Crypto engine debug info</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DMA_LX_DBG</name>
          <addressOffset>0x00000044</addressOffset>
          <size>32</size>
          <description>Crypto Engine DMA LX Bus Debug Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dma_lx_dbg</name>
              <description>Crypto engine LX bus debug info</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DMA_RX_DBG</name>
          <addressOffset>0x00000048</addressOffset>
          <size>32</size>
          <description>Crypto Engine DMA Rx Debug Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dma_rx_dbg</name>
              <description>Crypto engine DMA Rx debug info</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DMA_TX_DBG</name>
          <addressOffset>0x0000004C</addressOffset>
          <size>32</size>
          <description>Crypto Engine DMA Tx Debug Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dma_tx_dbg</name>
              <description>Crypto engine DMA Tx debug info</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DDSR</name>
          <addressOffset>0x00001000</addressOffset>
          <size>32</size>
          <description>Destination Descriptor Status Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>des_rst</name>
              <description>Destination descriptor reset. (only for pk_up = 1'b1)</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>des_fail_status</name>
              <description>Destination Descriptor failed status:
2'd1: Users write the first word twice consecutively
2'd2: Users write the second word directly without writing first word in the beginning
2'd3: Overflow (detect users try to write source descriptor, but there isn't available FIFO node to use).</description>
              <bitRange>[26:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>des_fail</name>
              <description>Destination descriptor failed interrupt.
Write 1 to clear this bit.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DRPTR</name>
              <description>Destination descriptor FIFO read pointer.
When engine reads a descriptor and finished it, DRPTR = DRPTR+2.</description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DWPTR</name>
              <description>Destination descriptor FIFO write pointer.
When writting descriptor to DDSW successfully, DWPTR = DWPTR+2.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>des_des_fifo_empty_cnt</name>
              <description>Destination descriptor FIFO empty counter.
Use this field to check how many available FIFO nodes in Destination descriptor FIFO could use.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DDFWR</name>
          <addressOffset>0x00001004</addressOffset>
          <size>32</size>
          <description>Destination Descriptor First Word Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DDFW</name>
              <description>Destination Descriptor First Word</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DDSWR</name>
          <addressOffset>0x00001008</addressOffset>
          <size>32</size>
          <description>Destination Descriptor Second Word Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DDSW</name>
              <description>Destination Descriptor Second Word</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DES_PKTCONF</name>
          <addressOffset>0x0000100C</addressOffset>
          <size>32</size>
          <description>Packet Configure Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>cfg_pk_arbiter_mode</name>
              <description>Arbiter rule between secure and no-secure access
0: round-robin
1/2/3: decided by the load_count of source descpritor FIFO of secure and no-secure, the more full is the winner.</description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cfg_bus3_priority_th</name>
              <description>The priority of bus3 (reserved now)</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cfg_bus2_priority_th</name>
              <description>The priority of bus2-- security access.
If 0x100C[31:30]=1, the load_count of source descriptor FIFO is wr_ptr - rd_ptr + 0x100C[27:26]. Otherwise, the load_count of source descriptor FIFO is wr_ptr - rd_ptr.</description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cfg_bus1_priority_th</name>
              <description>The priority of bus2-- non-secure access.
If 0x100C[31:30]=1, the load_count of source descriptor FIFO is wr_ptr - rd_ptr + 0x100C[25:24]. Otherwise, the load_count of source descriptor FIFO is wr_ptr - rd_ptr.</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DBG_DPTR</name>
              <description>Destination descriptor FIFO read pointer:
Users read this pointer value can know what the ID number of FIFO node that is now pointed by read pointer is.
If users want to know what the 32 bits value of a specified FIFO node, users can write an ID number to this read pointer, then get the 32 bits value from Debug Destination Descriptor Data Register.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DBG_SPTR</name>
              <description>Source descriptor FIFO read pointer:
Users read this pointer value can know what the ID number of FIFO node that is now pointed by read pointer is.
If users want to know what the 32 bits value of a specified FIFO node, users can write an ID number to this read pointer, then get the 32 bits value from Debug Source Descriptor Data Register.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DBGSDR</name>
          <addressOffset>0x00001010</addressOffset>
          <size>32</size>
          <description>Debug Source Descriptor Data Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DBG_SD</name>
              <description>Debug Source Descriptor Data:
This register is used with DBG_SPTR.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DBGDDR</name>
          <addressOffset>0x00001014</addressOffset>
          <size>32</size>
          <description>Debug Destination Descriptor Data Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DBG_DD</name>
              <description>Debug Destination Descriptor Data:
This register is used with DBG_DPTR.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DUMMY</name>
          <addressOffset>0x00001018</addressOffset>
          <size>32</size>
          <description>Dummy Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>HW used only (reserved)</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>PKE</name>
      <baseAddress>0x00000000</baseAddress>
      <size>0x00000020</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00000020</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>PKE_CTRL</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description>Public Key Engine Control Register</description>
          <resetValue>0x00000210</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SIMPLIFY_HASH_RDY</name>
              <description>1: SIMPLIFY_ECDSA/EdDSA hash value ready</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>START_PKE</name>
              <description>W1: write 1 to start PKE (cleared automatically by PKE)</description>
              <bitRange>[30:30]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>OTHER_FUNC_EN</name>
              <description>Other functions (not RSA/ECC) enable bit
1: enabled
0: disabled (RSA: mudolar exponentiation/ECC: scalar multiplication)</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WORD_SWAP_EN</name>
              <description>Endian word swap enable (only support in MMEM)</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BYTE_SWAP_EN</name>
              <description>Endian byte swap enable (only support in MMEM)</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RMOD_RDY</name>
              <description>R^2 mod N ready
1: not need to calculate the R^2 mod N, already stored by user
For RSA, R^2 mod N ready and DPA defense can't be enabled at the same time.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSA_ECC_LEN</name>
              <description>Precise RSA/ECC length in bits
Caution: When performing ECC point operation under binary field, there are situation which width of module larger than ECC length. For example, width of f(x) of sect163r2 is 164, larger then ECC length 163. In this situation, just fill in precise ECC length 163.</description>
              <bitRange>[23:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FUNC_SEL</name>
              <description>2'b00: ECC Prime field
2'b01: ECC Binary field
2'b10: RSA
2'b11: Edwards or Montgomery Curves</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CURVE_SEL</name>
              <description>1'b0: Edwards Curves
1'b1: Montgomery Curves</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INTERNAL_LFSR</name>
              <description>1: Use internal LFSR
0: Do not use internal LFSR
If not use internal LFSR, user needs to initial a 32-bit random number (can't be 0) to MMEM address 0x0001_0180 before starting the PKE for ECC/RSA PDA defense. And if configured to ECC/Edwards, please also clear the upper address 0x0001_0184 ~ 0x0001_01BF (for 3072 config) or 0x0001_0184 ~ 0x0001_01CF (for 4096 config) to 0.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TIA_DEFENSE_EN</name>
              <description>1: Timing attack defense enable
0: Timing attack defense disable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DPA_DEFENSE_EN</name>
              <description>1: DPA defense enable
0: DPA defense disable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IMEM_READ_EN</name>
              <description>1: Enable IMEM read (or else, the IMEM can only be read when bit[30]=1)
0: IMEM can't be read</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LEGACY_FUNC</name>
              <description>Go to end loop after the current function call (legacy function)</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PKE_CPU_CTRL</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description>Public Key Engine CPU Control Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DMA_TX_LAST</name>
              <description>DMA Tx last</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DMA_TX_REQ</name>
              <description>DMA Tx request</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DMA_TX_SINGLE</name>
              <description>DMA Tx single</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DMA_RX_LAST</name>
              <description>DMA Rx last</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DMA_RX_REQ</name>
              <description>DMA Rx request</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DMA_RX_SINGLE</name>
              <description>DMA Rx single</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>COR_SWAP</name>
              <description>Coordinate swap or not</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>COR_SWAP_EN</name>
              <description>Coordinate swap enable</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PKE_STATUS</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description>Public Key Engine Status Register</description>
          <resetValue>0x00000100</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SIMPLIFY_NO_HASH</name>
              <description>SIMPLIFY_ECDSA/EdDSA need hash value</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PKE_IDLE</name>
              <description>PKE idle</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NO_VALID_EXP</name>
              <description>No valid exponent</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>N_IN_MSG</name>
              <description>N &lt; input message for RSA</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MOD_INV_FAILED</name>
              <description>Module inverse failed</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ECC_Z</name>
              <description>ECC Z = 0</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ECC_Y</name>
              <description>ECC odd point (Y = 0) (Montgomery curve will not check the Y value)</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RMOD_FAILED</name>
              <description>R^2 mod N failed</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PRIME_CHECK_ERR</name>
              <description>Prime check error (for modular number)</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OP_FINISH</name>
              <description>ECC/RSA operation finish</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PKE_INTR_MASK</name>
          <addressOffset>0x0000000C</addressOffset>
          <size>32</size>
          <description>Public Key Engine Interrupt Mask Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SIMPLIFY_EDDSA_TEMP_MASK</name>
              <description>Wait for SIMPLIFY_EdDSA temp_2 hash value
0: interrupt masked
1: interrupt not masked</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SIMPLIFY_ECC_MASK</name>
              <description>Wait for SIMPLIFY_ECDSA hash value or wait for SIMPLIFY_EdDSA hash value (temp &amp; private_hash)
0: interrupt masked
1: interrupt not masked</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INTR_MASK</name>
              <description>Interrupt mask for each interrupt in status register
0: interrupt masked
1: interrupt not masked</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PKE_CONTROL2</name>
          <addressOffset>0x00000010</addressOffset>
          <size>32</size>
          <description>Public Key Engine Control Register 2</description>
          <resetValue>0x0000C000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SIMPLIFY_HASH_NEED</name>
              <description>SIMPLIFY_ECDSA/EdDSA need hash value</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PKE_RST_VECTOR</name>
              <description>PKE reset vector = {Control Register 2 value, 2'b00}</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PKE_SWAP_BAR</name>
          <addressOffset>0x00000014</addressOffset>
          <size>32</size>
          <description>Public Key Engine Swap Base Address Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SWAP_BAR</name>
              <description>Word swap base address in word (32 bits)</description>
              <bitRange>[11:5]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PKE_VER_NUM</name>
          <addressOffset>0x0000001C</addressOffset>
          <size>32</size>
          <description>Public Key Engine Version Number Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>VER_NUM</name>
              <description>32-bit code update data or verison number, such as 32'h20211015</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>spic</name>
      <baseAddress>0x40128000</baseAddress>
      <size>0x000001D4</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x000001D4</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>CTRLR0</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description>Control Register 0</description>
          <resetValue>0x0000001F</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>USER_MODE</name>
              <description>User mode bit. Enable to enter user mode. Disable to enter auto mode. It can not be changed while SPIC is busy (0x28 [0] BUSY).
1: User mode. User can push data to FIFO and set SSIENR to 1. SPIC won't accept auto read/write command.
0: Auto mode. User can't push data to FIFO and set SSIENR to 1. SPIC will accept auto read/write command.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>UAR</name>
              <description>User mode bit auto reset.
Enable to auto reset USER_MODE to 0 after current user mode transaction is over (SPIC_EN reset to 0).</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CK_MTIMES</name>
              <description>Indicates the check times. If Flash is always busy in auto-check times, it causes ACEIR interrupt. The delay time (cycles) is related to bus_clk. 
The cycles of the parameter = (CK_MTIMES &lt;&lt; (11+ATCK_BIT_EXTEND).). User should ensure the timeout &gt; Write time of Flash 
The timeout time(ns) = 2*BAUDR*(1/SPIC_freq)(8/CH) (CK_MTIMES &lt;&lt; (11+ATCK_BIT_EXTEND).) 
Example 1: Flash Program time= 1ms, BAUDR=1, CH=1 (SPI) and (1/SPIC_freq) = 10ns. ATCK_MTIMES should be to set 4. 
Example 2: SPIC_freq = 200MHz, BAUDR = 1, CH =4 (QSPI), and ATCK_BIT_EXTEND = 2, the maximum auto_check time should be 
= 2*1*(1/200MHz)(8/4) (5'b11111&lt;&lt;13) 
= 2*1*(1/200MHz)(8/4) (18'b11_1110_0000_0000_0000) 
= 2*1*(1/200MHz)(8/4) (18'h3_e000) 
= 2*1*(1/200MHz)(8/4) (253952) 
= 5079040 ns 
= 5.07 ms 
Suggestion: If ACEIR interrupt occurs, the user should check the flash status by the software itself. 
Note: Before SVN 8369 Version, CK_MTIMES is fixed to shift 10bit. The formula becomes 2*BAUDR*(1/SPIC_freq)(8/CH) (CK_MTIMES &lt;&lt; (10))</description>
              <bitRange>[27:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FAST_RD</name>
              <description>Indicates to use fast read command in user mode. If setting to 1, SPIC would use FBAUDR to generate spi_sclk.</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CMD_CH</name>
              <description>Indicates channel number of command phase in transmitting or receiving data. Command phase is usually used to send SPI command. 
0: single channel
1: dual channels
2: quad channels
3: octal channel</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DATA_CH</name>
              <description>Indicates channel number of data phase in transmitting or receiving data. Data phase is used to send data after address phase. 
0: single channel
1: dual channels
2: quad channels
3: octal channel</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ADDR_CH</name>
              <description>Indicates channel number of address phase after command phase. Addr phase is used to send address or data. Addr phase is between one-byte command and a data phase. The number of bytes is determined by the ADDR_LENGTH.
0: single channel
1: dual channels
2: quad channels
3: octal channel</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DDR_EN</name>
              <description>Indicates the DDR mode in CMD_CH/DATA_CH/ADDR_CH. 
CTRLR0[15]: CMD_CH (always 2-Byte CMD type) 
CTRLR0[14]: DATA_CH 
CTRLR0[13]: ADDR_CH 
0: Disable
1: Enable
Note: Available only if configuration of DDR_EN is defined.</description>
              <bitRange>[15:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI_DREIR_R_DIS</name>
              <description>Set to disable DR timeout check</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GCLK_DIS</name>
              <description>Set to disable gated clock of ICG cell</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TMOD</name>
              <description>Indicates transfer mode. 
2'b00: transmit mode
Others (or 2'b11): receive mode</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCPOL</name>
              <description>Indicates serial clock polarity. It is used to select the polarity of the inactive serial clock. 
0: inactive state of serial clock is low 
1: inactive state of serial clock is high</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCPH</name>
              <description>Indicates serial clock phase. The serial clock phase selects the relationship the serial clock with the slave select signal. 
0: serial clock toggles in middle of first data bit
1: serial clock toggles at start of first data bit</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SIPOL_EN</name>
              <description>Set to enable SIPOL</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SIPOL</name>
              <description>While SIPOL_EN = 1:
SPI_CS is inactive state (SPI_CS ==1): spi_sin[3:0] = SIPOL[3:0]
SPI_CS is active (SPI_CS ==0): spi_sin[3:2] = SIPOL[3:2] (single or dual channel)
(SIPOL[4]: reserved for spi_in[7:4])</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RX_NDF</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description>Control Register 1</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RX_NDF</name>
              <description>Indicates a number of data frames (unit: Byte).
When executing receives operation in user mode, SPIC receives data continuously until data frames are equal to RX_NDF.</description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SSIENR</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description>SPIC Enable Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CUR_GP</name>
              <description>Only used in frequency change function.
Used to identify which group register data is internal used. When frqc_req and frqc_ack are both high, CUR_GP will switch to the group which in GP_NUM.</description>
              <bitRange>[11:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>GP_NUM</name>
              <description>Only used in frequency change function.
Set to determine which group register user want to read or write. Base on different operation frequency, some control register setting will change.
Therefore we build second group register on USER_LENGTH.USER_RD_DUMMY_LENGTH, AUTO_LENGTH.RD_DUMMY_LENGTH, AUTO_LENGTH.RDSR_DUMMY_LENGTH, AUTO_LENGTH.IN_PHYSICAL_CYC, TPR0.CS_TCEM, TPR0.CS_ACTIVE_HOLD, TPR0.CS_H_WR_DUM_LEN, TPR0.CS_H_RD_DUM_LEN, AUTO_LENGTH2.WR_DUMMY_LENGTH, TPR1.CR_TPWR, TPR1.CR_IDLE_WINDOW, TPR1.CS_ACTICE_SETUP.</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PGM_RST_TEST_EN</name>
              <description>For PGM RST Test only. Set this bit will generate a pulse as a warm reset signal and run PGM RST flow.</description>
              <bitRange>[4:4]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>SREX</name>
              <description>Set to block auto command before device can be normal accessed after exiting sleep mode.
This bit will hold high until timing check counter reaches the set value in CTRLR0.CK_MTIMES.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FRQC</name>
              <description>Set to enable frequency change function. SPIC will chop current transaction and then set frqc_req = 1 after setting this bit. Frquency change is finished when frqc_req and frqc_ack are both high and then the choped transaction will return and  continue.
Write:
0: Not to activate FRQC
1: Activate FRQC
Read:
0: FRQC is still in progress
1: FRQC is done</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ATCK_CMD</name>
              <description>Set to enable ATCK_CMD implementation. After setting SPIC would not accept any command until checking Flash is not busy or checking time out. (Use in User Mode, especially for Erase/Program to check status automatically.)
If CTRLR2.SEQ_SET setting, this function needs to disable.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPIC_EN</name>
              <description>Set to enable SPIC and start user mode transaction.
SPIC will reset SPIC_EN to 0 after user mode transaction is finished.
SPIC_EN can only be set when BOOT_FIN=1 (boot finished) and USER_MODE=1 (user mode).
(User can read SPIC_EN to check whether current user mode transaction is finished.)</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SER</name>
          <addressOffset>0x00000010</addressOffset>
          <size>32</size>
          <description>Slave Enable Register</description>
          <resetValue>0x00000001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SER</name>
              <description>Each bit in the register corresponds to one SPI Flash. In user mode user program the register to select target flash. 
0: Not selected 
1: Selected</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BAUDR</name>
          <addressOffset>0x00000014</addressOffset>
          <size>32</size>
          <description>Baud Rate Select</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SCKDV</name>
              <description>Define spi_sclk divider value.
The frequency of spi_sclk = The frequency of bus_clk / (2*SCKDV).</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TXFTLR</name>
          <addressOffset>0x00000018</addressOffset>
          <size>32</size>
          <description>Transmit FIFO Threshold level</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TFT</name>
              <description>Transmit FIFO threshold. To Control FIFO entries of valid data in normal transfer except in receiving mode. When a number of FIFO entry is equal or smaller than TFT, SPIC triggers a spi_txeir interrupt. 
Ex: If TXFTLR = 5'h1, set spi_txeir when FIFO entries &lt;= TFT (0x1)</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RXFTLR</name>
          <addressOffset>0x0000001C</addressOffset>
          <size>32</size>
          <description>Receive FIFO Threshold level</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RFT</name>
              <description>Receive FIFO threshold. To Control FIFO entries of valid data in receiving mode. When a number of FIFO entry is greater than RFT, SPIC triggers a spi_rxfir interrupt. 
Ex: If RXFTLR = 5'h1, set spi_rxfir when FIFO entries &gt; RFT (0x1)</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TXFLR</name>
          <addressOffset>0x00000020</addressOffset>
          <size>32</size>
          <description>Transmit FIFO level Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TXFLR</name>
              <description>Transmit FIFO level. Indicates the FIFO entry level of valid data in normal mode except in receiving data. (or as FIFO_FLR in any mode)</description>
              <bitRange>[5:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RXFLR</name>
          <addressOffset>0x00000024</addressOffset>
          <size>32</size>
          <description>Receive FIFO level Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RXFLR</name>
              <description>Receive FIFO level. Indicates the FIFO entries of valid data in receiving data.</description>
              <bitRange>[5:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SR</name>
          <addressOffset>0x00000028</addressOffset>
          <size>32</size>
          <description>Status Register</description>
          <resetValue>0x00000006</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ATWR_RDSR_N</name>
              <description>The previous auto write cmd didn't check the status register (RDSR). User should check the status register of Flash before next user mode transaction.
ATWR_RDSR_N will only be set by SPIC when SEQ_WR_EN = 1.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BOOT_FIN</name>
              <description>(Not Yet Ready) 
Boot Finish. Set if count waiting cycles (Boot Delay Count) for SPI Flash becomes a stable state after power on (or system reset). 1: Boot Finish
Note: Auto_mode would be blocked until boot finish. User_mode is allowed with SSIENR inactive before boot finish.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DCOL</name>
              <description>Data Collision, or in Transmitting Status.
1: Status shows that SPIC is transmitting spi_flash_cmd/spi_flash_addr/spi_flash_data to SPI Flash.
Suggest not reading DR during this transmitting state. (Check this status can avoid reading wrong data and cause SPIC error.)</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TXE</name>
              <description>Transmission error. Set if FIFO is empty and starting to transmit data to SPI Flash. This bit is cleared when read.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RFF</name>
              <description>Receive FIFO full. Set if FIFO is full in receiving mode. This bit is cleared when read.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RFNE</name>
              <description>Receive FIFO is not empty. Set if FIFO is not empty in receiving mode. This bit is cleared when read.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TFE</name>
              <description>Transmit FIFO is empty. Set if FIFO is empty in transmit mode, else it is cleared when it has data in FIFO.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TFNF</name>
              <description>Transmit FIFO is not full. Set if FIFO is not full in transmit mode, else it is cleared when FIFO is full.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BUSY</name>
              <description>SPIC busy flag. Set if SPIC is still transmitting to or receiving data from SPI Flash, or TX_FIFO/RX_FIFO are not empty.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IMR</name>
          <addressOffset>0x0000002C</addressOffset>
          <size>32</size>
          <description>Interrupt Mask Register</description>
          <resetValue>0x000001EE</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>NWEIM</name>
              <description>NAND Flash write error interrupt mask. 
1: spi_nweir_r is not masked. 
0: spi_nweir_r is masked.
Note: Available only if configuration of NAND_EN is defined.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>STFIM</name>
              <description>Status FIFO full interrupt mask. 
1: spi_stfir is not masked. 
0: spi_stfir is masked.
Note: Available only if configuration of NAND_EN is defined.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>STOIM</name>
              <description>Status FIFO overflow interrupt masked. 
1: spi_stoir_r is not masked. 
0: spi_stoir_r is masked.
Note: Available only if configuration of NAND_EN is defined.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>STUIM</name>
              <description>Status FIFO underflow interrupt masked. 
1: spi_stuir_r is not masked. 
0: spi_stuir_r is masked.
Note: Available only if configuration of NAND_EN is defined.</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DREIM</name>
              <description>DR timeout error interrupt mask. 
1: spi_dreir_r is not masked. 
0: spi_dreir_r is masked.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ACSIM</name>
              <description>Auto-check Flash Status raw interrupt mask. 
1: spi_acsir_r is not masked. 
0: spi_acsis_r is masked.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TFSIM</name>
              <description>Transmit finish interrupt mask. 
1: spi_tfsir_r is not masked. 
0: spi_tfsir_r is masked.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>USEIM</name>
              <description>User_mode error interrupt mask. 
1: spi_useir_r is not masked. 
0: spi_useir_r is masked.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ACEIM</name>
              <description>Auto-check timeout error interrupt mask. 
1: spi_aceir_r is not masked. 
0: spi_aceir_r is masked.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BYEIM</name>
              <description>The Byte-Enable error interrupt mask. 
1: spi_byeir_r is not masked. 
0: spi_byeir_r is masked.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WBEIM</name>
              <description>Write burst error interrupt mask. 
1: spi_wbier_r is not masked. 
0: spi_wbeir_r is masked.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FSEIM</name>
              <description>FIFO size error interrupt mask. 
1: spi_fseir_r is not masked. 
0: spi_fseir _r is masked</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXFIM</name>
              <description>Receive FIFO full interrupt mask. 
1: spi_rxfir is not masked. 
0: spi_rxfir is masked.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXOIM</name>
              <description>Receive FIFO overflow interrupt masked. 
1: spi_rxoir_r is not masked. 
0: spi_rxoir_r is masked.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXUIM</name>
              <description>Receive FIFO underflow interrupt masked. 
1: spi_rxuir_r is not masked. 
0: spi_rxuir_r is masked.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXOIM</name>
              <description>Transmit FIFO overflow interrupt mask. 
1: spi_txoir_r is not masked. 
0: spi_txoir_r is masked.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXEIM</name>
              <description>Transmit FIFO empty interrupt masked. 
1: spi_txeir is not masked. 
0: spi_txeir is masked.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ISR</name>
          <addressOffset>0x00000030</addressOffset>
          <size>32</size>
          <description>Interrupt Status Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>NWEIS</name>
              <description>NAND Flash write error interrupt status raw interrupt status after masking. 
1: spi_nweir_r is active after masking. 
0: spi_nweir_r is not active after masking.
Note: Available only if configuration of NAND_EN is defined.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>STFIS</name>
              <description>Status FIFO full raw interrupt status after masking. 
1: spi_stfir_r is active after masking. 
0: spi_stfir_r is not active after masking.
Note: Available only if configuration of NAND_EN is defined.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>STOIS</name>
              <description>Status FIFO overflow interrupt status after masking. 
1: spi_stoir_r is active after masking. 
0: spi_stoir_r is not active after masking.
Note: Available only if configuration of NAND_EN is defined.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>STUIS</name>
              <description>Status FIFO underflows interrupt status after masking. 
1: spi_stuir_r is active after masking. 
0: spi_stuir_r is not active after masking.
Note: Available only if configuration of NAND_EN is defined.</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DREIS</name>
              <description>DR timeout error status after masking. 
1: spi_dreir_r is active after masking. 
0: spi_dreir_r is not active after masking.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ACSIS</name>
              <description>Auto-check Flash Status after masking. 
1: spi_aceir_r is active after masking. 
0: spi_aceir_r is not active after masking.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TFSIS</name>
              <description>Transmit finish interrupt status after masking. 
1: spi_tfsir_r is active after masking. 
0: spi_tfsir_r is not active after masking.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>USEIS</name>
              <description>User mode error status after masking. 
1: spi_useir_r is active after masking. 
0: spi_useir_r is not active after masking.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ACEIS</name>
              <description>Auto-check timeout error status after masking. 
1: spi_aceir_r is active after masking. 
0: spi_aceir_r is not active after masking.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BYEIS</name>
              <description>The byte-Enable error interrupts status after masking. 
1: spi_byeir_r is active after masking. 
0: spi_byeir_r is not active after masking.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>WBEIS</name>
              <description>Write burst error interrupt status after masking. 
1: spi_wbeir_r is active after masking. 
0: spi_wbeir_r is not active after masking.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FSEIS</name>
              <description>FIFO size error interrupts status after masking. 
1: spi_fesir_r is active after masking. 
0: spi_fesir_r is not active after masking.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RXFIS</name>
              <description>Receive FIFO full interrupt status after masking 
1: spi_rxfir is active after masking. 
0: spi_rxfir is not active after masking.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RXOIS</name>
              <description>Receive FIFO overflow interrupt status after masking. 
1: spi_rxoir_r is active after masking. 
0: spi_rxoir_r is not active after masking.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RXUIS</name>
              <description>Receive FIFO underflows interrupt status after masking. 
1: spi_rxuir_r is active after masking. 
0: spi_rxuir_r is not active after masking.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TXOIS</name>
              <description>Transmit FIFO overflow raw interrupt status after masking. 
1: spi_txoir_r is active after masking. 
0: spi_txoir_r is not active after masking.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TXEIS</name>
              <description>Transmit FIFO empty raw interrupt status after masking. 
1: spi_txeir is active after masking. 
0: spi_txeir is not active after masking.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RISR</name>
          <addressOffset>0x00000034</addressOffset>
          <size>32</size>
          <description>Raw Interrupt Status Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>NWEIR</name>
              <description>NAND Flash write error interrupt status raw interrupt status prior to masking. 
1: spi_nweir_r is active prior to masking. 
0: spi_nweir_r is not active prior to masking.
Note: Available only if configuration of NAND_EN is defined.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>STFIR</name>
              <description>Status FIFO full raw interrupt status prior to masking 
1: spi_stfir is active prior to masking. 
0: spi_stfir is not active prior to masking.
Note: Available only if configuration of NAND_EN is defined.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>STOIR</name>
              <description>Status FIFO overflows raw interrupt status prior to masking. 
1: spi_stoir_r is active prior to masking. 
0: spi_stoir_r is not active prior to masking.
Note: Available only if configuration of NAND_EN is defined.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>STUIR</name>
              <description>Status FIFO underflows raw interrupt status prior to masking. 
1: spi_stuir_r is active prior to masking. 
0: spi_stuir_r is not active prior to masking.
Note: Available only if configuration of NAND_EN is defined.</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DREIR</name>
              <description>DR Timeout error status raw interrupt status prior to masking 
1: spi_dreir_r is active prior to masking. 
0: spi_dreir_r is not active prior to masking.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ACSIR</name>
              <description>Auto-check Flash Status raw interrupt status prior to masking 
1: spi_acsir_r is active prior to masking. 
0: spi_acsir_r is not active prior to masking.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TFSIR</name>
              <description>Transmit Finish Status raw interrupt status prior to masking 
1: spi_tfsir_r is active prior to masking. 
0: spi_tfsir_r is not active prior to masking.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>USEIR</name>
              <description>User_mode error status raw interrupt status prior to masking 
1: spi_useir_r is active prior to masking. 
0: spi_useir_r is not active prior to masking.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ACEIR</name>
              <description>Auto-check timeout error status raw interrupt status prior to masking 
1: spi_aceir_r is active prior to masking. 
0: spi_aceir_r is not active prior to masking.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BYEIR</name>
              <description>The Byte-Enable error interrupt status raw interrupt status prior to mask. 
1: spi_byeir_r is active prior to masking. 
0: spi_byeir_r is not active prior to masking.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>WBEIR</name>
              <description>Write burst error interrupt status raw interrupt status prior to masking. 
1: spi_wbeir_r is active prior to masking. 
0: spi_wbeir_r is not active prior to masking.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FSEIR</name>
              <description>FIFO size error interrupt status raw interrupt status prior to masking. 
1: spi_fseir_r is active prior to masking. 
0: spi_fseir _r is not active prior to masking.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RXFIR</name>
              <description>Receive FIFO full raw interrupt status prior to masking 
1:spi_rxfir is active prior to masking. 
0: spi_rxfir is not active prior to masking.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RXOIR</name>
              <description>Receive FIFO overflows raw interrupt status prior to masking. 
1: spi_rxoir_r is active prior to masking. 
0: spi_rxoir_r is not active prior to masking.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RXUIR</name>
              <description>Receive FIFO underflows raw interrupt status prior to masking. 
1: spi_rxuir_r is active prior to masking. 
0: spi_rxuir_r is not active prior to masking.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TXOIR</name>
              <description>Transmit FIFO overflow raw interrupt status prior to masking. 
1: spi_txoir_r is active prior to masking. 
0: spi_txoir_r is not active prior to masking.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TXEIR</name>
              <description>Transmit FIFO empty raw interrupt status prior to masking. 
1: spi_txeir is active prior to masking. 
0: spi_txeir is not active prior to masking.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TXOICR</name>
          <addressOffset>0x00000038</addressOffset>
          <size>32</size>
          <description>Transmit FIFO Overflow Interrupt Clear Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TXOICR</name>
              <description>When reading/writing the register, spi_rxoir_r would be cleared.
Note: Only response value 0x0 when read.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RXOICR</name>
          <addressOffset>0x0000003C</addressOffset>
          <size>32</size>
          <description>Receive FIFO Overflow Interrupt Clear Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RXOICR</name>
              <description>When reading/writing the register, spi_rxoir_r would be cleared.
Note: Only response value 0x0 when read.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RXUICR</name>
          <addressOffset>0x00000040</addressOffset>
          <size>32</size>
          <description>Receive FIFO Underflow Interrupt Clear Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RXUICR</name>
              <description>When reading/writing the register, spi_rxuir_r would be cleared.
Note: Only response value 0x0 when read.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MSTICR</name>
          <addressOffset>0x00000044</addressOffset>
          <size>32</size>
          <description>Master error Interrupt Clear Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>MSTICR</name>
              <description>When reading/writing the register, spi_mstir_r would be cleared.
Note: Only response value 0x0 when read.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ICR</name>
          <addressOffset>0x00000048</addressOffset>
          <size>32</size>
          <description>Interrupt Clear Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ICR</name>
              <description>When reading/writing the register, all interrupt would be cleared.
Note: Only response value 0x0 when read.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMACR</name>
          <addressOffset>0x0000004C</addressOffset>
          <size>32</size>
          <description>DMA Control Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TX_DMAC_EN</name>
              <description>Transmit DMA Enable. This bit enables/disables the transmit FIFO DMA channel. 
0: Transmit DMA disabled
1: Transmit DMA enabled</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_DMAC_EN</name>
              <description>Receive DMA Enable. This bit enables/disables the receive FIFO DMA channel 
0: Receive DMA disabled
1: Receive DMA enabled</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMATDLR</name>
          <addressOffset>0x00000050</addressOffset>
          <size>32</size>
          <description>DMA Transmit Data Level Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DMATDL</name>
              <description>Transmit Data Level. This bit field controls the level at which a DMA request is made by the transmit logic. It is equal to the watermark level; that is, the dma_tx_req signal is generated when the number of valid data entries in the transmit FIFO is equal to or below this field value, and TDMAE = 1.</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMARDLR</name>
          <addressOffset>0x00000054</addressOffset>
          <size>32</size>
          <description>DMA Receive Data Level Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DMARDL</name>
              <description>Receive Data Level. This bit field controls the level at which a DMA request is made by the receive logic. The watermark level = DMARDL+1; that is, dma_rx_req is generated when the number of valid data entries in the receive FIFO is equal to or above this field value + 1, and RDMAE=1.</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IDR</name>
          <addressOffset>0x00000058</addressOffset>
          <size>32</size>
          <description>Identification Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IDCODE</name>
              <description>Contain the decimal value of SPIC version.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPIC_VERSION</name>
          <addressOffset>0x0000005C</addressOffset>
          <size>32</size>
          <description>SPIC version ID Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SPIC_VERSION</name>
              <description>Contain the decimal value of SPIC version. 
(After 201612: SVN_NUM changes to Git Counter)</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR0</name>
          <addressOffset>0x00000060</addressOffset>
          <size>32</size>
          <description>Data Register 0</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR0</name>
              <description>It is a data buffer with 8-bit width FIFO. If accessing in word data byte, it would read/write 4 entries of FIFO.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR1</name>
          <addressOffset>0x00000064</addressOffset>
          <size>32</size>
          <description>Data Register 1</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR1</name>
              <description>It is a data buffer with 8-bit width FIFO. If accessing in word data byte, it would read/write 4 entries of FIFO.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR2</name>
          <addressOffset>0x00000068</addressOffset>
          <size>32</size>
          <description>Data Register 2</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR2</name>
              <description>It is a data buffer with 8-bit width FIFO. If accessing in word data byte, it would read/write 4 entries of FIFO.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR3</name>
          <addressOffset>0x0000006C</addressOffset>
          <size>32</size>
          <description>Data Register 3</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR3</name>
              <description>It is a data buffer with 8-bit width FIFO. If accessing in word data byte, it would read/write 4 entries of FIFO.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR4</name>
          <addressOffset>0x00000070</addressOffset>
          <size>32</size>
          <description>Data Register 4</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR4</name>
              <description>It is a data buffer with 8-bit width FIFO. If accessing in word data byte, it would read/write 4 entries of FIFO.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR5</name>
          <addressOffset>0x00000074</addressOffset>
          <size>32</size>
          <description>Data Register 5</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR5</name>
              <description>It is a data buffer with 8-bit width FIFO. If accessing in word data byte, it would read/write 4 entries of FIFO.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR6</name>
          <addressOffset>0x00000078</addressOffset>
          <size>32</size>
          <description>Data Register 6</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR6</name>
              <description>It is a data buffer with 8-bit width FIFO. If accessing in word data byte, it would read/write 4 entries of FIFO.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR7</name>
          <addressOffset>0x0000007C</addressOffset>
          <size>32</size>
          <description>Data Register 7</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR7</name>
              <description>It is a data buffer with 8-bit width FIFO. If accessing in word data byte, it would read/write 4 entries of FIFO.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR8</name>
          <addressOffset>0x00000080</addressOffset>
          <size>32</size>
          <description>Data Register 8</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR8</name>
              <description>It is a data buffer with 8-bit width FIFO. If accessing in word data byte, it would read/write 4 entries of FIFO.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR9</name>
          <addressOffset>0x00000084</addressOffset>
          <size>32</size>
          <description>Data Register 9</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR9</name>
              <description>It is a data buffer with 8-bit width FIFO. If accessing in word data byte, it would read/write 4 entries of FIFO.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR10</name>
          <addressOffset>0x00000088</addressOffset>
          <size>32</size>
          <description>Data Register 10</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR10</name>
              <description>It is a data buffer with 8-bit width FIFO. If accessing in word data byte, it would read/write 4 entries of FIFO.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR11</name>
          <addressOffset>0x0000008C</addressOffset>
          <size>32</size>
          <description>Data Register 11</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR11</name>
              <description>It is a data buffer with 8-bit width FIFO. If accessing in word data byte, it would read/write 4 entries of FIFO.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR12</name>
          <addressOffset>0x00000090</addressOffset>
          <size>32</size>
          <description>Data Register 12</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR12</name>
              <description>It is a data buffer with 8-bit width FIFO. If accessing in word data byte, it would read/write 4 entries of FIFO.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR13</name>
          <addressOffset>0x00000094</addressOffset>
          <size>32</size>
          <description>Data Register 13</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR13</name>
              <description>It is a data buffer with 8-bit width FIFO. If accessing in word data byte, it would read/write 4 entries of FIFO.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR14</name>
          <addressOffset>0x00000098</addressOffset>
          <size>32</size>
          <description>Data Register 14</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR14</name>
              <description>It is a data buffer with 8-bit width FIFO. If accessing in word data byte, it would read/write 4 entries of FIFO.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR15</name>
          <addressOffset>0x0000009C</addressOffset>
          <size>32</size>
          <description>Data Register 15</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR15</name>
              <description>It is a data buffer with 8-bit width FIFO. If accessing in word data byte, it would read/write 4 entries of FIFO.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DM_DR0</name>
          <addressOffset>0x000000A0</addressOffset>
          <size>32</size>
          <description>Data Mask Data Register 0</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA_EN_DR0</name>
              <description>It is a data buffer for spi_data_en signal in user mode. The output value of spi_data_en is the data that has been pushed to DM_FIFO [1]. If DM_FIFO is empty, the output value of spi_data_en will be 0.</description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>DATA_MASK_DR0</name>
              <description>It is a data buffer for spi_dm signal in user mode. The output value of spi_dm is the data that has been pushed to DM_FIFO [0]. If DM_FIFO is empty, the output value of spi_data_en will be (~DM_ACT).</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DM_DR1</name>
          <addressOffset>0x000000A4</addressOffset>
          <size>32</size>
          <description>Data Mask Data Register 1</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA_EN_DR1</name>
              <description>It is a data buffer for spi_data_en signal in user mode. The output value of spi_data_en is the data that has been pushed to DM_FIFO [1]. If DM_FIFO is empty, the output value of spi_data_en will be 0.</description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>DATA_MASK_DR1</name>
              <description>It is a data buffer for spi_dm signal in user mode. The output value of spi_dm is the data that has been pushed to DM_FIFO [0]. If DM_FIFO is empty, the output value of spi_data_en will be (~DM_ACT).</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DM_DR2</name>
          <addressOffset>0x000000A8</addressOffset>
          <size>32</size>
          <description>Data Mask Data Register 2</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA_EN_DR2</name>
              <description>It is a data buffer for spi_data_en signal in user mode. The output value of spi_data_en is the data that has been pushed to DM_FIFO [1]. If DM_FIFO is empty, the output value of spi_data_en will be 0.</description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>DATA_MASK_DR2</name>
              <description>It is a data buffer for spi_dm signal in user mode. The output value of spi_dm is the data that has been pushed to DM_FIFO [0]. If DM_FIFO is empty, the output value of spi_data_en will be (~DM_ACT).</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DM_DR3</name>
          <addressOffset>0x000000AC</addressOffset>
          <size>32</size>
          <description>Data Mask Data Register 3</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA_EN_DR3</name>
              <description>It is a data buffer for spi_data_en signal in user mode. The output value of spi_data_en is the data that has been pushed to DM_FIFO [1]. If DM_FIFO is empty, the output value of spi_data_en will be 0.</description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>DATA_MASK_DR3</name>
              <description>It is a data buffer for spi_dm signal in user mode. The output value of spi_dm is the data that has been pushed to DM_FIFO [0]. If DM_FIFO is empty, the output value of spi_data_en will be (~DM_ACT).</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DM_DR4</name>
          <addressOffset>0x000000B0</addressOffset>
          <size>32</size>
          <description>Data Mask Data Register 4</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA_EN_DR4</name>
              <description>It is a data buffer for spi_data_en signal in user mode. The output value of spi_data_en is the data that has been pushed to DM_FIFO [1]. If DM_FIFO is empty, the output value of spi_data_en will be 0.</description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>DATA_MASK_DR4</name>
              <description>It is a data buffer for spi_dm signal in user mode. The output value of spi_dm is the data that has been pushed to DM_FIFO [0]. If DM_FIFO is empty, the output value of spi_data_en will be (~DM_ACT).</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DM_DR5</name>
          <addressOffset>0x000000B4</addressOffset>
          <size>32</size>
          <description>Data Mask Data Register 5</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA_EN_DR5</name>
              <description>It is a data buffer for spi_data_en signal in user mode. The output value of spi_data_en is the data that has been pushed to DM_FIFO [1]. If DM_FIFO is empty, the output value of spi_data_en will be 0.</description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>DATA_MASK_DR5</name>
              <description>It is a data buffer for spi_dm signal in user mode. The output value of spi_dm is the data that has been pushed to DM_FIFO [0]. If DM_FIFO is empty, the output value of spi_data_en will be (~DM_ACT).</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DM_DR6</name>
          <addressOffset>0x000000B8</addressOffset>
          <size>32</size>
          <description>Data Mask Data Register 6</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA_EN_DR6</name>
              <description>It is a data buffer for spi_data_en signal in user mode. The output value of spi_data_en is the data that has been pushed to DM_FIFO [1]. If DM_FIFO is empty, the output value of spi_data_en will be 0.</description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>DATA_MASK_DR6</name>
              <description>It is a data buffer for spi_dm signal in user mode. The output value of spi_dm is the data that has been pushed to DM_FIFO [0]. If DM_FIFO is empty, the output value of spi_data_en will be (~DM_ACT).</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DM_DR7</name>
          <addressOffset>0x000000BC</addressOffset>
          <size>32</size>
          <description>Data Mask Data Register 7</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA_EN_DR7</name>
              <description>It is a data buffer for spi_data_en signal in user mode. The output value of spi_data_en is the data that has been pushed to DM_FIFO [1]. If DM_FIFO is empty, the output value of spi_data_en will be 0.</description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>DATA_MASK_DR7</name>
              <description>It is a data buffer for spi_dm signal in user mode. The output value of spi_dm is the data that has been pushed to DM_FIFO [0]. If DM_FIFO is empty, the output value of spi_data_en will be (~DM_ACT).</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DM_DR8</name>
          <addressOffset>0x000000C0</addressOffset>
          <size>32</size>
          <description>Data Mask Data Register 8</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA_EN_DR8</name>
              <description>It is a data buffer for spi_data_en signal in user mode. The output value of spi_data_en is the data that has been pushed to DM_FIFO [1]. If DM_FIFO is empty, the output value of spi_data_en will be 0.</description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>DATA_MASK_DR8</name>
              <description>It is a data buffer for spi_dm signal in user mode. The output value of spi_dm is the data that has been pushed to DM_FIFO [0]. If DM_FIFO is empty, the output value of spi_data_en will be (~DM_ACT).</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DM_DR9</name>
          <addressOffset>0x000000C4</addressOffset>
          <size>32</size>
          <description>Data Mask Data Register 9</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA_EN_DR9</name>
              <description>It is a data buffer for spi_data_en signal in user mode. The output value of spi_data_en is the data that has been pushed to DM_FIFO [1]. If DM_FIFO is empty, the output value of spi_data_en will be 0.</description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>DATA_MASK_DR9</name>
              <description>It is a data buffer for spi_dm signal in user mode. The output value of spi_dm is the data that has been pushed to DM_FIFO [0]. If DM_FIFO is empty, the output value of spi_data_en will be (~DM_ACT).</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DM_DR10</name>
          <addressOffset>0x000000C8</addressOffset>
          <size>32</size>
          <description>Data Mask Data Register 10</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA_EN_DR10</name>
              <description>It is a data buffer for spi_data_en signal in user mode. The output value of spi_data_en is the data that has been pushed to DM_FIFO [1]. If DM_FIFO is empty, the output value of spi_data_en will be 0.</description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>DATA_MASK_DR10</name>
              <description>It is a data buffer for spi_dm signal in user mode. The output value of spi_dm is the data that has been pushed to DM_FIFO [0]. If DM_FIFO is empty, the output value of spi_data_en will be (~DM_ACT).</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DM_DR11</name>
          <addressOffset>0x000000CC</addressOffset>
          <size>32</size>
          <description>Data Mask Data Register 11</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA_EN_DR11</name>
              <description>It is a data buffer for spi_data_en signal in user mode. The output value of spi_data_en is the data that has been pushed to DM_FIFO [1]. If DM_FIFO is empty, the output value of spi_data_en will be 0.</description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>DATA_MASK_DR11</name>
              <description>It is a data buffer for spi_dm signal in user mode. The output value of spi_dm is the data that has been pushed to DM_FIFO [0]. If DM_FIFO is empty, the output value of spi_data_en will be (~DM_ACT).</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DM_DR12</name>
          <addressOffset>0x000000D0</addressOffset>
          <size>32</size>
          <description>Data Mask Data Register 12</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA_EN_DR12</name>
              <description>It is a data buffer for spi_data_en signal in user mode. The output value of spi_data_en is the data that has been pushed to DM_FIFO [1]. If DM_FIFO is empty, the output value of spi_data_en will be 0.</description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>DATA_MASK_DR12</name>
              <description>It is a data buffer for spi_dm signal in user mode. The output value of spi_dm is the data that has been pushed to DM_FIFO [0]. If DM_FIFO is empty, the output value of spi_data_en will be (~DM_ACT).</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DM_DR13</name>
          <addressOffset>0x000000D4</addressOffset>
          <size>32</size>
          <description>Data Mask Data Register 13</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA_EN_DR13</name>
              <description>It is a data buffer for spi_data_en signal in user mode. The output value of spi_data_en is the data that has been pushed to DM_FIFO [1]. If DM_FIFO is empty, the output value of spi_data_en will be 0.</description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>DATA_MASK_DR13</name>
              <description>It is a data buffer for spi_dm signal in user mode. The output value of spi_dm is the data that has been pushed to DM_FIFO [0]. If DM_FIFO is empty, the output value of spi_data_en will be (~DM_ACT).</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DM_DR14</name>
          <addressOffset>0x000000D8</addressOffset>
          <size>32</size>
          <description>Data Mask Data Register 14</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA_EN_DR14</name>
              <description>It is a data buffer for spi_data_en signal in user mode. The output value of spi_data_en is the data that has been pushed to DM_FIFO [1]. If DM_FIFO is empty, the output value of spi_data_en will be 0.</description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>DATA_MASK_DR14</name>
              <description>It is a data buffer for spi_dm signal in user mode. The output value of spi_dm is the data that has been pushed to DM_FIFO [0]. If DM_FIFO is empty, the output value of spi_data_en will be (~DM_ACT).</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DM_DR15</name>
          <addressOffset>0x000000DC</addressOffset>
          <size>32</size>
          <description>Data Mask Data Register 15</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA_EN_DR15</name>
              <description>It is a data buffer for spi_data_en signal in user mode. The output value of spi_data_en is the data that has been pushed to DM_FIFO [1]. If DM_FIFO is empty, the output value of spi_data_en will be 0.</description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>DATA_MASK_DR15</name>
              <description>It is a data buffer for spi_dm signal in user mode. The output value of spi_dm is the data that has been pushed to DM_FIFO [0]. If DM_FIFO is empty, the output value of spi_data_en will be (~DM_ACT).</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>READ_FAST_SINGLE</name>
          <addressOffset>0x000000E0</addressOffset>
          <size>32</size>
          <description>Fast Read Data Command of SPI Flash</description>
          <resetValue>0x00000B0B</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FRD_CMD</name>
              <description>Indicate SPI Flash command value of fast read command. The baud rate is used with FBAUDR.
FRD_CMD[15:8] is for RD_OCTA_IO_CMD_2nd_BYTE (only available when configuration of DDR_EN is defined)
FRD_CMD[7:0] is for RD_OCTA_IO_CMD_1st_BYTE</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>READ_DUAL_DATA</name>
          <addressOffset>0x000000E4</addressOffset>
          <size>32</size>
          <description>Dual Output Read Command of SPI Flash</description>
          <resetValue>0x0000003B</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RD_DUAL_O_CMD</name>
              <description>Indicates SPI Flash command value of dual data read command.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>READ_DUAL_ADDR_DATA</name>
          <addressOffset>0x000000E8</addressOffset>
          <size>32</size>
          <description>Dual I/O Read Command of SPI Flash</description>
          <resetValue>0x000000BB</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RD_DUAL_IO_CMD</name>
              <description>Indicates SPI Flash command value of dual address and data read command.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>READ_QUAD_DATA</name>
          <addressOffset>0x000000EC</addressOffset>
          <size>32</size>
          <description>Qaud Output Read Command of SPI Flash</description>
          <resetValue>0x0000006B</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RD_QUAD_O_CMD</name>
              <description>Indicates SPI Flash command value of quad data read command.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>READ_QUAD_ADDR_DATA</name>
          <addressOffset>0x000000F0</addressOffset>
          <size>32</size>
          <description>Quad I/O Read Command of SPI Flash</description>
          <resetValue>0xFFA500EB</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>EXIT_PRM_CMD</name>
              <description>Exit High Performance Read Mode commend.
Note: Available only if configuration of PRM_EN is defined (SPIC Lite ver).</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PRM_VAL</name>
              <description>High Performance Read Mode Value.
Note: Available only if configuration of PRM_EN is defined (SPIC Lite ver).</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EXIT_PRM_DUM_LEN</name>
              <description>If Exit PRM commend is more than 1 byte, use EXIT_PRM_DUM_LEN to extend the commend. It is referenced by bus_clk.
Ex. In qpi mode (4-4-4), FFFFFFFFh data cycle should be issued (4-byte data in 8 spi cycles). EXIT_PRM_CMD only push 1 byte (2 spi cycles), so use EXIT_PRM_DUM_LEN to extend 6 spi cycles.
EXIT_PRM_DUM_LEN = 6 (spi_cycle) * (2 * baurd_rate)
Note: Available only if configuration of PRM_EN is defined (SPIC Lite ver).</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RD_QUAD_IO_CMD</name>
              <description>Indicates SPI Flash command value of quad address and data read command.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WRITE_SIGNLE</name>
          <addressOffset>0x000000F4</addressOffset>
          <size>32</size>
          <description>Page Program Command of SPI Flash</description>
          <resetValue>0x00000202</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>WR_CMD</name>
              <description>Indicate SPI Flash command value of write command.
WR_CMD[15:8] is for WR_OCTA_IO_CMD_2nd_BYTE (only available when configuration of DDR_EN is defined)
WR_CMD[7:0] is for WR_OCTA_IO_CMD_1st_BYTE</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WRITE_DUAL_DATA</name>
          <addressOffset>0x000000F8</addressOffset>
          <size>32</size>
          <description>Dual Data Input Program Command of SPI Flash</description>
          <resetValue>0x000000A2</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>WR_DUAL_I_CMD</name>
              <description>Indicates SPI Flash command value of dual data write command.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WRITE_DUAL_ADDR_DATA</name>
          <addressOffset>0x000000FC</addressOffset>
          <size>32</size>
          <description>Dual Address and Data Output Read Command of SPI Flash</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>WR_DUAL_II_CMD</name>
              <description>Indicates SPI Flash command value of dual address and data write command.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WRITE_QUAD_DATA</name>
          <addressOffset>0x00000100</addressOffset>
          <size>32</size>
          <description>Quad Data Input Program Command of SPI Flash</description>
          <resetValue>0x00000032</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>WR_QUAD_I_CMD</name>
              <description>Indicates SPI Flash command value of quad data write command.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WRITE_QUAD_ADDR_DATA</name>
          <addressOffset>0x00000104</addressOffset>
          <size>32</size>
          <description>Quad Address and Data Output Read Command of SPI Flash</description>
          <resetValue>0x00000038</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>WR_QUAD_II_CMD</name>
              <description>Indicates SPI Flash command value of quad address and data write command.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WRITE_ENABLE</name>
          <addressOffset>0x00000108</addressOffset>
          <size>32</size>
          <description>Write Enable Command of SPI Flash</description>
          <resetValue>0x00000606</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>WR_EN_CMD_2nd_BYTE</name>
              <description>Indicates SPI Flash command value of 2nd byte of write enable.
Note: Available only if configuration of DDR_EN is defined.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WR_EN_CMD_1st_BYTE</name>
              <description>Indicates SPI Flash command value of 1st byte of write enable.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>READ_STATUS</name>
          <addressOffset>0x0000010C</addressOffset>
          <size>32</size>
          <description>Read Status Command of SPI Flash</description>
          <resetValue>0x10000505</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>INTERVAL_EN</name>
              <description>Set to enable INTERVAL_ODD.
Note: Available only if configuration of SPIC_LITE is not defined (SPIC Full ver).</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INTERVAL_ODD</name>
              <description>Indicates SPI Flash read status with 2-Byte status but checking only odd byte or even byte.
0: even byte (2, 4, 6, ...)
1: odd byte (1, 3, 5, ...)
Note: Available only if configuration of SPIC_LITE is not defined (SPIC Full ver).</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ST_CMD_LEN</name>
              <description>Indicates the number of bytes in read status command.
ST_CMD_LEN can be 1~3.
Note: Available only if configuration of SPIC_LITE is not defined (SPIC Full ver).</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ST_CMD_CH</name>
              <description>Indicates channel number of read status command in transmitting and receiving data.
0: single channel
1: dual channels
2: quad channels
3: octal channel</description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ST_CMD_DDR_EN</name>
              <description>Indicates the DDR mode in ST_CMD_CH.
Note: Available only if configuration of DDR_EN is defined.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RD_ST_CMD_3rd_BYTE</name>
              <description>Indicates SPI Flash command value of 3rd byte of read status.
Note: Available only if configuration of SPIC_LITE is not defined (SPIC Full ver).</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RD_ST_CMD_2nd_BYTE</name>
              <description>Indicates SPI Flash command value of 2nd byte of read status.
Note: Available only if configuration of SPIC_LITE is not defined (SPIC Full ver).</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RD_ST_CMD_1st_BYTE</name>
              <description>Indicates SPI Flash command value of 1st byte of read status.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CTRLR2</name>
          <addressOffset>0x00000110</addressOffset>
          <size>32</size>
          <description>Control Register 2</description>
          <resetValue>0x00103501</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RD_WEIGHT</name>
              <description>Set to determine the read and write priority. RD_WEIGHT should &gt;= 2 (if set to 0 or 1, RD_WEIGHT will use the previous value).
Ex: if RD_WEIGHT = 5, SPIC will accept 1 write cmd after accepting 4 read cmd.</description>
              <bitRange>[23:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WR_VL_EN</name>
              <description>Set to enable variable write latency. SPIC will set variable write latency according to RWDS.
If WR_VL_EN = 0, SPIC will set fix write latency.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RD_VALID_EN</name>
              <description>Set to enable variable read latency. SPIC will not sample read data until rx_data_valid = 1.
If RD_VALID_EN = 0, SPIC will sample read data according to internal counter.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DIS_WRAP_ALIGN</name>
              <description>Set to disable wrap_align function (convert wrap to incremental through aligning start address to burst boundary) in auto mode.
If DIS_WRAP_ALIGN = 1, SPIC will chop wrap transation into two incremental transactions.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DIS_DM_CA</name>
              <description>Set to disable spi_dm_oe_n (let the device to drive DM) when SPIC pushing CMD and ADDR for both user mode and auto mode.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FULL_WR</name>
              <description>Set to enable full write in auto mode.
If FULL_WR = 0, SPIC will use spi_dm to do the partial write.
Note: Available only if configuration of DM_EN is defined.</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DM_ACT</name>
              <description>DM (Data Mask) is active high or low, which is defined by specific PSRAM SPEC. 
If DM is active high (DM=1 means "don't write"), DM_ACT should be set to 1 and the corresponding byte of write data will not be written into the PSRAM.
Note: Available only if configuration of DM_EN is defined.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_FIFO_ENTRY</name>
              <description>If using SPIC_HAS_DMA (NO_MERGE_FIFO) SPIC, this field indicates the valid entry of RX FIFO. It is an index of 2 and it should be equal or smaller than 5. The user can modify it to profile with a different entry. 
Ex: if RX_FIFO entry is 32, RX_FIFO_ENTYR &lt;=5.</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_FIFO_ENTRY</name>
              <description>If using SPIC_HAS_DMA (NO_MERGE_FIFO) SPIC, this field indicates the valid entry of TX_FIFO. If using MERGE_FIFO SPIC, there is only one FIFO is in the SPIC design, and this field indicates the valid entry of the FIFO. It is an index of 2 and it should be equal or smaller than FIFO_ABW. The user can modify it to profile with a different entry. 
Ex: if FIFO entry is 32, FIFO_ENTYR &lt;=5.</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DR_FIXED</name>
              <description>Indicate the AXI FIXED read mode on DR.
If setting 1, user mode read DR will be FIXED.
Otherwise, user mode read DR will be INCR.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WPN_DNUM</name>
              <description>Indicates the WPn input pin of SPI Flash is connected to spi_sout[2]or [3]. 
If setting 0, it connects to spi_sdata[2]. Otherwise, it connects to spi_sdata[3].</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WPN_SET</name>
              <description>To implement write protect function. spi_wen_out and the bit of spi_sout which connects to WPN would be initial to 0. 
WPN_SET: If setting 1 is protected. Otherwise, is not protected.(Configuration Form is using "WPN_SET_n": If setting 1 is NOT protected. Otherwise, is protected.)</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SO_DNUM</name>
              <description>Indicates SO input pin of SPI Flash is connected to spi_sout[0]or [1]. It refers to SPI Flash and also the system connection with SPI_Flash (see 6.1.3) 
If setting 0, it connects to spi_sout[0] (single-channel connection). 
Otherwise, it connects to spi_sout[1] (multi-channels connection). 
(Default is configured to 1to support multi-channel connection)</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FBAUDR</name>
          <addressOffset>0x00000114</addressOffset>
          <size>32</size>
          <description>Fast Baud Rate Select</description>
          <resetValue>0x00000001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FSCKDV</name>
              <description>Indicates the divider of Fast read command when FAST_RD is setting in user mode or using fast read command in auto mode. The frequency of spi_sclk is derived from: 
Frequency of spi_sclk = Frequency of bus_clk / (2*FSCKDV).</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USER_LENGTH</name>
          <addressOffset>0x00000118</addressOffset>
          <size>32</size>
          <description>User Length Register</description>
          <resetValue>0x00030000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>USER_ADDR_LENGTH</name>
              <description>Indicates number of bytes in address phase (between command phase and write/read phase) in user mode.
If it is set to 4, it will transmit 4-byte Address to support 4-byte address mode in SPI Flash.</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>USER_CMD_LENGHT</name>
              <description>Indicates number of bytes in command phase in user mode.
USER_CMD_LENGHT can be 0~3.</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>USER_RD_DUMMY_LENGTH</name>
              <description>Indicates delay cycles for receiving data in user mode (USER_MODE == 1).
It is referenced by bus_clk.</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AUTO_LENGTH</name>
          <addressOffset>0x0000011C</addressOffset>
          <size>32</size>
          <description>Auto Address Length Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RDSR_DUMMY_LENGTH</name>
              <description>Indicates delay cycles for receiving data after Read Status Register (RDSR) command. (auto write or user mode with auto check) 
It is referenced by bus_clk.</description>
              <bitRange>[27:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AUTO_ADDR_LENGTH</name>
              <description>Indicates number of bytes address in read/write command in auto mode. 
AUTO_ADDR_LENGTH should be 1, 2, 3, 4 bytes. 
If it is set to 4, it will transmit 4-byte Address to support 4-byte address mode in SPI Flash. 
Note: PRM in auto mode should set VALID_CMD[11] (PRM_EN) with correct AUTO_ADDR_LENGTH.</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IN_PHYSICAL_CYC</name>
              <description>Indicates how many SPIC CLK (bus_clk) cycles from pad to internal SPIC.</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RD_DUMMY_LENGTH</name>
              <description>Indicates delay cycles for receiving data.
It is referenced by bus_clk.
Note: Don't include SPIC CLK (bus_clk) cycles from pad to internal SPIC</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>VALID_CMD</name>
          <addressOffset>0x00000120</addressOffset>
          <size>32</size>
          <description>Valid Command Register</description>
          <resetValue>0x00004000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SEQ_WR_EN</name>
              <description>Set (1) to enable read sequential transaction write function in auto mode. If two bus write transactions are sequential (address is consecutive), SPIC can access second transaction data without sending Read CMD/ADDR/DUMMY.
Once disable (0) this bit field, spi_csn will inactive immediately and also disable this function.
Note: Run SEQ_WR_EN after SPIC boot finish.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SEQ_RD_EN</name>
              <description>Set (1) to enable read sequential transaction read function in auto mode. If two bus read transactions are sequential (address is consecutive), SPIC can access second transaction data without sending Read CMD/ADDR/DUMMY. 
Once disable (0) this bit field, spi_csn will inactive immediately and also disable this function. 
Note: Run SEQ_RD_EN after SPIC boot finish.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DUM_EN</name>
              <description>Enable to push one dummy byte (DUM_BYTE_VAL) after pushing address to Flash in auto read. If PRM_EN is active, it will push PRM_Value instead of DUM_BYTE_VAL.
If RD_DUMMY_LENGTH = 0, it won't push the dummy byte.</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CTRLR0_CH</name>
              <description>Set (1) to use CTRLR0 CMD_CH/DATA_CH/ADDR_CH and DDR_EN field in Auto mode; Otherwise, SPIC will decode according to which VALID_CMD you choose in auto mode.
Suggestion while use this bit field: 
Read Flash mode: (1-4-8), (4-4-8), (1-4D-8D), (4-4D-8D) with using RD_QUAD_IO[7:0] 
Read Flash mode (with 2-Byte CMD): (1-8-8), (8-8-8), (8D-8D-8D), (4D-4D-4D) with using RD_FAST_SINGLE_IO[15:0] (always using FBAUD) 
Write Flash mode: (1-4-8), (4-4-8) with using WR_QUAD_IO[7:0] 
Write Flash mode (with 2-Byte CMD): (1-8-8), (8-8-8), (8D-8D-8D) with using WR_SINGLE_IO[15:0]</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PRM_EN</name>
              <description>Set to enable SPIC performance read mode in Auto Mode. RXI-312 SPIC will auto exit performance read mode before auto write or enter to user mode.
Enter PRM Flow:
Set CR_VALID_CMD[11] (PRM_EN) with CR_VALID_CMD[4] (RD_QUAD_IO) or with (CR_VALID_CMD[0] and CR_VALID_CMD[12])
Set CR_READ_QUAD_ADDR_DATA[23:16] (PRM_VALUE) and [7:0] (RD_QUAD_IO_CMD)
Set correct Dummy Cycle, and Valid Command then access in Auto Mode address range
If PRM_EN, at 1st time Auto Rd, it will access with CMD, and store this condition. At 2nd Auto Rd or later, it will access without CMD but with Address and Mode Value. Our SPIC will check PRM_VALUE (CR_READ_QUAD_ADDR_DATA [23:16]), if PRM_VALUE ==0x00 (not a valid PRM value), and PRM_EN is set, SPIC will always access SPI Flash with (CMD+ADDR+MODE+DUMMY+...) format.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RM_WEN</name>
              <description>Remove write enable command in auto write.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RM_RDSR</name>
              <description>Remove read status register in auto write.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WR_QUAD_II</name>
              <description>Indicates quad address/data write is a valid command to execute. (known as (1-4-4))</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WR_QUAD_I</name>
              <description>Indicates quad data write is a valid command to execute. (known as (1-1-4))</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WR_DUAL_II</name>
              <description>Indicates dual address/data write is a valid command to execute. (known as (1-2-2))</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WR_DUAL_I</name>
              <description>Indicates dual data write is a valid command to execute. (known as (1-1-2))</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RD_QUAD_IO</name>
              <description>Indicates quad address/data read is a valid command to execute. (known as (1-4-4))</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RD_QUAD_O</name>
              <description>Indicates quad data read is a valid command to execute. (known as (1-1-4))</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RD_DUAL_IO</name>
              <description>Indicates dual address/data read is a valid command to execute. (known as (1-2-2))</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RD_DUAL_I</name>
              <description>Indicates dual data read is a valid command to execute. (known as (1-1-2))</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FRD_SINGLE</name>
              <description>Indicates fast read command is a valid command to execute. (known as (1-1-1))</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FLASE_SIZE</name>
          <addressOffset>0x00000124</addressOffset>
          <size>32</size>
          <description>Flash Size Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FLASH_SIZE</name>
              <description>Indicates the size of flash to select the target SPI Flash in auto mode. The number is an exponent of 2 (Flash size) -12 (the smallest flash size is 4kB). 
Ex: If flash size is 4MB (22-bit), set FLASH_SIZE = 10 (22-12).</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FLUSH_FIFO</name>
          <addressOffset>0x00000128</addressOffset>
          <size>32</size>
          <description>Flush FIFO Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FLUSH_ST_FIFO</name>
              <description>Clear all data in the ST_FIFO when writing to FLUSH_ST_FIFO register.</description>
              <bitRange>[2:2]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>FLUSH_DR_FIFO</name>
              <description>Clear all data in the TX_FIFO and RX_FIFO when writing to FLUSH_DR_FIFOregister.</description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>FLUSH_ALL</name>
              <description>Clear all data in all FIFO (include TX_FIFO, RX_FIFO and ST_FIFO) and reset all FSM when writing to FLUSH_ALL register.</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DUM_BYTE</name>
          <addressOffset>0x0000012C</addressOffset>
          <size>32</size>
          <description>Dummy byte value</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DUM_BYTE_VAL</name>
              <description>Push dummy byte value.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TX_NDF</name>
          <addressOffset>0x00000130</addressOffset>
          <size>32</size>
          <description>TX_NDF</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TX_NDF</name>
              <description>Indicates a number of data frames (Unit: Byte). After transmitting command and address, SPIC transmits data continuously until data frames are equal to TX_NDF. TX_NDF can set larger than TX_FIFO size.</description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DEVICE_INFO</name>
          <addressOffset>0x00000134</addressOffset>
          <size>32</size>
          <description>Device info</description>
          <resetValue>0x00000118</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA_UNIT_4B</name>
              <description>Set (1) when the SPI device stores 4-byte data for each address.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DQ16_DATA_CH</name>
              <description>Set (1) when DQ16 PSRAM uses 16-bit data channel.
When DQ16_DATA_CH = 1'b1, set CTRLR0[19:18] DATA_CH = 2'b00.</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DATA_UNIT_2B</name>
              <description>Set (1) when the SPI device stores 2-byte data for each address.
Note: Available only if configuration of PSRAM_EN is defined.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>JEDEC_P2CMF</name>
              <description>Set (1) when the SPI cmd is JEDEC Profile 2.0 Command Modifier Formats. (6-byte command and address)
Note: Available only if configuration of PSRAM_EN is defined.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PSRAM</name>
              <description>Set (1) when the SPI device is PSRAM. PSRAM will disable WEN and RDSR in auto write.
Note: Available only if configuration of PSRAM_EN is defined.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NAND_FLASH</name>
              <description>Set (1) when the SPI device is NAND Flash. (not support yet)
Note: Available only if configuration of NAND_EN is defined.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NOR_FLASH</name>
              <description>Set (1) when the SPI device is NOR Flash.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ATOM_SIZE</name>
              <description>Set (0) when the atomic size of SPI device is 1-byte.
Set (1) when the atomic size of SPI device is 2-byte. (Usually using when OPI and DDR are enabled)
Set (2) when the atomic size of SPI device is 4-byte. (Usually using when DQ16 and DDR are enabled)
Set (3): reserved</description>
              <bitRange>[7:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RD_PAGE_EN</name>
              <description>Enable SPIC to chop the burst read command across page boundaries in auto mode.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WR_PAGE_EN</name>
              <description>Enable SPIC to chop the burst write command across page boundaries in auto mode.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PAGE_SIZE</name>
              <description>The page size of the SPI device (byte) = 2^(PAGE_SIZE)
eg. If the page size of the SPI Flash is 256-byte. PAGE_SIZE should be set to 8.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TPR0</name>
          <addressOffset>0x00000138</addressOffset>
          <size>32</size>
          <description>Timing parameters</description>
          <resetValue>0x00100000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CS_TCEM</name>
              <description>Set to chop auto cmd when CSN low pulse width = (CS_TCEM*32) bus_clk. If set CS_TCEM = 0 will disable this function.
ex. PSRAM tCEM = 4us, SPIC frequency = 100Mhz. 
CS_TCEM = ((4000 ns/10 ns)/32) - BYTE_DELAY = 12 (0xc) - BYTE_DELAY
If ((16*baud_rate)/data_channel) &lt;=32. BYTE_DELAY = 0.
If ((16*baud_rate)/data_channel) &gt; 32. BYTE_DELAY = (((16*baud_rate)/data_channel) - 32)/32.
ex. If baud_rate = 3, data_channel = 1. 
BYTE_DELAY = (((16*3)/1) - 32)/32 = 16/32 = 0.5
Therefore, BYTE_DELAY should be 1 in this example.
Note: Available only if configuration of PSRAM_EN is defined.</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CS_SEQ_TIMEOUT</name>
              <description>The timeout setting of auto command after sequential read command. If set CS_SEQ_TIMEOUT = 0x00 will disable this function. 
If set CS_SEQ_TIMEOUT &gt; 0x00, SPIC will exit sequential transaction read and inactive CS when there is no auto read/write command for (CS_SEQ_TIMEOUT *4) bus_clocks.</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CS_ACTIVE_HOLD</name>
              <description>For Flash chip select active hold time after SCLK rising edge (refer to tSLCH/CHSH, tCSS/tCSH)
Note: Wait most 16 bus_clk cycles before CS inactive. (Implement CS_ACTIVE_Hold timing only, CS_ACTIVE_Setup timing using D-PHY to shift)</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CS_H_WR_DUM_LEN</name>
              <description>Dummy cycle between sending write command to SPI Flash. Using the dummy cycles to avoid the timing violation of CS high time.</description>
              <bitRange>[11:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CS_H_RD_DUM_LEN</name>
              <description>Dummy cycle between sending read command to SPI Flash. Using the dummy cycles to avoid the timing violation of CS high time.</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AUTO_LENGTH2</name>
          <addressOffset>0x0000013C</addressOffset>
          <size>32</size>
          <description>Auto Address Length Register 2</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>WR_DUMMY_LENGTH</name>
              <description>Indicates delay cycles for transmitting data in auto mode.
It is referenced by bus_clk.
Note: Available only if configuration of PSRAM_EN is defined.</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TPR1</name>
          <addressOffset>0x00000140</addressOffset>
          <size>32</size>
          <description>Timing Parameters Register 1</description>
          <resetValue>0x00401001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CR_TPWR</name>
              <description>It is used to configure the cycle counts before spi_csn becomes low when spi_pwr turns from low to high</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CR_IDLE_WINDOW</name>
              <description>It is used to configure the cycle counts before turn off the spi_pwr when SPIC is IDLE.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CR_ACTIVE_SETUP</name>
              <description>It is used to configure the setup time before the first edge (rising edge for mode0 and falling edge for mode3) of spi_sclk(refer to tCSS or tSLCH ).
Note: It can't be configured 0x0 (if you configure 0x0 to this 4 bits field, this field will not be updated).</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ST_DR0</name>
          <addressOffset>0x00000180</addressOffset>
          <size>32</size>
          <description>Status Data Register 0</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ST_DR0</name>
              <description>It is a data buffer with 8-bit width FIFO.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ST_DR1</name>
          <addressOffset>0x00000184</addressOffset>
          <size>32</size>
          <description>Status Data Register 1</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ST_DR1</name>
              <description>It is a data buffer with 8-bit width FIFO.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ST_DR2</name>
          <addressOffset>0x00000188</addressOffset>
          <size>32</size>
          <description>Status Data Register 2</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ST_DR2</name>
              <description>It is a data buffer with 8-bit width FIFO.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ST_DR3</name>
          <addressOffset>0x0000018C</addressOffset>
          <size>32</size>
          <description>Status Data Register 3</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ST_DR3</name>
              <description>It is a data buffer with 8-bit width FIFO.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ST_DR4</name>
          <addressOffset>0x00000190</addressOffset>
          <size>32</size>
          <description>Status Data Register 4</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ST_DR4</name>
              <description>It is a data buffer with 8-bit width FIFO.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ST_DR5</name>
          <addressOffset>0x00000194</addressOffset>
          <size>32</size>
          <description>Status Data Register 5</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ST_DR5</name>
              <description>It is a data buffer with 8-bit width FIFO.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ST_DR6</name>
          <addressOffset>0x00000198</addressOffset>
          <size>32</size>
          <description>Status Data Register 6</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ST_DR6</name>
              <description>It is a data buffer with 8-bit width FIFO.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ST_DR7</name>
          <addressOffset>0x0000019C</addressOffset>
          <size>32</size>
          <description>Status Data Register 7</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ST_DR7</name>
              <description>It is a data buffer with 8-bit width FIFO.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ST_DR8</name>
          <addressOffset>0x000001A0</addressOffset>
          <size>32</size>
          <description>Status Data Register 8</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ST_DR8</name>
              <description>It is a data buffer with 8-bit width FIFO.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ST_DR9</name>
          <addressOffset>0x000001A4</addressOffset>
          <size>32</size>
          <description>Status Data Register 9</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ST_DR9</name>
              <description>It is a data buffer with 8-bit width FIFO.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ST_DR10</name>
          <addressOffset>0x000001A8</addressOffset>
          <size>32</size>
          <description>Status Data Register 10</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ST_DR10</name>
              <description>It is a data buffer with 8-bit width FIFO.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ST_DR11</name>
          <addressOffset>0x000001AC</addressOffset>
          <size>32</size>
          <description>Status Data Register 11</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ST_DR11</name>
              <description>It is a data buffer with 8-bit width FIFO.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ST_DR12</name>
          <addressOffset>0x000001B0</addressOffset>
          <size>32</size>
          <description>Status Data Register 12</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ST_DR12</name>
              <description>It is a data buffer with 8-bit width FIFO.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ST_DR13</name>
          <addressOffset>0x000001B4</addressOffset>
          <size>32</size>
          <description>Status Data Register 13</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ST_DR13</name>
              <description>It is a data buffer with 8-bit width FIFO.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ST_DR14</name>
          <addressOffset>0x000001B8</addressOffset>
          <size>32</size>
          <description>Status Data Register 14</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ST_DR14</name>
              <description>It is a data buffer with 8-bit width FIFO.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ST_DR15</name>
          <addressOffset>0x000001BC</addressOffset>
          <size>32</size>
          <description>Status Data Register 15</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ST_DR15</name>
              <description>It is a data buffer with 8-bit width FIFO.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STFLR</name>
          <addressOffset>0x000001C0</addressOffset>
          <size>32</size>
          <description>Status FIFO level Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>STFLR</name>
              <description>Status FIFO level. Indicates the FIFO entries of valid data in status data.
Note: Available only if configuration of NAND_EN is defined.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PAGE_READ</name>
          <addressOffset>0x000001D0</addressOffset>
          <size>32</size>
          <description>Page Read Command of NAND Flash</description>
          <resetValue>0x000C0013</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PAGE_RD_ADDR_LEN</name>
              <description>Indicates number of bytes in address phase in page read command.
Note: Available only if configuration of NAND_EN is defined.</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PAGE_RD_CH</name>
              <description>Indicates channel number of command and address phase in transmitting page read command.
0: single channel
1: dual channels
2: quad channels
3: octal channel
Note: Available only if configuration of NAND_EN is defined.</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PAGE_RD_CMD</name>
              <description>Indicates SPI Flash command value of page read command
Note: Available only if configuration of NAND_EN is defined.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>kscan</name>
      <baseAddress>0x41013000</baseAddress>
      <size>0x0000005C</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x0000005C</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>KS_CLK_DIV</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description>clock division register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ks_clk_div</name>
              <description>scan clock = bus clock/(keyscan_clk_div+1)</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>KS_TIM_CFG0</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description>Key-Scan configure register 0</description>
          <resetValue>0x03030000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ks_post_guard_timer</name>
              <description>Post guard time for key column, post guard time = scan_clk * reg_col_gt_post_sel</description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ks_pre_guard_timer</name>
              <description>Pre guard time for key column, pre guard time = scan_clk * reg_col_gt_pre_sel</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ks_deb_timer</name>
              <description>Debounce counter n*scan_clk</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>KS_TIM_CFG1</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description>Key-Scan configure register 1</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ks_interval_timer</name>
              <description>Scan interval counter n*scan_clk</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ks_release_timer</name>
              <description>Release detect counter n*scan_clk</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>KS_CTRL</name>
          <addressOffset>0x0000000C</addressOffset>
          <size>32</size>
          <description>Key-Scan control register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ks_work_mode</name>
              <description>Work mode
*0x1: Event Trigger Mode
*0x0: Regular Scan Mode</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ks_busy_status</name>
              <description>FSM busy status</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ks_run_enable</name>
              <description>Enable internal Key-Scan scan clock. The Key-Scan clock enable must be after Key-Scan configuration is done. 
*0x1: Key-Scan clock enabled (HW FSM starts to run). 
*0x0: Key-Scan clock disabled (HW FSM stops).</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>KS_FIFO_CFG</name>
          <addressOffset>0x00000010</addressOffset>
          <size>32</size>
          <description>FIFO configuration register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ks_fifo_limit_level</name>
              <description>Limit the max allowable key number be pressed at a time
0x0: no limit
0x1: only one scan data is allowable in each key scan
...
0x6: Max 6 scan data is allowable in each key scan
0x7 ~ 0xf: DO NOT USE</description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ks_fifo_th_level</name>
              <description>FIFO threshold setup</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ks_fifo_ov_ctrl</name>
              <description>FIFO overflow control
0x0: rejects the new scan data when FIFO is full
0x1: discard the oldest scan data when FIFO is full</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ks_fifo_clr</name>
              <description>Write 1to clear FIFO data</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>KS_COL_CFG</name>
          <addressOffset>0x00000014</addressOffset>
          <size>32</size>
          <description>column selection register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ks_col_sel</name>
              <description>The control register to define which column is used.
*0x0: No key column selected
*0x1: Key column 0 selected
*0x2: Key column 1 selected
*0x3: Key column 0 and column 1 selected
*0x4: Key column 2 selected
*...</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>KS_ROW_CFG</name>
          <addressOffset>0x00000018</addressOffset>
          <size>32</size>
          <description>row selection register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ks_row_sel</name>
              <description>The control register to define which row is used.
*0x0: No key row selected
*0x1: Key row 0 selected
*0x2: Key row 1 selected
*0x3: Key row 0 and row 1 selected
*0x4: Key row 2 selected
*...</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>KS_DATA_NUM</name>
          <addressOffset>0x0000001C</addressOffset>
          <size>32</size>
          <description>FIFO status</description>
          <resetValue>0x00010000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ks_fifo_full</name>
              <description>FIFO full status</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ks_fifo_empty</name>
              <description>FIFO empty status</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ks_fifo_data_level</name>
              <description>Number of entry in FIFO</description>
              <bitRange>[4:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>KS_DATA</name>
          <addressOffset>0x00000020</addressOffset>
          <size>32</size>
          <description>Key-Scan data register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ks_data</name>
              <description>When reading this register, these bits return the value in the Event FIFO.
*Bit[11:8]: press or release event
**0x0: release event
**0x1: press event
*Bit[7:4]: row index
*Bit[3:0]: column index</description>
              <bitRange>[11:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>KS_IMR</name>
          <addressOffset>0x00000024</addressOffset>
          <size>32</size>
          <description>interrupt mask register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ks_all_default_int_mask</name>
              <description>0x0: Mask all default interrupt</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ks_stuck_event_int_mask</name>
              <description>0x0: Mask stuck event interrupt</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ks_scan_event_int_mask</name>
              <description>0x0: Mask scan event interrupt</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ks_fifo_limit_int_mask</name>
              <description>0x0: Mask FIFO limit interrupt</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ks_fifo_ov_int_mask</name>
              <description>0x0: Mask FIFO overflow interrupt</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ks_fifo_full_int_mask</name>
              <description>0x0: Mask FIFO full interrupt</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ks_scan_finish_int_mask</name>
              <description>0x0: Mask scan finish interrupt</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ks_fifo_notempty_int_mask</name>
              <description>0x0: Mask FIFO nonempty interrupt</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ks_all_release_int_mask</name>
              <description>0x0: Mask All Release interrupt</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>KS_ICR</name>
          <addressOffset>0x00000028</addressOffset>
          <size>32</size>
          <description>interrupt clear register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ks_all_default_int_clr</name>
              <description>Clear All Default interrupt flag
Write '1' to clear</description>
              <bitRange>[8:8]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>ks_stuck_int_clr</name>
              <description>Clear Stuck interrupt flag
Write '1' to clear</description>
              <bitRange>[7:7]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>ks_fifo_limit_int_clr</name>
              <description>Clear FIFO limit interrupt flag
Write '1' to clear</description>
              <bitRange>[5:5]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>ks_fifo_ov_int_clr</name>
              <description>Clear FIFO overflow interrupt flag
Write '1' to clear</description>
              <bitRange>[4:4]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>ks_scan_finish_int_clr</name>
              <description>Clear scan finish interrupt flag
Write '1' to clear</description>
              <bitRange>[2:2]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>ks_all_release_int_clr</name>
              <description>Clear all release interrupt flag
Write '1' to clear</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>KS_ISR</name>
          <addressOffset>0x0000002C</addressOffset>
          <size>32</size>
          <description>interrupt status register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ks_all_default_int_status</name>
              <description>Masked All Default interrupt status, means row status equal to ks_row_default_status</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ks_stuck_event_int_status</name>
              <description>Masked Stuck event interrupt status</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ks_scan_event_int_status</name>
              <description>Masked Scan event interrupt status</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ks_fifo_limit_int_status</name>
              <description>Masked FIFO limit interrupt status</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ks_fifo_ov_int_status</name>
              <description>Masked FIFO overflow interrupt status</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ks_fifo_full_int_status</name>
              <description>Masked FIFO full interrupt status</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ks_scan_finish_int_status</name>
              <description>Masked Scan finish interrupt status</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ks_fifo_notempty_int_status</name>
              <description>Masked FIFO nonempty interrupt status</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ks_all_release_int_status</name>
              <description>Masked All release interrupt status</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>KS_ISR_RAW</name>
          <addressOffset>0x00000030</addressOffset>
          <size>32</size>
          <description>raw interrupt flag register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ks_all_default_raw_int_status</name>
              <description>All default interrupt, means row status equal to ks_row_default_status</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ks_stuck_event_raw_int_status</name>
              <description>Key stuck event raw interrupt</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ks_scan_event_raw_int_status</name>
              <description>Scan event raw interrupt, auto clear when the item is read</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ks_fifo_limit_raw_int_status</name>
              <description>FIFO limit raw interrupt</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ks_fifo_ov_raw_int_status</name>
              <description>FIFO overflow raw interrupt</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ks_fifo_full_raw_int_status</name>
              <description>FIFO full raw interrupt</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ks_scan_finish_raw_int_status</name>
              <description>Scan finish raw interrupt</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ks_fifo_notempty_raw_int_status</name>
              <description>FIFO nonempty raw interrupt
Auto clear when FIFO is empty</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ks_all_release_raw_int_status</name>
              <description>All Release raw interrupt</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>KS_DISCHARGED_CTRL</name>
          <addressOffset>0x00000034</addressOffset>
          <size>32</size>
          <description>keyboard discharged register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ks_discharge</name>
              <description>1: The keyboard is discharged before scan.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ks_interval_pol</name>
              <description>1: The keyboard is discharged at interval (FSM!=scan idle allrelease).</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>KS_STUCK_CFG0</name>
          <addressOffset>0x0000003C</addressOffset>
          <size>32</size>
          <description>Key-Scan Stuck Configuration Register</description>
          <resetValue>0x7FFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ks_auto_check_stuck_enable</name>
              <description>Enable auto check stuck or not
*0x1: Key-Scan auto chek stuck enabled.
*0x0: Key-Scan auto check stuck disabled.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ks_stuck_time_threshold</name>
              <description>When the threshold is exceeded, it is considered to be stuck event or release stuck key, this counter is in scan clk.</description>
              <bitRange>[30:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>KS_STUCK_CFG1</name>
          <addressOffset>0x00000040</addressOffset>
          <size>32</size>
          <description>Key-Scan Stuck Configuration Register 1</description>
          <resetValue>0x000000FF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ks_row_default_status</name>
              <description>Keyboard row default status:
*0b11111111: No key row is stucked
*0b11111110: Key row 0 is stucked
*0b11111101: Key row 1 is stucked
*0b11111100: Key row 0 and column 1 are stucked
*0b11111011: Key row 2 is stucked* 
 ...</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>KS_STUCK_CFG2</name>
          <addressOffset>0x00000044</addressOffset>
          <size>32</size>
          <description>Key-Scan Stuck Configuration Register 2</description>
          <resetValue>0x00002000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ks_stuckrow_detect_enable</name>
              <description>Enable stuckrow detect function, and row gpio will be "no pull" state in ks_stuckrow_detect_time_interval</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ks_stuckrow_detect_time</name>
              <description>Key-Scan stuckrow detect timer, this counter is in clk_131k</description>
              <bitRange>[23:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ks_stuckrow_detect_time_interval</name>
              <description>Key-Scan stuckrow detect interval timer, this counter is in clk_131k</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>KS_STUCK_KEY_STATUS1</name>
          <addressOffset>0x00000048</addressOffset>
          <size>32</size>
          <description>Key-Scan Status Register 1</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ks_key_status1</name>
              <description>Each bit means the corresponding key's stuck state
*0x1: key stucked
*0x0: key unstucked
Corresponding:
key_status1[7:0] - row0[7:0]
key_status1[15:8] - row1[7:0]
key_status1[13:16] - row2[7:0]
key_status1[31:24] - row3[7:0]</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>KS_STUCK_KEY_STATUS2</name>
          <addressOffset>0x0000004C</addressOffset>
          <size>32</size>
          <description>Key-Scan Status Register 2</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ks_key_status2</name>
              <description>Each bit means the corresponding key's stuck state
*0x1: key stucked
*0x0: key unstucked
Corresponding:
key_status2[7:0] - row4[7:0]
key_status2[15:8] - row5[7:0]
key_status2[13:16] - row6[7:0]
key_status2[31:24] - row7[7:0]</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>KS_STUCK_KEY_ROW_STATUS1</name>
          <addressOffset>0x00000050</addressOffset>
          <size>32</size>
          <description>Key-Scan Row Status Register 1</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ks_row_status</name>
              <description>Each bit means the corresponding key row's stuck state
*0x1: row stucked
*0x0: row unstucked
Corresponding: row_status[7:0] - row[7:0]</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>KS_DUMMY</name>
          <addressOffset>0x00000058</addressOffset>
          <size>32</size>
          <description>Key-Scan Dummy Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>Reserved for HW</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>page0</name>
      <groupName>WIFI</groupName>
      <baseAddress>0x40000000</baseAddress>
      <size>0x00000100</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00000100</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>REG_SYS_PWC_ISO_CTRL</name>
          <addressOffset>0x00000000</addressOffset>
          <size>16</size>
          <description></description>
          <resetValue>0x00001B24</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_WL_PWR_SWITCH_DMY_EN</name>
              <description>1:enable wl_dummy_en when wlan is switching power mode
0:disable wl_dummy_en when wlan is switching power mode</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WL_SWR_STS_REQ_ACT</name>
              <description>000: RSVD     
001: state1  0.7/PC/PFM
010: state2  0.8/PC/PFM 
011: state3  0.9/PC/PFM
100: state4  0.9/SLP/PFM  
101: state5  0.9/SLP/PWM 
110: state6  0.9/NORM/PWM 
111: state7  1.0/NORM/PWM</description>
              <bitRange>[11:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ISO_MAC</name>
              <description>Isolation control for MAC, 1: isolation; 0: attach</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WL_SWR_STS_REQ_LPS</name>
              <description>000: RSVD     
001: state1  0.7/PC/PFM
010: state2  0.8/PC/PFM 
011: state3  0.9/PC/PFM
100: state4  0.9/SLP/PFM  
101: state5  0.9/SLP/PWM 
110: state6  0.9/NORM/PWM 
111: state7  1.0/NORM/PWM</description>
              <bitRange>[7:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WL_retain_en</name>
              <description>1 to 0:gen req to restore register in power on flow
1:gen req to backup register in power on flow</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SPC_MAC_EN</name>
              <description>1: Enable WLOFF power cut</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WL_CLK_CTRL</name>
          <addressOffset>0x00000002</addressOffset>
          <size>16</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_WLON_SWITCH_TSF_EN</name>
              <description>enable wlpmc switch TSF clock to MAC clock</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WLOFF_SWITCH_TSF_EN</name>
              <description>enable wlpmc switch TSF clock to 32K clock</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WL_CKEN_IQDUMP</name>
              <description>0: disable clock for iqdump (LA MODE)
1: enable clock for iqdump (LA MODE)
same clock source as security clock</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_IS_SCH_CLK_INSLP_V2</name>
              <description>WL TSF clock status:
0: MAC clock
1: 32K clock</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_TSF_CKSLP_SEL</name>
              <description>1: TSF clock switch to 32.768KHz; 0: TSF clock switch to MAC clock</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WL_CKTSF_EN</name>
              <description>1: enable tsf clock; 0: gated</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WL_FQSEL_CK32K</name>
              <description>1:32K frequency select 32.768KHz 0:32K frequency select 32KHz</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CKSL_CK32K</name>
              <description>1:select MAC internal 32K clk, 0:select MAC external 32K clk</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WL_CK32K_EN</name>
              <description>1: enable 32k clock; 0: gated</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WL_CKMCU_EN</name>
              <description>1: enable MCU engine clock; 0: gated</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WL_CKSEC_EN</name>
              <description>1: enable MAC security engine clock; 0: gated</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WL_CKMAC_EN</name>
              <description>1: enable MAC clock; 0: gated</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WL_FUNC_EN</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_WL_SEL_SW_SI</name>
              <description>indicate SW use indirect path to access WLRFC register</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BB_SAVE_EN</name>
              <description>1 to 0:gen req to restore register in power on flow
1:gen req to backup register in power on flow</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FEN_BBRSTB_V2</name>
              <description>When this bit is set to "0", CCK and OFDM are disabled, and clock are gated. Otherwise, CCK and OFDM are enabled.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FEN_BB_GLB_RSTn_V2</name>
              <description>When this bit is set to "0", whole BB is reset. When this bit is set, BB is enabled.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>Reserved</description>
              <bitRange>[15:12]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_FEN_MLPLT</name>
              <description></description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RFAFE_HW33PDB</name>
              <description></description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FEN_WLON</name>
              <description>1: enable WL partial ON; 0: reset</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FEN_WLMCU</name>
              <description>1: enable WLMCU; 0: reset</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FEN_MACREG</name>
              <description>1: enable MAC REG; 0: reset</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FEN_WLOFF</name>
              <description>1: enable WLOFF; 0: reset</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FEN_MAC_PMC</name>
              <description>1: enable MAC PMC; 0: reset</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CLKDIV_CKSEL</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00540000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_WL_CKRFC_EN</name>
              <description>1: enable WLRFC clock; 0: gated</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RFC_CLK_SEL</name>
              <description>11/10:40M
01:80M
00:160M</description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SEC_CLK_SEL</name>
              <description>11/10:40M
01:80M
00:160M</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MAC_CLK_SEL</name>
              <description>11/10:20M
01:40M
00:80M</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CPU_CLK_SEL</name>
              <description></description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WL_CLK_SYNC</name>
              <description>1: sync 40M/80M clock  phase with PLL</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WL_RFC_PHASE</name>
              <description>80M WLRFC clock phase control</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WL_40M_PHASE</name>
              <description>40M MAC clock phase control</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WL_80M_PHASE</name>
              <description>80M security clock phase control</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CPWM</name>
          <addressOffset>0x0000000C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_CPWM_TOGGLING</name>
              <description>Toggling bit : one bit sequence number bit. When this bit is toggled, interrupt is send to HISR.CPWMINT.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CPWM_MOD</name>
              <description>The current power mode index.</description>
              <bitRange>[14:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RPWM</name>
          <addressOffset>0x00000014</addressOffset>
          <size>32</size>
          <description>register for hrpwm</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RPWM_TOGGLING</name>
              <description>Toggling bit : one bit sequence number bit. When this bit is toggled, interrupt is send to FISR.RPWMINT.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RPWM_MOD</name>
              <description>The current power mode index.</description>
              <bitRange>[14:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RSV_CTRL</name>
          <addressOffset>0x0000001C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_HREG_DBG</name>
              <description>HREG Access Debug information</description>
              <bitRange>[23:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_LOCK_REGALL_EN</name>
              <description>1:Enable 'Locked All' setting by Hardware, 0: Hardware Enable 'Locked All' denied.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PRST_WLMAC</name>
              <description></description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WLOCK_1C_B6</name>
              <description>1:Register Write Locked, 0: Register Accessible by SW/FW (offset:0x001C[6])</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WLOCK_40</name>
              <description>1:Register Write Locked, 0: Register Accessible by SW/FW (offset:0x0040h~0x0043h)</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WLOCK_08</name>
              <description>1:Register Write Locked, 0: Register Accessible by SW/FW (offset:0x0008h~0x000Bh)</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WLOCK_04</name>
              <description>1:Register Write Locked, 0: Register Accessible by SW/FW (offset:0x0004h~0x0007h)</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WLOCK_00</name>
              <description>1:Register Write Locked, 0: Register Accessible by SW/FW (offset:0x0000h~0x0003h)</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WLOCK_ALL</name>
              <description>1:Register Write Locked, 0: Register Accessible by SW/FW (offset:0x0000h~0x00FFh)</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WL_PMC_CTRL</name>
          <addressOffset>0x00000020</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x03001F00</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_WLPON_OPT_EXCKN2A</name>
              <description></description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WLPON_OPT_EXCKP2A</name>
              <description>PON option to enable AFE clock</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WL_PMC_CNT_PAR</name>
              <description>WL PMC FSM counting unit.</description>
              <bitRange>[13:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CUR_PST_IS_LPS</name>
              <description>indicate current WL power status is LPS mode</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_WL_PMC_LPS_EN</name>
              <description>Inform WLAN PMC FSM to enter LPS mode. 
(auto clear when ready)</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WL_PMC_OFFMAC</name>
              <description>Inform WLAN PMC FSM to power OFF mode, include clock, isolation, power control for MAC only (clear when Power Ready)</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WL_PMC_ONMAC</name>
              <description>Inform WLAN PMC FSM to power On mode, include clock, isolation, power control for MAC only (clear when Power Ready)</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WL_SYSCONFIG</name>
          <addressOffset>0x00000024</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_DIS_TIMEOUT_IO</name>
              <description>Disabled timeout of IO wrapper</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MCU_WDT_MODE</name>
              <description></description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WLCPU_ANA_PORT_IDLE</name>
              <description></description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_WLCPU_MAC_PORT_IDLE</name>
              <description></description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_P0_TBTT_TIMER</name>
          <addressOffset>0x00000028</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>P0_ELY_BCNINT_CNT</name>
              <description>Unit: bcn_space
the total time to next specified TBTT is (new_ely_agg_cnt - 1) * r_bcn_space(0x554) + (beacon_cnt_down - 1)* 1ms + (cnt_128us + 1)* 128us</description>
              <bitRange>[30:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>P0_BCN_CNT_DOWN</name>
              <description>Unit: 1ms
beacon_cnt_down - 1</description>
              <bitRange>[18:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>P0_128US_CNT</name>
              <description>Unit: 128us</description>
              <bitRange>[2:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_LPSOFFLOAD_CTL_BCUT</name>
          <addressOffset>0x0000002C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0000000C</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_bypass_hioe_chn_off_B</name>
              <description>when set 1, bypass request to CHOFF of hioe</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_bypass_hioe_chn_on_B</name>
              <description>when set 1, bypass request to CHON of hioe</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_hw_auto_enter_lps_en_B</name>
              <description>when set 1, enable hw auto enter lps when triggered by lpsoffload</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_rxbcn_lpsoffload_en_B</name>
              <description>when set 1, enable lpsoffload function</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AFC_CTRL0</name>
          <addressOffset>0x00000030</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000040</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_POW_AFE_REQ</name>
              <description>AFE power on request to afe_ctrl
1:request to turn on AFE pwr
0:turn off AFE pwr</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WL_XTAL_REQ_ACT</name>
              <description>000: xtal off
001: xtal lps mode gating 40M
010: xtal lps mode enable 40M
011: xtal normal mode
100:xtal hp mode</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WL_XTAL_REQ_LPS</name>
              <description>000: xtal off
001: xtal lps mode gating 40M
010: xtal lps mode enable 40M
011: xtal normal mode
100:xtal hp mode</description>
              <bitRange>[3:1]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FSIMR_V1</name>
          <addressOffset>0x00000040</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FS_BTON_STS_UPDATE_INT_EN</name>
              <description>BTON status update interrupt
When 0x78[31] toggled, this interrupt is issue to indicate the status updated.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FSISR_V1</name>
          <addressOffset>0x00000044</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FS_BTON_STS_UPDATE_INT</name>
              <description>BTON status update interrupt
When 0x78[31] toggled, this interrupt is issue to indicate the status updated.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FW_DBG0</name>
          <addressOffset>0x00000050</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FW_DBG0</name>
              <description>fw debug0</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FW_DBG1</name>
          <addressOffset>0x00000054</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FW_DBG1</name>
              <description>fw debug1</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FW_DBG2</name>
          <addressOffset>0x00000058</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FW_DBG2</name>
              <description>fw debug2</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FW_DBG3</name>
          <addressOffset>0x0000005C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FW_DBG3</name>
              <description>fw debug3</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FW_DBG4</name>
          <addressOffset>0x00000060</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FW_DBG4</name>
              <description>fw debug4</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FW_DBG5</name>
          <addressOffset>0x00000064</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FW_DBG5</name>
              <description>fw debug5</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FW_DBG6</name>
          <addressOffset>0x00000068</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FW_DBG6</name>
              <description>fw debug6</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FW_DBG7</name>
          <addressOffset>0x0000006C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FW_DBG7</name>
              <description>fw debug7</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WL_PIN_FUNC_CTRL0</name>
          <addressOffset>0x00000070</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_WL_DBG_SEL</name>
              <description>WL debug select</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WL_BTCOEX_CTRL</name>
          <addressOffset>0x00000074</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0000000A</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_LTECOEX_DBGEN</name>
              <description></description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BTMode_V1</name>
              <description>Bluetooth Mode</description>
              <bitRange>[18:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EnBT_V1</name>
              <description>Enable PTA ( from BT side)</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WL_DPDT1_IDV</name>
              <description></description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WL_DPDT1_MUX</name>
              <description></description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WL_DPDT0_IDV</name>
              <description></description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WL_DPDT0_MUX</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SCOREBOARD_RD_BT2WL</name>
          <addressOffset>0x00000078</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RD_BT2WL_INFO</name>
              <description>Read Data :  WL TO BT INFO, WLON Status Report</description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DBG_PORT_REG</name>
          <addressOffset>0x0000007C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_DEBUG_ST</name>
              <description>Debug signals, sel by 70[31:24]</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WL_MCUFW_CTRL</name>
          <addressOffset>0x00000080</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FW_INIT_RDY</name>
              <description>CPU fw initialize ready, set by CPU(txrpt info update,used in ptcl)</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FW_DBG8</name>
          <addressOffset>0x00000084</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BLK_TST</name>
              <description>fw debug8</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FW_DBG9</name>
          <addressOffset>0x00000088</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_HOST_MSG_E1</name>
              <description>User Defined Message</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HOST_MSG_E0</name>
              <description>User Defined Message</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FW_DBG10</name>
          <addressOffset>0x0000008C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_HOST_MSG_E3</name>
              <description>User Defined Message</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HOST_MSG_E2</name>
              <description>User Defined Message</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_LPS_CTRL</name>
          <addressOffset>0x00000090</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x21FF8000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description></description>
              <bitRange>[31:30]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_WL_LPS_OPT_SAVE_REG</name>
              <description>LPS option to save retention FF
1: enable request to save retention FF
0: disable request to save retention FF</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LPS_MEMPM_PHYON</name>
              <description></description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LPS_MEMPM_MACOFF_FTC_SHR</name>
              <description>MAC OFF  FTC memory power mode when enable LPS memory power mode(for rxpktbuf/ txpktbuf low 24k[SHARE with system])
00 : normal
01 : NAP
10 : RET
11 : SLP</description>
              <bitRange>[24:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LPS_MEMPM_MACOFF_FTC_TXRPT</name>
              <description>MAC OFF  FTC memory power mode when enable LPS memory power mode
(for txrptbuf)
00 : normal
01 : NAP
10 : RET
11 : SLP</description>
              <bitRange>[22:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LPS_MEMPM_MACON_FTC_TXPKT</name>
              <description>MAC ON FTC memory power mode when enable LPS memory power mode
(for txpktbuf high 8k)
00 : normal
01 : NAP
10 : RET
11 : SLP</description>
              <bitRange>[20:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LPS_MEMPM_MACOFF_FTC</name>
              <description>MAC OFF  FTC/SNPS memory power mode when enable LPS memory power mode
(for rxfifo/txfifo)
0 : normal
1 : NAP/LS</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LPS_MEMPM_MACOFF_SNPS</name>
              <description>MAC OFF SNPS memory power mode when enable LPS memory power mode(txllt/rc4/txoqt/keysrch/rxbacam/dmafifo)
0 : normal
1 : NAP</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LPS_MEMPM_MACOFF_PG_FTC</name>
              <description>MAC OFF FTC memory power mode when enable LPS memory power mode(for rxcsibuf)
00 : normal
01 : NAP
10 : RET
11 : SLP</description>
              <bitRange>[16:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WL_LPS_OPT_EMACFUN</name>
              <description>LPS option to reset WL MAC OFF block when enable WL MAC OFF power
1: not reset WL MAC OFF block
0: reset WL MAC OFF block</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WL_LPS_OPT_EPHYPWR</name>
              <description>LPS option to enable WL BB block power
1: Enable WL BB block power 
0: Disable WL BB block power</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WL_LPS_OPT_EMACPWR</name>
              <description>LPS option to enable WL MAC OFF block power
1: Enable WL MAC OFF block power 
0: Disable WL MAC OFF block power</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>rsvd</description>
              <bitRange>[7:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WL_LPS_MEMPM_EN</name>
              <description>enable LPS memory power mode control</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WL_NRM_MEMPM_SL</name>
              <description>MAC memory power mode when BIT_WL_LPS_MEMPM_EN is 0,
0 : Normal
1 : SD</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FW_DBG11</name>
          <addressOffset>0x00000094</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FW_DBG11</name>
              <description>fw debug11</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>reg_boot_reason</name>
          <addressOffset>0x00000098</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[31:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WL_WDT_PLFM</name>
              <description>(not used)</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WL_WDT_MCU</name>
              <description>(not used)</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SCOREBOARD_CTRL</name>
          <addressOffset>0x000000A0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BT_INT_EN</name>
              <description>For WL, write 1 to issue interrupt 
1 : Issue one INT to BT
0 : Don't care</description>
              <bitRange>[31:31]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_WL2BT_INFO</name>
              <description>WLON Status Report TO BTON</description>
              <bitRange>[30:24]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SYSON_FSM_MON_V1</name>
          <addressOffset>0x000000A4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>Reserved</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WLPMC_DEBUG_SEL</name>
              <description>debug select signal for WL PMC</description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WLPMC_DEBUG</name>
              <description>debug signal of WL PMC</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PMC_DBG_CTRL1</name>
          <addressOffset>0x000000A8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_PMC_WR_OVF</name>
              <description>PMC Write Access Timer Overflow(no use)</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_WLPMC_ERRINT</name>
              <description>WLPMC Error interrupt(tie 0)</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PMC_DBG_CTRL2_V1</name>
          <addressOffset>0x000000AC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>Reserved</description>
              <bitRange>[31:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SYSON_REG_ARB</name>
              <description>HW PMC Access Register Time Out Control(no use)</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SDM_IDR_CTRL0</name>
          <addressOffset>0x000000E8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_SDM_ADDR</name>
              <description>SDM register offset</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WL_CK32KGEN_RWD</name>
          <addressOffset>0x000000EC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_CK32GEN_RD</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SYS_CONFIG0</name>
          <addressOffset>0x000000F0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000080</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_IS_SCH_CLK_INSLP_V1</name>
              <description>WL TSF clock status:
0: MAC clock
1: 32K clock</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_VENDOR_ID_V1</name>
              <description>Vendor ID
[7:6] : Download FW version ; 
00: TSMC , 01: SMIC, 10: UMC
[5] ; 0 : Download FW , init BB and RF registers
         1 : Do not download FW and do not init BB and RF registers
[4] ; 0 : BT do not exist in IC
         1 : BT exist in IC</description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_PLL_CK_RDY</name>
              <description>indicate AFE PLL clock is ready</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>page1</name>
      <groupName>WIFI</groupName>
      <baseAddress>0x40000000</baseAddress>
      <size>0x00001200</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00001200</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>REG_CR</name>
          <addressOffset>0x00000100</addressOffset>
          <size>32</size>
          <description>MAC TOP Function enable</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DMACLBK</name>
              <description>[28:24] LBMODE
[4]dual-mac lbk, [3] no buffer, 1: no delay, 0: delay; [2] dmalbk, [1] no_txphy, [0] diglbk.
00000: Normal
01011: Single MAC Direct loopback (no HW encryption/decryption)
00011: Single MAC Delay Loopback (with HW encryption/decryption)</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_NO_TBUF</name>
              <description></description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DMALBK</name>
              <description></description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_NO_TXPHY</name>
              <description></description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIGLBK</name>
              <description></description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_NETYPE1</name>
              <description>Network Type for Port 1
00: No link
01: Link in ad hoc network
10: Link in infrastructure network
11 : AP mode
Default: 00b.</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_NETYPE0</name>
              <description>Network Type for port 0
00: No link
01: Link in ad hoc network
10: Link in infrastructure network
11 : AP mode
Default: 00b.</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_I2C_MAILBOX_EN</name>
              <description>Enable I2C mailbox</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MAC_SEC_EN</name>
              <description>Enable MAC security engine
When this bit is clear, security engine is reset</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ENSWBCN</name>
              <description>Enable SW TX beacon
0 : disable, beacon is DMAed from host memory by HW at BCNDMAINT
1 : enable, beacon is polled to DMA to TXBUF.
In both case, as long as a beacon frame is set in BCN page, MAC will automatically sent beacon frame automatically.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MACRXEN</name>
              <description>MAC Receiver Enable.
When set to 1, and the receive state machine is idle, the receive machine becomes active. This bit will read back as 1 whenever the receive state machine is active. After initial power-up, software must ensure that the receiver has completely reset before setting this bit.
1: Enable
0: Disable
Default: 0b.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MACTXEN</name>
              <description>MAC Transmitter Enable.
When set to 1, and the transmit state machine is idle, the transmit state machine becomes active. This bit will read back as 1 whenever the transmit state machine is active. After initial power-up, software must ensure that the transmitter has completely reset before setting this bit.
1: Enable
0: Disable
Default: 0b.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SCHEDULE_EN</name>
              <description>Schedule Enable.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PROTOCOL_EN</name>
              <description>protocol Block Function Enable.(FW2HW)</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXDMA_EN</name>
              <description>RXDMA Function Enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXDMA_EN</name>
              <description>TXDMA Function Enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HCI_RXDMA_EN</name>
              <description>HCI to RXDMA Interface Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HCI_TXDMA_EN</name>
              <description>HCI to TXDMA Interface Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[15:9]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TSF_CLK_STATE</name>
          <addressOffset>0x00000108</addressOffset>
          <size>16</size>
          <description>Beacon time reset value</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_CLK_TSF_IS32K</name>
              <description>Which Clock is Used by TSF Clock
1: 32K Clock
0: MAC Clock</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[14:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RXBCN_TIMEUP_COUNTER1_CTRL</name>
          <addressOffset>0x0000010A</addressOffset>
          <size>16</size>
          <description></description>
          <resetValue>0x0000001E</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RXBCN_TIMEUP_COUNT1</name>
              <description>rxbcn timeup counter1</description>
              <bitRange>[14:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RXBCN_TIMEUP_COUNT1_CLR</name>
              <description>clear rxbcn timeup counter1</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXBCN_TIMEUP_COUNT1_THRES</name>
              <description>threshold for rxbcn timeup counter,when 0x10A[14:8] equals to this value,generate interrupt</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TXDMA_PQ_MAP</name>
          <addressOffset>0x0000010C</addressOffset>
          <size>32</size>
          <description>RX DMA Fuction enable</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[31:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXDMA_CMQ_MAP</name>
              <description>00: Extra priority queue
01: Low priority queue
10: Normal priority queue
11: High priority queue</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXDMA_HIQ_MAP</name>
              <description>00: Extra priority queue
01: Low priority queue
10: Normal priority queue
11: High priority queue</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXDMA_MGQ_MAP</name>
              <description>00: Extra priority queue
01: Low priority queue
10: Normal priority queue
11: High priority queue</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXDMA_BKQ_MAP</name>
              <description>00: Extra priority queue
01: Low priority queue
10: Normal priority queue
11: High priority queue</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXDMA_BEQ_MAP</name>
              <description>00: Extra priority queue
01: Low priority queue
10: Normal priority queue
11: High priority queue</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXDMA_VIQ_MAP</name>
              <description>00: Extra priority queue
01: Low priority queue
10: Normal priority queue
11: High priority queue</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXDMA_VOQ_MAP</name>
              <description>00: Extra priority queue
01: Low priority queue
10: Normal priority queue
11: High priority queue</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXDMA_AGG_EN</name>
              <description>When this bit is set, then RXDMA will inform host to receive RX packets, when packet page number in RXFF exceeds the threshold set in RXDMA_AGG_PG_TH register.
When this bit is set, then page size of receive packet buffer shall be set larger than 64 bytes/page</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ENSHFT</name>
              <description>When this bit is set, RX shift to fit alignment is enabled.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXDMA_BW_EN</name>
              <description>Enable RXDMA Arbitrator priority for Host interface.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RXBCN_COUNTER_CTRL2</name>
          <addressOffset>0x00000110</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x000401E0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RXBCN_CNT</name>
              <description>statistic the times of RXBCN in RXBCN_CNT_PRD</description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RXBCN_TIMEUP_MIN</name>
              <description>lower limit of bcn_timeup. If the bcn_timeup less than BIT_RXBCN_TIMRUP_MIN, use the BIT_RXBCN_TIMRUP_MIN as bcn_timeup. UNIT: 32US. Default is 2ms</description>
              <bitRange>[23:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXBCN_TIMRUP_MAX</name>
              <description>upper limit of bcn_timeup. If the bcn_timeup greater than BIT_RXBCN_TIMRUP_MAX, use the BIT_RXBCN_TIMRUP_MAX as bcn_timeup. UNIT: 32US. Default is 15ms</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TRXFF_BNDY</name>
          <addressOffset>0x00000114</addressOffset>
          <size>32</size>
          <description>FIFO Boundary control register</description>
          <resetValue>0x3FFF0F00</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RXPKT0ENDADDR</name>
              <description>This register sets the upper boundary of RXFF0. The unit is 1 byte. The available memory space in RXPKTBUF for RXFF0 is configurable. The value is set to the physical LX bus address.</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXFFOVFL_RSV</name>
              <description>Use this register to set reserved entries number of rxpktbuffer for overflow judgment. The rxpktbuffer overflow will be pre-asserted if the left entries count meets the value set here.</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RXFF_PTR</name>
          <addressOffset>0x0000011C</addressOffset>
          <size>32</size>
          <description>RX  FIFO Read/write pointer</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RXFF0_RDPTR</name>
              <description>The read pointer address of RXFF0. The value is set to the physical LX bus address.</description>
              <bitRange>[31:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RXFF0_WTPTR</name>
              <description>The write pointer address of RXFF0. The value is set to the physical LX bus address.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FE1IMR</name>
          <addressOffset>0x00000120</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FS_NOT_BEACON_INT_EN</name>
              <description>not beacon packet interrupt</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_BB_STOP_RX_INT_EN</name>
              <description>BB STOP RX interrupt</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TSF_GT_THRES_INT_EN</name>
              <description>The interrupt is issued when difference of tsft in beacon frame of port0 is greater than threshold</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_RXPLCP_CHKOK_INT_EN</name>
              <description>RXPCLP check ok interrupt</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_RXBCN_TIMEUP_CNT_INT_EN</name>
              <description>When this bit is enable, the interrupt is issued when RX beacon frame timeout occurs specified times in port0.specified by 0x17C[23:20]</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_RXBCN_TIMEUP_INT_EN</name>
              <description>When this bit is enable, the interrupt is issued when RX beacon frame timeout occurs in port0.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_RX_BCN_ERR_P1_INT_EN</name>
              <description>When this bit is enable, the interrupt is issued when RX beacon frame with fcs error occurs in port1.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_RX_BCN_ERR_P0_INT_EN</name>
              <description>When this bit is enable, the interrupt is issued when RX beacon frame with fcs error occurs in port0.</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_RX_BCN_P1_INT_EN</name>
              <description>When this bit is enable, the interrupt is issued when RX beacon frame occurs in port1.</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_RX_BCN_P0_INT_EN</name>
              <description>When this bit is enable, the interrupt is issued when RX beacon frame occurs in port0.</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_RX_UMD0_INT_EN</name>
              <description>The interrupt is issued while receiving unicast data frame with More Data=0</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_RX_UMD1_INT_EN</name>
              <description>The interrupt is issued while receiving unicast data frame with More Data=1</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_RX_BMD0_INT_EN</name>
              <description>The interrupt is issued while receiving broadcast data frame with More Data=0</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_RX_BMD1_INT_EN</name>
              <description>The interrupt is issued while receiving broadcast data frame with More Data=1</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_RXDONE0_INT_EN</name>
              <description>Rx Packet 0 done interrupt (for WOL release packet)</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_WWLAN_INT_EN</name>
              <description>HW detect rxpkt Wol WLAN event interrupt</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_SOUND_DONE_INT_EN</name>
              <description>Be a beamformer, this interrupt is issued at the time after sounding finish</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_LP_STBY_INT_EN</name>
              <description>Lower Power Standby Interrupt</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_RXUC_BBYE_OK_EN</name>
              <description>The interrupt is issued while receiving my unicast qos null data frame with indication of 'bye-bye' in A3 field(A3[4:1]=3)</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_BF1_PRETO_INT_EN</name>
              <description>BF1 pretimeout interrupt</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_BF0_PRETO_INT_EN</name>
              <description>BF0 pretimeout interrupt</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PTCL_RELEASE_MACID_INT_EN</name>
              <description>PTCL release macid interrupt</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PRETXERR_HANDLE_FSISR_INT_EN</name>
              <description>PRETXERR_HANDLE FW Flag Interrupt register.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_WLACTOFF_INT_EN</name>
              <description>WL_ACT_MASK_ON de-assertion for bt coexistence function interrupt</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_WLACTON_INT_EN</name>
              <description>WL_ACT_MASK_ON assertion for bt coexistence function interrupt</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_BTCMD_INT_EN</name>
              <description>the interrupt is issued when btcmd occurs.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_REG_Mailbox_TO_I2C_INT_EN</name>
              <description>Mailbox_TO_I2C_INT (BT bridge)</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TRPC_TO_INT_EN</name>
              <description>TRPC time out Interrupt</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_RPC_O_T_INT_EN</name>
              <description>RPC over threshold Interrupt</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FE1ISR</name>
          <addressOffset>0x00000124</addressOffset>
          <size>32</size>
          <description>Firmware Extend Interrupt Status Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FS_NOT_BEACON_INT</name>
              <description>not beacon packet interrupt</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_BB_STOP_RX_INT</name>
              <description>BB STOP RX interrupt</description>
              <bitRange>[29:29]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TSF_GT_THRES_INT</name>
              <description>The interrupt is issued when difference of tsft in beacon frame is greater than threshold</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_RXPLCP_CHKOK_INT</name>
              <description>RXPCLP check ok interrupt</description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_RXBCN_TIMEUP_CNT_INT</name>
              <description>When this bit is enable, the interrupt is issued when RX beacon frame timeout occurs specified times in port0.specified by 0x17C[23:20]</description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_RXBCN_TIMEUP_INT</name>
              <description>When this bit is enable, the interrupt is issued when RX beacon frame timeout occurs in port0.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_RX_BCN_ERR_P1_INT</name>
              <description>When this bit is enable, the interrupt is issued when RX beacon frame with fcs error occurs in port1.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_RX_BCN_ERR_P0_INT</name>
              <description>When this bit is enable, the interrupt is issued when RX beacon frame with fcs error occurs in port0.</description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_RX_BCN_P1_INT</name>
              <description>When this bit is enable, the interrupt is issued when RX beacon frame occurs in port1.</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_RX_BCN_P0_INT</name>
              <description>When this bit is enable, the interrupt is issued when RX beacon frame occurs in port0.</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_RX_UMD0_INT</name>
              <description>The interrupt is issued while receiving unicast data frame with More Data=0</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_RX_UMD1_INT</name>
              <description>The interrupt is issued while receiving unicast data frame with More Data=1</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_RX_BMD0_INT</name>
              <description>The interrupt is issued while receiving broadcast data frame with More Data=0</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_RX_BMD1_INT</name>
              <description>The interrupt is issued while receiving broadcast data frame with More Data=1</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_RXDONE0_INT</name>
              <description>Rx Packet 0 done interrupt (for WOL release packet)</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_WWLAN_INT</name>
              <description>HW detect rxpkt Wol WLAN event interrupt</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_SOUND_DONE_INT</name>
              <description>Be a beamformer, this interrupt is issued at the time after sounding finish</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_LP_STBY_INT</name>
              <description>Lower Power Standby Interrupt</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_RXUC_BBYE_OK_INT</name>
              <description>The interrupt is issued while receiving my unicast qos null data frame with indication of 'bye-bye' in A3 field(A3[4:1]=3)</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_BF1_PRETO_INT</name>
              <description>BF1 pretimeout interrupt</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_BF0_PRETO_INT</name>
              <description>BF0 pretimeout interrupt</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PTCL_RELEASE_MACID_INT</name>
              <description>PTCL release macid interrupt</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PRETXERR_HANDLE_FSISR_INT</name>
              <description>PRETXERR_HANDLE FW Flag Interrupt register.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_WLACTOFF_INT</name>
              <description>WL_ACT_MASK_ON de-assertion for bt coexistence function interrupt</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_WLACTON_INT</name>
              <description>WL_ACT_MASK_ON assertion for bt coexistence function interrupt</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_BTCMD_INT</name>
              <description>the interrupt is issued when btcmd occurs.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_REG_Mailbox_TO_I2C_INT</name>
              <description>Mailbox_TO_I2C_INT (BT bridge)</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TRPC_TO_INT</name>
              <description>tx/rx  pkt time out Interrupt</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_RPC_O_T_INT</name>
              <description>RXPKT counter over threshold Interrupt</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FWIMR</name>
          <addressOffset>0x00000130</addressOffset>
          <size>32</size>
          <description>Firmware Interrupt Mask Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FS_TXBCNOK_MB7_INT_EN</name>
              <description>MBSSID7 TX beacon OK interrupt</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNOK_MB6_INT_EN</name>
              <description>MBSSID6 TX beacon OK interrupt</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNOK_MB5_INT_EN</name>
              <description>MBSSID5 TX beacon OK interrupt</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNOK_MB4_INT_EN</name>
              <description>MBSSID4 TX beacon OK interrupt</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNOK_MB3_INT_EN</name>
              <description>MBSSID3 TX beacon OK interrupt</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNOK_MB2_INT_EN</name>
              <description>MBSSID2 TX beacon OK interrupt</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNOK_MB1_INT_EN</name>
              <description>MBSSID1 TX beacon OK interrupt</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNOK_MB0_INT_EN</name>
              <description>MBSSID0 TX beacon OK interrupt</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNERR_MB7_INT_EN</name>
              <description>MBSSID7 TX beacon Error interrupt</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNERR_MB6_INT_EN</name>
              <description>MBSSID6 TX beacon Error interrupt</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNERR_MB5_INT_EN</name>
              <description>MBSSID5 TX beacon Error interrupt</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNERR_MB4_INT_EN</name>
              <description>MBSSID4 TX beacon Error interrupt</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNERR_MB3_INT_EN</name>
              <description>MBSSID3 TX beacon Error interrupt</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNERR_MB2_INT_EN</name>
              <description>MBSSID2 TX beacon Error interrupt</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNERR_MB1_INT_EN</name>
              <description>MBSSID1 TX beacon Error interrupt</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNERR_MB0_INT_EN</name>
              <description>MBSSID0 TX beacon Error interrupt</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_CPUMGN_POLLED_PKT_DONE_INT_EN</name>
              <description>CPU management queue polled packet released done interrupt enable (check cpu management queue current flow)</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_MGNTQ_FF_RELEASE_INT_EN</name>
              <description>MgntQ ReadPtr FIFO release interrupt (for 8822B)</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_CPUMGQ_ERR_INT_EN</name>
              <description>CPU management queue polled packet not TX OK while new packet comes in, enable to issue interrupt or not</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>rsvd</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_DDMA0_LP_INT_EN</name>
              <description>Low priority ddma0 down interrupt .</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_DDMA0_HP_INT_EN</name>
              <description>High priority ddma0 down interrupt</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TXRPT_INT_EN</name>
              <description>TX report interrupt</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_C2H_W_READY_INT_EN</name>
              <description>C2H register ready for write interrupt</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_HRCV_INT_EN</name>
              <description>Host to CPU Message Interrupt, generated on writing to 0x1CF</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_H2CCMD_INT_EN</name>
              <description>Host To CPU Message Interrupt</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TX_CLOSE_INT_EN</name>
              <description>TX DONE INTERRUPT</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_ERRORHDL_INT_EN</name>
              <description>FWHW/ TXDMA/ RXDMA/ WMAC error status interrupt(0x210[31:0], 0x288[31:0], 0x4E2[15:0], 0x6B8[31:0]). WMAC error state will be recovered by HW, the others won't.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TXCCX_INT_EN</name>
              <description>CCX PKT TX Report Interrupt</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PTCL_HANDLE_OK_INT_EN</name>
              <description>TX Finish (Ack/BA process Finish) Interrupt.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FWISR</name>
          <addressOffset>0x00000134</addressOffset>
          <size>32</size>
          <description>Firmware Interrupt Status Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FS_TXBCNOK_MB7_INT</name>
              <description>MBSSID7 TX beacon OK interrupt</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNOK_MB6_INT</name>
              <description>MBSSID6 TX beacon OK interrupt</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNOK_MB5_INT</name>
              <description>MBSSID5 TX beacon OK interrupt</description>
              <bitRange>[29:29]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNOK_MB4_INT</name>
              <description>MBSSID4 TX beacon OK interrupt</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNOK_MB3_INT</name>
              <description>MBSSID3 TX beacon OK interrupt</description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNOK_MB2_INT</name>
              <description>MBSSID2 TX beacon OK interrupt</description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNOK_MB1_INT</name>
              <description>MBSSID1 TX beacon OK interrupt</description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNOK_MB0_INT</name>
              <description>MBSSID0 TX beacon OK interrupt</description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNERR_MB7_INT</name>
              <description>MBSSID7 TX beacon Error interrupt</description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNERR_MB6_INT</name>
              <description>MBSSID6 TX beacon Error interrupt</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNERR_MB5_INT</name>
              <description>MBSSID5 TX beacon Error interrupt</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNERR_MB4_INT</name>
              <description>MBSSID4 TX beacon Error interrupt</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNERR_MB3_INT</name>
              <description>MBSSID3 TX beacon Error interrupt</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNERR_MB2_INT</name>
              <description>MBSSID2 TX beacon Error interrupt</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNERR_MB1_INT</name>
              <description>MBSSID1 TX beacon Error interrupt</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNERR_MB0_INT</name>
              <description>MBSSID0 TX beacon Error interrupt</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_CPUMGN_POLLED_PKT_DONE_INT</name>
              <description>CPU management queue polled packet released done interrupt enable (check cpu management queue current flow)</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_MGNTQ_FF_RELEASE_INT</name>
              <description>MgntQ ReadPtr FIFO release interrupt (for 8822B)</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_CPUMGQ_ERR_INT</name>
              <description>CPU management queue polled packet not TX OK while new packet comes in, enable to issue interrupt or not</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>rsvd</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_DDMA0_LP_INT</name>
              <description>Low priority ddma0 down interrupt .</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_DDMA0_HP_INT</name>
              <description>High priority ddma0 down interrupt</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TXRPT_INT</name>
              <description>TX report interrupt</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_C2H_W_READY_INT</name>
              <description>C2H register ready for write interrupt</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_HRCV_INT</name>
              <description>Host to CPU Message Interrupt, generated on writing to 0x1CF</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_H2CCMD_INT</name>
              <description>Host To CPU Message Interrupt</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TX_CLOSE_INT</name>
              <description>TX DONE INTERRUPT</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_ERRORHDL_INT</name>
              <description>FWHW/ TXDMA/ RXDMA/ WMAC error status interrupt(0x210[31:0], 0x288[31:0], 0x4E2[15:0], 0x6B8[31:0]). WMAC error state will be recovered by HW, the others won't.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TXCCX_INT</name>
              <description>CCX PKT TX Report Interrupt</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PTCL_HANDLE_OK_INT</name>
              <description>TX Finish (Ack/BA process Finish) Interrupt.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FTIMR</name>
          <addressOffset>0x00000138</addressOffset>
          <size>32</size>
          <description>Firmware  Timer Interrupt Mask Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FS_FTSR1_INT_EN</name>
              <description>FTMR1 Indicator (FTMR1 and FTMR1 are true, this bit is set to 1)</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_FTSR2_INT_EN</name>
              <description>FTMR2 Indicator (FTMR2 and FTMR2 are true, this bit is set to 1)</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_RPWM_INT_EN</name>
              <description>RPWM interrupt</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PS_Timer_E_INT_EN</name>
              <description>PS_Timer_E interrupt 
When the TSF(that select by reg 0x1520[13:12]) matches the content of this register, the PS_Timer_E_INT interrupt is issued</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PS_Timer_D_INT_EN</name>
              <description>PS_Timer_D interrupt 
When the lower 4 bytes of TSF(that select by reg 0x1520[17:16]) matches the content of this register, the PS_Timer_D_INT interrupt is issued</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PS_Timer_E_Early_INT_EN</name>
              <description>This interrupt is issued at the time set by PS_Timer_E_Early register before PS_Timer_E time.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PS_Timer_D_Early_INT_EN</name>
              <description>This interrupt is issued at the time set by PS_Timer_D_Early register before PS_Timer_D time.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PS_Timer_C_Early_INT_EN</name>
              <description>This interrupt is issued at the time set by PS_Timer_C_Early register before PS_Timer_C time.</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PS_Timer_B_Early_INT_EN</name>
              <description>This interrupt is issued at the time set by PS_Timer_B_Early register before PS_Timer_B time.</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PS_Timer_A_Early_INT_EN</name>
              <description>This interrupt is issued at the time set by PS_Timer_A_Early register before PS_Timer_A time.</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PS_Timer_C_INT_EN</name>
              <description>PS_Timer_C interrupt 
When the lower 4 bytes of TSF(that select by reg 0x1510[18:16]) matches the content of this register, the PS_Timer_C_INT interrupt is issued</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PS_Timer_B_INT_EN</name>
              <description>PS_Timer_B interrupt 
When the lower 4 bytes of TSF(that select by reg 0x1510[10:8]) matches the content of this register, the PS_Timer_B_INT interrupt is issued</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PS_Timer_A_INT_EN</name>
              <description>PS_Timer_A interrupt 
When the lower 4 bytes of TSF(that select by reg 0x1510[2:0]) matches the content of this register, the PS_Timer_A_INT interrupt is issued</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PS_TIMEOUT2_INT_EN</name>
              <description>PS_TimeOut2 interrupt .
When the lower 4 bytes of FREERUN CNT matches the content of this register(0x588), the FW PS_TimeOut2 interrupt is issued.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PS_TIMEOUT1_INT_EN</name>
              <description>PS_TimeOut1 interrupt . 
When the lower 4 bytes of TSFTR(that select by 0x5b1[5:3])  matches the content of this register(0x584), the FW PS_TimeOut1 interrupt is issued.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PS_TIMEOUT0_INT_EN</name>
              <description>PS_TimeOut0 interrupt . 
When the lower 4 bytes of TSFTR(that select by 0x5b4[2:0])  matches the content of this register(0x580), the FW PS_TimeOut0 interrupt is issued.</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_FTM_PTT_INT_EN</name>
              <description>Partial tsf timer</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_GTINT6_INT_EN</name>
              <description>General Timer[6] interrupt</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_GTINT5_INT_EN</name>
              <description>General Timer[5] interrupt</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_GTINT4_INT_EN</name>
              <description>General Timer[4] interrupt</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_GTINT3_INT_EN</name>
              <description>General Timer[3] interrupt</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_GTINT2_INT_EN</name>
              <description>General Timer[2] interrupt</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_GTINT1_INT_EN</name>
              <description>General Timer[1] interrupt</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_GTINT0_INT_EN</name>
              <description>General Timer[0] interrupt</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FTISR</name>
          <addressOffset>0x0000013C</addressOffset>
          <size>32</size>
          <description>Firmware Timer Interrupt Status Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FS_FTSR1_INT</name>
              <description>FTMR1 Indicator (FTMR1 and FTMR1 are true, this bit is set to 1)</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_FTSR2_INT</name>
              <description>FTMR2 Indicator (FTMR2 and FTMR2 are true, this bit is set to 1)</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_RPWM_INT</name>
              <description>RPWM interrupt</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PS_Timer_E_INT</name>
              <description>PS_Timer_E interrupt 
When the TSF(that select by reg 0x1520[13:12]) matches the content of this register, the PS_Timer_E_INT interrupt is issued</description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PS_Timer_D_INT</name>
              <description>PS_Timer_D interrupt 
When the lower 4 bytes of TSF(that select by reg 0x1520[17:16]) matches the content of this register, the PS_Timer_D_INT interrupt is issued</description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PS_Timer_E_Early_INT</name>
              <description>This interrupt is issued at the time set by PS_Timer_E_Early register before PS_Timer_E time.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PS_Timer_D_Early_INT</name>
              <description>This interrupt is issued at the time set by PS_Timer_D_Early register before PS_Timer_D time.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PS_Timer_C_Early_INT</name>
              <description>This interrupt is issued at the time set by PS_Timer_C_Early register before PS_Timer_C time.</description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PS_Timer_B_Early_INT</name>
              <description>This interrupt is issued at the time set by PS_Timer_B_Early register before PS_Timer_B time.</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PS_Timer_A_Early_INT</name>
              <description>This interrupt is issued at the time set by PS_Timer_A_Early register before PS_Timer_A time.</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PS_Timer_C_INT</name>
              <description>PS_Timer_C interrupt 
When the lower 4 bytes of TSF(that select by reg 0x1510[18:16]) matches the content of this register, the PS_Timer_C_INT interrupt is issued</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PS_Timer_B_INT</name>
              <description>PS_Timer_B interrupt 
When the lower 4 bytes of TSF(that select by reg 0x1510[10:8]) matches the content of this register, the PS_Timer_B_INT interrupt is issued</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PS_Timer_A_INT</name>
              <description>PS_Timer_A interrupt 
When the lower 4 bytes of TSF(that select by reg 0x1510[2:0]) matches the content of this register, the PS_Timer_A_INT interrupt is issued</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PS_TIMEOUT2_INT</name>
              <description>PS_TimeOut2 interrupt .
When the lower 4 bytes of FREERUN CNT matches the content of this register(0x588), the FW PS_TimeOut2 interrupt is issued.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PS_TIMEOUT1_INT</name>
              <description>PS_TimeOut1 interrupt . 
When the lower 4 bytes of TSFTR(that select by 0x5b1[5:3])  matches the content of this register(0x584), the FW PS_TimeOut1 interrupt is issued.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PS_TIMEOUT0_INT</name>
              <description>PS_TimeOut0 interrupt . 
When the lower 4 bytes of TSFTR(that select by 0x5b4[2:0])  matches the content of this register(0x580), the FW PS_TimeOut0 interrupt is issued.</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_FTM_PTT_INT</name>
              <description>Partial tsf timer</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_GTINT6_INT</name>
              <description>General Timer[6] interrupt</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_GTINT5_INT</name>
              <description>General Timer[5] interrupt</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_GTINT4_INT</name>
              <description>General Timer[4] interrupt</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_GTINT3_INT</name>
              <description>General Timer[3] interrupt</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_GTINT2_INT</name>
              <description>General Timer[2] interrupt</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_GTINT1_INT</name>
              <description>General Timer[1] interrupt</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_GTINT0_INT</name>
              <description>General Timer[0] interrupt</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[22:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[19:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TC0_CTRL</name>
          <addressOffset>0x00000150</addressOffset>
          <size>32</size>
          <description>Counter 0 data</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>Rsvd</description>
              <bitRange>[31:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TC0INT_EN</name>
              <description>When write "1" to this bit, Counter 0 starts counting down. This is a one-bit pulse.</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TC0MODE</name>
              <description>Timer/Counter 0 mode 
0=counter mode
1=timer mode</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TC0EN</name>
              <description>Timer/Counter 0 enable</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TC0DATA</name>
              <description>Timer/Counter 0 data register. It specifies the time-out duration.</description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TC1_CTRL</name>
          <addressOffset>0x00000154</addressOffset>
          <size>32</size>
          <description>Counter 1 data</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>Rsvd</description>
              <bitRange>[31:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TC1INT_EN</name>
              <description>When write "1" to this bit, Counter 1 starts counting down. This is a one-bit pulse.</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TC1MODE</name>
              <description>Timer/Counter 1 mode 
0=counter mode
1=timer mode</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TC1EN</name>
              <description>Timer/Counter 1 enable</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TC1DATA</name>
              <description>Timer/Counter 1 data register. It specifies the time-out duration.</description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TC2_CTRL</name>
          <addressOffset>0x00000158</addressOffset>
          <size>32</size>
          <description>Counter 2 data</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>Reserved</description>
              <bitRange>[31:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TC2INT_EN</name>
              <description>When write "1" to this bit, Counter 2 starts counting down. This is a one-bit pulse.</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TC2MODE</name>
              <description>Timer/Counter 2 mode 
0=counter mode
1=timer mode</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TC2EN</name>
              <description>Timer/Counter 2 enable</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TC2DATA</name>
              <description>Timer/Counter 2 data register. It specifies the time-out duration.</description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TC3_CTRL</name>
          <addressOffset>0x0000015C</addressOffset>
          <size>32</size>
          <description>Counter 3 data</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>Reserved</description>
              <bitRange>[31:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TC3INT_EN</name>
              <description>When write "1" to this bit, Counter 3 starts counting down. This is a one-bit pulse.</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TC3MODE</name>
              <description>Timer/Counter 3 mode 
0=counter mode
1=timer mode</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TC3EN</name>
              <description>Timer/Counter 3 enable</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TC3Data</name>
              <description>Timer/Counter 3 data register. It specifies the time-out duration.</description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TC4_CTRL</name>
          <addressOffset>0x00000160</addressOffset>
          <size>32</size>
          <description>Counter 4 data</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>Reserved</description>
              <bitRange>[31:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TC4INT_EN</name>
              <description>When write "1" to this bit, Counter 4 starts counting down. This is a one-bit pulse.</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TC4MODE</name>
              <description>Timer/Counter 4mode 
0=counter mode
1=timer mode</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TC4EN</name>
              <description>Timer/Counter 4 enable</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TC4Data</name>
              <description>Timer/Counter 4 data register. It specifies the time-out duration.</description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TCUNIT_BASE</name>
          <addressOffset>0x00000164</addressOffset>
          <size>32</size>
          <description>Control Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[31:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TC_UNIT_BASE</name>
              <description>The register set the number of clocks that equals to the base time unit of timer/counter. The clock domain is 32k clock domain.</description>
              <bitRange>[13:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TC5_CTRL</name>
          <addressOffset>0x00000168</addressOffset>
          <size>32</size>
          <description>Counter 5 data</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[31:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TC50INT_EN</name>
              <description>When write "1" to this bit, Counter 5 starts counting down. This is a one-bit pulse.</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TC5MODE</name>
              <description>Timer/Counter 5 mode
0=counter mode
1=timer mode</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TC5EN</name>
              <description>Timer/Counter5 enable</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TC5DATA</name>
              <description>Timer/Counter 5 data register. It specifies the time-out duration.</description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TC6_CTRL</name>
          <addressOffset>0x0000016C</addressOffset>
          <size>32</size>
          <description>Counter 6 data</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[31:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TC60INT_EN</name>
              <description>When write "1" to this bit, Counter 6 starts counting down. This is a one-bit pulse.</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TC6MODE</name>
              <description>Timer/Counter 6 mode
0=counter mode
1=timer mode</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TC6EN</name>
              <description>Timer/Counter6 enable</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TC6DATA</name>
              <description>Timer/Counter 6 data register. It specifies the time-out duration.</description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_HW_IOE_CR_CHN1</name>
          <addressOffset>0x00000170</addressOffset>
          <size>32</size>
          <description>HW IO Engine Configure Register_CHN1</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_HIOE_ACTIVE_CHN1</name>
              <description>indicate HIOE engine is active</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[30:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HIOE_RESTORE_REQ_CHN1</name>
              <description>WLOFF REG restore request, clear by hw</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HIOE_BACKUP_REQ_CHN1</name>
              <description>WLOFF REG backup request, clear by hw</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HIOE_END_ADDR_CHN1</name>
              <description>HIOE command end address in txpktbuffer, unit:8byte</description>
              <bitRange>[23:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HIOE_STR_ADDR_CHN1</name>
              <description>HIOE command start address in txpktbuffer, unit:8byte</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_HW_IOE_CR_CHN_ON</name>
          <addressOffset>0x00000174</addressOffset>
          <size>32</size>
          <description>HW IO Engine Configure Register_CHN_ON</description>
          <resetValue>0x04000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_HIOE_ACTIVE_CHN_ON</name>
              <description>indicate HIOE engine is active, used for wlan power on flow</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[30:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_bypass_hioe_chn_on_A</name>
              <description>ACUT when set 1, bypass request to CHON of hioe</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HIOE_RESTORE_REQ_CHN_ON</name>
              <description>WLOFF REG restore request, clear by hw</description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HIOE_END_ADDR_CHN_ON</name>
              <description>HIOE command end address in txpktbuffer, unit:8byte</description>
              <bitRange>[23:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HIOE_STR_ADDR_CHN_ON</name>
              <description>HIOE command start address in txpktbuffer, unit:8byte</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_HW_IOE_CR_CHN_OFF</name>
          <addressOffset>0x00000178</addressOffset>
          <size>32</size>
          <description>HW IO Engine Configure Register_CHN_OFF</description>
          <resetValue>0x04000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_HIOE_ACTIVE_CHN_OFF</name>
              <description>indicate HIOE engine is active, used for wlan power off flow</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[30:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_bypass_hioe_chn_off_A</name>
              <description>ACUT when set 1, bypass request to CHOFF of hioe</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HIOE_RESTORE_REQ_CHN_OFF</name>
              <description>WLOFF REG restore request, clear by hw</description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HIOE_END_ADDR_CHN_OFF</name>
              <description>HIOE command end address in txpktbuffer, unit:8byte</description>
              <bitRange>[23:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HIOE_STR_ADDR_CHN_OFF</name>
              <description>HIOE command start address in txpktbuffer, unit:8byte</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RXBCN_TIMER</name>
          <addressOffset>0x0000017C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00300000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_hw_auto_enter_lps_en_A</name>
              <description>ACUT when set 1, enable hw auto enter lps when triggered by lpsoffload</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXBCN_TIMEUP_COUNT</name>
              <description>rxbcn timeout counter</description>
              <bitRange>[30:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>r_rxbcn_lpsoffload_en_A</name>
              <description>ACUT when set 1, enable lpsoffload function</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_WAIT_RXBCN_FINISH</name>
              <description>when rxbcn frame, turn off rf or generate interrupt ablout rxbcn after beacon fcs is parsered</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXBCN_TIMEUP_COUNT_CLR</name>
              <description>clear rxbcn timeout counter</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXBCN_TIMEUP_COUNT_THRES</name>
              <description>threshold for rxbcn timeout counter,when 0x17C[30:27] equals to this value,generate interrupt</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TBTT_HOLD_TIMER</name>
              <description>start form tbtt int,unit:1us</description>
              <bitRange>[17:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RFOFF_BY_EDCCA_CTRL0</name>
          <addressOffset>0x00000180</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00030404</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>EDCCA_ILDE_TO_CNT</name>
              <description>indicate how many times edcca idle timeout happens</description>
              <bitRange>[31:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EDCCA_IDLE_TIMER</name>
              <description>edcca idle timeout timer,unit:4us</description>
              <bitRange>[27:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_EDCCA_CHK_AREA0_CNT_THRES</name>
              <description>EDCCA_IDLE timeout counter treshold in area0,when timeout counter greater than threshold, generate interrupt</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EDCCA_CHK_AREA0_TO_THRES</name>
              <description>EDCCA_IDLE timeout threshold in area0,unit:4us,default:16us</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EDCCA_CHK_AREA0_START</name>
              <description>EDCCA_IDLE_area0 end time,start form TBTT,unit:256us,default:1.024ms</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RFOFF_BY_EDCCA_CTRL1</name>
          <addressOffset>0x00000184</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00020424</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RFOFF_EDCCA_EN</name>
              <description>enable function of rf off by edcca idle timeout</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RFOFF_EDCCA_SEL</name>
              <description>1:sel edcca| cca as instruction
0:sel edcca as instruction</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EDCCA_CHK_AREA1_CNT_THRES</name>
              <description>EDCCA_IDLE timeout counter treshold in area1,when timeout counter greater than threshold, generate interrupt</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EDCCA_CHK_AREA1_TO_THRES</name>
              <description>EDCCA_IDLE timeout threshold in area1,unit:4us,default:16us</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EDCCA_CHK_AREA1_START</name>
              <description>EDCCA_IDLE_area1 start time,start form TBTT,unit:256us,default:9.216ms</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RFOFF_BY_EDCCA_CTRL2</name>
          <addressOffset>0x00000188</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0001043B</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>EDCCA_STATUS</name>
              <description>indicate edcca or edcca|cca status of channel</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_EDCCA_CHK_AREA2_CNT_THRES</name>
              <description>EDCCA_IDLE timeout counter treshold in AREA2,when timeout counter greater than threshold, generate interrupt</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EDCCA_CHK_AREA2_TO_THRES</name>
              <description>EDCCA_IDLE timeout threshold in AREA2,unit:4us,default:16us</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EDCCA_CHK_AREA2_START</name>
              <description>EDCCA_IDLE_AREA2 start time,start form TBTT,unit:256us,default:15.104ms</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MACCLKFRQ</name>
          <addressOffset>0x0000018C</addressOffset>
          <size>32</size>
          <description>MAC clk frequency value register for 32k circuit</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>dummy</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_32K_CAL_REG0</name>
          <addressOffset>0x00000198</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x1F400000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RXBCN_TIMEUP_THRES</name>
              <description>threshold for rxbcn timeout,UNIT:us default:8ms</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXBCN_TIMEUP_THRES_INIT</name>
              <description>HW auto update threshold for rxbcn timeout,UNIT:us</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RXBCN_COUNTER_CTRL1</name>
          <addressOffset>0x0000019C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x07110000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_EN_RXBCN_CNT</name>
              <description>1: statistic the number of RXBCN in specified period</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXBCN_CNT_PRD</name>
              <description>2^(BIT_RXBCN_CNT_PRD), default is 128 times</description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXBCN_TIMEUP_ADJSP_DOWN</name>
              <description>the adjust step of the rxbcn timeup period adjustment when decrease the period. UNIT: (2^BIT_RXBCN_TIMEUP_ADJSP_DOWN)*32US</description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXBCN_TIMEUP_ADJSP_UP</name>
              <description>the adjust step of the rxbcn timeup period adjustment when increase the period.  UNIT: (2^BIT_RXBCN_TIMEUP_ADJSP_UP)*32US</description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXBCN_THRES_LOW</name>
              <description>lower limit of rxbcn. If the RXBCN.COUNTER &lt; THRES_LOW, RXBCN timeup period + (2^BIT_RXBCN_TIMEUP_ADJSP_UP)*32US</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXBCN_THRES_HIGH</name>
              <description>upper limit of rxbcn. If the RXBCN.COUNTER &gt; THRES_HIGH, RXBCN timeup period - (2^BIT_RXBCN_TIMEUP_ADJSP_DOWN)*32US</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_C2HEVT</name>
          <addressOffset>0x000001A0</addressOffset>
          <size>32</size>
          <description>SD Resveved register for C2H information (reserved)</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_C2HEVT_MSG_V1</name>
              <description>User Defined Message</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_C2HEVT_1</name>
          <addressOffset>0x000001A4</addressOffset>
          <size>32</size>
          <description>SD Resveved register for C2H information (reserved)</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_C2HEVT_MSG_1</name>
              <description>User Defined Message</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_C2HEVT_2</name>
          <addressOffset>0x000001A8</addressOffset>
          <size>32</size>
          <description>SD Resveved register for C2H information (reserved)</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_C2HEVT_MSG_2</name>
              <description>User Defined Message</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_C2HEVT_3</name>
          <addressOffset>0x000001AC</addressOffset>
          <size>32</size>
          <description>SD Resveved register for C2H information (reserved)</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_C2HEVT_MSG_3</name>
              <description>User Defined Message</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_HW_IOE_CR_CH0</name>
          <addressOffset>0x000001B0</addressOffset>
          <size>32</size>
          <description>HW IO Engine Configure Register_CH0</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_HIOE_ACTIVE_CH0</name>
              <description>indicate HIOE engine is active</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HIOE_CTRL_RST</name>
              <description>Write this bit reset FSM of hioe_ctrl, ioreg_txfail</description>
              <bitRange>[30:30]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_HIOE_IOERG_RST</name>
              <description>Write this bit reset FSM of hioe_ioreg, ioreg_txfail</description>
              <bitRange>[29:29]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_HIOE_MEM_IF_RST</name>
              <description>Write this bit reset FSM of hioe_mem_if, ioreg_txfail</description>
              <bitRange>[28:28]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HIOE_RESTORE_REQ_CH0</name>
              <description>WLOFF REG restore request, clear by hw</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HIOE_BACKUP_REQ_CH0</name>
              <description>WLOFF REG backup request, clear by hw</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HIOE_END_ADDR_CH0</name>
              <description>HIOE command end address in txpktbuffer, unit:8byte</description>
              <bitRange>[23:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HIOE_STR_ADDR_CH0</name>
              <description>HIOE command start address in txpktbuffer, unit:8byte</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BB_RFC_ATR</name>
          <addressOffset>0x000001B4</addressOffset>
          <size>32</size>
          <description>BB/RFC REG Access Time Register</description>
          <resetValue>0x05050404</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_PHYRE_CNT</name>
              <description></description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PHYWR_SETUP_CNT</name>
              <description>the timing WDATA stable before WE for host/cpu access BB/RFC REG</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PHYWR_HOLD_CNT</name>
              <description>the timing WDATA stable after WE for host/cpu access BB/RFC REG</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PHYRD_WAIT_CNT</name>
              <description>the timing RDATA stable after ADDR for host/cpu access BB/RFC REG</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FW_DBG12</name>
          <addressOffset>0x000001B8</addressOffset>
          <size>32</size>
          <description>SD Reserved register for FW DEBUG</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_SW_DEFINED_PAGE1_V1</name>
              <description>User Defined Message</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FW_DBG13</name>
          <addressOffset>0x000001BC</addressOffset>
          <size>32</size>
          <description>SD Reserved register for FW DEBUG</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_SW_DEFINED_PAGE2</name>
              <description>User Defined Message</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FW_DBG14</name>
          <addressOffset>0x000001C0</addressOffset>
          <size>32</size>
          <description>SD Reserved register for FW DEBUG</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MCUDMSG_I</name>
              <description>User Defined Message</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FW_DBG15</name>
          <addressOffset>0x000001C4</addressOffset>
          <size>32</size>
          <description>SD Reserved register for FW DEBUG</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MCUDMSG_II</name>
              <description>User Defined Message</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FMETHR</name>
          <addressOffset>0x000001C8</addressOffset>
          <size>32</size>
          <description>Firmware Message Mail Box Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FWMSG_INTPS</name>
              <description>Toggle this bit will generate C2H interrupt to Host</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FW_MSG</name>
              <description>User Defined Message</description>
              <bitRange>[30:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_HMETFR</name>
          <addressOffset>0x000001CC</addressOffset>
          <size>32</size>
          <description>Host Message Mail Box Status register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_HRCV_MSG</name>
              <description>Host Recover Message, Host Write This Byte will generate interrupt to 8051 (0x0134h[5])</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[23:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_H3MSG_VLD</name>
              <description>MSG_BOX_3 Valid. Enable when the Entry is write, Clear when the Entry is Read by 8051.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_H2MSG_VLD</name>
              <description>MSG_BOX_2 Valid. Enable when the Entry is write, Clear when the Entry is Read by 8051.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_H1MSG_VLD</name>
              <description>MSG_BOX_1 Valid. Enable when the Entry is write, Clear when the Entry is Read by 8051.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_H0MSG_VLD</name>
              <description>MSG_BOX_0 Valid. Enable when the Entry is write, Clear when the Entry is Read by 8051.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_HMEBOX0</name>
          <addressOffset>0x000001D0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_HOST_MSG_0</name>
              <description>User Defined Message</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_HMEBOX1</name>
          <addressOffset>0x000001D4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_HOST_MSG_1</name>
              <description>User Defined Message</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_HMEBOX2</name>
          <addressOffset>0x000001D8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_HOST_MSG_2</name>
              <description>User Defined Message</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_HMEBOX3</name>
          <addressOffset>0x000001DC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_HOST_MSG_3</name>
              <description>User Defined Message</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BB_ACCESS_CTRL</name>
          <addressOffset>0x000001E8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BB_WRITE_READ</name>
              <description>00 : No Active Baseband cycle
01 : Baseband Write Access (auto return to 00 when access finished)
1X : Baseband Read Access (auto return to 00 when access finished)</description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[29:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BB_WRITE_EN_V1</name>
              <description>Byte Write Enable</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BB_ADDR_V1</name>
              <description>Baseband Access Write/Read Address (in DW unit)</description>
              <bitRange>[15:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BB_ERRACC</name>
              <description>Duplicate Access when previous cycle pending (write one clear)</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BB_ACCESS_DATA</name>
          <addressOffset>0x000001EC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BB_DATA</name>
              <description>Baseband Access Write/Read Data (in DW unit)</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_HMEBOX_E0</name>
          <addressOffset>0x000001F0</addressOffset>
          <size>32</size>
          <description>Host Message Mail Box 4 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_HMEBOX_E0</name>
              <description>User Defined Message</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_HMEBOX_E1</name>
          <addressOffset>0x000001F4</addressOffset>
          <size>32</size>
          <description>Host Message Mail Box 5 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_HMEBOX_E1</name>
              <description>User Defined Message</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_HMEBOX_E2</name>
          <addressOffset>0x000001F8</addressOffset>
          <size>32</size>
          <description>Host Message Mail Box 6 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_HMEBOX_E2</name>
              <description>User Defined Message</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_HMEBOX_E3</name>
          <addressOffset>0x000001FC</addressOffset>
          <size>32</size>
          <description>Host Message Mail Box 7 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_HMEBOX_E3</name>
              <description>User Defined Message</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FW_DBG16</name>
          <addressOffset>0x00001100</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FS_FW_DEBUG_0</name>
              <description>User Defined Message</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FW_DBG17</name>
          <addressOffset>0x00001104</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FS_FW_DEBUG_1</name>
              <description>User Defined Message</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FW_DBG18</name>
          <addressOffset>0x00001108</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FS_FW_DEBUG_2</name>
              <description>User Defined Message</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FW_DBG19</name>
          <addressOffset>0x0000110C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FS_FW_DEBUG_3</name>
              <description>User Defined Message</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_STATE_DEBUG_CONTROL</name>
          <addressOffset>0x00001118</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_STATE_DBG_SEL_1</name>
              <description>select state machine 1 for debug  port</description>
              <bitRange>[15:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_STATE_DBG_SEL_0</name>
              <description>select state machine 0 for debug  port</description>
              <bitRange>[9:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_STATE_DBG_EN_1</name>
              <description>enable state machine 1 for debug  port</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_STATE_DBG_EN_0</name>
              <description>enable state machine 1 for debug  port</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MAC_DBG_SHIFT</name>
              <description>MACDEBUG[31:0] byte shift control signal
2'b00: MACDEBUG[31:0]
2'b01:{MACDEBUG[7:0],MACDEBUG[31:8]}
2'b10:{MACDEBUG[15:0],MACDEBUG[31:16]}
2'b11:{MACDEBUG[23:0],MACDEBUG[31:24]}</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FE2IMR</name>
          <addressOffset>0x00001120</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_state1_timeout_int_EN</name>
              <description>when state0_timeout_timer is equal to r_state0_timeout_thres, which means state_0 is hang, hw will set this interrupt to inform sw</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_state0_timeout_int_EN</name>
              <description>when state0_timeout_timer is equal to r_state0_timeout_thres, which means state_0 is hang, hw will set this interrupt to inform sw</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_ATIM_PORT1_INT_EN</name>
              <description>PORT1 ATIM end window interrupt .</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_ATIM_MB7_INT_EN</name>
              <description>MBSSID7 ATIM end window interrupt .</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_ATIM_MB6_INT_EN</name>
              <description>MBSSID6 ATIM end window interrupt .</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_ATIM_MB5_INT_EN</name>
              <description>MBSSID5 ATIM end window interrupt .</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_ATIM_MB4_INT_EN</name>
              <description>MBSSID4 ATIM end window interrupt .</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_ATIM_MB3_INT_EN</name>
              <description>MBSSID3 ATIM end window interrupt .</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_ATIM_MB2_INT_EN</name>
              <description>MBSSID2 ATIM end window interrupt .</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_ATIM_MB1_INT_EN</name>
              <description>MBSSID1 ATIM end window interrupt .</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_ATIM_MB0_INT_EN</name>
              <description>MBSSID0 ATIM end window interrupt .</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_CTWE_INT2_EN</name>
              <description>port2 CTWindow end interrupt for p2p.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_CTWE_INT_EN0</name>
              <description>port0 CTWindow end interrupt for p2p.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_CTWE_INT_EN1</name>
              <description>port1 CTWindow end interrupt for p2p.</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TBTTALL_INT_EN</name>
              <description>the interrupt  from the exact TBTT time for all port.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PO_TBTT_AGG_INT_EN</name>
              <description>the interrupt  from the multiplt TBTT times for P0.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TBTT2INT_EN</name>
              <description>the interrupt  from the exact TBTT time for P2.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TBTT1INT_EN</name>
              <description>the interrupt  from the exact TBTT time for P1.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TBTT0_MB7INT_EN</name>
              <description>the interrupt  from the exact TBTT time for P0 MBSSID7.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TBTT0_MB6INT_EN</name>
              <description>the interrupt  from the exact TBTT time for P0 MBSSID6.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TBTT0_MB5INT_EN</name>
              <description>the interrupt  from the exact TBTT time for P0 MBSSID5.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TBTT0_MB4INT_EN</name>
              <description>the interrupt  from the exact TBTT time for P0 MBSSID4.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TBTT0_MB3INT_EN</name>
              <description>the interrupt  from the exact TBTT time for P0 MBSSID3.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TBTT0_MB2INT_EN</name>
              <description>the interrupt  from the exact TBTT time for P0 MBSSID2.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TBTT0_MB1INT_EN</name>
              <description>the interrupt  from the exact TBTT time for P0 MBSSID1.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TBTT0_INT_EN</name>
              <description>the interrupt  from the exact TBTT time for P0 MBSSID0.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FE2ISR</name>
          <addressOffset>0x00001124</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_state1_timeout_int</name>
              <description>when state0_timeout_timer is equal to r_state0_timeout_thres, which means state_0 is hang, hw will set this interrupt to inform sw</description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_state0_timeout_int</name>
              <description>when state0_timeout_timer is equal to r_state0_timeout_thres, which means state_0 is hang, hw will set this interrupt to inform sw</description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_ATIM_PORT1_INT</name>
              <description>PORT1 ATIM end window interrupt .</description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_ATIM_MB7_INT</name>
              <description>MBSSID7 ATIM end window interrupt .</description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_ATIM_MB6_INT</name>
              <description>MBSSID6 ATIM end window interrupt .</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_ATIM_MB5_INT</name>
              <description>MBSSID5 ATIM end window interrupt .</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_ATIM_MB4_INT</name>
              <description>MBSSID4 ATIM end window interrupt .</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_ATIM_MB3_INT</name>
              <description>MBSSID3 ATIM end window interrupt .</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_ATIM_MB2_INT</name>
              <description>MBSSID2 ATIM end window interrupt .</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_ATIM_MB1_INT</name>
              <description>MBSSID1 ATIM end window interrupt .</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_ATIM_MB0_INT</name>
              <description>MBSSID0 ATIM end window interrupt .</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_CTWE_INT2</name>
              <description>port2 CTWindow end interrupt for p2p.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_CTWE_INT0</name>
              <description>port0 CTWindow end interrupt for p2p.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_CTWE_INT1</name>
              <description>port1 CTWindow end interrupt for p2p.</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TBTTALL_INT</name>
              <description>the interrupt  from the exact TBTT time for all port.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PO_TBTT_AGG_INT</name>
              <description>the interrupt  from the multiplt TBTT times for P0.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TBTT2INT</name>
              <description>the interrupt  from the exact TBTT time for P2.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TBTT1INT</name>
              <description>the interrupt  from the exact TBTT time for P1.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TBTT0_MB7INT</name>
              <description>the interrupt  from the exact TBTT time for P0 MBSSID7.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TBTT0_MB6INT</name>
              <description>the interrupt  from the exact TBTT time for P0 MBSSID6.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TBTT0_MB5INT</name>
              <description>the interrupt  from the exact TBTT time for P0 MBSSID5.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TBTT0_MB4INT</name>
              <description>the interrupt  from the exact TBTT time for P0 MBSSID4.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TBTT0_MB3INT</name>
              <description>the interrupt  from the exact TBTT time for P0 MBSSID3.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TBTT0_MB2INT</name>
              <description>the interrupt  from the exact TBTT time for P0 MBSSID2.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TBTT0_MB1INT</name>
              <description>the interrupt  from the exact TBTT time for P0 MBSSID1.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TBTT0_INT</name>
              <description>the interrupt  from the exact TBTT time for P0 MBSSID0.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FE3IMR</name>
          <addressOffset>0x00001128</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FS_FE1ISR_INT_EN</name>
              <description>FE1ISR Indicator (FE1ISR and FE1IMR are true, this bit is set to 1)</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_FE2ISR_INT_EN</name>
              <description>FE2ISR Indicator (FE2ISR and FE2IMR are true, this bit is set to 1)</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_FE4ISR_INT_EN</name>
              <description>FE4ISR Indicator (FE4ISR and FE4IMR are true, this bit is set to 1)</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_FE5ISR_INT_EN</name>
              <description>FE5ISR Indicator (FE5ISR and FE5IMR are true, this bit is set to 1)</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_FE6ISR_INT_EN</name>
              <description>FE6ISR Indicator (FE6ISR and FE6IMR are true, this bit is set to 1)</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_FISR_INT_EN</name>
              <description>FISR Indicator (FISR and FIMR are true, this bit is set to 1)</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_FISR1_INT_EN</name>
              <description>FISR1 Indicator (FISR1 and FIMR1 are true, this bit is set to 1)</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_BCNELY2_AGGR_INT_EN</name>
              <description>port 2 Beacon early aggregation interrupt</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_BCNELY1_AGGR_INT_EN</name>
              <description>port 1 Beacon early aggregation interrupt</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_BCNELY0_AGGR_INT_EN</name>
              <description>port 0 Beacon early aggregation interrupt</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_on_SCK_INT_EN</name>
              <description>This interrupt is issued at the time set by ALL DRVERLYINT register before TBTT time.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_BCNERLY2_INT_EN</name>
              <description>This interrupt is issued at the time set by DRVERLYINT register before TBTT2 time.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_BCNERLY1_INT_EN</name>
              <description>This interrupt is issued at the time set by DRVERLYINT register before TBTT1 time.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_BCNERLY0_MB7INT_EN</name>
              <description>This interrupt is issued at the time set by DRVERLYINTregister before TBTT0_MB7 time.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_BCNERLY0_MB6INT_EN</name>
              <description>This interrupt is issued at the time set by DRVERLYINT register before TBTT0_MB6 time.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_BCNERLY0_MB5INT_EN</name>
              <description>This interrupt is issued at the time set by DRVERLYINT register before TBTT0_MB5 time.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_BCNERLY0_MB4INT_EN</name>
              <description>This interrupt is issued at the time set by DRVERLYINTregister before TBTT0_MB4 time.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_BCNERLY0_MB3INT_EN</name>
              <description>This interrupt is issued at the time set by DRVERLYINT register before TBTT0_MB3 time.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_BCNERLY0_MB2INT_EN</name>
              <description>This interrupt is issued at the time set by DRVERLYINT register before TBTT0_MB2 time.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_BCNERLY0_MB1INT_EN</name>
              <description>This interrupt is issued at the time set by DRVERLYINTregister before TBTT0_MB1 time.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_BCNERLY0_INT_EN</name>
              <description>This interrupt is issued at the time set by DRVERLYINT register before TBTT0_MB0 time.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FE3ISR</name>
          <addressOffset>0x0000112C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FS_FE1ISR_INT</name>
              <description>FE1ISR Indicator (FE1ISR and FE1IMR are true, this bit is set to 1)</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_FE2ISR_INT</name>
              <description>FE2ISR Indicator (FE2ISR and FE2IMR are true, this bit is set to 1)</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_FE4ISR_INT</name>
              <description>FE4ISR Indicator (FE4ISR and FE4IMR are true, this bit is set to 1)</description>
              <bitRange>[29:29]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_FE5ISR_INT</name>
              <description>FE5ISR Indicator (FE5ISR and FE5IMR are true, this bit is set to 1)</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_FE6ISR_INT</name>
              <description>FE6ISR Indicator (FE6ISR and FE6IMR are true, this bit is set to 1)</description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_FISR_INT</name>
              <description>FISR Indicator (FISR and FIMR are true, this bit is set to 1)</description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_FISR1_INT</name>
              <description>FISR1 Indicator (FISR1 and FIMR1 are true, this bit is set to 1)</description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_BCNELY2_AGGR_INT</name>
              <description>port 2 Beacon early aggregation interrupt</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_BCNELY1_AGGR_INT</name>
              <description>port 1 Beacon early aggregation interrupt</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_BCNELY0_AGGR_INT</name>
              <description>port 0 Beacon early aggregation interrupt</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_on_SCK_INT</name>
              <description>This interrupt is issued at the time set by ALL DRVERLYINT register before TBTT time.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_BCNERLY2_INT</name>
              <description>This interrupt is issued at the time set by DRVERLYINT register before TBTT2 time.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_BCNERLY1_INT</name>
              <description>This interrupt is issued at the time set by DRVERLYINT register before TBTT1 time.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_BCNERLY0_MB7INT</name>
              <description>This interrupt is issued at the time set by DRVERLYINTregister before TBTT0_MB7 time.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_BCNERLY0_MB6INT</name>
              <description>This interrupt is issued at the time set by DRVERLYINT register before TBTT0_MB6 time.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_BCNERLY0_MB5INT</name>
              <description>This interrupt is issued at the time set by DRVERLYINT register before TBTT0_MB5 time.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_BCNERLY0_MB4INT</name>
              <description>This interrupt is issued at the time set by DRVERLYINTregister before TBTT0_MB4 time.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_BCNERLY0_MB3INT</name>
              <description>This interrupt is issued at the time set by DRVERLYINT register before TBTT0_MB3 time.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_BCNERLY0_MB2INT</name>
              <description>This interrupt is issued at the time set by DRVERLYINT register before TBTT0_MB2 time.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_BCNERLY0_MB1INT</name>
              <description>This interrupt is issued at the time set by DRVERLYINTregister before TBTT0_MB1 time.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_BCNERLY0_INT</name>
              <description>This interrupt is issued at the time set by DRVERLYINT register before TBTT0_MB0 time.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FE4IMR</name>
          <addressOffset>0x00001130</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FS_PCIE_BCNDMAERR_INT_EN</name>
              <description>PCIE BCN DMA error interrupt</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_BCNDMA1_INT_EN</name>
              <description>When BCNDMA interval arrives before TBTT1, this interrupt informs MCU to prepare related beacon tasks.</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_BCNDMA0_MB7_INT_EN</name>
              <description>When BCNDMA interval arrives before TBTT0_MB7, this interrupt informs MCU to prepare related beacon tasks.</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_BCNDMA0_MB6_INT_EN</name>
              <description>When BCNDMA interval arrives before TBTT0_MB6, this interrupt informs MCU to prepare related beacon tasks.</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_BCNDMA0_MB5_INT_EN</name>
              <description>When BCNDMA interval arrives before TBTT0_MB5, this interrupt informs MCU to prepare related beacon tasks.</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_BCNDMA0_MB4_INT_EN</name>
              <description>When BCNDMA interval arrives before TBTT0_MB4, this interrupt informs MCU to prepare related beacon tasks.</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_BCNDMA0_MB3_INT_EN</name>
              <description>When BCNDMA interval arrives before TBTT0_MB3, this interrupt informs MCU to prepare related beacon tasks.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_BCNDMA0_MB2_INT_EN</name>
              <description>When BCNDMA interval arrives before TBTT0_MB2, this interrupt informs MCU to prepare related beacon tasks.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_BCNDMA0_MB1_INT_EN</name>
              <description>When BCNDMA interval arrives before TBTT0_MB1, this interrupt informs MCU to prepare related beacon tasks.</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_BCNDMA0_INT_EN</name>
              <description>When BCNDMA interval arrives before TBTT0_MB0, this interrupt informs MCU to prepare related beacon tasks.</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_BCNDMA2_INT_EN</name>
              <description>When BCNDMA interval arrives before TBTT2, this interrupt informs MCU to prepare related beacon tasks.</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PORT0_PKTIN_INT_EN</name>
              <description>port 0 packet assign to queue interrupt</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PORT1_PKTIN_INT_EN</name>
              <description>port 1 packet assign to queue interrupt</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PORT1_RXUCMD0_OK_INT_EN</name>
              <description>port 1 rx unicast packet with more data = 0 ok
interrupt</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PORT1_RXUCMD1_OK_INT_EN</name>
              <description>port 1 rx unicast packet with more data = 1 ok
interrupt</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PORT1_RXBCMD0_OK_INT_EN</name>
              <description>port 1 rx broadcast packet with more data = 0 ok
interrupt</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PORT1_RXBCMD1_OK_INT_EN</name>
              <description>port 1 rx broadcast packet with more data = 1 ok
interrupt</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FE4ISR</name>
          <addressOffset>0x00001134</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FS_PCIE_BCNDMAERR_INT</name>
              <description>PCIE BCN DMA error interrupt</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_BCNDMA1_INT</name>
              <description>When BCNDMA interval arrives before TBTT1, this interrupt informs MCU to prepare related beacon tasks.</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_BCNDMA0_MB7_INT</name>
              <description>When BCNDMA interval arrives before TBTT0_MB7, this interrupt informs MCU to prepare related beacon tasks.</description>
              <bitRange>[29:29]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_BCNDMA0_MB6_INT</name>
              <description>When BCNDMA interval arrives before TBTT0_MB6, this interrupt informs MCU to prepare related beacon tasks.</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_BCNDMA0_MB5_INT</name>
              <description>When BCNDMA interval arrives before TBTT0_MB5, this interrupt informs MCU to prepare related beacon tasks.</description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_BCNDMA0_MB4_INT</name>
              <description>When BCNDMA interval arrives before TBTT0_MB4, this interrupt informs MCU to prepare related beacon tasks.</description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_BCNDMA0_MB3_INT</name>
              <description>When BCNDMA interval arrives before TBTT0_MB3, this interrupt informs MCU to prepare related beacon tasks.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_BCNDMA0_MB2_INT</name>
              <description>When BCNDMA interval arrives before TBTT0_MB2, this interrupt informs MCU to prepare related beacon tasks.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_BCNDMA0_MB1_INT</name>
              <description>When BCNDMA interval arrives before TBTT0_MB1, this interrupt informs MCU to prepare related beacon tasks.</description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_BCNDMA0_INT</name>
              <description>When BCNDMA interval arrives before TBTT0_MB0, this interrupt informs MCU to prepare related beacon tasks.</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_BCNDMA2_INT</name>
              <description>When BCNDMA interval arrives before TBTT2, this interrupt informs MCU to prepare related beacon tasks.</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PORT0_PKTIN_INT</name>
              <description>port 0 packet assign to queue interrupt</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PORT1_PKTIN_INT</name>
              <description>port 1 packet assign to queue interrupt</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PORT1_RXUCMD0_OK_INT</name>
              <description>port 1 rx unicast packet with more data = 0 ok
interrupt</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PORT1_RXUCMD1_OK_INT</name>
              <description>port 1 rx unicast packet with more data = 1 ok
interrupt</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PORT1_RXBCMD0_OK_INT</name>
              <description>port 1 rx broadcast packet with more data = 0 ok
interrupt</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PORT1_RXBCMD1_OK_INT</name>
              <description>port 1 rx broadcast packet with more data = 1 ok
interrupt</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FT1IMR</name>
          <addressOffset>0x00001138</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_RXFTMREQ_INT_EN</name>
              <description>If BIT_RXFTMREQ_INT_EN =1. When HW receive FTMREQ packet, it will generate interrupt to firmware.</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_RXFTM_INT_EN</name>
              <description>If BIT_RXFTM_INT_EN =1. When HW receive FTM and transmit ACK frame successfully, the BB generate FTM report. It will generate interrupt to firmware.</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TXFTM_INT_EN</name>
              <description>If BIT_TXFTM_INT_EN =1. When HW transmit FTM and receive ACK frame successfully, the BB generate FTM report. It will generate interrupt to firmware.</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_RXTMREQ_INT_EN</name>
              <description>If BIT_RXTMREQ_INT_EN =1. When HW receive TMREQ packet, it will generate interrupt to firmware.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_RXTM_INT_EN</name>
              <description>If BIT_RXTM_INT_EN =1. When HW receive TM and transmit ACK frame successfully. It will generate interrupt to firmware.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TXTM_INT_EN</name>
              <description>If BIT_TXTM_INT_EN =1. When HW transmit TM and receive ACK frame successfully. It will generate interrupt to firmware.</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_CTWEnd2_INT_EN</name>
              <description>CTWindow End NOA2 interrupt.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_CTWEnd1_INT_EN</name>
              <description>CTWindow End NOA1 interrupt.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_CTWEnd0_INT_EN</name>
              <description>CTWindow End NOA0 interrupt.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TX_NULL1_P0_INT_EN</name>
              <description>TX null 1 packet done interrupt</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TX_NULL0_P0_INT_EN</name>
              <description>TX null 0 packet done interrupt</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_NOA0_TSF_BIT32_INT_EN</name>
              <description>NOA unit0 TSFT bit 32 toggle interrupt</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_P2P_RFON2_INT_EN</name>
              <description>P2P NoA RF on time indication 2 interrupt</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_P2P_RFOFF2_INT_EN</name>
              <description>P2P NoA RF off time indication 2 interrupt</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_P2P_RFON1_INT_EN</name>
              <description>P2P NoA RF on time indication 1 interrupt</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_P2P_RFOFF1_INT_EN</name>
              <description>P2P NoA RF off time indication 1 interrupt</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_P2P_RFON0_INT_EN</name>
              <description>P2P NoA RF on time indication 0 interrupt</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_P2P_RFOFF0_INT_EN</name>
              <description>P2P NoA RF off time indication 0 interrupt</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_RX_UAPSDMD1_INT_EN</name>
              <description>Setting this bit indicates Rx pkt is matched with one of below:
1.) QoS Unicast data frame with MD=1, UAPSD=0
2.) NonQoS Unicast data frame with MD=1</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_RX_UAPSDMD0_INT_EN</name>
              <description>Setting this bit indicates Rx pkt is matched with one of below:
1.) QoS Unicast data frame with MD=0, UAPSD=0
2.) NonQoS Unicast data frame with MD=0</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TRIGGER_PKT_INT_EN</name>
              <description>tx TRIGGER_PKT interrupt</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_EOSP_INT_EN</name>
              <description>EOSP_INT interrupt mask</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FT1ISR</name>
          <addressOffset>0x0000113C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_RXFTMREQ_INT</name>
              <description>If BIT_RXFTMREQ_INT_EN =1. When HW receive FTMREQ packet, it will generate interrupt to firmware.</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_RXFTM_INT</name>
              <description>If BIT_RXFTM_INT_EN =1. When HW receive FTM and transmit ACK frame successfully, the BB generate FTM report. It will generate interrupt to firmware.</description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TXFTM_INT</name>
              <description>If BIT_TXFTM_INT_EN =1. When HW transmit FTM and receive ACK frame successfully, the BB generate FTM report. It will generate interrupt to firmware.</description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_RXTMREQ_INT</name>
              <description>If BIT_RXTMREQ_INT_EN =1. When HW receive TMREQ packet, it will generate interrupt to firmware.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_RXTM_INT</name>
              <description>If BIT_RXTM_INT_EN =1. When HW receive TM and transmit ACK frame successfully. It will generate interrupt to firmware.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TXTM_INT</name>
              <description>If BIT_TXTM_INT_EN =1. When HW transmit TM and receive ACK frame successfully. It will generate interrupt to firmware.</description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_CTWEnd2_INT</name>
              <description>CTWindow End NOA2 interrupt.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_CTWEnd1_INT</name>
              <description>CTWindow End NOA1 interrupt.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_CTWEnd0_INT</name>
              <description>CTWindow End NOA0 interrupt.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TX_NULL1_P0_INT</name>
              <description>TX null 1 packet done interrupt</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TX_NULL0_P0_INT</name>
              <description>TX null 0 packet done interrupt</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_NOA0_TSF_BIT32_INT</name>
              <description>NOA unit0 TSFT bit 32 toggle interrupt</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_P2P_RFON2_INT</name>
              <description>P2P NoA RF on time indication 2 interrupt</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_P2P_RFOFF2_INT</name>
              <description>P2P NoA RF off time indication 2 interrupt</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_P2P_RFON1_INT</name>
              <description>P2P NoA RF on time indication 1 interrupt</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_P2P_RFOFF1_INT</name>
              <description>P2P NoA RF off time indication 1 interrupt</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_P2P_RFON0_INT</name>
              <description>P2P NoA RF on time indication 0 interrupt</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_P2P_RFOFF0_INT</name>
              <description>P2P NoA RF off time indication 0 interrupt</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_RX_UAPSDMD1_INT</name>
              <description>Setting this bit indicates Rx pkt is matched with one of below:
1.) QoS Unicast data frame with MD=1, UAPSD=0
2.) NonQoS Unicast data frame with MD=1</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_RX_UAPSDMD0_INT</name>
              <description>Setting this bit indicates Rx pkt is matched with one of below:
1.) QoS Unicast data frame with MD=0, UAPSD=0
2.) NonQoS Unicast data frame with MD=0</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TRIGGER_PKT_INT</name>
              <description>tx TRIGGER_PKT interrupt</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_EOSP_INT</name>
              <description>EOSP_INT interrupt mask</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CHK_HANG_0</name>
          <addressOffset>0x00001140</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_state0_chk_enable</name>
              <description>function enable of check hang of state_0</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_state0_chk_hang</name>
              <description>when r_state0_chk_enable is set, if state_0 is the value is equal to r_state0_chk_hang, starts state0_timeout_timer</description>
              <bitRange>[19:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_state0_timeout_thres</name>
              <description>timeout threshold of state0_timeout_timer, unit:us</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CHK_HANG_1</name>
          <addressOffset>0x00001144</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_state1_chk_enable</name>
              <description>function enable of check hang of state_1</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_state1_chk_hang</name>
              <description>when r_state1_chk_enable is set, if state_1 is the value is equal to r_state1_chk_hang, starts state1_timeout_timer</description>
              <bitRange>[19:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_state1_timeout_thres</name>
              <description>timeout threshold of state0_timeout_timer, unit:us</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_HIMR0</name>
          <addressOffset>0x00001148</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_HS_HISR1_INT_EN</name>
              <description>HISR1 Indicator (HIISR1 andHIMR1 are true, this bit is set to 1)</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_RXDES_UNAVAIL_INT_EN</name>
              <description>Rx Descriptor Unavailable</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_HISR2_INT_EN</name>
              <description>HISR2 Indicator (HIISR2 andHIMR2 are true, this bit is set to 1)</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_EVTQ_DONE_INT_EN</name>
              <description>event queue done interrupt for NAN</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_EVTQ_START_INT_EN_V1</name>
              <description>event queue start interrupt for NAN</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_FWMSG_INT_EN</name>
              <description>FW message interrupt,CPU to Host Command INT Status, Write 1 clear</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_HCPWM_INT_EN</name>
              <description>CPWM interrupt,CPU power Mode exchange INT Status, Write 1 clear</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXFF_FULL_INT_EN</name>
              <description>Rxpktbuffer full interrupt</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_RDE_ERR_INT_EN</name>
              <description>Rxdma error interrupt</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_TDE_ERR_INT_EN</name>
              <description>Txdma error interrupt</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_TXFF_FIFO_INT_EN</name>
              <description>txpktbuffer full interrupt</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_TXBCN8_ERR_INT_EN</name>
              <description>port0 BSSID7 TX beacon error interrupt</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_TXBCN7_ERR_INT_EN</name>
              <description>port0 BSSID6 TX beacon error interrupt</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_TXBCN6_ERR_INT_EN</name>
              <description>port0 BSSID5 TX beacon error interrupt</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_TXBCN5_ERR_INT_EN</name>
              <description>port0 BSSID4 TX beacon error interrupt</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_TXBCN4_ERR_INT_EN</name>
              <description>port0 BSSID3 TX beacon error interrupt</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_TXBCN3_ERR_INT_EN</name>
              <description>port0 BSSID2 TX beacon error interrupt</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_TXBCN2_ERR_INT_EN</name>
              <description>port0 BSSID1 TX beacon error interrupt</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_TXBCN1_ERR_INT_EN</name>
              <description>port0 BSSID0 TX beacon error interrupt</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_TXBCN8_OK_INT_EN</name>
              <description>port0 BSSID7 TX beacon ok interrupt</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_TXBCN7_OK_INT_EN</name>
              <description>port0 BSSID6 TX beacon ok interrupt</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_TXBCN6_OK_INT_EN</name>
              <description>port0 BSSID5 TX beacon ok interrupt</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_TXBCN5_OK_INT_EN</name>
              <description>port0 BSSID4 TX beacon ok interrupt</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_TXBCN4_OK_INT_EN</name>
              <description>port0 BSSID3 TX beacon ok interrupt</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_TXBCN3_OK_INT_EN</name>
              <description>port0 BSSID2 TX beacon ok interrupt</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_TXBCN2_OK_INT_EN</name>
              <description>port0 BSSID1 TX beacon ok interrupt</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_TXBCN1_OK_INT_EN</name>
              <description>port0 BSSID0 TX beacon ok interrupt</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_TSF_BIT32_TOGGLE_INT_EN</name>
              <description>TSF Timer BIT32 toggle indication interrupt</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_TIMEOUT2_INT_EN</name>
              <description>tsf Timer2 interrupt</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_TIMEOUT1_V1_INT_EN</name>
              <description>tsf Timer1 interrupt</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_TIMEOUT0_V1_INT_EN</name>
              <description>tsf Timer0 interrupt</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_HISR0</name>
          <addressOffset>0x0000114C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_HS_HISR1_INT</name>
              <description>HISR1 Indicator (HIISR1 andHIMR1 are true, this bit is set to 1)</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_RXDES_UNAVAIL_INT</name>
              <description>Rx Descriptor Unavailable</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_HISR2_INT</name>
              <description>HISR2 Indicator (HIISR2 andHIMR2 are true, this bit is set to 1)</description>
              <bitRange>[29:29]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_EVTQ_DONE_INT</name>
              <description>event queue done interrupt for NAN</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_EVTQ_START_INT_V1</name>
              <description>event queue start interrupt for NAN</description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_FWMSG_INT</name>
              <description>FW message interrupt,CPU to Host Command INT Status, Write 1 clear</description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_HCPWM_INT</name>
              <description>CPWM interrupt,CPU power Mode exchange INT Status, Write 1 clear</description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_RXFF_FULL_INT</name>
              <description>Rxpktbuffer full interrupt</description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_RDE_ERR_INT</name>
              <description>Rxdma error interrupt</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_TDE_ERR_INT</name>
              <description>Txdma error interrupt</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_TXFF_FIFO_INT</name>
              <description>txpktbuffer full interrupt</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_TXBCN8_ERR_INT</name>
              <description>port0 BSSID7 TX beacon error interrupt</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_TXBCN7_ERR_INT</name>
              <description>port0 BSSID6 TX beacon error interrupt</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_TXBCN6_ERR_INT</name>
              <description>port0 BSSID5 TX beacon error interrupt</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_TXBCN5_ERR_INT</name>
              <description>port0 BSSID4 TX beacon error interrupt</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_TXBCN4_ERR_INT</name>
              <description>port0 BSSID3 TX beacon error interrupt</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_TXBCN3_ERR_INT</name>
              <description>port0 BSSID2 TX beacon error interrupt</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_TXBCN2_ERR_INT</name>
              <description>port0 BSSID1 TX beacon error interrupt</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_TXBCN1_ERR_INT</name>
              <description>port0 BSSID0 TX beacon error interrupt</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_TXBCN8_OK_INT</name>
              <description>port0 BSSID7 TX beacon ok interrupt</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_TXBCN7_OK_INT</name>
              <description>port0 BSSID6 TX beacon ok interrupt</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_TXBCN6_OK_INT</name>
              <description>port0 BSSID5 TX beacon ok interrupt</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_TXBCN5_OK_INT</name>
              <description>port0 BSSID4 TX beacon ok interrupt</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_TXBCN4_OK_INT</name>
              <description>port0 BSSID3 TX beacon ok interrupt</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_TXBCN3_OK_INT</name>
              <description>port0 BSSID2 TX beacon ok interrupt</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_TXBCN2_OK_INT</name>
              <description>port0 BSSID1 TX beacon ok interrupt</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_TXBCN1_OK_INT</name>
              <description>port0 BSSID0 TX beacon ok interrupt</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_TSF_BIT32_TOGGLE_INT</name>
              <description>TSF Timer BIT32 toggle indication interrupt</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_TIMEOUT2_INT</name>
              <description>tsf Timer2 interrupt</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_TIMEOUT1_INT_V1</name>
              <description>tsf Timer1 interrupt</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_TIMEOUT0_INT_V1</name>
              <description>tsf Timer0 interrupt</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_HIMR1</name>
          <addressOffset>0x00001150</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_HS_CTWEND1_INT_EN</name>
              <description>Client1 traffic window end interrupt  for P2P</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_CTWEND0_INT_EN</name>
              <description>Client0 traffic window end interrupt  for P2P</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_DWWIN_END_INT_EN_V1</name>
              <description>discovery window end interrupt for NAN</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_ATIMEND8_INT_EN</name>
              <description>port0 BSSID8 atimend interrupt</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_ATIMEND7_INT_EN</name>
              <description>port0 BSSID7 atimend interrupt</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_ATIMEND6_INT_EN</name>
              <description>port0 BSSID6 atimend interrupt</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_ATIMEND5_INT_EN</name>
              <description>port0 BSSID5 atimend interrupt</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_ATIMEND4_INT_EN</name>
              <description>port0 BSSID4 atimend interrupt</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_ATIMEND3_INT_EN</name>
              <description>port0 BSSID3 atimend interrupt</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_ATIMEND2_INT_EN</name>
              <description>port0 BSSID2 atimend interrupt</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_ATIMEND1_INT_EN</name>
              <description>port0 BSSID1 atimend interrupt</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_ATIMEND0_INT_EN</name>
              <description>port0 BSSID0 atimend interrupt</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_BCNERLY8_INT_EN</name>
              <description>port1 beacon early interrupt</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_BCNERLY7_INT_EN</name>
              <description>port0 BSSID7 beacon early interrupt ,  only valid under MBSSID mode</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_BCNERLY6_INT_EN</name>
              <description>port0 BSSID6 beacon early interrupt ,  only valid under MBSSID mode</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_BCNERLY5_INT_EN</name>
              <description>port0 BSSID5 beacon early interrupt ,  only valid under MBSSID mode</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_BCNERLY4_INT_EN</name>
              <description>port0 BSSID4 beacon early interrupt,  only valid under MBSSID mode</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_BCNERLY3_INT_EN</name>
              <description>port0 BSSID3 beacon early interrupt ,  only valid under MBSSID mode</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_BCNERLY2_INT_EN</name>
              <description>port0 BSSID2 beacon early interrupt,  only valid under MBSSID mode</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_BCNERLY1_INT_EN</name>
              <description>port0 BSSID1 beacon early interrupt ,  only valid under MBSSID mode</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_BCNERLY0_INT_EN</name>
              <description>This interrupt is issued at the time set by DRVERLYINT register before TBTT time 
for port 0 root bssid</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_CPU_MGQ_TXDONE_INT_EN</name>
              <description>CPU_MQG_TXDONE ineterrupt source
when HW TX CPUMGQ packet success, it issue interrupt to host</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_PS_Timer_C_INT_EN</name>
              <description>PS_Timer_C interrupt source
When the lower 4 bytes of TSF(that select by reg 0x1510[18:16]) matches the content of this register, the PS_Timer_C_INT interrupt is issued</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_PS_Timer_B_INT_EN</name>
              <description>PS_Timer_B interrupt source
When the lower 4 bytes of TSF(that select by reg 0x1510[10:8]) matches the content of this register, the PS_Timer_B_INT interrupt is issued</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_PS_Timer_A_INT_EN</name>
              <description>PS_Timer_A interrupt source
When the lower 4 bytes of TSF(that select by reg 0x1510[2:0]) matches the content of this register, the PS_Timer_A_INT interrupt is issued</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_HS_BCNELY0_AGGR_INT_EN</name>
              <description>port 0 Beacon early aggregation interrupt</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_GTINT4_EN</name>
              <description>When GTIMER4 expires, this bit is set to 1</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_GTINT3_EN</name>
              <description>When GTIMER3 expires, this bit is set to 1</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_TXBCNOK9_INT_EN</name>
              <description>PORT1 TX beacon OK interrupt</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_TXBCNERE9_INT_EN</name>
              <description>PORT1 TX beacon Error interrupt</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_RXBCN_NAN_RPT_OK_EN</name>
              <description>port2 rxbcn rpt and write to txrptbuf ok</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_HISR1</name>
          <addressOffset>0x00001154</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_HS_CTWEND1_INT</name>
              <description>Client1 traffic window end interrupt  for P2P</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_CTWEND0_INT</name>
              <description>Client0 traffic window end interrupt  for P2P</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_DWWIN_END_INT_V1</name>
              <description>discovery window end interrupt for NAN</description>
              <bitRange>[29:29]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_ATIMEND8_INT</name>
              <description>port1 atimend interrupt</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_ATIMEND7_INT</name>
              <description>port0 BSSID7 atimend interrupt</description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_ATIMEND6_INT</name>
              <description>port0 BSSID6 atimend interrupt</description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_ATIMEND5_INT</name>
              <description>port0 BSSID5 atimend interrupt</description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_ATIMEND4_INT</name>
              <description>port0 BSSID4 atimend interrupt</description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_ATIMEND3_INT</name>
              <description>port0 BSSID3 atimend interrupt</description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_ATIMEND2_INT</name>
              <description>port0 BSSID2 atimend interrupt</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_ATIMEND1_INT</name>
              <description>port0 BSSID1 atimend interrupt</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_ATIMEND0_INT</name>
              <description>port0 BSSID0 atimend interrupt</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_BCNERLY8_INT</name>
              <description>port1 beacon early interrupt</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_BCNERLY7_INT</name>
              <description>port0 BSSID7 beacon early interrupt ,  only valid under MBSSID mode</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_BCNERLY6_INT</name>
              <description>port0 BSSID6 beacon early interrupt ,  only valid under MBSSID mode</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_BCNERLY5_INT</name>
              <description>port0 BSSID5 beacon early interrupt ,  only valid under MBSSID mode</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_BCNERLY4_INT</name>
              <description>port0 BSSID4 beacon early interrupt,  only valid under MBSSID mode</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_BCNERLY3_INT</name>
              <description>port0 BSSID3 beacon early interrupt ,  only valid under MBSSID mode</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_BCNERLY2_INT</name>
              <description>port0 BSSID2 beacon early interrupt,  only valid under MBSSID mode</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_BCNERLY1_INT</name>
              <description>port0 BSSID1 beacon early interrupt ,  only valid under MBSSID mode</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_BCNERLY0_INT</name>
              <description>This interrupt is issued at the time set by DRVERLYINT register before TBTT time 
for port 0 root bssid</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_HS_BCNELY1_AGGR_INT</name>
              <description>port 1 Beacon early aggregation interrupt</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_CPU_MGQ_TXDONE_INT</name>
              <description>CPU_MQG_TXDONE ineterrupt source
when HW TX CPUMGQ packet success, it issue interrupt to host</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_PS_Timer_C_INT</name>
              <description>PS_Timer_C interrupt source
When the lower 4 bytes of TSF(that select by reg 0x1510[18:16]) matches the content of this register, the PS_Timer_C_INT interrupt is issued</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_PS_Timer_B_INT</name>
              <description>PS_Timer_B interrupt source
When the lower 4 bytes of TSF(that select by reg 0x1510[10:8]) matches the content of this register, the PS_Timer_B_INT interrupt is issued</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_PS_Timer_A_INT</name>
              <description>PS_Timer_A interrupt source
When the lower 4 bytes of TSF(that select by reg 0x1510[2:0]) matches the content of this register, the PS_Timer_A_INT interrupt is issued</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_HS_BCNELY0_AGGR_INT</name>
              <description>port 0 Beacon early aggregation interrupt</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_GTINT4</name>
              <description>When GTIMER4 expires, this bit is set to 1</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_GTINT3</name>
              <description>When GTIMER3 expires, this bit is set to 1</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_TXBCNOK9_INT</name>
              <description>PORT1 TX beacon OK interrupt</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_TXBCNERR9_INT</name>
              <description>PORT1 TX beacon Error interrupt</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_RXBCN_NAN_RPT_OK</name>
              <description>port2 rxbcn rpt and write to txrptbuf ok</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_HIMR2</name>
          <addressOffset>0x00001158</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_HS_KM0_INT_EN</name>
              <description>The gathering of interrupts of KM0</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_audio_timer_int_EN</name>
              <description>if the counter of rxbcn(P0 rx mode) or TBTT(P1/P0 tx mode) reached the threshold, generate an interrupt to notify the Driver</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_WLAN_RX_STOP_INT_EN</name>
              <description>From wmac.
BIT_WLAN_RX_START=(pre_wl_cca==1)&amp;&amp;(cur_wl_cca==0)</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_WLAN_RX_START_INT_EN</name>
              <description>From wmac.
BIT_WLAN_RX_START=(pre_wl_cca==0)&amp;&amp;(cur_wl_cca==1)
Zigbee</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_WLAN_TX_STOP_INT_EN</name>
              <description>From wmac.
BIT_WLAN_TX_START=(pre_wl_mactxen==1)&amp;&amp;(cur_wl_mactxen=0)</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_WLAN_TX_START_INT_EN</name>
              <description>From wmac.
BIT_WLAN_TX_START=(pre_wl_mactxen==0)&amp;&amp;(cur_wl_mactxen=1)
Zigbee</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_PS_Timer_E_INT_EN</name>
              <description>PS_Timer_E interrupt 
When the TSF(that select by reg 0x1520[13:12]) matches the content of this register, the PS_Timer_E_INT interrupt is issued</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_PS_Timer_D_INT_EN</name>
              <description>PS_Timer_D interrupt 
When the lower 4 bytes of TSF(that select by reg 0x1520[17:16]) matches the content of this register, the PS_Timer_D_INT interrupt is issued</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_PS_Timer_E_Early_INT_EN</name>
              <description>This interrupt is issued at the time set by PS_Timer_E_Early register before PS_Timer_E time.</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_PS_Timer_D_Early_INT_EN</name>
              <description>This interrupt is issued at the time set by PS_Timer_D_Early register before PS_Timer_D time.</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_PS_Timer_C_Early_INT_EN</name>
              <description>This interrupt is issued at the time set by PS_Timer_C_Early register before PS_Timer_C time.</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_PS_Timer_B_Early_INT_EN</name>
              <description>This interrupt is issued at the time set by PS_Timer_B_Early register before PS_Timer_B time.</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_PS_Timer_A_Early_INT_EN</name>
              <description>This interrupt is issued at the time set by PS_Timer_A_Early register before PS_Timer_A time.</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_TXBCNOK_NAN_INT_EN</name>
              <description>PORT2 TX beacon OK interrupt</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_TXBCNERR_NAN_INT_EN</name>
              <description>PORT2 TX beacon Error interrupt</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_RXTMREQ_INT_EN</name>
              <description>If BIT_RXTMREQ_INT_EN =1. When HW receive TMREQ packet, it will generate interrupt to firmware.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_RXTM_INT_EN</name>
              <description>If BIT_RXTM_INT_EN =1. When HW receive TM and transmit ACK frame successfully. It will generate interrupt to firmware.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_TXTM_INT_EN</name>
              <description>If BIT_TXTM_INT_EN =1. When HW transmit TM and receive ACK frame successfully. It will generate interrupt to firmware.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_RX_PAYLOAD_MATCH_INT_EN</name>
              <description>indicate rx payload content match</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_CHINFO_SEG_DONE_INT_EN</name>
              <description>indicate one channel info segment is received ok</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_CSI_BUF_FULL_INT_EN</name>
              <description>indicate channel info rxcsibuffer is full</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_BT_RX_STOP_INT_EN</name>
              <description>From PTA.
BIT_BT_TX_START=(pre_gnt_bt_rx==1) &amp;&amp;(cur_gnt_bt_rx==0)</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_BT_RX_START_INT_EN</name>
              <description>From PTA.
BIT_BT_TX_START=(pre_gnt_bt_rx==0) &amp;&amp;(cur_gnt_bt_rx==1)</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_BT_TX_STOP_INT_EN</name>
              <description>From PTA.
BIT_BT_TX_START=(pre_gnt_bt_tx==1) &amp;&amp;(cur_gnt_bt_tx==0)</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_BT_TX_START_INT_EN</name>
              <description>From PTA.
BIT_BT_TX_START=(pre_gnt_bt_tx==0) &amp;&amp;(cur_gnt_bt_tx==1)</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_TIM_HIT_INT_EN</name>
              <description>when my aid or aid is 0 (0x16DC[8]) or my bssid is in tim element,generate this interrupt</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_RSSI_MATCH_EN</name>
              <description>Interrupt to inform km0 received RSSI is in supposed range</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_BCN_IE_0_HIT_INT_EN</name>
              <description>rx bcn with ie0 hit</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_BCN_IE_1_HIT_INT_EN</name>
              <description>rx bcn with ie1 hit</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_TIM_NO_HIT_INT_EN</name>
              <description>when no my aid or aid is 0(0x16DC[8]) or my bssid is not in tim element(0x16DB[31]),generate this interrupt</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HISR2</name>
          <addressOffset>0x0000115C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_HS_KM0_INT</name>
              <description>The gathering of interrupts of KM0</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_audio_timer_int</name>
              <description>if the counter of rxbcn(P0 rx mode) or TBTT(P1/P0 tx mode) reached the threshold, generate an interrupt to notify the Driver</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_WLAN_RX_STOP_INT</name>
              <description>From wmac.
BIT_WLAN_RX_START=(pre_wl_cca==1)&amp;&amp;(cur_wl_cca==0)</description>
              <bitRange>[29:29]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_WLAN_RX_START_INT</name>
              <description>From wmac.
BIT_WLAN_RX_START=(pre_wl_cca==0)&amp;&amp;(cur_wl_cca==1)
Zigbee 收到该中断后,可以选择是否要中断当前封包TX or RX</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_WLAN_TX_STOP_INT</name>
              <description>From wmac.
BIT_WLAN_TX_START=(pre_wl_mactxen==1)&amp;&amp;(cur_wl_mactxen=0)</description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_WLAN_TX_START_INT</name>
              <description>From wmac.
BIT_WLAN_TX_START=(pre_wl_mactxen==0)&amp;&amp;(cur_wl_mactxen=1)
Zigbee 收到该中断后,可以选择是否要中断当前封包TX or RX</description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_PS_Timer_E_INT</name>
              <description>PS_Timer_E interrupt 
When the TSF(that select by reg 0x1520[13:12]) matches the content of this register, the PS_Timer_E_INT interrupt is issued</description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_PS_Timer_D_INT</name>
              <description>PS_Timer_D interrupt 
When the lower 4 bytes of TSF(that select by reg 0x1520[17:16]) matches the content of this register, the PS_Timer_D_INT interrupt is issued</description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_PS_Timer_E_Early_INT</name>
              <description>This interrupt is issued at the time set by PS_Timer_E_Early register before PS_Timer_E time.</description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_PS_Timer_D_Early_INT</name>
              <description>This interrupt is issued at the time set by PS_Timer_D_Early register before PS_Timer_D time.</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_PS_Timer_C_Early_INT</name>
              <description>This interrupt is issued at the time set by PS_Timer_C_Early register before PS_Timer_C time.</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_PS_Timer_B_Early_INT</name>
              <description>This interrupt is issued at the time set by PS_Timer_B_Early register before PS_Timer_B time.</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_PS_Timer_A_Early_INT</name>
              <description>This interrupt is issued at the time set by PS_Timer_A_Early register before PS_Timer_A time.</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_TXBCNOK_NAN_INT</name>
              <description>PORT2 TX beacon OK interrupt</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_TXBCNERR_NAN_INT</name>
              <description>PORT2 TX beacon Error interrupt</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_RXTMREQ_INT</name>
              <description>If BIT_RXTMREQ_INT_EN =1. When HW receive TMREQ packet, it will generate interrupt to firmware.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_RXTM_INT</name>
              <description>If BIT_RXTM_INT_EN =1. When HW receive TM and transmit ACK frame successfully. It will generate interrupt to firmware.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_TXTM_INT</name>
              <description>If BIT_TXTM_INT_EN =1. When HW transmit TM and receive ACK frame successfully. It will generate interrupt to firmware.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_RX_PAYLOAD_MATCH_INT</name>
              <description>indicate rx payload content match</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_CHINFO_SEG_DONE_INT</name>
              <description>indicate one channel info segment is received ok</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_CSI_BUF_FULL_INT</name>
              <description>indicate channel info rxcsibuffer is full</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_BT_RX_STOP_INT</name>
              <description>From PTA.
BIT_BT_TX_START=(pre_gnt_bt_rx==1) &amp;&amp;(cur_gnt_bt_rx==0)</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_BT_RX_START_INT</name>
              <description>From PTA.
BIT_BT_TX_START=(pre_gnt_bt_rx==0) &amp;&amp;(cur_gnt_bt_rx==1)</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_BT_TX_STOP_INT</name>
              <description>From PTA.
BIT_BT_TX_START=(pre_gnt_bt_tx==1) &amp;&amp;(cur_gnt_bt_tx==0)</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_BT_TX_START_INT</name>
              <description>From PTA.
BIT_BT_TX_START=(pre_gnt_bt_tx==0) &amp;&amp;(cur_gnt_bt_tx==1)</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_TIM_HIT_INT</name>
              <description>when my aid or aid is 0 (0x16DC[8]) or my bssid is in tim element,generate this interrupt</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_RSSI_MATCH</name>
              <description>Interrupt to inform km0 received RSSI is in supposed range</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_BCN_IE_0_HIT_INT</name>
              <description>rx bcn with ie0 hit</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_BCN_IE_1_HIT_INT</name>
              <description>rx bcn with ie1 hit</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_TIM_NO_HIT_INT</name>
              <description>when no my aid or aid is 0(0x16DC[8]) or my bssid is not in tim element(0x16DB[31]),generate this interrupt</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FE5IMR</name>
          <addressOffset>0x00001168</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[30:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_EXT_INTF4_EN_MSK</name>
              <description>ext bt mailbox int,mailbox_outempty_int| mailbox_in_rdy_int</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_gnt_bt_bb_fall_MSK</name>
              <description>ext Mailbox INT from btcoex</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_gnt_bt_bb_rise_MSK</name>
              <description>ext Mailbox INT from btcoex</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_bt2wl_sts_INT_MSK</name>
              <description>ext scoreboard INT from BT</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_bt_mailbox_i2c_MSK</name>
              <description>Mailbox INT from I2C</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FE5ISR</name>
          <addressOffset>0x0000116C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[30:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_EXT_INTF4_EN</name>
              <description>ext bt mailbox int,mailbox_outempty_int| mailbox_in_rdy_int</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_gnt_bt_bb_fall</name>
              <description>ext Mailbox INT from btcoex</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_gnt_bt_bb_rise</name>
              <description>ext Mailbox INT from btcoex</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_bt2wl_sts_INT</name>
              <description>ext scoreboard INT from BT</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_bt_mailbox_i2c</name>
              <description>Mailbox INT from I2C</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FE6IMR</name>
          <addressOffset>0x00001170</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[31:10]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_FS_PORT0_RXUCMD0_ACK_INT_EN</name>
              <description>port 0 rx unicast ACK/BA/MBA with more data = 0 ok
interrupt</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PORT0_RXUCMD1_ACK_INT_EN</name>
              <description>port 0 rx unicast ACK/BA/MBA with more data = 1 ok
interrupt</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PORT0_RXBCMD0_ACK_INT_EN</name>
              <description>port 0 rx broadcast ACK/BA/MBA with more data = 0 ok
interrupt</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PORT0_RXBCMD1_ACK_INT_EN</name>
              <description>port 0 rx broadcast ACK/BA/MBA with more data = 1 ok
interrupt</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PORT1_RXUCMD0_ACK_INT_EN</name>
              <description>port 1 rx unicast ACK/BA/MBA with more data = 0 ok
interrupt</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PORT1_RXUCMD1_ACK_INT_EN</name>
              <description>port 1 rx unicast ACK/BA/MBA with more data = 1 ok
interrupt</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PORT1_RXBCMD0_ACK_INT_EN</name>
              <description>port 1 rx broadcast ACK/BA/MBA with more data = 0 ok
interrupt</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PORT1_RXBCMD1_ACK_INT_EN</name>
              <description>port 1 rx broadcast ACK/BA/MBA with more data = 1 ok
interrupt</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FE6ISR</name>
          <addressOffset>0x00001174</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[31:10]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_FS_PORT0_RXUCMD0_ACK_INT</name>
              <description>port 0 rx unicast ACK/BA/MBA with more data = 0 ok
interrupt</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PORT0_RXUCMD1_ACK_INT</name>
              <description>port 0 rx unicast ACK/BA/MBA with more data = 1 ok
interrupt</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PORT0_RXBCMD0_ACK_INT</name>
              <description>port 0 rx broadcast ACK/BA/MBA with more data = 0 ok
interrupt</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PORT0_RXBCMD1_ACK_INT</name>
              <description>port 0 rx broadcast ACK/BA/MBA with more data = 1 ok
interrupt</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PORT1_RXUCMD0_ACK_INT</name>
              <description>port 1 rx unicast ACK/BA/MBA with more data = 0 ok
interrupt</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PORT1_RXUCMD1_ACK_INT</name>
              <description>port 1 rx unicast ACK/BA/MBA with more data = 1 ok
interrupt</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PORT1_RXBCMD0_ACK_INT</name>
              <description>port 1 rx broadcast ACK/BA/MBA with more data = 0 ok
interrupt</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PORT1_RXBCMD1_ACK_INT</name>
              <description>port 1 rx broadcast ACK/BA/MBA with more data = 1 ok
interrupt</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ext_queue_register</name>
          <addressOffset>0x0000117C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TXBUF_WKCAM_OFFSET</name>
              <description>the offset of WOL pattern stored in txpktbuffer, unit is 8byte</description>
              <bitRange>[15:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>h2cq_pri</name>
              <description></description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_periodic_cca_ctrl_0</name>
          <addressOffset>0x00001180</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x40282852</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_power_wait_aagc_done</name>
              <description>set1:when cca rsie up before power detect done,wait aagc_done to reenter power detect</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_rssi_offset</name>
              <description>S(8,0), offset for beacon rssi(signed)</description>
              <bitRange>[29:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_rssi_mean</name>
              <description>RSSI LATCH mean by 1cycle/2cycle/4 cycle/8cycle</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_rssi_hit</name>
              <description>RSSI hit with 1cycle/2cycle/4cycle/8cylce</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_power_bias_n</name>
              <description>Power calculated by aagc model compared with r_rssi_backup minus r_power_bias_n(unsigned)</description>
              <bitRange>[17:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_power_bias_p</name>
              <description>Power calculated by aagc model compared with r_rssi_backup plus r_power_bias_p(unsigned)</description>
              <bitRange>[10:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_power_period</name>
              <description>Period time for calculate power
0:0.8us /1:1.6us /2:2.4us
3:3.2us /4:4.0us /5:4.8us
6:5.6us /7:6.4us</description>
              <bitRange>[3:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_periodic_cca</name>
              <description>Enable or disable periodic cca function  when rxbcn</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_periodic_cca_ctrl_1</name>
          <addressOffset>0x00001184</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00099235</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_en_bcn_upt_rssi</name>
              <description>1: enable HW update RSSI_BACKUP to 0x1184[17:11] when rx_my_bcn_rdy valid</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_phystatus_period</name>
              <description>Period time for cca end to data on end and phystatus upload and RF settling
0:1us /1:2us /2:3us/ 3:4us</description>
              <bitRange>[20:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_mac_break_bb_sel</name>
              <description>0: use BBRST=0 (function disable) to break bb
1:use CCKRST(disable CCK function) to break bb</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_rssi_backup</name>
              <description>Backup rssi (unsigned)</description>
              <bitRange>[17:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cca_wait_period</name>
              <description>Wait time for CCK CCA
0:5us /1:10us /2:15us 3:20us /4:25us /5:30us
6:35us /7:40us</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_standby_period_pwrok</name>
              <description>Period time for RF standby if power is match 0:30us/1:35us /1:40us/ 2:45us/ 3:50us
4:55us /5:60us.. 14:105us/ 15:110us</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_standby_period_pwrmis</name>
              <description>Period time for RF standby if power is mismatch 0:30us/1:35us /1:40us/ 2:45us/ 3:50us
4:55us /5:60us.. 14:105us/ 15:110us</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_periodic_cca_ctrl_2</name>
          <addressOffset>0x00001188</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0030014A</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_igi_offset</name>
              <description>S(4,0), offset for beacon rssi(unsigned)</description>
              <bitRange>[22:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_rssi_gap</name>
              <description>if the difference of average rssi between state of power monitor and state of wait cca is too large(&gt;=r_rssi_gap),the cca will be thought as false alarm</description>
              <bitRange>[18:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_rf_settle2_period</name>
              <description>settling time for RF if BB &amp; RF is already enabled,
0:0us, 1:0.2us, 2:0.4us...</description>
              <bitRange>[11:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_rf_settle1_period</name>
              <description>settling time for RF if BB &amp; RF is enabled form standby mode,
0:0us, 1:0.2us, 2:0.4us...</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_periodic_cca_ctrl_3</name>
          <addressOffset>0x0000118C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x1D700000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_igi_backup_addr</name>
              <description>Reg address for igi information
(for amebad,igi reg is set in BB reg 0x1d70)</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_periodic_cca_sfd_rstbb</name>
              <description>1:mac check sfd fail will rstbb
0:mac check sfd fail will not rstbb</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_periodic_cca_sfd_sel</name>
              <description>0:check sfd of long plcp of received beacon
1:check sfd of short plcp of received beacon</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_periodic_cca_sfd_chk_en</name>
              <description>Enable check long plcp preamble or short preamble</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_periodic_cca_bcn_len</name>
              <description>Supposed Length of beacon, unit:byte
If set to 0, not check length of beacon</description>
              <bitRange>[12:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_periodic_cca_rate_cmp_en</name>
              <description>1:enable rate compare when periodic cca
0:disable rate compare when periodic cca</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_periodic_cca_rate_sel</name>
              <description>If rate mismatch, break bb 
0:CCK 1M; 1:CCK 2M;
2:CCK 5.5M; 3:CCK11M</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EXT_BT_MAILBOX_OUT_LOW</name>
          <addressOffset>0x000011A4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ext_mailbox_data_51to81_l</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EXT_BT_MAILBOX_OUT_HIGH</name>
          <addressOffset>0x000011A8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ext_mailbox_data_51to81_h</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EXT_BT_Mailbox_control</name>
          <addressOffset>0x000011AC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ext_mailbox_in_rdy_inten</name>
              <description>Mailbox IN ready interrupt enable</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ext_mailbox_in_rdy</name>
              <description>Mailbox ready BT2Wifi</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ext_mailbox_outempty_inten</name>
              <description>Mailbox OUT empty interrupt enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ext_mailbox_out_vld</name>
              <description>Mailbox ACK Wifi2BT</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EXT_BT_MAILBOX_IN_LOW</name>
          <addressOffset>0x000011B0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ext_mailbox_data_81to51_l</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EXT_BT_MAILBOX_IN_HIGH</name>
          <addressOffset>0x000011B4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ext_mailbox_data_81_to51_h</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_periodic_shutdown_ctrl</name>
          <addressOffset>0x000011B8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000004</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_shutdown_period</name>
              <description>Period time for RF shutdown if power is match 0:60us /1:80us/ 2:100us/ 3:120us
4:140us /5:160us.. 14:340us/ 15:360us</description>
              <bitRange>[4:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_periodic_shutdown</name>
              <description>Enable or disable periodic shutdown BB&amp;RF</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FWIMR1</name>
          <addressOffset>0x000011C0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FS_TXBCNOK_PORT1_INT_EN</name>
              <description>ENABLE PORT1 TX beacon OK interrupt</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNERR_PORT1_INT_EN</name>
              <description>ENABLE PORT0 TX beacon Error interrupt</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNOK_PORT2_INT_EN</name>
              <description>PORT2 TX beacon OK interrupt</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNERR_PORT2_INT_EN</name>
              <description>PORT2 TX beacon Error interrupt</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_EVTQ_TXDONE_INT_EN</name>
              <description></description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_EVTQ_START_INT_EN</name>
              <description></description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_DWWIN_END_INT_EN</name>
              <description></description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_BCN_IE_0_HIT_INT_EN</name>
              <description>rx bcn with ie0 hit</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_BCN_IE_1_HIT_INT_EN</name>
              <description>rx bcn with ie1 hit</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_RXBCN_NAN_RPT_OK_EN</name>
              <description>port2 rxbcn rpt and write to txrptbuf ok</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TIM_NO_HIT_INT_EN</name>
              <description>when no my aid or aid is 0(0x16DC[8]) or my bssid is not in tim element(0x16DB[31]),generate this interrupt</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TIM_HIT_INT_EN</name>
              <description>when my aid or aid is 0 (0x16DC[8]=0) or my bssid is in tim element(0x16D8[31]=0),generate this interrupt</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_HIOE_CHN0_INT_EN</name>
              <description>hioe_chn0 done interrupt</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_HIOE_CHN1_INT_EN</name>
              <description>hioe_chn1 done interrupt</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_HIOE_CHN_ON_INT_EN</name>
              <description>hioe_chn_on done interrupt</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_HIOE_CHN_OFF_INT_EN</name>
              <description>hioe_chn_off done interrupt</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_CHINFO_SEG_DONE_INT_NE</name>
              <description>indicate one channel info segment is received ok</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_RSSI_MATCH_INT_EN</name>
              <description>Interrupt to inform km0 received RSSI is in supposed range</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_CCA2HIOE_TSFT_AVG_GT_THRES_INT_EN</name>
              <description>If the BIT_TSFT_AVG_VALUE exceeds the BIT_TSFT_AVG_THRES several times in a row, and the number exceeds the BIT_TSFT_AVG_GT_THRES_CNT_MAX, generate an interrupt.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_RXBCN_CNT_END_INT_EN</name>
              <description>Generate the interrupt when RXBCN period cnt == 2^ BIT_RXBCN_CNT_PRD</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_RXBCN_TIMEUP_CNT1_INT_EN</name>
              <description>the interrupt is issued when RX beacon frame timeout occurs specified times in port0.specified by 0x10A[22:16](only enabled when 0x17C[26]=1)</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_HIOE_CHN_RX_INT_EN</name>
              <description>hioe_chn_radio_rx done interrupt</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_HIOE_CHN_STD_INT_EN</name>
              <description>hioe_chn_stdby_stdwn done interrupt</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_EDCCA_ILDE_TOCNT_INT_EN</name>
              <description>when edcca is low after tbtt, start timer,when timeout for few times(0x180~0x188),set this interrupt</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FWISR1</name>
          <addressOffset>0x000011C4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FS_TXBCNOK_PORT1_INT</name>
              <description>PORT1 TX beacon OK interrupt</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNERR_PORT1_INT</name>
              <description>PORT0 TX beacon Error interrupt</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNOK_PORT2_INT</name>
              <description>PORT2 TX beacon OK interrupt</description>
              <bitRange>[29:29]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNERR_PORT2_INT</name>
              <description>PORT2 TX beacon Error interrupt</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_EVTQ_TXDONE_INT</name>
              <description></description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_EVTQ_START_INT</name>
              <description></description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_DWWIN_END_INT</name>
              <description></description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_BCN_IE_0_HIT_INT</name>
              <description>rx bcn with ie0 hit</description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_BCN_IE_1_HIT_INT</name>
              <description>rx bcn with ie1 hit</description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_RXBCN_NAN_RPT_OK</name>
              <description>port2 rxbcn rpt and write to txrptbuf ok</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TIM_NO_HIT_INT</name>
              <description>when no my aid or aid is 0(0x16DC[8]) or my bssid is not in tim element(0x16DB[31]),generate this interrupt</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TIM_HIT_INT</name>
              <description>when my aid or aid is 0 (0x16DC[8]=0) or my bssid is in tim element(0x16D8[31]=0),generate this interrupt</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_HIOE_CHN0_INT</name>
              <description>hioe_chn0 done interrupt</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_HIOE_CHN1_INT</name>
              <description>hioe_chn1 done interrupt</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_HIOE_CHN_ON_INT</name>
              <description>hioe_chn_on done interrupt</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_HIOE_CHN_OFF_INT</name>
              <description>hioe_chn_off done interrupt</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_CHINFO_SEG_DONE_INT</name>
              <description>indicate one channel info segment is received ok</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_RSSI_MATCH_INT</name>
              <description>Interrupt to inform km0 received RSSI is in supposed range</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_CCA2HIOE_TSFT_AVG_GT_THRES_INT</name>
              <description>If the BIT_TSFT_AVG_VALUE exceeds the BIT_TSFT_AVG_THRES several times in a row, and the number exceeds the BIT_TSFT_AVG_GT_THRES_CNT_MAX, generate an interrupt.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_RXBCN_CNT_END_INT</name>
              <description>Generate the interrupt when RXBCN period cnt == 2^ BIT_RXBCN_CNT_PRD</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_RXBCN_TIMEUP_CNT1_INT</name>
              <description>the interrupt is issued when RX beacon frame timeout occurs specified times in port0.specified by 0x10A[22:16](only enabled when 0x17C[26]=1)</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_HIOE_CHN_RX_INT</name>
              <description>hioe_chn_radio_rx done interrupt</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_HIOE_CHN_STD_INT</name>
              <description>hioe_chn_stdby_stdwn done interrupt</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_EDCCA_ILDE_TOCNT_INT</name>
              <description>when edcca is low after tbtt, start timer,when timeout for few times(0x180~0x188),set this interrupt</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[6:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>reg_ext_imr</name>
          <addressOffset>0x000011C8</addressOffset>
          <size>32</size>
          <description>extra interrupt mask</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[31:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_EDCCA_ILDE_TOCNT_INT_EXT_EN</name>
              <description>when edcca is low after tbtt, start timer,when timeout for few times(0x180~0x188),set this interrupt</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_HIOE_CHN0_INT_EXT_EN</name>
              <description>hioe_chn0 done interrupt</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_HIOE_CHN1_INT_EXT_EN</name>
              <description>hioe_chn1 done interrupt</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_HIOE_CHN_RX_INT_EXT_EN</name>
              <description>hioe_chn_radio_rx done interrupt</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_HIOE_CHN_STD_INT_EXT_EN</name>
              <description>hioe_chn_stdby_stdwn done interrupt</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_LPS_RXBCN_TSF_GT_THRES_INT_EXT_EN</name>
              <description>The interrupt is issued when difference of tsft in beacon frame of port0 is greater than threshold</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_LPS_HIOE_CHN_ON_INT_EXT_EN</name>
              <description>hioe_chn_on done interrupt</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_LPS_HIOE_CHN_OFF_INT_EXT_EN</name>
              <description>hioe_chn_off done interrupt</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_LPS_TIM_NO_HIT_INT_EXT_EN</name>
              <description>when no my aid or aid is 0(0x16DC[8]) or my bssid is not in tim element(0x16DB[31]),generate this interrupt</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_LPS_BCNERLY0_INT_EXT_EN</name>
              <description>This interrupt is issued at the time set by DRVERLYINT register before TBTT0_MB0 time.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_LPS_BCNELY0_AGGR_INT_EXT_EN</name>
              <description>port 0 Beacon early aggregation interrupt</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_LPS_TBTT0_INT_EXT_EN</name>
              <description>the interrupt  from the exact TBTT time for P0 MBSSID0.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_LPS_RX_BCN_P0_INT_EXT_EN</name>
              <description>When this bit is enable, the interrupt is issued when RX beacon frame occurs in port0.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_LPS_RX_BCN_ERR_P0_INT_EXT_EN</name>
              <description>When this bit is enable, the interrupt is issued when RX beacon frame with fcs error occurs in port0.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_LPS_RXBCN_TIMEUP_INT_EXT_EN</name>
              <description>When this bit is enable, the interrupt is issued when RX beacon frame timeout occurs in port0.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_HW_IOE_CR_CHN_RADIO_RX</name>
          <addressOffset>0x000011CC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_HIOE_ACTIVE_CHN_RADIO_RX</name>
              <description>indicate HIOE CHN_RADIO_RX is active</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HIOE_RESTORE_REQ_CHN_RADIO_RX</name>
              <description>RF rx mode request, clear by hw</description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HIOE_END_ADDR_CHN_RADIO_RX</name>
              <description>HIOE command end address in txpktbuffer, unit:8byte</description>
              <bitRange>[23:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HIOE_STR_ADDR_CHN_RADIO_RX</name>
              <description>HIOE command start address in txpktbuffer, unit:8byte</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_HW_IOE_CR_CHN_stdby_stdwn</name>
          <addressOffset>0x000011D0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_HIOE_ACTIVE_CHN_STDBY_STDWN</name>
              <description>indicate HIOE CHN_stdby_stdwn is active</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HIOE_RESTORE_REQ_CHN_STDBY_STDWN</name>
              <description>RF standby or shutdown request, clear by hw</description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HIOE_END_ADDR_CHN_STDBY_STDWN</name>
              <description>HIOE command end address in txpktbuffer, unit:8byte</description>
              <bitRange>[23:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HIOE_STR_ADDR_CHN_STDBY_STDWN</name>
              <description>HIOE command start address in txpktbuffer, unit:8byte</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FT2IMR</name>
          <addressOffset>0x000011E0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FS_PORT1_RX_UCMD1_UAPSD0_OK_INT_EN</name>
              <description>PORT1 rx unicast packet ok interrupt
 with more data =1 &amp; UAPSD =0</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PORT1_RX_UCMD0_UAPSD0_OK_INT_EN</name>
              <description>PORT1 rx unicast packet ok interrupt
 with more data =0 &amp; UAPSD =0</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PORT1_TRIPKT_OK_INT_EN</name>
              <description>PORT1 trigger packet assign to queue or release interrupt</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PORT1_RX_EOSP_OK_INT_EN</name>
              <description>PORT1 RX packet with EOSP =1 ok interrupt</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[15:11]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_FS_TXPRPT_CNT_FULL_INT_EN</name>
              <description>txrpt buffer full interrupt</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_NOA2_TSFT_BIT32_INT_EN</name>
              <description>NOA unit2 TSFT bit 32 toggle interrupt</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_NOA1_TSFT_BIT32_INT_EN</name>
              <description>NOA unit1 TSFT bit 32 toggle interrupt</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PORT1_TX_NULL1_DONE_INT_EN</name>
              <description>PORT1 TX NULL1 packet ok interrupt</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PORT1_TX_NULL0_DONE_INT_EN</name>
              <description>PORT1 TX NULL0 packet ok interrupt</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FT2ISR</name>
          <addressOffset>0x000011E4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FS_PORT1_RX_UCMD1_UAPSD0_OK_INT</name>
              <description>PORT1 rx unicast packet ok interrupt
 with more data =1 &amp; UAPSD =0</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PORT1_RX_UCMD0_UAPSD0_OK_INT</name>
              <description>PORT1 rx unicast packet ok interrupt
 with more data =0 &amp; UAPSD =0</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PORT1_TRIPKT_OK_INT</name>
              <description>PORT1 trigger packet assign to queue or release interrupt</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PORT1_RX_EOSP_OK_INT</name>
              <description>PORT1 RX packet with EOSP =1 ok interrupt</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[15:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TXPRPT_CNT_FULL_INT</name>
              <description>txrpt buffer full interrupt</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_NOA2_TSFT_BIT32_INT</name>
              <description>NOA unit2 TSFT bit 32 toggle interrupt</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_NOA1_TSFT_BIT32_INT</name>
              <description>NOA unit1 TSFT bit 32 toggle interrupt</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PORT1_TX_NULL1_DONE_INT</name>
              <description>PORT1 TX NULL1 packet ok interrupt</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PORT1_TX_NULL0_DONE_INT</name>
              <description>PORT1 TX NULL0 packet ok interrupt</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MSG2</name>
          <addressOffset>0x000011F0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FW_MSG2</name>
              <description>fw message 2</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MSG3</name>
          <addressOffset>0x000011F4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FW_MSG3</name>
              <description>fw message 3</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MSG4</name>
          <addressOffset>0x000011F8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FW_MSG4</name>
              <description>fw message 4</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MSG5</name>
          <addressOffset>0x000011FC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FW_MSG5</name>
              <description>fw message 5</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>page2</name>
      <groupName>WIFI</groupName>
      <baseAddress>0x40000000</baseAddress>
      <size>0x00000300</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00000300</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>REG_RQPN_CTRL_HLPQ</name>
          <addressOffset>0x00000200</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_LOAD_R_PGNUM</name>
              <description>Write 1 to set RQPN bit[79:0] value to page numbers for initialization</description>
              <bitRange>[31:31]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EPQ_PUBLIC_DIS</name>
              <description>When this bit is set, Extra queue available Tx page size excludes the public queue.
Otherwise, Extra queue available Tx page size includes public queue</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_NPQ_PUBLIC_DIS</name>
              <description>When this bit is set, Normal queue available Tx page size excludes the public queue.
Otherwise, Normal queue available Tx page size includes public queue</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LPQ_PUBLIC_DIS</name>
              <description>When this bit is set, Low queue available Tx page size excludes the public queue.
Otherwise, Low queue available Tx page size includes public queue</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HPQ_PUBLIC_DIS</name>
              <description>When this bit is set, High queue available Tx page size excludes the public queue.
Otherwise,  High queue available Tx page size includes public queue</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PUBQ</name>
              <description>Public Reserved Page Number</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LPQ</name>
              <description>Low Priority Queue Reserved Page Number</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HPQ</name>
              <description>High Priority Queue Reserved Page Number</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FIFOPAGE_INFO</name>
          <addressOffset>0x00000204</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TXPKTNUM</name>
              <description>Packet number in TXPKTBUF (Normal/Low)</description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_PUBQ_AVAL_PG</name>
              <description>Available Public Queue Page Number</description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_LPQ_AVAL_PG</name>
              <description>Available Low Priority Queue Page Number</description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HPQ_AVAL_PG</name>
              <description>Available High Priority Queue Page Number</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DWBCN0_CTRL</name>
          <addressOffset>0x00000208</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0000F610</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_llt_free_page</name>
              <description>RSVD</description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RSVD_BYTE1</name>
              <description>RSVD</description>
              <bitRange>[23:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BCN_VALID</name>
              <description>When this bit is set, the beacon packet has finished to write to txpktbuffer.
Clear by SW</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BCN_HEAD</name>
              <description>The head page of packet of Bcnq which is Tx DMA filled Bcnq packet from</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BLK_DESC_NUM</name>
              <description>The Most Number of Tx Descriptor per Bulk Out Only for USB</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[3:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BLK_DESC_OPT</name>
              <description>option to select usb descriptor number(according to 0x208[7:4])
1 : usb_desc_num = 2 * r_blk_desc_num
0 : usb_desc_num = 4 * r_blk_desc_num</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TXDMA_OFFSET_CHK</name>
          <addressOffset>0x0000020C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00FD0000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_EN_CHKERR_FINISH</name>
              <description>Let checksum offload statemachine finish if checksum parser error</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_DMA_PERMU_P</name>
              <description>Enable every dma latch fifo ptr for pcie as usb mode as one pkt trans in permu</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_TXQUE_CLR</name>
              <description>Enable tx queue clear tx pkt in tde in usb mode</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_PCIE_FIFO</name>
              <description>Enable pcie fifo store forward txdesc as before mode</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PG_UNDER_TH</name>
              <description>Page threshold value is check by Tx DMA engine.</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DSC_CHKSUM_EN</name>
              <description>Enable SDIO checksum</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RST_RDPTR</name>
              <description>Reset the read pointer of sync FIFO</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RST_WRPTR</name>
              <description>Reset the write pointer of sync FIFO</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CHK_PG_TH_EN</name>
              <description>Enable Tx DMA to check total pages if it is under page threshold</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DROP_DATA_EN</name>
              <description>Enable Tx DMA to drop the redundant data of packet</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CHECK_OFFSET_EN</name>
              <description>Enable Tx DMA to check offset value</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CHK_OFFSET</name>
              <description>Offset value is check by Tx DMA engine</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TXDMA_STATUS</name>
          <addressOffset>0x00000210</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[31:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HI_OQT_UDN</name>
              <description>High Priority Queue_Tx OQT underflow</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HI_OQT_OVF</name>
              <description>High Priority Queue_Tx OQT overflow</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_PAYLOAD_CHKSUM_ERR</name>
              <description>Payload checksum error</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_PAYLOAD_UDN</name>
              <description>Payload is under the packet length of Tx descriptor. Clear by SW.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_PAYLOAD_OVF</name>
              <description>Payload is over the packet length of Tx descriptor. Clear by SW.</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_DSC_CHKSUM_FAIL</name>
              <description>Tx descriptor checksum error. Clear by SW.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_UNKNOWN_QSEL</name>
              <description>An unknown QSEL of Tx descriptor is detected. Clear by SW.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_EP_QSEL_DIFF</name>
              <description>Tx Endpoint is unmatched with the QSEL of descriptor. Clear by SW.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_TX_OFFS_UNMATCH</name>
              <description>Tx offset is unmatched. Clear by SW.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_TXOQT_UDN</name>
              <description>TXOQT Underflow. Clear by SW.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_TXOQT_OVF</name>
              <description>TXOQT Overflow. Clear by SW.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SFF_UDN</name>
              <description>TXDMA Sync FIFO Underflow. Clear by SW.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SFF_OVF</name>
              <description>TXDMA Sync FIFO Overflow. Clear by SW.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FREE_PG_FF</name>
              <description>TXDMA reads NULL page. Clear by SW.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_PAGE_UNDER</name>
              <description>Total pages included PTCL un-return pages are under the total reserved
pages minus the page threshold. Clear by SW.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_PAGE_OVER</name>
              <description>Total pages included PTCL un-return pages are over the total reserved pages. Clear by SW.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_PG_UDN</name>
              <description>TXFF page underflow in TDE page controller. Clear by SW.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_PG_OVF</name>
              <description>TXFF page overflow in TDE page controller.. Clear by SW.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RQPN_NPQ</name>
          <addressOffset>0x00000214</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_EPQ_PGNUM</name>
              <description>Extra Queue Page Number</description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_EPQ_R_PGNUM</name>
              <description>Extra Queue Reserved Page Number</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_NPQ_PGNUM</name>
              <description>Normal Priority Queue Page Number</description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_NPQ_R_PGNUM</name>
              <description>Normal Priority Queue Reserved Page Number</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TQPNT1</name>
          <addressOffset>0x00000218</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_NPQ_HIGH_TH</name>
              <description>For SDIO,  Normal Priority Queue Page Number High Threshold</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_NPQ_LOW_TH</name>
              <description>For SDIO, Normal Priority Queue Page Number Low Threshold</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HPQ_HIGH_TH</name>
              <description>For SDIO, High Priority Queue Page Number High Threshold</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HPQ_LOW_TH</name>
              <description>For SDIO, High Priority Queue Page Number Low Threshold</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TQPNT2</name>
          <addressOffset>0x0000021C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_EXQ_HIGH_TH</name>
              <description>For SDIO,  Extra Priority Queue Page Number High Threshold</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EXQ_LOW_TH</name>
              <description>For SDIO,  Extra Priority Queue Page Number Low Threshold</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LPQ_HIGH_TH</name>
              <description>For SDIO,  Low Priority Queue Page Number High Threshold</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LPQ_LOW_TH</name>
              <description>For SDIO,  Low Priority Queue Page Number Low Threshold</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TDE_DEBUG</name>
          <addressOffset>0x00000220</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TDE_DEBUG</name>
              <description>tde debug port register.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AUTO_LLT</name>
          <addressOffset>0x00000224</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TXPKTNUM_H</name>
              <description>Packet number in TXPKTBUF (High and Extra)</description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_TDE_DBG_SEL</name>
              <description>debug signals selection of Tx DMA</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MASK_QSEL_DIFF</name>
              <description>Mask the error bit(tx endpoint is unmatched with qsel, 0x210[10])</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[21:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_Auto_Init_LLT</name>
              <description>Write 1 to enable HW init LLT, driver need polling to 0 meaning init success</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_Tx_OQT_HE_free_space</name>
              <description>High and Extra priority queue</description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_Tx_OQT_NL_free_space</name>
              <description>Normal and low priority queue</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DWBCN1_CTRL</name>
          <addressOffset>0x00000228</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFA00F800</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BCN_HEAD_2</name>
              <description>The head page of packet of Bcnq which is Tx DMA filled Bcnq packet from.</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SW_BCN_SEL</name>
              <description>Bcnq head selection from SW setting
2'b01 : r_bcn_head_1
2'b10 : r_bcn_head_2</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BCN_VALID_2</name>
              <description>When this bit is set, the beacon packet has finished to write to txpktbuffer.
Clear by SW.</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SW_BCN_SEL_EN</name>
              <description>Enable Bcnq head selection from SW setting</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BCN_VALID_1</name>
              <description>When this bit is set, the beacon packet has finished to write to txpktbuffer.
Clear by SW.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BCN_HEAD_1</name>
              <description>The head page of packet of Bcnq which is Tx DMA filled Bcnq packet from.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_Max_tx_pkt</name>
              <description>Unit : packet number
Max_tx_pkt_for_USB_and_SDIO</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TX_ALIGNMENT_CTRL</name>
          <addressOffset>0x0000022C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>dummy</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ADJUSTABLE_SIZE_EN</name>
              <description>Enable tx alignment for sdio.
SW can assign the alignment size of blocks in an aggregated-packet.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ALIGNMENT_SIZE</name>
              <description>The alignment size of blocks in an aggregated-packet.
Unit: Byte</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TDE_GCK_CTRL</name>
          <addressOffset>0x00000230</addressOffset>
          <size>8</size>
          <description></description>
          <resetValue>0x0000003F</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TDE_GCLK_DLY_CNT</name>
              <description>when start trigger of clk gating happens, count for several cycles then disable clk,default:16 cycles</description>
              <bitRange>[6:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DMA_WAIT_MORE_CYCLE</name>
              <description>enable this bit,tde_ctl will wait for 16 dma_clk when host dma last data to tde_sync_fifo
1:used for 20M mac clk
0:used for 40M/80M mac clk(will wait for 12 dma_clk)</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TDE_GCLK_EN</name>
              <description>enable this bit,txdma engine will use gated clk</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TDE_RESET_CTRL</name>
          <addressOffset>0x00000231</addressOffset>
          <size>24</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TDE_CTRL_RST</name>
              <description>Write this bit reset FSM of tde_ctrl, ioreg_txfail</description>
              <bitRange>[2:2]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_TDE_PAGE_RST</name>
              <description>Write this bit reset FSM of tde_page_cs, ioreg_txfail</description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_TDE_PTR_RST</name>
              <description>Write this bit reset FSM of tde_ptr_cs, ioreg_txfail</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TQPNT3_V1</name>
          <addressOffset>0x00000234</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_H2C_HEAD</name>
          <addressOffset>0x00000244</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RXDMA_AGG_PG_TH</name>
          <addressOffset>0x00000280</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00002003</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RXDMA_STORE</name>
              <description>usb rx dma old mode store pkt and forward</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_PRE_CALC</name>
              <description>0: rde start rxdma when aggregated length over specified threshold;
1: rde start rxdma when next packet, if aggregated, will cause the total length over specified threshold</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[28:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PKT_NUM_WOL</name>
              <description>In wol mode, 8051 should refer this packet counter in RXFF</description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_DMA_TIMEOUT_TH</name>
              <description>dma agg timeout time : unit : 32us</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXDMA_AGG_PG_TH</name>
              <description>rxdma agg length threshold 
if sdio : unit 1K, others unit is 4K
if use RXDMA_AGG_OLD_MOD in use, unit is 1K</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RXPKT_NUM</name>
          <addressOffset>0x00000284</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RXPKT_QUEUED</name>
              <description>The number of packets in RXPKTBUF.</description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[23:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXDMA_REQ</name>
              <description>rxdma has request</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FW_RELEASE_EN</name>
              <description>When this bit is set, RXDMA will enter this mode after on-going RXDMA packet to host completed, 
and stop DMA packet to host. RXDMA will then report</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXDMA_IDLE</name>
              <description>When RXMA finishes on-going DMA operation, RXMDA will report idle state in this bit. 
FW can start releasing packets after RXDMA entering idle mode.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RXPKT_RELEASE_POLL</name>
              <description>When this bit is set, RXDMA will decrease RX PKT counter by one. Before this bit is polled, 
FW shall update RXFF_RD_PTR first.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FW_UPD_RXPKT_RDPTR</name>
              <description>FW shall update this register before FW write RXPKT_RELEASE_POLL to 1.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RXDMA_STATUS</name>
          <addressOffset>0x00000288</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[31:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_C2H_PKT_OVF</name>
              <description>CH2 pkt overflow. Clr by SW</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_AGG_CONFGI_ISSUE</name>
              <description>rxdma agg config error. Clr by SW</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FW_POLL_ISSUE</name>
              <description>FW Release Poll Error. Clear by SW.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RX_DATA_UDN</name>
              <description>FW Release Poll Error. Clear by SW.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RX_SFF_UDN</name>
              <description>RX Sync FIFO Underflow. Clear by SW.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RX_SFF_OVF</name>
              <description>RX Sync FIFO Overflow. Clear by SW.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPKT_OVF</name>
              <description>When RX Packet is more than 255 packets remaining in FF. Clear by SW.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RXDMA_DPR</name>
          <addressOffset>0x0000028C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RDE_DBG</name>
              <description>rde debug port register.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RXDMA_MODE</name>
          <addressOffset>0x00000290</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000044</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[31:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXDMA_GCLK_EN</name>
              <description>rxdma_engine clock gating control,1:enable clock gating;0:disable clock gating</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BURST_SIZE</name>
              <description>Every burst pkt len
2'b00 : 1KB
2'b01 : 512B
2'b10 : 64B
Others : 64B
P.S. USB 3.0 must set : 0x00
        USB 2.0 High-speed must set : 0x01
        USB 2.0 Full-speed must set : 0x10</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BURST_CNT</name>
              <description>Burst number in dma mode, support at most 4burst(2'b11)
P.S, DD suggest 0x11</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DMA_MODE</name>
              <description>For usb use dma mode; for pcie clr this bit ; for SDIO use Rx DMA Aggregation mode</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MASK_RX_PKT_PS</name>
              <description>RSVD</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_C2H_PKT</name>
          <addressOffset>0x00000294</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[31:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_R_C2H_PKT_REQ</name>
              <description>C2h packet dma request</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_R_C2H_STR_ADDR</name>
              <description>C2h packet start address</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CSI_RELEASE</name>
          <addressOffset>0x00000298</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_CSI_RADDR</name>
              <description>read starting address of next csi segment,8byte unit</description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_CSI_WADDR</name>
              <description>write starting address of next csi segment,8byte unit</description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_CSI_SEG_NUM</name>
              <description>csi segment number in csibuffer</description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_R_FW_CSI_POLL</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>page3</name>
      <groupName>WIFI</groupName>
      <baseAddress>0x40000000</baseAddress>
      <size>0x00001314</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00001314</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>REG_AXI_CTRL</name>
          <addressOffset>0x00000300</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x33028000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MAX_RXDMA</name>
              <description>RXDMA Burst Size selection default 3.
0: 4bytes; 1: 16bytes; 2: 32bytes; 3: 64bytes</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MAX_TXDMA</name>
              <description>TXDMA Burst Size selection default 3.
0: 4bytes; 1: 16bytes; 2: 32bytes; 3: 64bytes.</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_REG_TXDMA_FAIL_PS</name>
              <description>Write 1 to cause a txdma fail ps</description>
              <bitRange>[21:21]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_FIX_RXDMA_EN</name>
              <description>rxdma error fix enable</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MBSSID_ENSWBCN_BACKDOOR</name>
              <description>MBSSID enable software becon</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_WT_RXTAG</name>
              <description>Display Dword0[32:16] type of Rx buffer descriptor
0: TotalLen
1: Rxtag</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_STOPBCN</name>
              <description>BCNQ DMA STOP</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_STOPMG</name>
              <description>MGQ DMA STOP</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_STOPVO</name>
              <description>VOQ DMA STOP</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_STOPVI</name>
              <description>VIQ DMA STOP</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_STOPBE</name>
              <description>BEQ DMA STOP</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_STOPBK</name>
              <description>BKQ DMA STOP</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_STOPRX</name>
              <description>RX DMA STOP</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MQ_STOP</name>
              <description>Stop MQ DMA</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_INT_MIG</name>
          <addressOffset>0x00000304</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TTMRMIT</name>
              <description>When the number of timer matched condition exceeds this setting, then interrupt is issued.</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TNUMMIT</name>
              <description>When the buffered TX packet number is matched, the interrupt is then issued</description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RTMRMIT</name>
              <description>When the number of timer matched condition exceeds this setting, then interrupt is issued.</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RNUMMIT</name>
              <description>When the buffered RX packet number is matched, the interrupt is then issued</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MIGRATE_TIMER</name>
              <description>Timer for setting Interrupt Migration time, only use [2:0]
3'b000: 64 us
3'b001: 128 us
3'b010: 256 us
3'b011: 512 us
3'b100: 1024 us
3'b101: 2048 us
3'b110: 4096 us
3'b111: 8192 us</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BCNQ_TXBD_DESA</name>
          <addressOffset>0x00000308</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BPQDESA</name>
              <description>Buffer Descriptor Base Address for Beacon Queue</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MGQ_TXBD_DESA</name>
          <addressOffset>0x00000310</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MGQDESA</name>
              <description>Buffer Descriptor Base Address for Manage Queue</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_VOQ_TXBD_DESA</name>
          <addressOffset>0x00000318</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_VOQDESA</name>
              <description>Buffer Descriptor Base Address for VO Queue</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_VIQ_TXBD_DESA</name>
          <addressOffset>0x00000320</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_VIQDESA</name>
              <description>Buffer Descriptor Base Address for VI Queue</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BEQ_TXBD_DESA</name>
          <addressOffset>0x00000328</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BEQDESA</name>
              <description>Buffer Descriptor Base Address for BE Queue</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BKQ_TXBD_DESA</name>
          <addressOffset>0x00000330</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BKQDESA</name>
              <description>Buffer Descriptor Base Address for BK Queue</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RXQ_RXBD_DESA</name>
          <addressOffset>0x00000338</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RXNRML_DESA</name>
              <description>Buffer Descriptor Base Address for RX</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MQ0_TXBD_DESA</name>
          <addressOffset>0x00000340</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MQ0DESA</name>
              <description>Buffer Descriptor Base Address for M0 Queue</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MQ1_TXBD_DESA</name>
          <addressOffset>0x00000348</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MQ1DESA</name>
              <description>Buffer Descriptor Base Address for M1 Queue</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MQ2_TXBD_DESA</name>
          <addressOffset>0x00000350</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MQ2DESA</name>
              <description>Buffer Descriptor Base Address for M2 Queue</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MQ3_TXBD_DESA</name>
          <addressOffset>0x00000358</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MQ3DESA</name>
              <description>Buffer Descriptor Base Address for M3 Queue</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MQ4_TXBD_DESA</name>
          <addressOffset>0x00000360</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MQ4DESA</name>
              <description>Buffer Descriptor Base Address for M4 Queue</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MQ5_TXBD_DESA</name>
          <addressOffset>0x00000368</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MQ5DESA</name>
              <description>Buffer Descriptor Base Address for M5 Queue</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MQ6_TXBD_DESA</name>
          <addressOffset>0x00000370</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MQ6DESA</name>
              <description>Buffer Descriptor Base Address for M6 Queue</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MQ7_TXBD_DESA</name>
          <addressOffset>0x00000378</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MQ7DESA</name>
              <description>Buffer Descriptor Base Address for M7 Queue</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MGQ_TXBD_RX_RXBD_NUM</name>
          <addressOffset>0x00000380</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x01000100</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BCNQ_DESC_MODE</name>
              <description>BCNQ descriptor mode :
0 : 2 segments each descriptor
1 : 4 segments each descriptor
2 : 8 segments each descriptor</description>
              <bitRange>[30:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BCNQ_FLAG</name>
              <description>BCNQ FLAGing bit
Read : BCNQ work
Write : BCNQ Polling</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXDES_NUM</name>
              <description>RX queue descriptor's number</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGQ_FLAG</name>
              <description>MGQ FLAGing bit, read result will be bpqflag</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_MGQ_DESC_MODE</name>
              <description>MGQ descriptor mode :
0 : 2 segments each descriptor
1 : 4 segments each descriptor
2 : 8 segments each descriptor</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGQDES_NUM</name>
              <description>MG queue descriptor's number</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_VOQ_VIQ_TXBD_NUM</name>
          <addressOffset>0x00000384</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x01000100</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_VIQ_FLAG</name>
              <description>VIQ, read result will be viqflag</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_VIQ_DESC_MODE</name>
              <description>VIQ descriptor mode :
0 : 2 segments each descriptor
1 : 4 segments each descriptor
2 : 8 segments each descriptor</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_VIQDES_NUM</name>
              <description>VI queue descriptor's number</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_VOQ_FLAG</name>
              <description>VOQ, read result will be voqflag</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_VOQ_DESC_MODE</name>
              <description>VOQ descriptor mode :
0 : 2 segments each descriptor
1 : 4 segments each descriptor
2 : 8 segments each descriptor</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_VOQDES_NUM</name>
              <description>VO queue descriptor's number</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BEQ_BKQ_TXBD_NUM</name>
          <addressOffset>0x00000388</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x01000100</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BKQ_FLAG</name>
              <description>BKQ, read result will be bkqflag</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BKQ_DESC_MODE</name>
              <description>BKQ descriptor mode :
0 : 2 segments each descriptor
1 : 4 segments each descriptor
2 : 8 segments each descriptor</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BKQDES_NUM</name>
              <description>BK queue descriptor's number</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BEQ_FLAG</name>
              <description>BEQ, read result will be beqflag</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BEQ_DESC_MODE</name>
              <description>BEQ descriptor mode :
0 : 2 segments each descriptor
1 : 4 segments each descriptor
2 : 8 segments each descriptor</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BEQDES_NUM</name>
              <description>BE queue descriptor's number</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MQ0_MQ1_TXBD_NUM</name>
          <addressOffset>0x0000038C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x01000100</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MQ1_FLAG</name>
              <description>MQ1, read result will be MQ1flag</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_MQ1_DESC_MODE</name>
              <description>MQ1 descriptor mode :
0 : 2 segments each descriptor
1 : 4 segments each descriptor
2 : 8 segments each descriptor</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MQ1DES_NUM</name>
              <description>M1 queue descriptor's number</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MQ0_FLAG</name>
              <description>MQ0, read result will be MQ0flag</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_MQ0_DESC_MODE</name>
              <description>MQ0 descriptor mode :
0 : 2 segments each descriptor
1 : 4 segments each descriptor
2 : 8 segments each descriptor</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MQ0DES_NUM</name>
              <description>M0 queue descriptor's number</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MQ2_MQ3_TXBD_NUM</name>
          <addressOffset>0x00000390</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x01000100</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MQ3_FLAG</name>
              <description>MQ3, read result will be MQ3flag</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_MQ3_DESC_MODE</name>
              <description>MQ3 descriptor mode :
0 : 2 segments each descriptor
1 : 4 segments each descriptor
2 : 8 segments each descriptor</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MQ3DES_NUM</name>
              <description>M3 queue descriptor's number</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MQ2_FLAG</name>
              <description>MQ2, read result will be MQ2flag</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_MQ2_DESC_MODE</name>
              <description>MQ2 descriptor mode :
0 : 2 segments each descriptor
1 : 4 segments each descriptor
2 : 8 segments each descriptor</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MQ2DES_NUM</name>
              <description>M2 queue descriptor's number</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MQ4_MQ5_TXBD_NUM</name>
          <addressOffset>0x00000394</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x01000100</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MQ5_FLAG</name>
              <description>MQ5, read result will be MQ5flag</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_MQ5_DESC_MODE</name>
              <description>MQ5 descriptor mode :
0 : 2 segments each descriptor
1 : 4 segments each descriptor
2 : 8 segments each descriptor</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MQ5DES_NUM</name>
              <description>M5 queue descriptor's number</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MQ4_FLAG</name>
              <description>MQ4, read result will be MQ4flag</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_MQ4_DESC_MODE</name>
              <description>MQ4 descriptor mode :
0 : 2 segments each descriptor
1 : 4 segments each descriptor
2 : 8 segments each descriptor</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MQ4DES_NUM</name>
              <description>M4 queue descriptor's number</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MQ6_MQ7_TXBD_NUM</name>
          <addressOffset>0x00000398</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x01000100</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MQ7_FLAG</name>
              <description>MQ7, read result will be MQ7flag</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_MQ7_DESC_MODE</name>
              <description>MQ7 descriptor mode :
0 : 2 segments each descriptor
1 : 4 segments each descriptor
2 : 8 segments each descriptor</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MQ7DES_NUM</name>
              <description>M7 queue descriptor's number</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MQ6_FLAG</name>
              <description>MQ6, read result will be MQ6flag</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_MQ6_DESC_MODE</name>
              <description>MQ6 descriptor mode :
0 : 2 segments each descriptor
1 : 4 segments each descriptor
2 : 8 segments each descriptor</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MQ6DES_NUM</name>
              <description>M6 queue descriptor's number</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BD_RWPTR_CLR</name>
          <addressOffset>0x0000039C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0000C000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_SRST_TX_FSM</name>
              <description>Reset tx dma state</description>
              <bitRange>[31:31]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_SRST_RX_FSM</name>
              <description>Reset rx dma state</description>
              <bitRange>[30:30]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_CLR_MQ7_HW_IDX</name>
              <description>Clear MQ7 hardware index, write 1 and hardware auto clear</description>
              <bitRange>[29:29]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_CLR_MQ6_HW_IDX</name>
              <description>Clear MQ6 hardware index, write 1 and hardware auto clear</description>
              <bitRange>[28:28]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_CLR_MQ5_HW_IDX</name>
              <description>Clear MQ5 hardware index, write 1 and hardware auto clear</description>
              <bitRange>[27:27]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_CLR_MQ4_HW_IDX</name>
              <description>Clear MQ4 hardware index, write 1 and hardware auto clear</description>
              <bitRange>[26:26]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_CLR_MQ3_HW_IDX</name>
              <description>Clear MQ3 hardware index, write 1 and hardware auto clear</description>
              <bitRange>[25:25]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_CLR_MQ2_HW_IDX</name>
              <description>Clear MQ2 hardware index, write 1 and hardware auto clear</description>
              <bitRange>[24:24]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_CLR_MQ1_HW_IDX</name>
              <description>Clear MQ1 hardware index, write 1 and hardware auto clear</description>
              <bitRange>[23:23]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_CLR_MQ0_HW_IDX</name>
              <description>Clear MQ0 hardware index, write 1 and hardware auto clear</description>
              <bitRange>[22:22]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_CLR_BKQ_HW_IDX</name>
              <description>Clear BKQ hardware index, write 1 and hardware auto clear</description>
              <bitRange>[21:21]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_CLR_BEQ_HW_IDX</name>
              <description>Clear BEQ hardware index, write 1 and hardware auto clear</description>
              <bitRange>[20:20]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_CLR_VIQ_HW_IDX</name>
              <description>Clear VIQ hardware index, write 1 and hardware auto clear</description>
              <bitRange>[19:19]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_CLR_VOQ_HW_IDX</name>
              <description>Clear VOQ hardware index, write 1 and hardware auto clear</description>
              <bitRange>[18:18]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_CLR_MGQ_HW_IDX</name>
              <description>Clear MGQ hardware index, write 1 and hardware auto clear</description>
              <bitRange>[17:17]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_CLR_RXQ_HW_IDX</name>
              <description>Clear RXQ hardware index, write 1 and hardware auto clear</description>
              <bitRange>[16:16]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_SRST_TX_N</name>
              <description>Reset tx dma</description>
              <bitRange>[15:15]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_SRST_RX_N</name>
              <description>Reset rx dma</description>
              <bitRange>[14:14]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_CLR_MQ7_HOST_IDX</name>
              <description>Clear MQ7 host index, write 1 and hardware auto clear</description>
              <bitRange>[13:13]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_CLR_MQ6_HOST_IDX</name>
              <description>Clear MQ6 host index, write 1 and hardware auto clear</description>
              <bitRange>[12:12]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_CLR_MQ5_HOST_IDX</name>
              <description>Clear MQ5 host index, write 1 and hardware auto clear</description>
              <bitRange>[11:11]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_CLR_MQ4_HOST_IDX</name>
              <description>Clear MQ4 host index, write 1 and hardware auto clear</description>
              <bitRange>[10:10]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_CLR_MQ3_HOST_IDX</name>
              <description>Clear MQ3 host index, write 1 and hardware auto clear</description>
              <bitRange>[9:9]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_CLR_MQ2_HOST_IDX</name>
              <description>Clear MQ2 host index, write 1 and hardware auto clear</description>
              <bitRange>[8:8]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_CLR_MQ1_HOST_IDX</name>
              <description>Clear MQ1 host index, write 1 and hardware auto clear</description>
              <bitRange>[7:7]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_CLR_MQ0_HOST_IDX</name>
              <description>Clear MQ0 host index, write 1 and hardware auto clear</description>
              <bitRange>[6:6]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_CLR_BKQ_HOST_IDX</name>
              <description>Clear MQ host index, write 1 and hardware auto clear</description>
              <bitRange>[5:5]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_CLR_BEQ_HOST_IDX</name>
              <description>Clear BEQ host index, write 1 and hardware auto clear</description>
              <bitRange>[4:4]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_CLR_VIQ_HOST_IDX</name>
              <description>Clear VIQ host index, write 1 and hardware auto clear</description>
              <bitRange>[3:3]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_CLR_VOQ_HOST_IDX</name>
              <description>Clear VOQ host index, write 1 and hardware auto clear</description>
              <bitRange>[2:2]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_CLR_MGQ_HOST_IDX</name>
              <description>Clear MGQ host index, write 1 and hardware auto clear</description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_CLR_RXQ_HOST_IDX</name>
              <description>Clear RXQ host index, write 1 and hardware auto clear</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_VOQ_TXBD_IDX</name>
          <addressOffset>0x000003A0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_VOQ_HW_IDX</name>
              <description>VO queue descriptor's hardware index</description>
              <bitRange>[27:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_VOQ_HOST_IDX</name>
              <description>VO queue descriptor's host index</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_VIQ_TXBD_IDX</name>
          <addressOffset>0x000003A4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_VIQ_HW_IDX</name>
              <description>VI queue descriptor's hardware index</description>
              <bitRange>[27:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_VIQ_HOST_IDX</name>
              <description>VI queue descriptor's host index</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BEQ_TXBD_IDX</name>
          <addressOffset>0x000003A8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BEQ_HW_IDX</name>
              <description>BE queue descriptor's hardware index</description>
              <bitRange>[27:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BEQ_HOST_IDX</name>
              <description>BE queue descriptor's host index</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BKQ_TXBD_IDX</name>
          <addressOffset>0x000003AC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BKQ_HW_IDX</name>
              <description>BK queue descriptor's hardware index</description>
              <bitRange>[27:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BKQ_HOST_IDX</name>
              <description>BK queue descriptor's host index</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MGQ_TXBD_IDX</name>
          <addressOffset>0x000003B0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MGQ_HW_IDX</name>
              <description>MG queue descriptor's hardware index</description>
              <bitRange>[27:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_MGQ_HOST_IDX</name>
              <description>MG queue descriptor's host index</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RXQ_RXBD_IDX</name>
          <addressOffset>0x000003B4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RXNRML_HW_IDX</name>
              <description>RX queue descriptor's hardware index</description>
              <bitRange>[27:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RXNRML_HOST_IDX</name>
              <description>RX queue descriptor's host index</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MQ0_TXBD_IDX</name>
          <addressOffset>0x000003B8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MQ0_HW_IDX</name>
              <description>MQ0 queue descriptor's hardware index</description>
              <bitRange>[27:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_MQ0_HOST_IDX</name>
              <description>MQ0 queue descriptor's host index</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MQ1_TXBD_IDX</name>
          <addressOffset>0x000003BC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MQ1_HW_IDX</name>
              <description>MQ1 queue descriptor's hardware index</description>
              <bitRange>[27:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_MQ1_HOST_IDX</name>
              <description>MQ1 queue descriptor's host index</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MQ2_TXBD_IDX</name>
          <addressOffset>0x000003C0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MQ2_HW_IDX</name>
              <description>MQ2 queue descriptor's hardware index</description>
              <bitRange>[27:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_MQ2_HOST_IDX</name>
              <description>MQ2 queue descriptor's host index</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MQ3_TXBD_IDX</name>
          <addressOffset>0x000003C4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MQ3_HW_IDX</name>
              <description>MQ3 queue descriptor's hardware index</description>
              <bitRange>[27:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_MQ3_HOST_IDX</name>
              <description>MQ3 queue descriptor's host index</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MQ4_TXBD_IDX</name>
          <addressOffset>0x000003C8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MQ4_HW_IDX</name>
              <description>MQ4 queue descriptor's hardware index</description>
              <bitRange>[27:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_MQ4_HOST_IDX</name>
              <description>MQ4 queue descriptor's host index</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MQ5_TXBD_IDX</name>
          <addressOffset>0x000003CC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MQ5_HW_IDX</name>
              <description>MQ5 queue descriptor's hardware index</description>
              <bitRange>[27:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_MQ5_HOST_IDX</name>
              <description>MQ5 queue descriptor's host index</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MQ6_TXBD_IDX</name>
          <addressOffset>0x000003D0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MQ6_HW_IDX</name>
              <description>MQ6 queue descriptor's hardware index</description>
              <bitRange>[27:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_MQ6_HOST_IDX</name>
              <description>MQ6 queue descriptor's host index</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MQ7_TXBD_IDX</name>
          <addressOffset>0x000003D4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MQ7_HW_IDX</name>
              <description>MQ7 queue descriptor's hardware index</description>
              <bitRange>[27:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_MQ7_HOST_IDX</name>
              <description>MQ7 queue descriptor's host index</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AXI_CTRL2</name>
          <addressOffset>0x000003D8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000004</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_DEBUG_REG2</name>
              <description>Debug Selection Register</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DEBUG_REG1</name>
              <description>Write:hps_clkr_ahb[3]
Read:Debug Selection Register</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HPS_CLKR_AHB</name>
              <description>The Registers are used to prevent the deadlock whenever HW or FW turn off ANACLK or SYSCLK, which the HW or FW could not resume by themself. Currently they are not used in normal control flow. They might be helpful when Driver would like to handle whole  Suspned &amp; Resume flow by itself
hps_clkr_ahb[2:1]</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_INT_WLMAC</name>
              <description>Write:hps_clkr_ahb[0]
Read:Interrupt.Write clear.</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DEBUG_REG0</name>
              <description>Write:Debug Selection Register
Read:3'b000</description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DEBUG_REG3</name>
              <description>Debug Selection Register</description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DRVIER_TO_FIRMWARE_INFO</name>
          <addressOffset>0x000003E0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_DRV2FW_AHB</name>
              <description>DRIVER TO FIRMWARE MESSAGE</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FIRMWARE_TO_DRIVER_INFO</name>
          <addressOffset>0x000003E4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FW2DRV_AHB</name>
              <description>FIRMWARE TO DRIVER MESSAGE</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AXI_INTERRUPT</name>
          <addressOffset>0x000003E8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_SETBCNERR7</name>
              <description>setbcnderr7, beacon queue error, mbssid=7</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SETBCNERR6</name>
              <description>setbcnderr6, beacon queue error, mbssid=6</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SETBCNERR5</name>
              <description>setbcnderr5, beacon queue error, mbssid=5</description>
              <bitRange>[29:29]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SETBCNERR4</name>
              <description>setbcnderr4, beacon queue error, mbssid=4</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SETBCNERR3</name>
              <description>setbcnderr3, beacon queue error, mbssid=3</description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SETBCNERR2</name>
              <description>setbcnderr2, beacon queue error, mbssid=2</description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SETBCNERR1</name>
              <description>setbcnderr1, beacon queue error, mbssid=1</description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SETBCNERR0</name>
              <description>setbcnderr0, beacon queue error, mbssid=0</description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SETBCNOK7</name>
              <description>setbcndok7, beacon queue ok, mbssid=7</description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SETBCNOK6</name>
              <description>setbcndok6, beacon queue ok, mbssid=6</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SETBCNOK5</name>
              <description>setbcndok5, beacon queue ok, mbssid=5</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SETBCNOK4</name>
              <description>setbcndok4, beacon queue ok, mbssid=4</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SETBCNOK3</name>
              <description>setbcndok3, beacon queue ok, mbssid=3</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SETBCNOK2</name>
              <description>setbcndok2, beacon queue ok, mbssid=2</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SETBCNOK1</name>
              <description>setbcndok1, beacon queue ok, mbssid=1</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SETBCNOK0</name>
              <description>setbcndok0, beacon queue ok, mbssid=0</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SETHIGHDOK</name>
              <description>sethighdok, high queue ok</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SETH2CDOK</name>
              <description>seth2cdok, h2c queue ok</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SETMGDOK</name>
              <description>setmgdok, manage queue ok</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SETBKDOK</name>
              <description>setbkdok, bk queue ok</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SETBEDOK</name>
              <description>setbedok, be queue ok</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SETVIDOK</name>
              <description>setvidok, vi queue ok</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SETVODOK</name>
              <description>setvodok, vo queue ok</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SET_RDY</name>
              <description>set_rdu, rx descriptor unavailable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SETRXOK</name>
              <description>setrxok, rx dma ok</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AXI_INTERRUPT_MASK</name>
          <addressOffset>0x000003EC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_SETBCNERR7_EN</name>
              <description>setbcnderr7, beacon queue error, mbssid=7</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SETBCNERR6_EN</name>
              <description>setbcnderr6, beacon queue error, mbssid=6</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SETBCNERR5_EN</name>
              <description>setbcnderr5, beacon queue error, mbssid=5</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SETBCNERR4_EN</name>
              <description>setbcnderr4, beacon queue error, mbssid=4</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SETBCNERR3_EN</name>
              <description>setbcnderr3, beacon queue error, mbssid=3</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SETBCNERR2_EN</name>
              <description>setbcnderr2, beacon queue error, mbssid=2</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SETBCNERR1_EN</name>
              <description>setbcnderr1, beacon queue error, mbssid=1</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SETBCNERR0_EN</name>
              <description>setbcnderr0, beacon queue error, mbssid=0</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SETBCNOK7_EN</name>
              <description>setbcndok7, beacon queue ok, mbssid=7</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SETBCNOK6_EN</name>
              <description>setbcndok6, beacon queue ok, mbssid=6</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SETBCNOK5_EN</name>
              <description>setbcndok5, beacon queue ok, mbssid=5</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SETBCNOK4_EN</name>
              <description>setbcndok4, beacon queue ok, mbssid=4</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SETBCNOK3_EN</name>
              <description>setbcndok3, beacon queue ok, mbssid=3</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SETBCNOK2_EN</name>
              <description>setbcndok2, beacon queue ok, mbssid=2</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SETBCNOK1_EN</name>
              <description>setbcndok1, beacon queue ok, mbssid=1</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SETBCNOK0_EN</name>
              <description>setbcndok0, beacon queue ok, mbssid=0</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SETHIGHDOK_EN</name>
              <description>sethighdok, high queue ok</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SETH2CDOK_EN</name>
              <description>seth2cdok, h2c queue ok</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SETMGDOK_EN</name>
              <description>setmgdok, manage queue ok</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SETBKDOK_EN</name>
              <description>setbkdok, bk queue ok</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SETBEDOK_EN</name>
              <description>setbedok, be queue ok</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SETVIDOK_EN</name>
              <description>setvidok, vi queue ok</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SETVODOK_EN</name>
              <description>setvodok, vo queue ok</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SET_RDY_EN</name>
              <description>set_rdu, rx descriptor unavailable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SETRXOK_EN</name>
              <description>setrxok, rx dma ok</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TRXDMA_STUCK</name>
          <addressOffset>0x000003F0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RXDMA_STUCK</name>
              <description>rx dma stuck</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_TXDMA_STUCK</name>
              <description>tx dma stuck</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_MST_BUSY</name>
              <description>axi master write/read busy</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RXBUF_ZERO_ERR</name>
              <description>rx pkt size equal to 0 when caculate buffer size</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HD_SIZE_ERR</name>
              <description>tx dma header size less than TXDESC_SIZE(40d)</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_EN_DBG_STUCK</name>
              <description>enable trx dma stuck</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_LBC_WATCHDOG</name>
          <addressOffset>0x000003F8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_WATCH_DOG_RECORD</name>
              <description>Time out register address</description>
              <bitRange>[23:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_R_IO_TIMEOUT_FLAG</name>
              <description>Lbc timeout flag.Write "1" to clear.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_EN_WATCH_DOG</name>
              <description>Enable lbc timeout watchdog</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ENABLE_DUMMY_READ</name>
          <addressOffset>0x000003FC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000040</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_R_DEBUG</name>
              <description>Debug Selection Register</description>
              <bitRange>[23:22]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_EN_OUT_STD</name>
              <description>cpl multi tag enable</description>
              <bitRange>[6:6]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_H2CQ_TXBD_DESA</name>
          <addressOffset>0x00001300</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_H2CQDESA</name>
              <description>Buffer Descriptor Base Address for H2C Queue</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_H2CQ_TXBD_NUM</name>
          <addressOffset>0x00001304</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000100</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_H2CQ_FLAG</name>
              <description>H2CQ, read result will be H2CQflag</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_H2CQ_DESC_MODE</name>
              <description>H2CQ descriptor mode :
0 : 2 segments each descriptor
1 : 4 segments each descriptor
2 : 8 segments each descriptor</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_H2CQDES_NUM</name>
              <description>H2C queue descriptor's number</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_H2CQ_TXBD_IDX</name>
          <addressOffset>0x00001308</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_H2CQ_HW_IDX</name>
              <description>H2C queue descriptor's hardware index</description>
              <bitRange>[27:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_H2CQ_HOST_IDX</name>
              <description>H2C queue descriptor's host index</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_H2CQ_CSR</name>
          <addressOffset>0x0000130C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_H2CQ_FULL</name>
              <description>Indicate H2CQ full. Write 1 to clear the bit.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_CLR_H2CQ_HOST_IDX</name>
              <description>Write 1 to clear H2CQ host index, and then hardware auto clear the bit</description>
              <bitRange>[2:2]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_CLR_H2CQ_HW_IDX</name>
              <description>Write 1 to clear H2CQ hardware index, and then hardware auto clear the bit</description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_STOPH2C</name>
              <description>Stop h2c queue dma</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DUMMY_P3</name>
          <addressOffset>0x00001310</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>dummy</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>page4</name>
      <groupName>WIFI</groupName>
      <baseAddress>0x40000000</baseAddress>
      <size>0x00001488</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00001488</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>REG_Q0_INFO</name>
          <addressOffset>0x00000400</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x007F80FF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_QueueMacID_Q0_V1</name>
              <description>MacID of head pkt</description>
              <bitRange>[31:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_QueueAC_Q0_V1</name>
              <description>AC type of Queue 0.</description>
              <bitRange>[24:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_Tail_PKT_Q0_V1</name>
              <description>The head page of the last packet of Queue 0.</description>
              <bitRange>[22:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_PKT_Num_Q0_V1</name>
              <description>The total Queue 0 pkt number in TxPktbuffer</description>
              <bitRange>[14:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_Head_PKT_Q0</name>
              <description>The head page of the first packet of Queue 0.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_Q1_INFO</name>
          <addressOffset>0x00000404</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x007F80FF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_QueueMacID_Q1_V1</name>
              <description>MacID of head pkt</description>
              <bitRange>[31:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_QueueAC_Q1_V1</name>
              <description>AC type of Queue 1.</description>
              <bitRange>[24:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_Tail_PKT_Q1_V1</name>
              <description>The head page of the last packet of Queue 1.</description>
              <bitRange>[22:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_PKT_Num_Q1_V1</name>
              <description>The total Queue 1 pkt number in TxPktbuffer</description>
              <bitRange>[14:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_Head_PKT_Q1</name>
              <description>The head page of the first packet of Queue 1.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_Q2_INFO</name>
          <addressOffset>0x00000408</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x007F80FF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_QueueMacID_Q2_V1</name>
              <description>MacID of head pkt</description>
              <bitRange>[31:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_QueueAC_Q2_V1</name>
              <description>AC type of Queue 2.</description>
              <bitRange>[24:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_Tail_PKT_Q2_V1</name>
              <description>The head page of the last packet of Queue 2.</description>
              <bitRange>[22:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_PKT_Num_Q2_V1</name>
              <description>The total Queue 2 pkt number in TxPktbuffer</description>
              <bitRange>[14:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_Head_PKT_Q2</name>
              <description>The head page of the first packet of Queue 2.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_Q3_INFO</name>
          <addressOffset>0x0000040C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x007F80FF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_QueueMacID_Q3_V1</name>
              <description>MacID of head pkt</description>
              <bitRange>[31:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_QueueAC_Q3_V1</name>
              <description>AC type of Queue 3.</description>
              <bitRange>[24:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_Tail_PKT_Q3_V1</name>
              <description>The head page of the last packet of Queue 3.</description>
              <bitRange>[22:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_PKT_Num_Q3_V1</name>
              <description>The total Queue 3 pkt number in TxPktbuffer</description>
              <bitRange>[14:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_Head_PKT_Q3</name>
              <description>The head page of the first packet of Queue 3.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MGQ_INFO</name>
          <addressOffset>0x00000410</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x007F80FF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_QueueMacID_MGQ_V1</name>
              <description>MacID of head pkt</description>
              <bitRange>[31:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_QueueAC_MGQ_V1</name>
              <description>AC type of management Queue.</description>
              <bitRange>[24:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_Tail_PKT_MGQ_V1</name>
              <description>The head page of the last packet of MGQ.</description>
              <bitRange>[22:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_PKT_Num_MGQ_V1</name>
              <description>The total MGQ pkt number in TxPktbuffer</description>
              <bitRange>[14:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_Head_PKT_MGQ</name>
              <description>The head page of the first packet of MGQ.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_HIQ_INFO</name>
          <addressOffset>0x00000414</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x007F80FF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_QueueMacID_HIQ_V1</name>
              <description>MacID of head pkt</description>
              <bitRange>[31:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_QueueAC_HIQ_V1</name>
              <description>AC type of High Queue.</description>
              <bitRange>[24:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_Tail_PKT_HIQ_V1</name>
              <description>The head page of the last packet of HIQ.</description>
              <bitRange>[22:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_PKT_Num_HIQ_V1</name>
              <description>The total HIQ pkt number in TxPktbuffer</description>
              <bitRange>[14:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_Head_PKT_HIQ</name>
              <description>The head page of the first packet of HIQ.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_QUE_EMPTY_BCNQ_INFO</name>
          <addressOffset>0x00000418</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFF00F6</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BCNQ_EMPTY_P2</name>
              <description>When this bit is raised, beacon queue of PORT2 is empty. Report by MAC.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BCNQ_EMPTY_P1</name>
              <description>When this bit is raised, beacon queue of PORT1 is empty. Report by MAC.</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BCNQ_EMPTY_P0</name>
              <description>When this bit is raised, beacon queue of PORT0 is empty. Report by MAC.</description>
              <bitRange>[29:29]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_EVTQ_EMPTY</name>
              <description>When this bit is raised, event queue is empty. Report by MAC.</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BCNQ_EMPTY</name>
              <description>When this bit is raised, beacon queue is empty. Report by MAC.</description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HQQ_EMPTY</name>
              <description>When this bit is raised, High queue is empty. Report by MAC.</description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_MQQ_EMPTY</name>
              <description>When this bit is raised, MGQ queue is empty. Report by MAC.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_MGQ_cpu_EMPTY</name>
              <description>When this bit is raised, MGQ queue poll by cpu is empty. Report by MAC.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_AC7Q_EMPTY</name>
              <description>When this bit is raised, AC7 queue is empty. Report by MAC.</description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_AC6Q_EMPTY</name>
              <description>When this bit is raised, AC6 queue is empty. Report by MAC.</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_AC5Q_EMPTY</name>
              <description>When this bit is raised, AC5 queue is empty. Report by MAC.</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_AC4Q_EMPTY</name>
              <description>When this bit is raised, AC4 queue is empty. Report by MAC.</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_AC3Q_EMPTY</name>
              <description>When this bit is raised, AC3 queue is empty. Report by MAC.</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_AC2Q_EMPTY</name>
              <description>When this bit is raised, AC2 queue is empty. Report by MAC.</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_AC1Q_EMPTY</name>
              <description>When this bit is raised, AC1 queue is empty. Report by MAC.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_AC0Q_EMPTY</name>
              <description>When this bit is raised, AC0 queue is empty. Report by MAC.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_PKT_Num_BCNQ</name>
              <description>The total BcnQ pkt number in TxPktbuffer</description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BCNQ_HEAD_PG</name>
              <description>The head page of the first packet of Bcnq</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CPU_MGQ_INFO</name>
          <addressOffset>0x0000041C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x000000F6</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BCN_POLL2</name>
              <description>Polling BCN Queue2 Packet. Not used in 8723F</description>
              <bitRange>[31:31]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_BCN_POLL1</name>
              <description>Polling BCN Queue1 Packet</description>
              <bitRange>[30:30]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_CPUMGT_POLL_SET</name>
              <description>Polling to set CPU MGT Queue packet</description>
              <bitRange>[29:29]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_BCN_POLL</name>
              <description>Polling BCN Queue Packet</description>
              <bitRange>[28:28]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_CPUMGT_POLL_CLR</name>
              <description>Polling to clear CPU MGT Queue packet</description>
              <bitRange>[27:27]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_EVTQ_VLD</name>
              <description></description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CPUMGQ_FW_NUM</name>
              <description>The total cpu mgq fw number in TxPktbuffer</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_CPUMGQ_HEAD_PG</name>
              <description>The head page of CPU MGQ</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FWHW_TXQ_HWSSN_CTRL</name>
          <addressOffset>0x00000420</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00643F87</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_HW_SSN_EN_L</name>
              <description>HW update the SSN [7:0],
When this bit enable and EN_HWSEQ of TXDESC, MAC will overwrite MACHDR SEQ according to TXDESC QSEL
[0] BIT_HWSEQ_VO_EN
[1] BIT_HWSEQ_VI_EN
[2] BIT_HWSEQ_BE_EN
[3] BIT_HWSEQ_BK_EN
[4] BIT_HWSEQ_MGT_EN
[5] BIT_HWSEQ_HI_EN
[6] BIT_HWSEQ_BCN_EN,don't care  EN_HWSEQ of TXDESC
[7] BIT_HWSEQ_CPUM_EN</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RTS_LIMIT_IN_OFDM</name>
              <description>Rts rate will not down to cck rate</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_BCNQ_DL</name>
              <description>1: ptcl consider there is bcn pkt in TXBUF when bcn pkt first be transferd in;
0: mask bcn pkt num in bcn queue</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_RD_RESP_NAV_BK</name>
              <description>Control the RD responder NAV criteria for TX.
When this bit is clear, RD responder may aggregates only according to the number of MPDUs existing in the TXPKTBUF, the limit of aggregation size and number, and also the break time. When this bit is set, RD responder will be under the RX NAV criteria for RD response sequence. No excess NAV is allowed</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_WR_FREE_TAIL</name>
              <description>1: Drive write Bcnq_boundary, Hw will set free_tail in Boundary-1
0: no update</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXRPT_DIS</name>
              <description>when this bit is enabled, HW will not generate txrpt for driver's fixed rate packets</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXFAILRPT_DIS</name>
              <description>when this bit is enabled, HW will not generate txrpt for tx failed packets</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_RTY_BC</name>
              <description>When this bit is enabled, retry the broadcast packet</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_RTY_BK_COND</name>
              <description>AMPDU aggregation mode with retry MPDUs and new MPDUs.
When this bit is enabled, if new MPDU's data rate is not the same as retry MPDUs' fallback data rate, the aggregation will be broken.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_QUEUE_RPT</name>
              <description>8723A/8812
1: HW will report tx_status  0: no report
BIT0: BK Queue
BIT1: BE Queue
BIT2: VI Queue
BIT3: VO Queue
BIT4: MGT Queue
BIT5: HI Queue
BIT6: BCN Queue
BIT7: CPU_MGT Queue</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_RTY_BK</name>
              <description>AMPDU aggregation mode with retry MPDUs and new MPDUs.
When this bit is clear enabled, an AMPDU aggregates retried MPDU and new MPDU. All the aggregation criteria is still the same with normal AMPDU operation.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_USE_INI_RAT</name>
              <description>0: If Txdesc's USE RATE = 0 and this field is equal to 0, the datarate of TXRPT SRAM is used as tx pkt's datarate. (ECO flow)
1: TXInfo's datarate is used as tx pkt's datarate.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_RTS_NAV_BK</name>
              <description>Control The RTS NAV criteria for TX.
When this bit is clear, TX may aggregates only according to the number of MPDUs existing in the TXPKTBUF, the limit of aggregation size and number, and also the break time. 
When this bit is set, TX will be under the RTS NAV criteria. No excess RTS NAV is allowed.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_SSN_CHECK</name>
              <description>Disable checker the SSN rule when generating AMPDU TX cmd.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MACID_MATCH_RTS</name>
              <description>Enable the packet that follow the RTS have same MACID</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_BCN_TXRPT</name>
              <description>1: HW will report bcn tx_status  0: no report</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_FTM_RPT</name>
              <description>When this bit asserted, HW will report FTM rpt</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PROTECT_BMC_NAV</name>
              <description>Enable the NAV protection when transmit broadcast/multicast</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BNDY_LIFETIME_TAIL</name>
          <addressOffset>0x00000424</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xF510F6F6</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FW_Free_Tail</name>
              <description>Free Tail Page Number</description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BT_INT_TYPE</name>
              <description>BT Interrupt type
01: PTA
10: CPU</description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HW_SSN_EN_H</name>
              <description>HW update the SSN [8] for eventq</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RTYBIT_CTRL_EN</name>
              <description>1: Enable Retry Count
0: Disable</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LIFETIME_BK_EN</name>
              <description>Enable BK queue lifetime function</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LIFETIME_BE_EN</name>
              <description>Enable BE queue lifetime function</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LIFETIME_VI_EN</name>
              <description>Enable VI queue lifetime function</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LIFETIME_VO_EN</name>
              <description>Enable VO queue lifetime function</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGQ_PGBNDY</name>
              <description>TXDMA will pull CPU MGQ Pkt in this address.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BCNQ_PGBNDY</name>
              <description>TXDMA will pull BCNQ Pkt in this address.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RETRY_LIMIT_SIFS</name>
          <addressOffset>0x00000428</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x20201616</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_SRL</name>
              <description>Short Retry Limit</description>
              <bitRange>[29:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LRL</name>
              <description>Long Retry Limit</description>
              <bitRange>[21:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SPEC_SIFS_OFDM_PTCL</name>
              <description>The spec SIFS value for duration calculation</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SPEC_SIFS_CCK_PTCL</name>
              <description>The spec SIFS value for duration calculation</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TXBF_CTRL</name>
          <addressOffset>0x0000042C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0000C000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_r_enable_ndpa</name>
              <description>Set '1' for MAC to enable sending NDPA or NDP Announcement MPDU</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_use_ndpa_parameter</name>
              <description>1: NDPA rate and BW use reg0x45f settings
0: NDPA rate and BW use NDP settings in Tx descriptor</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_prop_txbf</name>
              <description>1: enable proprietary beamforming;
0: disable proprietary beamforming</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_en_ndpa_int</name>
              <description>1: enable ndpa interrupt; 0: disable ndpa interrupt</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_txbf1_80M</name>
              <description>TxBF status of beamformee1 @BW=80M.</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_txbf1_40M</name>
              <description>TxBF status of beamformee1 @BW=40M</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_txbf1_20M</name>
              <description>TxBF status of beamformee1 @BW=20M</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_txbf1_aid</name>
              <description>P_AID[8:0] of the associated beamformee1</description>
              <bitRange>[24:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_NDP_BFEN_DIS</name>
              <description>1: disable beamforming with NDP</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BCN_NOBLOCK_NDP</name>
              <description>beacon packet will not block NDP packet</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_txbf0_80M</name>
              <description>TxBF status of beamformee0 @BW=80M</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_txbf0_40M</name>
              <description>TxBF status of beamformee0 @BW=40M</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_txbf0_20M</name>
              <description>TxBF status of beamformee0 @BW=20M</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_txbf0_aid</name>
              <description>P_AID[8:0] of the associated beamformee0</description>
              <bitRange>[8:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DARFRC_L</name>
          <addressOffset>0x00000430</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x04030201</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_DATA_FALLBACK_RC4</name>
              <description>Data Auto Rate Fallback Retry Count
After the number of retry, HW will fall back the rate to the next enabled MAC in ARFR.</description>
              <bitRange>[28:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATA_FALLBACK_RC3</name>
              <description>Data Auto Rate Fallback Retry Count
After the number of retry, HW will fall back the rate to the next enabled MAC in ARFR.</description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATA_FALLBACK_RC2</name>
              <description>Data Auto Rate Fallback Retry Count
After the number of retry, HW will fall back the rate to the next enabled MAC in ARFR.</description>
              <bitRange>[12:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATA_FALLBACK_RC1</name>
              <description>Data Auto Rate Fallback Retry Count
After the number of retry, HW will fall back the rate to the next enabled MAC in ARFR.</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DARFRC_H</name>
          <addressOffset>0x00000434</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x08070605</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_DATA_FALLBACK_RC8</name>
              <description>Data Auto Rate Fallback Retry Count
After the number of retry, HW will fall back the rate to the next enabled MAC in ARFR.</description>
              <bitRange>[28:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATA_FALLBACK_RC7</name>
              <description>Data Auto Rate Fallback Retry Count
After the number of retry, HW will fall back the rate to the next enabled MAC in ARFR.</description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATA_FALLBACK_RC6</name>
              <description>Data Auto Rate Fallback Retry Count
After the number of retry, HW will fall back the rate to the next enabled MAC in ARFR.</description>
              <bitRange>[12:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATA_FALLBACK_RC5</name>
              <description>Data Auto Rate Fallback Retry Count
After the number of retry, HW will fall back the rate to the next enabled MAC in ARFR.</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RARFRC_L</name>
          <addressOffset>0x00000438</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x04030201</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_CTRL_FALLBACK_RC4</name>
              <description>RTS Auto Rate Fallback Retry Count
After the number of retry, HW will fall back the rate to the next enabled MAC in ARFR.</description>
              <bitRange>[28:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTRL_FALLBACK_RC3</name>
              <description>RTS Auto Rate Fallback Retry Count
After the number of retry, HW will fall back the rate to the next enabled MAC in ARFR.</description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTRL_FALLBACK_RC2</name>
              <description>RTS Auto Rate Fallback Retry Count
After the number of retry, HW will fall back the rate to the next enabled MAC in ARFR.</description>
              <bitRange>[12:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTRL_FALLBACK_RC1</name>
              <description>RTS Auto Rate Fallback Retry Count
After the number of retry, HW will fall back the rate to the next enabled MAC in ARFR.</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RARFRC_H</name>
          <addressOffset>0x0000043C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x08070605</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_CTRL_FALLBACK_RC8</name>
              <description>RTS Auto Rate Fallback Retry Count
After the number of retry, HW will fall back the rate to the next enabled MAC in ARFR.</description>
              <bitRange>[28:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTRL_FALLBACK_RC7</name>
              <description>RTS Auto Rate Fallback Retry Count
After the number of retry, HW will fall back the rate to the next enabled MAC in ARFR.</description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTRL_FALLBACK_RC6</name>
              <description>RTS Auto Rate Fallback Retry Count
After the number of retry, HW will fall back the rate to the next enabled MAC in ARFR.</description>
              <bitRange>[12:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTRL_FALLBACK_RC5</name>
              <description>RTS Auto Rate Fallback Retry Count
After the number of retry, HW will fall back the rate to the next enabled MAC in ARFR.</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RRSR</name>
          <addressOffset>0x00000440</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00600011</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RRSR_RSC</name>
              <description>Response frame sub-channel configuration.
Response frames (CTS, ACK, BA) are transmitted in the following condition.
00: Primary 20Mhz BW(0x483[3:0] = 0x8AC[5:2]).
01: Follow Rx packet BW mode.
10: Duplicate mode.</description>
              <bitRange>[24:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_RATE_CTRL_TABLE</name>
              <description>Data Rate Control Table Register 
BitMap to indicate the response/protection/expected_response rate to use in this BSS. All management and control response frames should obey the rates set in the bitmap. Each bit is mapped as the following: 

Bit[0:3] = {1M, 2M, 5.5M, 11M }
Bit[4:11] = {6M, 9M, 12M, 18M, 24M, 36M, 48M, 54M}
Bit[12:19] = HT MCS0~MCS7

Response rate must be less than or equal to the rate of the initiating frame. If none of the bits are set, no response is generated by Rtl8712.
If both the legacy rates and HT rates are defined as Basic Rates, fill in only the legacy portion of the bitmap. If only HT rates are defined as Basic Rates, fill in both the legacy and HT portion of the bitmap.</description>
              <bitRange>[19:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ARFR_L0</name>
          <addressOffset>0x00000444</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_ADPT_RATE_TABLE_L0</name>
              <description>Data Auto Rate Fallback Table Register 0, indexed by RATid in TXDESC.
Each bit is mapped as the following:

Bit[0:3] = {1M, 2M, 5.5M, 11M }
Bit[4:11] = {6M, 9M, 12M, 18M, 24M, 36M, 48M, 54M}
Bit[12:19] = HT MCS0~MCS7
Bit[20:27] = HT MCS8~MCS15
Bit[27:35] = HT MCS16~MCS23
Bit[36:43] = HT MCS24~MCS31
Bit[44:53] = VHT 1SS MCS0~MCS9
Bit[54:63] = VHT 2SS MCS0~MCS9</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ARFR_H0</name>
          <addressOffset>0x00000448</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_ADPT_RATE_TABLE_H0</name>
              <description>Data Auto Rate Fallback Table Register 0, indexed by RATid in TXDESC.
Each bit is mapped as the following:

Bit[0:3] = {1M, 2M, 5.5M, 11M }
Bit[4:11] = {6M, 9M, 12M, 18M, 24M, 36M, 48M, 54M}
Bit[12:19] = HT MCS0~MCS7
Bit[20:27] = HT MCS8~MCS15
Bit[27:35] = HT MCS16~MCS23
Bit[36:43] = HT MCS24~MCS31
Bit[44:53] = VHT 1SS MCS0~MCS9
Bit[54:63] = VHT 2SS MCS0~MCS9</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ARFR_L1</name>
          <addressOffset>0x0000044C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_ADPT_RATE_TABLE_L1</name>
              <description>Data Auto Rate Fallback Table Register 1, indexed by RATid in TXDESC.
The definition is the same as ARFR0.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ARFR_H1</name>
          <addressOffset>0x00000450</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_ADPT_RATE_TABLE_H1</name>
              <description>Data Auto Rate Fallback Table Register 1, indexed by RATid in TXDESC.
The definition is the same as ARFR0.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BCN_AMPDU_CTCL</name>
          <addressOffset>0x00000454</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xF664F605</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BCNQ1_HEAD</name>
              <description>TXDMA will pull BCNQ1 Pkt in this address. Port1 &amp; VAP 1/3/5/7 of port0</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_AMPDU_MAX_TIME</name>
              <description>AMPDU duration limit in the unit of 32us.</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BCNQ2_HEAD</name>
              <description>TXDMA will pull BCNQ2 Pkt in this address. Port2, NAN</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CHECK_CCK_EN</name>
              <description>If this bit is set, HW check Tx pkt's data rate. When data rate is CCK rate, modify the rate to NON_CCK_RATE.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_BCN_PKT_REL</name>
              <description>If this bit is set, the BCN pkt will be set to non-valid after BCN TX.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BCN_PORT_SEL</name>
              <description>This bit use to select BCN on port 1 or port 0. This just useful in USB/SDIO interface.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MOREDATA_BYPASS</name>
              <description>If this bit is set, the moredata bit will controlled by DES, otherwise controlled by PTCL according TXPKTBUF status.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_CLR_CMD_REL_BCN_PKT</name>
              <description>If this bit is set, the BCN pkt will be set to non-valid when scheduler clear TX BCN CMD even non-TX.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_SET_MOREDATA</name>
              <description>1: Enable HW set the more data bit of the PKT that MACID release function tx.
0: Disable HW set the more data bit of the PKT that MACID release function tx.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_CLEAR_MACID_RELEASE</name>
              <description>1: HW No clear MACID Release bit after release the pkt.
0: HW will clear MACID Release bit after release the pkt.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_MACID_RELEASE</name>
              <description>1: Enable MACID Release function. (same as MACID DROP)
0: Disable MACID Release function.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AMPDU_MAX_LENGTH</name>
          <addressOffset>0x00000458</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_AMPDU_MAX_LENGTH</name>
              <description>AMPDU length limit</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_NDPA_CTRL_LBK_ACQ_STOP</name>
          <addressOffset>0x0000045C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0008F600</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_r_ndpa_bw</name>
              <description>NDPA bandwidth setting
3: 160M
2: 80M
1: 40M
0: 20M</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_SIGTA_BW</name>
              <description>Enable signaling TA in duplicate BW, valid if EN_SIGTA = 1 in TX DESC</description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_SIGTA_BAR</name>
              <description>Enable BAR signaling TA in duplicate BW</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_EOF_EN</name>
              <description>when set to 1, enable eof packet qos packet,but also need set agg_en to 0 in tx_desc</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_en_gnt_bt_awake</name>
              <description>Enable pollute bit function.(C card ECO item, modify hardware circuit and add two options)
0: Disable
1: Enable When (GNT_BT option/LTE_RX option/(GNT_WL==0)) == 1, retry count can't increase if Tx fail.  One or more packets will record in polluted bit field of txreport when txreport generates in Tx ok or tx drop.</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_RELEASE_RETRY</name>
              <description>when release one packet for a macid, retry should happen on the same ACQ. Set 1 to remove this requirement</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_OQT_BLOCK</name>
              <description>If this bit is set, the OQT will not block by all AC queues occupied by other MACID.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_Search_Queue_en</name>
              <description>Search queue request enable in ptcl idle:0 disable; 1 enable</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_LBK_BUF_HEAD</name>
              <description>In delay MAC LBK mode, this register indicate the LBK BUF head page. When this buffer size is not enough for LBK packet length, LBK test may fail.

In ARP/NS mode, this register indicate the ARP/NS response packet head page.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_AC7Q_STOP</name>
              <description>When this bit is raised, AC7 queue is stop. Report by MAC.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_AC6Q_STOP</name>
              <description>When this bit is raised, AC6 queue is stop. Report by MAC.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_AC5Q_STOP</name>
              <description>When this bit is raised, AC5 queue is stop. Report by MAC.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_AC4Q_STOP</name>
              <description>When this bit is raised, AC4 queue is stop. Report by MAC.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_AC3Q_STOP</name>
              <description>When this bit is raised, AC3 queue is stop. Report by MAC.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_AC2Q_STOP</name>
              <description>When this bit is raised, AC2 queue is stop. Report by MAC.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_AC1Q_STOP</name>
              <description>When this bit is raised, AC1 queue is stop. Report by MAC.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_AC0Q_STOP</name>
              <description>When this bit is raised, AC0 queue is stop. Report by MAC.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RD_RESP_PKT_TH</name>
          <addressOffset>0x00000460</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x03000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RD_RESP_PKT_TH</name>
              <description>When RD_CTRL responder enables, and the granted AC queue packet number is beyond this threshold, then responder will carry More PPDU =1 and piggyback data frames back.</description>
              <bitRange>[29:24]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CMDQ_INFO</name>
          <addressOffset>0x00000464</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00FF00FF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_PKT_Num_CMDQ_V2</name>
              <description>The total CMD Queue pkt number in TxPktbuffer</description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_Tail_PKT_CMDQ</name>
              <description>The head page of the last packet of Queue 4.</description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_PKT_Num_CMDQ</name>
              <description>The total Queue 4 pkt number in TxPktbuffer</description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_Head_PKT_CMDQ</name>
              <description>The head page of the first packet of Queue 4.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_Q4_INFO</name>
          <addressOffset>0x00000468</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x007F80FF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_QueueMacID_Q4_V1</name>
              <description>MacID of head pkt</description>
              <bitRange>[31:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_QueueAC_Q4_V1</name>
              <description>AC type of Queue 4.</description>
              <bitRange>[24:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_Tail_PKT_Q4_V1</name>
              <description>The head page of the last packet of Queue 4.</description>
              <bitRange>[22:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_PKT_Num_Q4_V1</name>
              <description>The total Queue 4 pkt number in TxPktbuffer</description>
              <bitRange>[14:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_Head_PKT_Q4</name>
              <description>The head page of the first packet of Queue 4.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_Q5_INFO</name>
          <addressOffset>0x0000046C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x007F80FF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_QueueMacID_Q5_V1</name>
              <description>MacID of head pkt</description>
              <bitRange>[31:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_QueueAC_Q5_V1</name>
              <description>AC type of Queue 5.</description>
              <bitRange>[24:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_Tail_PKT_Q5_V1</name>
              <description>The head page of the last packet of Queue 5.</description>
              <bitRange>[22:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_PKT_Num_Q5_V1</name>
              <description>The total Queue 5 pkt number in TxPktbuffer</description>
              <bitRange>[14:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_Head_PKT_Q5</name>
              <description>The head page of the first packet of Queue5.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_Q6_INFO</name>
          <addressOffset>0x00000470</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x007F80FF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_QueueMacID_Q6_V1</name>
              <description>MacID of head pkt</description>
              <bitRange>[31:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_QueueAC_Q6_V1</name>
              <description>AC type of Queue 6.</description>
              <bitRange>[24:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_Tail_PKT_Q6_V1</name>
              <description>The head page of the last packet of Queue 6.</description>
              <bitRange>[22:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_PKT_Num_Q6_V1</name>
              <description>The total Queue 6 pkt number in TxPktbuffer</description>
              <bitRange>[14:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_Head_PKT_Q6</name>
              <description>The head page of the first packet of Queue 6.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_Q7_INFO</name>
          <addressOffset>0x00000474</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x007F80FF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_QueueMacID_Q7_V1</name>
              <description>MacID of head pkt</description>
              <bitRange>[31:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_QueueAC_Q7_V1</name>
              <description>AC type of Queue 7.</description>
              <bitRange>[24:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_Tail_PKT_Q7_V1</name>
              <description>The head page of the last packet of Queue 7.</description>
              <bitRange>[22:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_PKT_Num_Q7_V1</name>
              <description>The total Queue 7 pkt number in TxPktbuffer</description>
              <bitRange>[14:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_Head_PKT_Q7</name>
              <description>The head page of the first packet of Queue 7.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_GCLK_CFG</name>
          <addressOffset>0x00000478</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000003</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_DEBUG_PORT_SEL</name>
              <description>1: select ptcl_schedule debug port
0: select ptcl_ctn_dbg2</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CLR_TXRPT_RW_PTR</name>
              <description>Write 1 to clear BIT_AMPDU_TXRPT_W_PTR &amp; BIT_AMPDU_TXRPT_R_PTR (0x47C / 0x47D)</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_QUEUE_RPT_B8</name>
              <description>[8] of BIT_EN_QUEUE_RPT, 
BIT8: EVENT Queue</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_PTCL_GCLK</name>
              <description>1: enable clock gating</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TXRPT_CTRL</name>
          <addressOffset>0x0000047C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x10080000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_AMPDU_TXRPT_TIME_THRS</name>
              <description>Time threshold of ampdu txrpt</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_AMPDU_TXRPT_LEN_THRS</name>
              <description>Length threshold of ampdu txrpt</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_AMPDU_TXRPT_R_PTR</name>
              <description>Read pointer of ampdu txrpt</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_AMPDU_TXRPT_W_PTR</name>
              <description>Write pointer of ampdu txrpt</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CFEND_RATE_SC_CTRL</name>
          <addressOffset>0x00000480</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x000C0400</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TXSC_40M</name>
              <description>Value of Data frame Tx sub-carrier mode 40MHz</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXSC_20M</name>
              <description>Value of Data frame Tx sub-carrier mode 20MHz</description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_STBC_CFEND_RATE</name>
              <description>The initial rate for STBC CFEND frame transmitted as EDCA originator.
The response control frame shall be selected by the definition of 802.11n.</description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_Basic_CFEND_RATE</name>
              <description>The initial rate for basic CFEND frame transmitted as EDCA originator. The response control frame shall be selected by the definition of 802.11n.</description>
              <bitRange>[12:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LEAG_RTS_BW_DUP</name>
              <description>If this bit is set, leag rate RTS use Duplicate in 40M BW / 80M BW.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MACID_SLEEP3</name>
          <addressOffset>0x00000484</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MACID127_96_PKTSLEEP</name>
              <description>Macid 127~Macid 96 Packet Sleep (per bit controlled)</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MACID_SLEEP1</name>
          <addressOffset>0x00000488</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MACID63_32_PKTSLEEP</name>
              <description>Macid 63~Macid 32 Packet Sleep (per bit controlled)</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ARFR_L2</name>
          <addressOffset>0x0000048C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_ADPT_RATE_TABLE_L2</name>
              <description>Data Auto Rate Fallback Table Register 1, indexed by RATid in TXDESC.
The definition is the same as ARFR0.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ARFR_H2</name>
          <addressOffset>0x00000490</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_ADPT_RATE_TABLE_H2</name>
              <description>Data Auto Rate Fallback Table Register 1, indexed by RATid in TXDESC.
The definition is the same as ARFR0.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ARFR_L3</name>
          <addressOffset>0x00000494</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_ADPT_RATE_TABLE_L3</name>
              <description>Data Auto Rate Fallback Table Register 1, indexed by RATid in TXDESC.
The definition is the same as ARFR0.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ARFR_H3</name>
          <addressOffset>0x00000498</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_ADPT_RATE_TABLE_H3</name>
              <description>Data Auto Rate Fallback Table Register 1, indexed by RATid in TXDESC.
The definition is the same as ARFR0.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ARFR_L4</name>
          <addressOffset>0x0000049C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_ADPT_RATE_TABLE_L4</name>
              <description>Data Auto Rate Fallback Table Register 1, indexed by RATid in TXDESC.
The definition is the same as ARFR0.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ARFR_H4</name>
          <addressOffset>0x000004A0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_ADPT_RATE_TABLE_H4</name>
              <description>Data Auto Rate Fallback Table Register 1, indexed by RATid in TXDESC.
The definition is the same as ARFR0.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ARFR_L5</name>
          <addressOffset>0x000004A4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_ADPT_RATE_TABLE_L5</name>
              <description>Data Auto Rate Fallback Table Register 1, indexed by RATid in TXDESC.
The definition is the same as ARFR0.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ARFR_H5</name>
          <addressOffset>0x000004A8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_ADPT_RATE_TABLE_H5</name>
              <description>Data Auto Rate Fallback Table Register 1, indexed by RATid in TXDESC.
The definition is the same as ARFR0.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TXRPT_START_OFFSET</name>
          <addressOffset>0x000004AC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000005</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_rptfifo_1k</name>
              <description>select the size of rptfifo</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MACID_CTRL_OFFSET</name>
              <description>offset of macid control: ctrl_info in the start of txrptbuf</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_AMPDU_TXRPT_OFFSET</name>
              <description>offset of AMPDU txrpt</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_POWER_STAGE1</name>
          <addressOffset>0x000004B4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_pta_wl_pri_mask_CPU_MGQ</name>
              <description>PTCL send wl_pri to PTA when pktbuf has CPU_MGQ packet</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_pta_wl_pri_mask_BCNQ</name>
              <description>PTCL send wl_pri to PTA when pktbuf has BCNQ packet</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_pta_wl_pri_mask_HIQ</name>
              <description>PTCL send wl_pri to PTA when pktbuf has HIQ packet</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_pta_wl_pri_mask_MGQ</name>
              <description>PTCL send wl_pri to PTA when pktbuf has MGQ packet</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_pta_wl_pri_mask_BK</name>
              <description>PTCL send wl_pri to PTA when pktbuf has BKQ packet</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_pta_wl_pri_mask_BE</name>
              <description>PTCL send wl_pri to PTA when pktbuf has BEQ packet</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_pta_wl_pri_mask_VI</name>
              <description>PTCL send wl_pri to PTA when pktbuf has VIQ packet</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_pta_wl_pri_mask_VO</name>
              <description>PTCL send wl_pri to PTA when pktbuf has VOQ packet</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_Power_stage1</name>
              <description>User define Power Satge1</description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_POWER_STAGE2</name>
          <addressOffset>0x000004B8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_pta_wl_pri_mask_EVT</name>
              <description>PTCL send wl_pri to PTA when pktbuf has EVTQ packet</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ctrl_pkt_pwr_adj_en</name>
              <description>enable RTS power adjust by retry count</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_Power_stage2</name>
              <description>User define Power Satge2</description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SW_AMPDU_BURST_MODE_CTRL</name>
          <addressOffset>0x000004BC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xF6040040</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_EVTQ_HEAD</name>
              <description>TXDMA will pull eventq Pkt in this address. NAN</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DMA_THIS_QUEUE</name>
              <description>scheduler enable</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TOTAL_LEN_THRS</name>
              <description>aggregation  length over threshold then fetch pad packet in early mode</description>
              <bitRange>[19:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_wep_pretx_en</name>
              <description>Enable pretx for WEP/TKIP, to allow a slower security clock</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_pre_tx_cmd</name>
              <description>enable pre tx cmd to use aggr more packet</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_Num_scl_en</name>
              <description>SW MPDU Burst mode select
00: each length field for 1 MPDU
01: each length field is the summation of 2 MPDUs
10: each length field is the summation of 3 MPDUs
11: each length field is the summation of 4 MPDUs

Note: the total MPDU number is no more than 15.</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_bk_en</name>
              <description>AMPDU burst mode enable for AC_BK queue</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_be_en</name>
              <description>AMPDU burst mode enable for AC_BE queue</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_vi_en</name>
              <description>AMPDU burst mode enable for AC_VI queue</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_vo_en</name>
              <description>AMPDU burst mode enable for AC_VO queue</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PKT_LIFE_TIME</name>
          <addressOffset>0x000004C0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x10001000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_PKT_LIFTIME_BEBK</name>
              <description>BE/BK packet lifetime unit: 256us</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PKT_LIFTIME_VOVI</name>
              <description>VO/VI packet lifetime unit: 256us</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PTA_STBC_CTRL</name>
          <addressOffset>0x000004C4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00040340</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_EN_SINGLE_APMDU</name>
              <description>If this bit is set, Enable single sub-frame APMDU.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FORCE_RND_PRI</name>
              <description>queue select priority control
1:old round robin method
0:depend on last selected queue</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_pta_edcca_en</name>
              <description>0 : wl_tx signal to PTA does not consider EDCCA
1 : wl_tx signal to PTA consider EDCCA</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_pta_wl_tx_en</name>
              <description>enable WL PTA (should be set in init MAC)</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_use_data_bw</name>
              <description>1 : Use des2_data_bw for this packet
0 : when des1_cca_rts = 2'b10, update_bw depend on ch_bw_status</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TRI_PKT_STATUS</name>
              <description></description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TRI_PKT_PKTIN</name>
              <description>If trigger frame is transmitted into txpktbuf, HW generates interrupt
1: Enable
0: Disable</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ACQ_MODE_SEL</name>
              <description>1: Enable 88C 4AC Mode
0: Enable 8723 ACQ0~7 Mode</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_Cdend_txtime_H</name>
              <description>Cfend packet txtime bit[8:4]</description>
              <bitRange>[12:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_Cdend_txtime_L</name>
              <description>Cfend packet txtime bit[3:0]</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_NESS</name>
              <description>NESS</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_STBC_CFEND</name>
              <description>CFEND STBC</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PROT_MODE_CTRL</name>
          <addressOffset>0x000004C8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0C140101</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RTS_MAX_AGG_NUM</name>
              <description>In RTS frame exchange sequence, the maximum aggregation packet number limit is defined by this register, unit is byte</description>
              <bitRange>[29:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MAX_AGG_NUM</name>
              <description>the maximum aggregation packet number limit,unit is byte</description>
              <bitRange>[21:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RTS_TXTIME_TH</name>
              <description>RTS packet txtime threshold, unit is 64 us</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RTS_LEN_TH</name>
              <description>RTS packet Length threshold, unit is 128 bytes</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BAR_MODE_CTRL</name>
          <addressOffset>0x000004CC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0102FF7F</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RTY_PKT_LMT</name>
              <description>retry packet limit</description>
              <bitRange>[29:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BAR_RTY_LMT</name>
              <description>BAR retry limit</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BAR_PKTTIME_THRS</name>
              <description>BAR packet time thrs</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BAR_PKTNUM_TH_V1</name>
              <description>BAR Pktnum Thrs</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MACID_SLEEP2</name>
          <addressOffset>0x000004D0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MACID95_64PKTSLEEP</name>
              <description>Macid 95~Macid 64 Packet Sleep (per bit controlled)</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MACID_SLEEP</name>
          <addressOffset>0x000004D4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MACID31_0_PKTSLEEP</name>
              <description>Macid31 ~ Macid 0Packet Sleep. (per bit controlled)</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_HW_SEQ0_1</name>
          <addressOffset>0x000004D8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_HW_SSN_SEQ1</name>
              <description>When TXDESC HWSEQEN is set, MAC will overwrite SEQ control by this register. Before DRV hand over the SEQ control to HW, DRV may set the current SEQ to this register. When DRV will take back the SEQ control from HW, DRV may get the current sequence from this register.</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HW_SSN_SEQ0</name>
              <description>When TXDESC HWSEQEN is set, MAC will overwrite SEQ control by this register. Before DRV hand over the SEQ control to HW, DRV may set the current SEQ to this register. When DRV will take back the SEQ control from HW, DRV may get the current sequence from this register.</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_HW_SEQ2_3</name>
          <addressOffset>0x000004DC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_HW_SSN_SEQ3</name>
              <description>When TXDESC HWSEQEN is set, MAC will overwrite SEQ control by this register. Before DRV hand over the SEQ control to HW, DRV may set the current SEQ to this register. When DRV will take back the SEQ control from HW, DRV may get the current sequence from this register.</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HW_SSN_SEQ2</name>
              <description>When TXDESC HWSEQEN is set, MAC will overwrite SEQ control by this register. Before DRV hand over the SEQ control to HW, DRV may set the current SEQ to this register. When DRV will take back the SEQ control from HW, DRV may get the current sequence from this register.</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PTCLERR_NULLPKT_STATUS</name>
          <addressOffset>0x000004E0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_PTCL_TOTAL_PG0_7</name>
              <description>Total Page in PTCL</description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_PTCL_TOTAL_PG_8</name>
              <description>Total Page in PTCL</description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_PTCL_RATE_TABLE_INVALID</name>
              <description>during rate fallback process, if the all rate table is invalid, then assert ERROR FLAG</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RD_TXHANG_ERR</name>
              <description>Indicates the txhang error in RDG mode</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RD_STATUS_ERR</name>
              <description>Indicates the status error in RDG mode</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RD_CTN_ERR</name>
              <description>Indicates the cnt error in RDG mode</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RD_PKTIN_ERR</name>
              <description>Indicates the pktin error in RDG mode</description>
              <bitRange>[18:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RD_FTMT2R_ERR</name>
              <description>Indicates the timeout error in FTM t2r report</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_P1_TX_NULL_1</name>
              <description>Port 1 Tx Null 1 packet ok indicator</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_P1_TX_NULL_0</name>
              <description>Port 1 Tx Null 0 packet ok indicator</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_P0_TX_NULL_1</name>
              <description>Port 0 Tx Null 1 packet ok indicator</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_P0_TX_NULL_0</name>
              <description>Port 0 Tx Null 0 packet ok indicator</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PRETX_DROP_CTRL</name>
          <addressOffset>0x000004E4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00F23001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_COLLI_DETEC_TIME_MAX</name>
              <description>0~15: The field indicated collision detect time for broadcast or Beacon packet.(unit: us)</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PRETX_AGGR_EN</name>
              <description>1: enable PRETX function
0: disable PRETX function</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PRETX_AGGR_TIME_MAX</name>
              <description>If BIT_PRETX_AGGR_EN = 1, the bits will count down after PHYTXON signal asserting every transmission in pre-tx mode.(Default: 7us)</description>
              <bitRange>[18:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HGQ_DEL_EN</name>
              <description>1: HGQ packet will be dropped when enable macid delete function; 0: HGQ packet cannot be dropped</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGQ_DEL_EN</name>
              <description>1: MGQ packet will be dropped when enable macid delete function; 0: MGQ packet cannot be dropped</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_BT_POLLUTE_RX</name>
              <description>enable write BT Polluted field during RX RESP</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BT_POLLUTE_PKT_CNT</name>
          <addressOffset>0x000004E8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_bt_rxpollute_pkt_cnt</name>
              <description>count the tx fail pkt caused by bt RX pollute, write 0x4E8[31] will clear the counter</description>
              <bitRange>[31:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_bt_txpollute_pkt_cnt</name>
              <description>count the tx fail pkt caused by bt pollute, write 0x4E8[15] will clear the counter</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DROP_PKT_NUM</name>
          <addressOffset>0x000004EC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_LIFE_DROP_NUM</name>
              <description>TIE 0 in 8723F</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DROP_PKT_NUM</name>
              <description>Statistic the number of dropped packets</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CPUMGQ_TIMER_CTRL</name>
          <addressOffset>0x000004F4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MGQ_TRI_HEAD</name>
              <description>The head page of the CPUMGQ pkt If the CPUMGQ is triggered by TX TIMER.</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CPUMGQ_TRI_LIFETIME_EN</name>
              <description>When this bit is set, enable the lifetime function.
This lifetime threshold only affect CPUMGQ trigger from Tx_Timer.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CPUMGQ_TRI_LIFETIME</name>
              <description>LIFETIME Threshold: Unit = 256us.
When CPU MgntQ is triggered, 
If BIT_CPUMGQ_TRI_LIFETIME_EN = 1,  count down. 
If BIT_CPUMGQ_TRI_LIFETIME_EN = 0, do nothing.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BCN_RPT_CFG</name>
          <addressOffset>0x000004FC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFF0000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_DUMMY_REG_1</name>
              <description>dummy reg</description>
              <bitRange>[31:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_BCN_TRXRPT</name>
              <description>If this bit is set, PTCL will write BCN TRXRPT when BCNOK/BCNERR INT. 
FW have clear this bit before enter LPS 32K mode.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DUMMY_REG_0</name>
              <description>dummy reg</description>
              <bitRange>[16:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AESIV_SETTING</name>
          <addressOffset>0x00001424</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_AESIV_OFFSET</name>
              <description>aesiv offset in txrpt buffer (Unit:128Bytes).</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BF0_TIME_SETTING</name>
          <addressOffset>0x00001428</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0FFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_bf0_timer_set</name>
              <description>write 1 to set beamforming 0 timer to BIT_bf0_lifetime</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_bf0_timer_clr</name>
              <description>write 1 to clear beamforming 0 timer to 0</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_BF0_UPDATE</name>
              <description>1: when tx ndp ok/fail, enable to update beamforming 0 timer</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_BF0_TIMER</name>
              <description>beamforming 0 timer enable</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BF0_PRETIME_OVER</name>
              <description>beamforming 0 pre timeout time</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BF0_LIFETIME</name>
              <description>beamforming 0 life time</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BF1_TIME_SETTING</name>
          <addressOffset>0x0000142C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0FFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_bf1_timer_set</name>
              <description>write 1 to set beamforming 1 timer to BIT_bf1_lifetime</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_bf1_timer_clr</name>
              <description>write 1 to clear beamforming 1 timer to 0</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_BF1_UPDATE</name>
              <description>1: when tx ndp ok/fail, enable to update beamforming 1 timer</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_BF1_TIMER</name>
              <description>beamforming 1 timer enable</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BF1_PRETIME_OVER</name>
              <description>beamforming 1 pre timeout time</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BF1_LIFETIME</name>
              <description>beamforming 1 life time</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BF_TIMEOUT_EN</name>
          <addressOffset>0x00001430</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000303</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_EN_VHT_LDPC</name>
              <description>1: enable ldpc in vht rate mode</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_HT_LDPC</name>
              <description>1: enable ldpc in ht rate  mode</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_bf1_timeout_en</name>
              <description>1: when beamforming 1 timer count to 0,then disable beamforming 0</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_bf0_timeout_en</name>
              <description>1: when beamforming 0 timer count to 0,then disable beamforming 0</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MACID_RELEASE0</name>
          <addressOffset>0x00001434</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MACID31_0_RELEASE</name>
              <description>Macid31~Macid0 Release(per bit controlled)</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MACID_RELEASE1</name>
          <addressOffset>0x00001438</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MACID63_32_RELEASE</name>
              <description>Macid63~Macid32 Release(per bit controlled)</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MACID_RELEASE2</name>
          <addressOffset>0x0000143C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MACID95_64_RELEASE</name>
              <description>Macid95~Macid64 Release (per bit controlled)</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MACID_RELEASE3</name>
          <addressOffset>0x00001440</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MACID127_96_RELEASE</name>
              <description>Macid127~Macid96 Release (per bit controlled)</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MACID_RELEASE_SETTING</name>
          <addressOffset>0x00001444</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description></description>
              <bitRange>[31:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_macid_value</name>
              <description>write this field to set REG_macid_release[BIT_macid_offset] = BIT_macid_value</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_macid_offset</name>
              <description>write this field to set REG_macid_release[BIT_macid_offset] = BIT_macid_value</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FAST_EDCA_VOVI_SETTING</name>
          <addressOffset>0x00001448</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x08040804</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_VI_FAST_EDCA_TO</name>
              <description>vi queue fast edca timeout value</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_VI_THRESHOLD_SEL</name>
              <description>1: use all vi queue pktnum compare to pktnum_threshold;
0: use single macid pktnum compare to pktnum_threshold;</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_VI_FAST_EDCA_PKT_TH</name>
              <description>vi queue fast edca pkt number threshold</description>
              <bitRange>[22:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_VO_FAST_EDCA_TO</name>
              <description>vo queue fast edca timeout value</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_VO_THRESHOLD_SEL</name>
              <description>1: use all vo queue pktnum compare to pktnum_threshold;
0: use single macid pktnum compare to pktnum_threshold;</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_VO_FAST_EDCA_PKT_TH</name>
              <description>vo queue fast edca pkt number threshold</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FAST_EDCA_BEBK_SETTING</name>
          <addressOffset>0x0000144C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x08040804</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BK_FAST_EDCA_TO</name>
              <description>bk queue fast edca timeout value</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BK_THRESHOLD_SEL</name>
              <description>1: use all bk queue pktnum compare to pktnum_threshold;
0: use single macid pktnum compare to pktnum_threshold;</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BK_FAST_EDCA_PKT_TH</name>
              <description>bk queue fast edca pkt number threshold</description>
              <bitRange>[22:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BE_FAST_EDCA_TO</name>
              <description>be queue fast edca timeout value</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BE_THRESHOLD_SEL</name>
              <description>1: use all be queue pktnum compare to pktnum_threshold;
0: use single macid pktnum compare to pktnum_threshold;</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BE_FAST_EDCA_PKT_TH</name>
              <description>be queue fast edca pkt number threshold</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MACID_DROP0</name>
          <addressOffset>0x00001450</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MACID31_0_DROP</name>
              <description>Macid31~Macid0 Drop (per bit controlled)</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MACID_DROP1</name>
          <addressOffset>0x00001454</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MACID63_32_DROP</name>
              <description>Macid63~Macid32 Drop (per bit controlled)</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MACID_DROP2</name>
          <addressOffset>0x00001458</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MACID95_64_DROP</name>
              <description>Macid95~Macid64 Drop (per bit controlled)</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MACID_DROP3</name>
          <addressOffset>0x0000145C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MACID127_96_DROP</name>
              <description>Macid127~Macid96 Drop (per bit controlled)</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_r_macid_release_success_0</name>
          <addressOffset>0x00001460</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_r_macid_release_success_0</name>
              <description>macid0~31</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_r_macid_release_success_1</name>
          <addressOffset>0x00001464</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_r_macid_release_success_1</name>
              <description>macid32~63</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_r_macid_release_success_2</name>
          <addressOffset>0x00001468</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_r_macid_release_success_2</name>
              <description>macid64~95</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_r_macid_release_success_3</name>
          <addressOffset>0x0000146C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_r_macid_release_success_3</name>
              <description>macid96~127</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MGQ_FIFO_CTRL</name>
          <addressOffset>0x00001470</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x10000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MGQ_FIFO_EN</name>
              <description>1: Enable MGQ FIFO Function.
0: Disable MGQ FIFO Function.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGQ_FIFO_PG_SIZE</name>
              <description>The page size of MGQ FIFO PKTs.</description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGQ_FIFO_START_PG</name>
              <description>The start page of MGQ FIFO.</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGQ_FIFO_SIZE</name>
              <description>2'b00 : FIFO size 4 pkts.
2'b01 : FIFO size 8 pkts.
2'b1x : FIFO size 16 pkts.</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGQ_FIFO_PAUSE</name>
              <description>1: use all vo queue pktnum compare to pktnum_threshold;
0: use signle macid pktnum compare to pktnum_threshold;</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGQ_FIFO_RPTR</name>
              <description>The read pointer of the MGQ FIFO.(clear when disable MGQ FIFO function)</description>
              <bitRange>[12:8]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_MGQ_FIFO_OV</name>
              <description>1: MGQ FIFO overflow.
0: NO MGQ FIFO overflow.</description>
              <bitRange>[7:7]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_MGQ_FIFO_WPTR_ERR</name>
              <description>1: Error of MGQ FIFO write pointer setting.
0: No error of MGQ FIFO write pointer setting. (clear when disable MGQ FIFO function)</description>
              <bitRange>[6:6]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_CPUM_LIFETIME_EN</name>
              <description>1: Enable Lifetime function of the MGQ FIFO pkts.
0: Disable Lifetime function of the MGQ FIFO pkts.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGQ_FIFO_WPTR</name>
              <description>The write pointer of the MGQ FIFO</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MGQ_FIFO_RELEASE_INT</name>
          <addressOffset>0x00001474</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MGQ_FIFO_INT_FLAG</name>
              <description>The flag of the MGQ FIFO PKT release interrupt, write one clear.</description>
              <bitRange>[31:16]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_MGQ_FIFO_INT_MASK</name>
              <description>The mask of the MGQ FIFO PKT release interrupt.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MGQ_FIFO_LIFETIME_VALID</name>
          <addressOffset>0x00001478</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x10000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MGQ_FIFO_LIFETIME</name>
              <description>MGQ FIFO packet lifetime unit: 256us</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGQ_FIFO_VALID_CLR_1</name>
              <description>Clear the valid map of the MGQ FIFO PKT, high [15:8] bits</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGQ_FIFO_VALID_CLR_0</name>
              <description>Clear the valid map of the MGQ FIFO PKT, low [7:0] bits</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_r_macid_release_success_clear_offset</name>
          <addressOffset>0x0000147C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description></description>
              <bitRange>[31:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_macid_release_success_clear_offset</name>
              <description>HW will set 0x2460~0x246C if one packet was released successfully for a given macid. SW use this register to reset the status.</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TX_CNT_CFG</name>
          <addressOffset>0x00001480</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0F000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TXPKT_CNT_SEL</name>
              <description>Select the counter to show in 0X14A0 BIT_TXPKT_CNT_RPT.
0: r_TX_OK_RTY0
1: r_TX_OK_RTY1
2: r_TX_OK_RTY2
3: r_TX_OK_RTY3
4: r_TX_OK_RTY4
5: r_RTY_DROP
6: r_LT_DROP
7: r_BMC_TXOK
8: r_TOTAL_PKT_CNT 
9: r_RTS_DROP
10: r_RTS_OK</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_REF_MACID</name>
              <description>if BIT_REF_MACID = 0xF, count all eligible frames and ignore MACID;
else, only count the frames whose MACID = BIT_REF_MACID
BMC packet ignore MACID.</description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TX_CNT_CLR</name>
              <description>Write 1 to clear the counters.</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_CTRL_HTC</name>
              <description>1: rts/cts2s/cts2ap/bar will carry HTC field by ctrl_wrapper frame, valid when txdesc.HTC = 1
0: rts/cts2s/cts2ap/bar will not carry HTC field even though txdesc.HTC = 1</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_HTC_RATE_ADPT</name>
              <description>1: if tx rate fallback to CCK/OFDM rate, HW auto remove HTC field in MAC header</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TXPKT_CNT</name>
          <addressOffset>0x00001484</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TXPKT_CNT_RPT</name>
              <description>The results of TXPKT counter. Depends on BIT_TXPKT_CNT_SEL.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>page5</name>
      <groupName>WIFI</groupName>
      <baseAddress>0x40000000</baseAddress>
      <size>0x000015A4</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x000015A4</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>REG_EDCA_VO_PARAM</name>
          <addressOffset>0x00000500</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x002F3224</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TXOPLIMIT_VO</name>
              <description>TXOP Limit
An unsigned integer in units of 32 microseconds. Value of zero indicates that a single MSDU or MMPDU in addition to a protection frame exchange can be transmitted at any rate.
Default: BK = 0h; BE = 0h; VI = 5Eh; VO = 2Fh.</description>
              <bitRange>[26:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CW_VO</name>
              <description>ECWmin and ECWmax encode the values of Cwmin and Cwmax respectively in an exponent form. Ex: Cwmax = 2^(ECWmax)-1
Default: BK = Ah/5h; BE = Ah/5h; VI = 5h/4h; VO = 4h/3h.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_AIFS_VO</name>
              <description>Arbitrary Inter frame space
In unit of microsecond. AIFS indicates the time a non-AP QSTA should defer before either invoking a backoff or starting a transmission
Default: BK = 49h; BE = 25h; VI = 1Ch; VO = 1Ch.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_EDCA_VI_PARAM</name>
          <addressOffset>0x00000504</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x005E4326</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TXOPLIMIT_VI</name>
              <description>TXOP Limit
An unsigned integer in units of 32 microseconds. Value of zero indicates that a single MSDU or MMPDU in addition to a protection frame exchange can be transmitted at any rate.
Default: BK = 0h; BE = 0h; VI = 5Eh; VO = 2Fh.</description>
              <bitRange>[26:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CW_VI</name>
              <description>ECWmin and ECWmax encode the values of Cwmin and Cwmax respectively in an exponent form. Ex: Cwmax = 2^(ECWmax)-1
Default: BK = Ah/5h; BE = Ah/5h; VI = 5h/4h; VO = 4h/3h.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_AIFS_VI</name>
              <description>Arbitrary Inter frame space
In unit of microsecond. AIFS indicates the time a non-AP QSTA should defer before either invoking a backoff or starting a transmission
Default: BK = 49h; BE = 25h; VI = 1Ch; VO = 1Ch.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_EDCA_BE_PARAM</name>
          <addressOffset>0x00000508</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0000A42B</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TXOPLIMIT_BE</name>
              <description>TXOP Limit
An unsigned integer in units of 32 microseconds. Value of zero indicates that a single MSDU or MMPDU in addition to a protection frame exchange can be transmitted at any rate.
Default: BK = 0h; BE = 0h; VI = 5Eh; VO = 2Fh.</description>
              <bitRange>[26:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CW_BE</name>
              <description>ECWmin and ECWmax encode the values of Cwmin and Cwmax respectively in an exponent form. Ex: Cwmax = 2^(ECWmax)-1
Default: BK = Ah/5h; BE = Ah/5h; VI = 5h/4h; VO = 4h/3h.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_AIFS_BE</name>
              <description>Arbitrary Inter frame space
In unit of microsecond. AIFS indicates the time a non-AP QSTA should defer before either invoking a backoff or starting a transmission
Default: BK = 49h; BE = 25h; VI = 1Ch; VO = 1Ch.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_EDCA_BK_PARAM</name>
          <addressOffset>0x0000050C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0000A549</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TXOPLIMIT_BK</name>
              <description>TXOP Limit
An unsigned integer in units of 32 microseconds. Value of zero indicates that a single MSDU or MMPDU in addition to a protection frame exchange can be transmitted at any rate.
Default: BK = 0h; BE = 0h; VI = 5Eh; VO = 2Fh.</description>
              <bitRange>[26:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CW_BK</name>
              <description>ECWmin and ECWmax encode the values of Cwmin and Cwmax respectively in an exponent form. Ex: Cwmax = 2^(ECWmax)-1
Default: BK = Ah/5h; BE = Ah/5h; VI = 5h/4h; VO = 4h/3h.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_AIFS_BK</name>
              <description>Arbitrary Inter frame space
In unit of microsecond. AIFS indicates the time a non-AP QSTA should defer before either invoking a backoff or starting a transmission
Default: BK = 49h; BE = 25h; VI = 1Ch; VO = 1Ch.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BCN_CFG_PIFS</name>
          <addressOffset>0x00000510</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x281C4413</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RDG_PIFS</name>
              <description>PIFS time. It is only used in RDG mode and in units of us.</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PIFS</name>
              <description>PIFS time. It is only used in AP mode and in units of us.</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BCNCW_MAX</name>
              <description>Beacon Contention Window MAX
Defines the contention window value for back off before transmitting beacon frame. This field is set to 0 in AP mode to indicate no back off window. In ad hoc mode, its default value is 6. 26-1 = 63 time slots.</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BCNCW_MIN</name>
              <description>Beacon Contention Window
Defines the contention window value for back off before transmitting beacon frame. This field is set to 0 in AP mode to indicate no back off window. In ad hoc mode, its default value is 6. 26-1 = 63 time slots.</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BCNIFS</name>
              <description>Beacon Interframe Space
In units of microseconds, this register defines the medium idle time required before transmitting beacon (AP mode) or entering random back off window.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SIFS</name>
          <addressOffset>0x00000514</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0E0A0E0A</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_SIFS_OFDM_TRX</name>
              <description>This register sets the SIFS time required in NAV protection period after receiving any immediate response.
for example Ack-Data or RTS/CTS-Data. It is in unit of us.</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SIFS_CCK_TRX</name>
              <description>This register sets the SIFS time required in NAV protection period after receiving any immediate response.
for example Ack-Data or RTS/CTS-Data. It is in unit of us.</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SIFS_OFDM_CTX</name>
              <description>This register sets the SIFS time required for consecutive TX events for example CTS2S-Data, or broadcast bursting. It is in unit of us.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SIFS_CCK_CTX</name>
              <description>This register sets the SIFS time required for consecutive TX events for example CTS2S-Data, or broadcast bursting. It is in unit of us.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TSFT_SYN_OFFSET_SLOT</name>
          <addressOffset>0x00000518</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x09140640</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_SLOTTIME</name>
              <description>This register sets the slot time value mentioned in 802.11 specification. It is in units of us.
Default: 0x9</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_AGGR_BK_TIME</name>
              <description>Hw will break aggr. In sifs condition</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TSFTR_SYNC_OFFSET</name>
              <description>tsft sync. Offset (bcn0 sync to bcn1 offset or bcn1 sync to bcn0 offset). 
Unit : 32us, default is 50ms</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PS_NOA_ERLY_TIME</name>
          <addressOffset>0x0000051C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000500</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_NOA_OFF_ERLY_TIME</name>
              <description>NOA off early interval, Time unit is TU.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_NOA_ON_ERLY_TIME</name>
              <description>not valid. NOA on early interval, Time unit is TU.
PS: This function has some issue, so it's value must be 0</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TXPAUSE_TXPTCL_DISTXREQ_CTRL</name>
          <addressOffset>0x00000520</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00003F0F</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_DIS_BT_CCA</name>
              <description>Disable BT_CCA.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_TXREQ_CLR_CPUMGQ</name>
              <description>1: if this queue can't own channel ,txcmd will be cleared
0:Only TX_finish can clear txreq</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_TXREQ_CLR_HI</name>
              <description>0: if this queue can't own channel ,txcmd will be cleared
1:Only TX_finish can clear txreq</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_TXREQ_CLR_MGQ</name>
              <description>1: if this queue can't own channel ,txcmd will be cleared
0:Only TX_finish can clear txreq</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_TXREQ_CLR_BK</name>
              <description>0: if this queue can't own channel ,txcmd will be cleared
1:Only TX_finish can clear txreq</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_TXREQ_CLR_BE</name>
              <description>0: if this queue can't own channel ,txcmd will be cleared
1:Only TX_finish can clear txreq</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_TXREQ_CLR_VI</name>
              <description>0: if this queue can't own channel ,txcmd will be cleared
1:Only TX_finish can clear txreq</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_TXREQ_CLR_VO</name>
              <description>0: if this queue can't own channel ,txcmd will be cleared
1:Only TX_finish can clear txreq</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_STOP_CPUMGQ</name>
              <description>To control CPUMGQ queues contention circuit.
1: CPUMGQ queues all stop.
0: Enable CPUMGQ queues contention circuit</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MAC_STOPBCNQ</name>
              <description>Stop BCNQ Queue
Write a 1 to this bit via software to immediately stop the transmission of packet from this queue including retry attempts.</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MAC_STOPHIQ</name>
              <description>Stop High Queue
Write a 1 to this bit via software to immediately stop the transmission of packet from this queue including retry attempts.</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MAC_STOPMGQ</name>
              <description>Stop Management Queue
Write a 1 to this bit via software to immediately stop the transmission of packet from this queue including retry attempts.</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MAC_STOPBK</name>
              <description>Stop BK Queue
Write a 1 to this bit via software to immediately stop the transmission of packet from this queue including retry attempts.</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MAC_STOPBE</name>
              <description>Stop BE Queue
Write a 1 to this bit via software to immediately stop the transmission of packet from this queue including retry attempts.</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MAC_STOPVI</name>
              <description>Stop VI Queue
Write a 1 to this bit via software to immediately stop the transmission of packet from this queue including retry attempts.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MAC_STOPVO</name>
              <description>Stop VO Queue
Write a 1 to this bit via software to immediately stop the transmission of packet from this queue including retry attempts.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_EDCCA</name>
              <description>Disable EDCCA function.  
0: PHY_EDCCA can block TX (default)
1: PHY_EDCCA cannot block TX
OK -&gt; TX beacon; X -&gt; cannot TX beacon
0x528[7] 0x520[15] 0x520[14]      TX bcn                TX bcn
                                               (OFDMCCA=0,     (OFDMCCA=1, 
                                                 EDCCA=1)        EDCCA=1) 
0                 0                   0           X                 X
0                 0                   1           X                 X
0                 1                   0          OK                 X
0                 1                   1          OK                 OK
1                 0                   0           X                 X
1                 0                   1           X                 X
1                 1                   0          OK                 X
1                 1                   1          OK                 OK</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_CCA</name>
              <description>Disable CCA.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LSIG_TXOP_TXCMD_NAV</name>
              <description>Set LSIG_TXOP from TXCMD_NAV field</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SIFS_BK_EN</name>
              <description>SIFS Break Check Criteria enable for AMPDU aggregation</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXQ_NAV_MSK</name>
              <description>1: Queue BKF must wait TX Nav finished 
0: Queue not need wait</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_CW</name>
              <description>When this bit is set, disable CW.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_NAV_END_TXOP</name>
              <description>1: In txop mode, Nav protect all txop 
0: In txop mode, Nav protect to next pkt</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RDG_END_TXOP</name>
              <description>1: In tx RDG mode, Nav protect all txop 
0: In tx RDG mode, Nav protect to next pkt</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGTQ_TXOP_EN</name>
              <description>When this bit is set, MGTQ may sent packets by using ACQ TXOP.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGTQ_RTSMF_EN</name>
              <description>When this bit is set, MTGQ will be TX, not wait until RTS or MF transaction finished.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HIQ_RTSMF_EN</name>
              <description>When this bit is set, HIQ will be TX, not wait until RTS or MF transaction finished.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BCN_RTSMF_EN</name>
              <description>When this bit is set, BCNQ will be TX, not wait until RTS or MF transaction finished.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_NOA0_MBSSID_RD_CTRL</name>
          <addressOffset>0x00000524</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x01FF880F</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_P2P_NOA0_ALLSTASLEEP</name>
              <description>It indicates that the state from CTWindow End to BcnEarly
1: Sleep 
0: Wake</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P2P_NOA0_DISTX_EN</name>
              <description>1: Hw will disable TX in P2P_off period
0: Do Nothing</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P2P_NOA0_PWR_MGT_EN</name>
              <description>A main switch for P2P PowerSaving
1: Enable
0: Disable</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P2P_NOA0_EN</name>
              <description>The condition that noa_unit0, [1]-NOA1, [0]-NOA0
1: Enable
0: Disable</description>
              <bitRange>[28:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P2P_NOA0_UNIT_SEL</name>
              <description>The selector for the source of noa unit0.
0 for port 0, 1 for port 1,2 for port2</description>
              <bitRange>[26:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_TSFBIT32_RST_NOA0</name>
              <description>when enable, if tsft_bit32_int is asserted, reset power_cs of noa_unit0</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MBID_BCNQ7_EN</name>
              <description>When enable, auto MBSSID for virtual interface 7 is enable.</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MBID_BCNQ6_EN</name>
              <description>When enable, auto MBSSID for virtual interface 6 is enable.</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MBID_BCNQ5_EN</name>
              <description>When enable, auto MBSSID for virtual interface 5 is enable.</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MBID_BCNQ4_EN</name>
              <description>When enable, auto MBSSID for virtual interface 4 is enable.</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MBID_BCNQ3_EN</name>
              <description>When enable, auto MBSSID for virtual interface 3 is enable.</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MBID_BCNQ2_EN</name>
              <description>When enable, auto MBSSID for virtual interface 2 is enable.</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MBID_BCNQ1_EN</name>
              <description>When enable, auto MBSSID for virtual interface 1 is enable.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MBID_BCNQ0_EN</name>
              <description>When enable, auto MBSSID for root interface is enable.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_CLR_TXREQ_INCCA</name>
              <description>not valid.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_TX_OVER_BCNQ</name>
              <description>1: Tx Packet with ignoring Beacon Area time
0: Disable</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_BCNERR_INCCCA</name>
              <description>eneble force tx becon ignore CCA in disable contention area</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_BCNERR_INEDCCA</name>
              <description>eneble force tx becon ignore EDCCA in disable contention area</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EDCCA_MSK_CNTDOWN_EN</name>
              <description>1: disable EDCCA count down, 0: enable EDCCA count down
AC backoff 是否需要參考PHY_EDCCA
0: 不參考PHY_EDCCA
1: 參考PHY_EDCCA (default, PHY_EDCCA=1時停止backoff)</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_TXOP_CFE</name>
              <description>Disable TXOP_CFE function</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_LSIG_CFE</name>
              <description>Disable LSIG_TXOP CF-END function</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_STBC_CFE</name>
              <description>Disable STBC CF-END function</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BKQ_RD_INIT_EN</name>
              <description>Enable BKQ RD initiator function</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BEQ_RD_INIT_EN</name>
              <description>Enable BEQ RD initiator function</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_VIQ_RD_INIT_EN</name>
              <description>Enable VIQ RD initiator function</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_VOQ_RD_INIT_EN</name>
              <description>Enable VOQ RD initiator function</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BKQ_RD_RESP_EN</name>
              <description>Enable BKQ RD responder function</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BEQ_RD_RESP_EN</name>
              <description>Enable BEQ RD responder function</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_VIQ_RD_RESP_EN</name>
              <description>Enable VIQ RD responder function</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_VOQ_RD_RESP_EN</name>
              <description>Enable VOQ RD responder function</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_NOA0_PKT_LIFETIME_CTRL</name>
          <addressOffset>0x00000528</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x004C0A8F</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_POWER_STATE_0</name>
              <description>1: On, 0: Off. 
(It is including early time. )</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_CTWINDOW_ON_0</name>
              <description>Spec time and Beacon Early Time to TBTT Time. 
(It is including early time. )</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BEACON_AREA_ON_0</name>
              <description>The time is from HOLD Time to BeaconTx or Timeout.
(It is including early time. )</description>
              <bitRange>[29:29]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_CTWIN_EARLY_DISTX_0</name>
              <description>ctwin_early_distx. 
(It is including early time. )</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_NOA1_OFF_PERIOD_0</name>
              <description>Spec time but exclude BCNDMATIM time for wake. 
(It is including early time. )</description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FORCE_DOZE1_0</name>
              <description>If NoA_Count == 1, this value is 1. else 0.
(It is including early time. )</description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_NOA0_OFF_PERIOD_0</name>
              <description>Spec time but exclude BCNDMATIM time for wake. 
(It is including early time. )</description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FORCE_DOZE0_0</name>
              <description>If NoA_Count == 1, this value is 1. else 0. 
(It is including early time. )</description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_CHANGE_POW_BCN_AREA</name>
              <description>select real_ctwindow &amp; real_bcnq_area for noa_unit</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_BKF_CLR_TXREQ</name>
              <description>when gen tx command done, while will backoff is invalid, then tx command will be cleared</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_BCN_TX_BTCCA</name>
              <description>1: Enable Beacon Tx at TBTT if BT_CCA is enabled
0: Disable</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_PKT_TX_ATIM</name>
              <description>1: Disable AC Queue Packet Tx in ATIM (only valid at Nettype: Adhoc/AP)
0: Enable AC Queue packet Tx in ATIM</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_BCN_DIS_CTN</name>
              <description>Disable the Beacon queue disable contention,when set to 0 enable the force
beacon function.</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_NAVEND_RST_TXOP</name>
              <description>When set this bit, TXOP will be reset while NAV end.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_FILTER_CCA</name>
              <description>Enable CCA filter threshold</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CCA_FILTER_THRS</name>
              <description>If PHY_CCA signal width is bigger than this threshold, this PHY_CCA
signal is valid for MAC.
Unit: us</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EDCCA_THRS</name>
              <description>EDCCA threshold value, edcca over this threshold will cause bkf_rst
Bit[7]: PHY_EDCCA為1時,當timer timeout時擋住TX
Bit[6:0]: timer (單位:32us)</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_P2PON_DIS_TXTIME</name>
          <addressOffset>0x00000530</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_P2PON_DIS_TXTIME</name>
              <description>The time of the disable TX period after the P2P RF on interrupt occur. Unit: 64us.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_NAN_SETTING_2</name>
          <addressOffset>0x00000534</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000168</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_SYNC_BCN_DELAY</name>
              <description>r_HC * r_SLOTTIME * 8'd40 (unit:us)
default: r_HC = 1, r_SLOTTIME = 9, =&gt; 360us
max is 16ms (DW)</description>
              <bitRange>[13:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_QUEUE_INCOL_THR</name>
          <addressOffset>0x00000538</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BK_QUEUE_THR</name>
              <description>0: Disable this BK queue condition.
Otherwise: When internal collision number of queue equal threshold, the priority of queue enhance. But have more 2 queues which satisfy each queue threshold, the priority will follow VO&gt;VI&gt;BE&gt;BK.</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BE_QUEUE_THR</name>
              <description>0: Disable this BE queue condition.
Otherwise: When internal collision number of queue equal threshold, the priority of queue enhance. But have more 2 queues which satisfy each queue threshold, the priority will follow VO&gt;VI&gt;BE&gt;BK.</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_VI_QUEUE_THR</name>
              <description>0: Disable this VI queue condition.
Otherwise: When internal collision number of queue equal threshold, the priority of queue enhance. But have more 2 queues which satisfy each queue threshold, the priority will follow VO&gt;VI&gt;BE&gt;BK.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_VO_QUEUE_THR</name>
              <description>0: Disable this VO queue condition.
Otherwise: When internal collision number of queue equal threshold, the priority of queue enhance. But have more 2 queues which satisfy each queue threshold, the priority will follow VO&gt;VI&gt;BE&gt;BK.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_QUEUE_INCOL_EN</name>
          <addressOffset>0x0000053C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00100000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_DIS_ZGBCCA</name>
              <description>Disable zigbee CCA</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXOP_FAILBREAK_CNT</name>
              <description>if BIT_TXOP_FAIL_BREAK = 1, counter the times of txfail break TXOP</description>
              <bitRange>[29:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_TXOP_FAIL_BREAK</name>
              <description>1: if tx pkt fail in txop, then tx cfend to end txop</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_TBTT_AREA_BLK_4AC</name>
              <description>When set this bit, 4AC backoff is disabled on TBTT setup period</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ENABLE_RANDOM_SHIFT_TX</name>
              <description>When this bit set 1, enable random shift TX function</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ENABLE_EDCA_REF_FUNCTION</name>
              <description>When this bit set 1, enable EDCA REF function</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ENABLE_INTERCOL_EDCA_REF</name>
              <description>When this bit set 1, enable inter-collision edca_ref</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ACQ_MAX_INCOL_EN</name>
              <description>1:Enable 0 :Disable</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BK_TRIGGER_NUM</name>
              <description>The number is triggered by bkq inter collision</description>
              <bitRange>[15:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BE_TRIGGER_NUM</name>
              <description>The number is triggered by beq inter collision</description>
              <bitRange>[11:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_VI_TRIGGER_NUM</name>
              <description>The number is triggered by viq inter collision</description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_VO_TRIGGER_NUM</name>
              <description>The number is triggered by voq inter collision</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_NOA0_TBTT_PROHIBIT</name>
          <addressOffset>0x00000540</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0000C812</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_SPEC_POWER_STATE_0</name>
              <description>1: On, 0: Off</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SPEC_CTWINDOW_ON_0</name>
              <description>The time from TBTT &lt;-&gt; CTWEND (with BCNDMATIM early time)</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SPEC_BEACON_AREA_ON_0</name>
              <description>The time is from TBTT to BeaconTx or Timeout</description>
              <bitRange>[29:29]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SPEC_CTWIN_EARLY_DISTX_0</name>
              <description>ctwin_early_distx</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SPEC_NOA1_OFF_PERIOD_0</name>
              <description>Spec time</description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SPEC_FORCE_DOZE1_0</name>
              <description>If NoA_Count == 1, this value is 1. else 0.</description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SPEC_NOA0_OFF_PERIOD_0</name>
              <description>Spec time</description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SPEC_FORCE_DOZE0_0</name>
              <description>If NoA_Count == 1, this value is 1. else 0.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>dummy</name>
              <description></description>
              <bitRange>[23:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_TBTT_AREA_FOR_BB</name>
              <description>enable notify bb that mac p0 is in tbtt area</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TBTT_HOLD_TIME</name>
              <description>TBTT_prohibit_hold time for AP mode, unit is 32 us</description>
              <bitRange>[19:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TBTT_HOLD_TIME_INFRA</name>
              <description>TBTT_prohibit_hold time for infrastructure mode , unit is 2 ms</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TBTT_PROHIBIT_SETUP</name>
              <description>TBTT_prohibit_setup, unit is 32us</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_NAV_CTRL</name>
          <addressOffset>0x00000544</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00400180</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_NAV_PROT_LEN</name>
              <description>In TXOP mode ,NAV setting which protects next packets</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RD_NAV_PROT_NXT</name>
              <description>In RDG mode ,NAV setting which protects next packets</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FTM_CTRL</name>
          <addressOffset>0x00000548</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FTM_TSF_R2T_PORT</name>
              <description>0:R2T latch count sync tsf of port 0
1: R2T latch count sync tsf of port 1</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FTM_TSF_T2R_PORT</name>
              <description>0:T2R latch count sync tsf of port 0
1: T2R latch count sync tsf of port 1</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FTM_PTT_PORT</name>
              <description>0: sync tsf of port 0
1: sync tsf of port 1</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FTM_PTT</name>
              <description>partial tsf timer setting</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FTM_TSF_CNT</name>
          <addressOffset>0x0000054C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FTM_TSF_R2T</name>
              <description>R2T latch count sync tsf timer</description>
              <bitRange>[31:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FTM_TSF_T2R</name>
              <description>T2R latch count sync tsf timer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TSTRST_P2PRST_BCN_CTRL_PORT0_1</name>
          <addressOffset>0x00000550</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00001414</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_P2P_PWR_RST1</name>
              <description>rst p2p circuit NOA 1, noa_unit0</description>
              <bitRange>[30:30]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_SCHEDULER_RST</name>
              <description>Write this bit reset scheduler, ioreg_txfail</description>
              <bitRange>[29:29]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_P2P_PWR_RST0</name>
              <description>rst p2p circuit NOA 0, noa_unit0</description>
              <bitRange>[28:28]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_TSFTR1_SYNC_EN</name>
              <description>write this bit,  bcn1 will sync to bcn0 with TSFTF_SYN_OFFSET</description>
              <bitRange>[27:27]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_TSFTR_SYNC_EN</name>
              <description>write this bit,  bcn0 will sync to bcn1 with TSFTF_SYN_OFFSET</description>
              <bitRange>[26:26]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_TSFTR1_RST</name>
              <description>write this bit , bcn1  tsft will auto reset</description>
              <bitRange>[25:25]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_TSFTR_RST</name>
              <description>write this bit , bcn0  tsft will auto reset</description>
              <bitRange>[24:24]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_P2P_PWR_RST5</name>
              <description>rst p2p circuit NOA 5, noa_unit2</description>
              <bitRange>[23:23]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_P2P_PWR_RST4</name>
              <description>rst p2p circuit NOA 4, noa_unit2</description>
              <bitRange>[22:22]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_P2P_PWR_RST3</name>
              <description>rst p2p circuit NOA 3, noa_unit1</description>
              <bitRange>[21:21]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_P2P_PWR_RST2</name>
              <description>rst p2p circuit NOA 2, noa_unit1</description>
              <bitRange>[20:20]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_EN_PRE_DL_BEACON</name>
              <description>If set 1, hw will enable pre_download beacon</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MBID_BCN_NUM</name>
              <description>The number of virtual interface number excluding the root number.</description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P1_RXBCN_RPT_ENABLE</name>
              <description>When this bit asserted, RXBCNOK report is issued</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P1_DIS_RX_BSSID_FIT</name>
              <description>0:HW will handle rx_beacon 1:HW will ignore rx_beacon_pk</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P1_TXBCN_RPT_ENABLE</name>
              <description>When this bit and BIT_P1_EN_BCN_RPT are set, then TXBCN ERROR report is issued</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P1_DIS_TSF_UDT</name>
              <description>When set, disable clint 0 TSF update when beacon frames or probe response frames are received.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P1_EN_BCN_FUNCTION</name>
              <description>When this bit is set, TSF and other beacon related functions are then enabled.
0x700(MACID1)的enable開關</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P1_EN_BCN_RPT</name>
              <description>When this bit asserted, txbcnok_int and txbcnerr_int will valid.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P1_ENP2P_CTWINDOW</name>
              <description>1: Enable P2P CTN WINDOWS function. 0: Disable P2P CTN WINDOWS function.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P1_ENP2P_BCNQ_AREA</name>
              <description>1: Enable P2P BCN area on function. 0 : Disable P2P BCN area on function.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P0_RXBCN_RPT_ENABLE</name>
              <description>When this bit asserted, RXBCNOK report is issued</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P0_DIS_RX_BSSID_FIT</name>
              <description>0:HW will handle rx_beacon 1:HW will ignore rx_beacon_pk</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P0_TXBCN_RPT_ENABLE</name>
              <description>When this bit and BIT_P0_EN_BCN_RPT are set, then TXBCN ERROR report is issued</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P0_DIS_TSF_UDT</name>
              <description>When set, disable port 0 TSF update when beacon frames or probe response frames are received.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P0_EN_BCN_FUNCTION</name>
              <description>When this bit is set, TSF and other beacon related functions are then enabled.
0x610(MACID)的enable開關</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P0_EN_BCN_RPT</name>
              <description>When this bit asserted, txbcnok_int and txbcnerr_int will valid.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P0_EN_P2P_CTWINDOW</name>
              <description>1: Enable P2P CTN WINDOWS function. 0: Disable P2P CTN WINDOWS function.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P0_EN_P2P_BCNQ_AREA</name>
              <description>1: Enable P2P BCN area on function. 0 : Disable P2P BCN area on function.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PORT0_BCN_SPACE</name>
          <addressOffset>0x00000554</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00640064</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BCN_SUB_SPACE_PORT0</name>
              <description>Unit is ms. The sub-beacon interval of the port 0.(valid if mbssid function is enable)</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BCN_SPACE_PORT0</name>
              <description>Unit is ms. When MBSSID is disable, this field is the beacon interval. When MBSSID is enable, this register is the beacon space of root.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ATIMWND0_P0_BCN_ERLY_DMA_CTRL</name>
          <addressOffset>0x00000558</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00020305</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_ATIMWND0</name>
              <description>ATIM window width of root VAP in units of TU.</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BCNDMATIM_P0</name>
              <description>Indicates the time before TBTT to perform beacon queue DMA. This register is shared by the time to assert ATIM window end interrupt. Measured in units of "TU" before TBTT and before ATIM window end.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DRVERLYITV_P0</name>
              <description>Time to send interrupt to notify driver to change beacon content. Time unit is TU.
The register also is shared by P2P-CTW and P2P-NoA (from NoA-Absent to NoA-On). It is used to wake up early at DriverEarlyTime</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BCNERR_TSF_CTRL</name>
          <addressOffset>0x0000055C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0F0F1028</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_OFDM_RXTSF_OFFSET</name>
              <description>The Datapath of  OFDM RX_tsf</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CCK_RXTSF_OFFSET</name>
              <description>The Datapath of  CCK RX_tsf</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BCN_MAX_ERR</name>
              <description>When beacon TX error counter goes over this threshold, Beacon will transmit within PIFS.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_USTIME_TSF</name>
              <description>Set the microsecond time unit used by MAC TSF clock. 
0x14 - 20MHz    0x28 - 40MHz    0x50 - 80MHz</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_P0_TSFTR_L</name>
          <addressOffset>0x00000560</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_P0_TSF_TIMER_L</name>
              <description>low 32bits of port0's tsft</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_P0_TSFTR_H</name>
          <addressOffset>0x00000564</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_P0_TSF_TIMER_H</name>
              <description>high 32bits of port0's tsft</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_P1_TSFTR_L</name>
          <addressOffset>0x00000568</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_P1_TSF_TIMER_L</name>
              <description>low 32bits of port1's tsft</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_P1_TSFTR_H</name>
          <addressOffset>0x0000056C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_P1_TSF_TIMER_H</name>
              <description>high 32bits of port1's tsft</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BCN_ERLY_CTW_CTRL</name>
          <addressOffset>0x00000570</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x7F0A0002</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BCNIVLCUNT_P0</name>
              <description>Be used in multiple BCNIVL early INT. When this counter =1, multiple BCNIVL early INT will be triggered.</description>
              <bitRange>[30:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_CTWND_P0</name>
              <description>CTWindow width in units of TU. PORT0</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ATIMWND1</name>
              <description>ATIM window width of VAP1 in units of TU.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BCNDROP_TO_MISC_CTRL</name>
          <addressOffset>0x00000574</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00FF1000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TSF_TIMER_0_SEL</name>
              <description>genarete tsfime_int[0]
00: PORT0's tsft
01: PORT1's tsft
10:PORT2's tsft
11: FREERUN CUT</description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TSF_TIMER_1_SEL</name>
              <description>genarete tsfime_int[1]
00: PORT0's tsft
01: PORT1's tsft
10:PORT2's tsft
11: FREERUN CUT</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TSF_TIMER_2_SEL</name>
              <description>genarete tsfime_int[2]
00: PORT0's tsft
01: PORT1's tsft
10:PORT2's tsft
11: FREERUN CUT</description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXCMD_TIMEOUT_PERIOD</name>
              <description>When 40M/80M TX CMD ready and secondary_CCA_20/secondary_CCA_40 set for this period, then the TX CMD will be cleared.  TU: 1us</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HGQ_TIMEOUT_PERIOD</name>
              <description>When hgq empty for this period, close atim window. And this will block hgq dma for pcie, unless 0x524[12] set enable. TU: 32us</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BEACON_DROP_EN</name>
              <description>enable beacon drop function</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BEACON_DROP_IVL</name>
              <description>indicate the timeout of beacon drop</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_P2_TSFTR_L</name>
          <addressOffset>0x00000578</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_P2_TSF_TIMER_L</name>
              <description>low 32bits of port2's tsft</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_P2_TSFTR_H</name>
          <addressOffset>0x0000057C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_P2_TSF_TIMER_H</name>
              <description>high 32bits of port2's tsft</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TSF_TIMER1</name>
          <addressOffset>0x00000580</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TSTTIMER1</name>
              <description>When the lower 4 bytes of TSFTR matches the content of this register, the FW tsftime_int[0] interrupt is issued.</description>
              <bitRange>[31:5]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TSF_TIMER2</name>
          <addressOffset>0x00000584</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TSTTIMER2</name>
              <description>When the lower 4 bytes of TSFTR matches the content of this register, the FW tsftime_int[1] interrupt is issued.</description>
              <bitRange>[31:5]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TSF_TIMER3</name>
          <addressOffset>0x00000588</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TSTTIMER3</name>
              <description>When the lower 4 bytes of TSFTR matches the content of this register, the FW tsftime_int[2] interrupt is issued.</description>
              <bitRange>[31:5]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BCN_IFS_TBTT_CTN</name>
          <addressOffset>0x0000058C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x06200060</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_PRE_BCN_DMATIM</name>
              <description>when 0x552[3] is set, hw will enable pre_download beacon. this register Indicates the time before TBTT to perform beacon queue DMA.</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FORCE_BCN_IFS</name>
              <description>when 0x528 Bit18 set to 0 and TBTT contention area end,force tx beacon use this IFS</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TBTT_CTN_AREA</name>
              <description>TBTT contention area,Time unit is 32us,for PORT 0 / 1 / 2</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TXOP_CTRL_PRE_BKF</name>
          <addressOffset>0x00000590</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xB00F000F</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_NOPKT_END_RTSMF</name>
              <description>1: enable exit rts hold mode when there is no corresponding ac pkt to tx</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PRETX_US</name>
              <description>For wep/tkip, enable security engine earlier than mactx by this amount of time. Unit is microsecond (us)</description>
              <bitRange>[30:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DTIM_BYPASS</name>
              <description>1: dtim counter will keep 0</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RTS_NAV_TXOP</name>
              <description>enable RTS NAV protect all txop</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_NOT_CROSS_TXOP</name>
              <description>1:tx pkt cross tbtt is prohibited 0:tx pkt cross tbtt is permitted</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PRE_BKF_TIME</name>
              <description>when bkf timer count down this value, sel queue and gen txcmd will start</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_NAV_BLK_HGQ</name>
              <description>rxnav block HGQ</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_NAV_BLK_MGQ</name>
              <description>rxnav block MGQ</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXOP_MIN</name>
              <description>if txop counter is more than this value, than tx pkt is considered not cross tbtt</description>
              <bitRange>[13:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FREERUN_CNT_L</name>
          <addressOffset>0x00000594</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FREERUN_CNT_TIMER_L</name>
              <description>LOW 32bits of freerun cnt</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FREERUN_CNT_H</name>
          <addressOffset>0x00000598</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FREERUN_CNT_TIMER_H</name>
              <description>high 32bits of freerun cnt</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BCN_ERLY_CTW_CTRL_P1_2</name>
          <addressOffset>0x0000059C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x7F0A7F0A</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BCNIVLCUNT_P2</name>
              <description>Be used in multiple BCNIVL early INT. When this counter =1, multiple BCNIVL early INT will be triggered.</description>
              <bitRange>[30:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_CTWND_P2</name>
              <description>CTWindow width in units of TU. PORT2</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BCNIVLCUNT_P1</name>
              <description>Be used in multiple BCNIVL early INT. When this counter =1, multiple BCNIVL early INT will be triggered.</description>
              <bitRange>[14:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_CTWND_P1</name>
              <description>CTWindow width in units of TU. PORT1</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ATIMWND2_5</name>
          <addressOffset>0x000005A0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x02020202</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_ATIMWND5</name>
              <description>ATIM window width of VAP5 in units of TU.</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ATIMWND4</name>
              <description>ATIM window width of VAP4 in units of TU.</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ATIMWND3</name>
              <description>ATIM window width of VAP3 in units of TU.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ATIMWND2</name>
              <description>ATIM window width of VAP2 in units of TU.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ATIMWND6_7_URGENT_NOLIMTHGQ</name>
          <addressOffset>0x000005A4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00010202</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_HIQ_NO_LMT_EN_VAP7</name>
              <description>1: Packet in Hi Queue Tx immediately (No constraint for ATIM Period)
0: Disable</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HIQ_NO_LMT_EN_VAP6</name>
              <description>1: Packet in Hi Queue Tx immediately (No constraint for ATIM Period)
0: Disable</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HIQ_NO_LMT_EN_VAP5</name>
              <description>1: Packet in Hi Queue Tx immediately (No constraint for ATIM Period)
0: Disable</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HIQ_NO_LMT_EN_VAP4</name>
              <description>1: Packet in Hi Queue Tx immediately (No constraint for ATIM Period)
0: Disable</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HIQ_NO_LMT_EN_VAP3</name>
              <description>1: Packet in Hi Queue Tx immediately (No constraint for ATIM Period)
0: Disable</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HIQ_NO_LMT_EN_VAP2</name>
              <description>1: Packet in Hi Queue Tx immediately (No constraint for ATIM Period)
0: Disable</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HIQ_NO_LMT_EN_VAP1</name>
              <description>1: Packet in Hi Queue Tx immediately (No constraint for ATIM Period)
0: Disable</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HIQ_NO_LMT_EN_ROOT</name>
              <description>1: Packet in Hi Queue Tx immediately (No constraint for ATIM Period)
0: Disable</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ATIM_URGENT</name>
              <description>Indicates the time before ATIM Window end . When BSSID[n] (n=0~7) has HIQ packet to send, HW only DMA BSSID[n]'s HIQ packet in this interval.
(unit : TU)</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ATIMWND7</name>
              <description>ATIM window width of VAP7 in units of TU.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ATIMWND6</name>
              <description>ATIM window width of VAP6 in units of TU.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DTIM_COUNT_0_3</name>
          <addressOffset>0x000005A8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_DTIM_COUNT_VAP3</name>
              <description></description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DTIM_COUNT_VAP2</name>
              <description></description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DTIM_COUNT_VAP1</name>
              <description></description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DTIM_COUNT_ROOT</name>
              <description></description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DTIM_COUNT_4_7</name>
          <addressOffset>0x000005AC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_DTIM_COUNT_VAP7</name>
              <description></description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DTIM_COUNT_VAP6</name>
              <description></description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DTIM_COUNT_VAP5</name>
              <description></description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DTIM_COUNT_VAP4</name>
              <description></description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DISATIM_BCNERLY_TBTTHOLD_BCNCS</name>
          <addressOffset>0x000005B0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00020000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TSFTR3_SYNC_EN</name>
              <description>write this bit,  PORT3 will sync to PORT2 with TSFTF_SYN_OFFSET</description>
              <bitRange>[31:31]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_TSFTR2_SYNC_EN</name>
              <description>write this bit,  PORT2 will sync to PORT3 with TSFTF_SYN_OFFSET</description>
              <bitRange>[29:29]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_TSFTR2_RST</name>
              <description>write this bit , bcn2  tsft will auto reset</description>
              <bitRange>[28:28]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_MULTI_BCN_CS</name>
              <description>indicate which port is tx beacon</description>
              <bitRange>[27:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_DIS_BCN_P2</name>
              <description>set 1 to mask the beacon early interrupt of port2</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_BCN_P1</name>
              <description>set 1 to mask the beacon early interrupt of port1</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_BCN_P0</name>
              <description>set 1 to mask the beacon early interrupt of port0</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TBTT_HOLD_PREDICT_P1</name>
              <description>the predicted hold time after tbtt for beacon tx of port1, unit is 32us</description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EARLY_128US_P1</name>
              <description>the BCN EARLY interrupt find tune with unit 128us. The Total Early time of BCN early interrupt is the 0x558 x 1ms + EARLY_128us x 128us. For port 1</description>
              <bitRange>[13:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EARLY_128US_P0</name>
              <description>the BCN EARLY interrupt find tune with unit 128us. The Total Early time of BCN early interrupt is the 0x558 x 1ms + EARLY_128us x 128us.</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_ATIM_VAP7</name>
              <description></description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_ATIM_VAP6</name>
              <description></description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_ATIM_VAP5</name>
              <description></description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_ATIM_VAP4</name>
              <description></description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_ATIM_VAP3</name>
              <description></description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_ATIM_VAP2</name>
              <description></description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_ATIM_VAP1</name>
              <description></description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_ATIM_ROOT</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FREERUN_CNT_P2POFF_DIS_TXTIME</name>
          <addressOffset>0x000005B4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_P2POFF_DIS_TXTIME</name>
              <description>The time of the disable TX period after the P2P RF off interrupt occur. Unit: 64us.</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_FREECNT</name>
              <description>enable freerun tsft</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RESET_FREECNT_P</name>
              <description>reset pulse of freerun tsft</description>
              <bitRange>[12:12]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>dummy</name>
              <description></description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PTA_TRXBCN_CTRL</name>
          <addressOffset>0x000005B8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xE600D064</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_PTA_RXBCN_PRI_MASK</name>
              <description></description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PTA_RXBCN_EN</name>
              <description></description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PTA_RXBCN_DIR</name>
              <description></description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PTA_RXBCN_DUR</name>
              <description></description>
              <bitRange>[28:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PTA_RXBCN_TIME</name>
              <description></description>
              <bitRange>[19:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PTA_PRETX_EN</name>
              <description></description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PTA_PRETX_TIME</name>
              <description>WIFI TX shall wait settle time when antenna is switched from BT to WIFI, if the BT use the same RFAFE as WIFI.
Unit: 1us</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_P2P_NOA1_CTRL_STATE</name>
          <addressOffset>0x000005BC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_POWER_STATE_1</name>
              <description>1: On, 0: Off. 
(It is including early time. )</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_CTWINDOW_ON_1</name>
              <description>Spec time and Beacon Early Time to TBTT Time. 
(It is including early time. )</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BEACON_AREA_ON_1</name>
              <description>The time is from HOLD Time to BeaconTx or Timeout.
(It is including early time. )</description>
              <bitRange>[29:29]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_CTWIN_EARLY_DISTX_1</name>
              <description>ctwin_early_distx. 
(It is including early time. )</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_NOA1_OFF_PERIOD_1</name>
              <description>Spec time but exclude BCNDMATIM time for wake. 
(It is including early time. )</description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FORCE_DOZE1_1</name>
              <description>If NoA_Count == 1, this value is 1. else 0.
(It is including early time. )</description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_NOA0_OFF_PERIOD_1</name>
              <description>Spec time but exclude BCNDMATIM time for wake. 
(It is including early time. )</description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FORCE_DOZE0_1</name>
              <description>If NoA_Count == 1, this value is 1. else 0. 
(It is including early time. )</description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SPEC_POWER_STATE_1</name>
              <description>1: On, 0: Off</description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SPEC_CTWINDOW_ON_1</name>
              <description>The time from TBTT &lt;-&gt; CTWEND (with BCNDMATIM early time)</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SPEC_BEACON_AREA_ON_1</name>
              <description>The time is from TBTT to BeaconTx or Timeout</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SPEC_CTWIN_EARLY_DISTX_1</name>
              <description>ctwin_early_distx</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SPEC_NOA1_OFF_PERIOD_1</name>
              <description>Spec time</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SPEC_FORCE_DOZE1_1</name>
              <description>If NoA_Count == 1, this value is 1. else 0.</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SPEC_NOA0_OFF_PERIOD_1</name>
              <description>Spec time</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SPEC_FORCE_DOZE0_1</name>
              <description>If NoA_Count == 1, this value is 1. else 0.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_P2P_NOA1_ALLSTASLEEP</name>
              <description>It indicates that the state from CTWindow End to BcnEarly
1: Sleep 
0: Wake</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P2P_NOA1_DISTX_EN</name>
              <description>1: Hw will disable TX in P2P_off period
0: Do Nothing</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P2P_NOA1_PWR_MGT_EN</name>
              <description>A main switch for P2P PowerSaving
1: Enable
0: Disable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P2P_NOA1_EN</name>
              <description>The condition that noa_unit0, [1]-NOA1, [0]-NOA0
1: Enable
0: Disable</description>
              <bitRange>[4:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P2P_NOA1_UNIT_SEL</name>
              <description>The selector for the source of noa unit0.
0 for port 0, 1 for port 1</description>
              <bitRange>[2:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_TSFBIT32_RST_NOA1</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ACMHWCTRL</name>
          <addressOffset>0x000005C0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_AVGPERIOD</name>
              <description>In unit of 32 us. It is the value Dot11EDCAAveragingPeriod in SPEC. HW will recalculate used_time every this period.
Max is 2 sec</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BE_ACM_RESET_USED_TIME</name>
              <description>When HwEn is enabled, software set this bit to inform hardware to reset used_time to 0. Read this bit is always 0.</description>
              <bitRange>[10:10]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_VI_ACM_RESET_USED_TIME</name>
              <description>When HwEn is enabled, software set this bit to inform hardware to reset used_time to 0. Read this bit is always 0.</description>
              <bitRange>[9:9]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_VO_ACM_RESET_USED_TIME</name>
              <description>When HwEn is enabled, software set this bit to inform hardware to reset used_time to 0. Read this bit is always 0.</description>
              <bitRange>[8:8]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_BEQ_ACM_STATUS</name>
              <description>This bit indicates if the used_time &gt;= admitted_time of AC BE when HW ACM.
0: BEQ ACM Not Exceed.
1: BEQ ACM Exceed.
Default: 0h</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_VIQ_ACM_STATUS</name>
              <description>This bit indicates if the used_time &gt;= admitted_time of AC VI when HW ACM.
0: VIQ ACM Not Exceed.
1: VIQ ACM Exceed.
Default: 0h</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_VOQ_ACM_STATUS</name>
              <description>This bit indicates if the used_time &gt;= admitted_time of AC VO when HW ACM.
0: VOQ ACM Not Exceed.
1: VOQ ACM Exceed.
Default: 0h</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BEQ_ACM_EN</name>
              <description>Set this bit to enable ACM of BE queue.
1: Enable
0: Disable
Default: 0h</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_VIQ_ACM_EN</name>
              <description>Set this bit to enable ACM of VI queue.
1: Enable
0: Disable
Default: 0h.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_VOQ_ACM_EN</name>
              <description>Set this bit to enable ACM of VO queue.
1: Enable
0: Disable
Default: 0h.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ACMHWEN</name>
              <description>Set this bit to enable hardware to take control of ACM.
1: Hardware Control
0: Software Control
Default: 0h.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_VO_VI_ADMTIME</name>
          <addressOffset>0x000005C4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_VI_ADMITTED_TIME</name>
              <description>Admitted_time of VI queue. In unit of 32 microsecond. 
Calculated and set by driver.</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_VO_ADMITTED_TIME</name>
              <description>Admitted_time of VO queue. In unit of 32 microsecond. 
Calculated and set by driver.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BE_ADMTIME</name>
          <addressOffset>0x000005C8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_DIS_NDPA_NAV_CHK</name>
              <description>1--&gt;tx NDPA/NDP can cross TBTT,0--&gt;tx NDPA/NDP can't cross TBTT</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MHDR_NAV_OFFSET</name>
              <description>NDPA NAV compensation value</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BE_ADMITTED_TIME</name>
              <description>Admitted_time of BE queue. In unit of 32 microsecond. 
Calculated and set by driver.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_NOACMD_SEL_EDCA_RANDOM_GEN</name>
          <addressOffset>0x000005CC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x01E21051</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_NOA_SEL</name>
              <description>TX NoA parameter select (noa_unit0~2,parameter0~5)
0: NoA0 , 1:NoA1, 2:NoA2, 3:NoA3, 4:NoA4, default: NoA5
To control the register setting for which NOA. (register 0x05E0[103:0])</description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXCMD_SEG_SEL</name>
              <description>[HW Debug Info]To select which one TXCMD Segment.
For example,
可以在0x5CF[3:0]填 0 or 6  讀取
0x5F8[7:0] : Tx Agg
0x5F9[7:0] : Tx Rate</description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RANDOM_GEN</name>
              <description>Random number generator polynomial</description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TXPAUSE_CFG</name>
          <addressOffset>0x000005D0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000005</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TSF_DIFF_P1P2</name>
              <description>the difference of beacon count down value between port0 and port1, unit is TU</description>
              <bitRange>[31:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_TXPAUSE1</name>
              <description>same as 0x522[7:0], allow FW/DR to control pause jointly</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DRVERLYITV_P2</name>
              <description>Time to send interrupt to notify driver to change beacon content. Time unit is TU.  It is used to wake up early at DriverEarlyTime. For port 2</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_NAN_SETTING</name>
          <addressOffset>0x000005D4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x84010514</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_EN_MULTI_BCN</name>
              <description>enable multiple beacons of port0~port2</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ENP2P_DW_AREA</name>
              <description>DW condition for P2P,for port2</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TBTT_PROHIBIT_HOLD_P2</name>
              <description>the predicted hold time after tbtt for beacon tx of port2, unit is 32us</description>
              <bitRange>[29:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BCN_PORT_PRI</name>
              <description>the priority of port0 and port2. 10: port2 has higher priority than port0; 01:port0 has higher priority than port2. 00: port0 and port2 have the same priority</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DRVERLYITV_P1</name>
              <description>Time to send interrupt to notify driver to change beacon content. Time unit is TU.  It is used to wake up early at DriverEarlyTime.  For port1</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P2_RXBCN_RPT_ENABLE</name>
              <description>When this bit asserted, RXBCNOK report is issued</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P2_DIS_RX_BSSID_FIT</name>
              <description>0:HW will handle rx_beacon 1:HW will ignore rx_beacon_pk</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P2_TXBCN_RPT_ENABLE</name>
              <description>When this bit asserted, then TXBCN ERROR report is issued</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P2_DIS_TSF_UDT</name>
              <description>When set, disable clint 2 TSF update when beacon frames or probe response frames are received.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P2_EN_BCN_FUNCTION</name>
              <description>When this bit is set, TSF and other beacon related functions are then enabled.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P2_EN_BCN_RPT</name>
              <description>When this bit asserted, txbcnok_int and txbcnerr_int will valid.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P2_ENP2P_CTWINDOW</name>
              <description>1: Enable P2P CTN WINDOWS function. 0: Disable P2P CTN WINDOWS function.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P2_ENP2P_BCNQ_AREA</name>
              <description>1: Enable P2P BCN area on function. 0 : Disable P2P BCN area on function.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BCN_SPACE_PORT1_2</name>
          <addressOffset>0x000005D8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x02000064</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BCN_SPACE4</name>
              <description>sync beacon space of port2</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BCN_SPACE3</name>
              <description>sync beacon space of port1</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_NAN_SETTING_1</name>
          <addressOffset>0x000005DC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000020</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_SYNCBCN_RXNUM</name>
              <description>if DW is permitted to end early, the number of rx sync beacons is defined in this register</description>
              <bitRange>[31:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DW_END_EARLY</name>
              <description>when set, the DW window end earlier than spec definition. 
When sync bcn and SDF had tx, and rx enough sync bcns defined by 0x5DC[31:27]. DW can early end</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_NAN_ROLE</name>
              <description>the role of NAN device, including  master, no-master sync, and no-master no-sync.</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_mSLOT_EVTQ</name>
              <description>evtq packet will tx in the m-th SLOT of the m-th DWs</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_mDW_EVTQ</name>
              <description>evtq packet will tx in the m-th SLOT of the m-th DWs</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EVTQ_EARLY</name>
              <description>the early time of evtq tx window. unit is TU</description>
              <bitRange>[7:5]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_NOA_PARAM_V1</name>
          <addressOffset>0x000005E0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00001000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_NOA_DURATION_V1</name>
              <description>The maximum duration in units of microseconds that the P2P Group Owner shall remain absent following the start of a Notice of Absence interval.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_NOA_PARAM_V2</name>
          <addressOffset>0x000005E4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00003000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_NOA_INTERVAL_V2</name>
              <description>The length of the Notice of Absence interval in units of microseconds.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_NOA_PARAM_V3</name>
          <addressOffset>0x000005E8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00001000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_NOA_START_TIME_V3</name>
              <description>The start time for the schedule expressed in terms of the lower 4 bytes of the TSF timer.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_NOA_PARAM_4</name>
          <addressOffset>0x000005EC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000003</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_NOA_COUNT_V4</name>
              <description>indicates the number of absence intervals</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SCHEDULER_DBG</name>
          <addressOffset>0x000005F4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_DBG_SCHEDULER</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SCH_TXCMD</name>
          <addressOffset>0x000005F8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_SCH_TXCMD</name>
              <description>Scheduler TXCMD Content</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PAGE5_DUMMY</name>
          <addressOffset>0x000005FC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFF0000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_DUMMY</name>
              <description>Dummy</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PS_TIMER_A_L</name>
          <addressOffset>0x00001500</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_PS_TIMER_A_L</name>
              <description>When the TSF (that select by reg 0x1520 [25:24]) matches the content of this register, the PS_TIMER_A_INT interrupt is issued</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PS_TIMER_A_H</name>
          <addressOffset>0x00001504</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_PS_TIMER_A_H</name>
              <description>When the  TSF (that select by reg 0x1520 [25:24]) matches the content of this register, the PS_TIMER_A_INT interrupt is issued</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PS_TIMER_B_L</name>
          <addressOffset>0x00001508</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_PS_TIMER_B_L</name>
              <description>When the TSF (that select by reg 0x1520 [29:28]) matches the content of this register, the PS_TIMER_B_INT interrupt is issued</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PS_TIMER_B_H</name>
          <addressOffset>0x0000150C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_PS_TIMER_B_H</name>
              <description>When the TSF(that select by reg 0x1520 [29:28]) matches the content of this register, the PS_TIMER_B_INT interrupt is issued</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PS_TIMER_C_L</name>
          <addressOffset>0x00001510</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_PS_TIMER_C_L</name>
              <description>When the TSF(that select by reg 0x1520 [21:20]) matches the content of this register, the PS_TIMER_C_INT interrupt is issued</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PS_TIMER_C_H</name>
          <addressOffset>0x00001514</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_PS_TIMER_C_H</name>
              <description>When the TSF(that select by reg 0x1520 [21:20]) matches the content of this register, the PS_TIMER_C_INT interrupt is issued</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CPUMGQ_PARAMETER</name>
          <addressOffset>0x00001518</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00003224</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_PS_Timer_E_Early</name>
              <description>It is used to wake up early at PS_Timer_E_Early Time. 
Time unit is TU.</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CW</name>
              <description>ECWmin and ECWmax encode the values of Cwmin and Cwmax respectively in an exponent form. Ex: Cwmax = 2^(ECWmax)-1
Default: BK = Ah/5h; BE = Ah/5h; VI = 5h/4h; VO = 4h/3h.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_AIFS</name>
              <description>Arbitrary Inter frame space
In unit of microsecond. AIFS indicates the time a non-AP QSTA should defer before either invoking a backoff or starting a transmission
Default: BK = 49h; BE = 25h; VI = 1Ch; VO = 1Ch</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PS_Timer_Early</name>
          <addressOffset>0x0000151C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_PS_Timer_D_Early</name>
              <description>It is used to wake up early at PS_Timer_D_Early Time. 
Time unit is TU.</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PS_Timer_C_Early</name>
              <description>It is used to wake up early at PS_Timer_C_Early Time. 
Time unit is TU.</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PS_Timer_B_Early</name>
              <description>It is used to wake up early at PS_Timer_B_Early Time. 
Time unit is TU.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PS_Timer_A_Early</name>
              <description>It is used to wake up early at PS_Timer_A_Early Time. 
Time unit is TU.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PS_TIMER_TWT_CRTL</name>
          <addressOffset>0x00001520</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_PS_TIMER_A_EN</name>
              <description>Enable PS_TIMER_B</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PS_TIMER_A_TSF_SEL</name>
              <description>0 for port 0, 1 for port1, 2 for port2, 3 for freerun</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PS_TIMER_B_EN</name>
              <description>Enable PS_TIMER_A</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PS_TIMER_B_TSF_SEL</name>
              <description>0 for port 0, 1 for port1, 2 for port2, 3 for freerun</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PS_TIMER_C_EN</name>
              <description>Enable PS_TIMER_C</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PS_TIMER_C_TSF_SEL</name>
              <description>0 for port 0, 1 for port1, 2 for port2, 3 for freerun</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PS_TIMER_D_EN</name>
              <description>Enable PS_TIMER_D</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PS_TIMER_D_TSF_SEL</name>
              <description>0 for port 0, 1 for port1, 2 for port2, 3 for freerun</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PS_TIMER_E_EN</name>
              <description>Enable PS_TIMER_E</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PS_TIMER_E_TSF_SEL</name>
              <description>0 for port 0, 1 for port1, 2 for port2, 3 for freerun</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_GET_TSFT_OFFSET_EN</name>
              <description>1: Enable Enable get TSFT offset function</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXBCN_TIME_PORT</name>
              <description>select port for report the TSFT
0: port0     1: port1   default is port0.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RX_TSFT_DIFF</name>
          <addressOffset>0x00001524</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RXBCN_TIME_VLD</name>
              <description>1: indicate [30:0] is valid. Write 1 to clear this bit</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RXBCN_TIME_DIFF_DIR</name>
              <description>1: wmac_rx_tsf &gt; TSFT
0: wmac_rx_tsf &lt;= TSFT</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RXBCN_TIME_DIFF</name>
              <description>unit:1us
wmac_rx_tsf - TSFT (selected by 0x1520[0]).</description>
              <bitRange>[29:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SCHEDULER_COUNTER</name>
          <addressOffset>0x00001528</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_SCHEDULER_COUNTER</name>
              <description>The reported counter value corresponding to Report type selected.</description>
              <bitRange>[31:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SCHEDULER_COUNTER_RST</name>
              <description>write "1" to set the count to zero</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SCHEDULER_COUNTER_SEL</name>
              <description>0: No count 
1: If backoff finished but CCA still assert, this counter plus one.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_P2P_NOA2_CTRL_STATE</name>
          <addressOffset>0x0000152C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_POWER_STATE_2</name>
              <description>1: On, 0: Off. 
(It is including early time. )</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_CTWINDOW_ON_2</name>
              <description>Spec time and Beacon Early Time to TBTT Time. 
(It is including early time. )</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BEACON_AREA_ON_2</name>
              <description>The time is from HOLD Time to BeaconTx or Timeout.
(It is including early time. )</description>
              <bitRange>[29:29]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_CTWIN_EARLY_DISTX_2</name>
              <description>ctwin_early_distx. 
(It is including early time. )</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_NOA1_OFF_PERIOD_2</name>
              <description>Spec time but exclude BCNDMATIM time for wake. 
(It is including early time. )</description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FORCE_DOZE1_2</name>
              <description>If NoA_Count == 1, this value is 1. else 0.
(It is including early time. )</description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_NOA0_OFF_PERIOD_2</name>
              <description>Spec time but exclude BCNDMATIM time for wake. 
(It is including early time. )</description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FORCE_DOZE0_2</name>
              <description>If NoA_Count == 1, this value is 1. else 0. 
(It is including early time. )</description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SPEC_POWER_STATE_2</name>
              <description>1: On, 0: Off</description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SPEC_CTWINDOW_ON_2</name>
              <description>The time from TBTT &lt;-&gt; CTWEND (with BCNDMATIM early time)</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SPEC_BEACON_AREA_ON_2</name>
              <description>The time is from TBTT to BeaconTx or Timeout</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SPEC_CTWIN_EARLY_DISTX_2</name>
              <description>ctwin_early_distx</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SPEC_NOA1_OFF_PERIOD_2</name>
              <description>Spec time</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SPEC_FORCE_DOZE1_2</name>
              <description>If NoA_Count == 1, this value is 1. else 0.</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SPEC_NOA0_OFF_PERIOD_2</name>
              <description>Spec time</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SPEC_FORCE_DOZE0_2</name>
              <description>If NoA_Count == 1, this value is 1. else 0.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_P2P_NOA2_ALLSTASLEEP</name>
              <description>It indicates that the state from CTWindow End to BcnEarly
1: Sleep 
0: Wake</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P2P_NOA2_DISTX_EN</name>
              <description>1: Hw will disable TX in P2P_off period
0: Do Nothing</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P2P_NOA2_PWR_MGT_EN</name>
              <description>A main switch for P2P PowerSaving
1: Enable
0: Disable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P2P_NOA2_EN</name>
              <description>The condition that noa_unit0, [1]-NOA1, [0]-NOA0
1: Enable
0: Disable</description>
              <bitRange>[4:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P2P_NOA2_UNIT_SEL</name>
              <description>The selector for the source of noa unit0.
0 for port 0, 1 for port 1, 2 for port 2</description>
              <bitRange>[2:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_TSFBIT32_RST_NOA2</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TM_CFG</name>
          <addressOffset>0x00001530</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TM_TSFT_PORT_SEL</name>
              <description>selected TM timer port
0: port0; 1: port1; 2: port2; 3: freerun</description>
              <bitRange>[4:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXTM_EN</name>
              <description>1: HW will parsing rx packet, to find TM frame</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXTMREQ_EN</name>
              <description>1: HW will parsing rx packet, to find TM request frame</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TM_FUNC_EN</name>
              <description>1: Enable Timing Measurement function</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TM_TSFT_T1</name>
          <addressOffset>0x00001534</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TM_TSFT_T1</name>
              <description>Latch tsft timer of Tx TM frame, unit: 1us</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TM_TSFT_T2</name>
          <addressOffset>0x00001538</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TM_TSFT_T2</name>
              <description>Latch tsft timer of Rx TM frame, unit: 1us</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TM_TSFT_T3</name>
          <addressOffset>0x0000153C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TM_TSFT_T3</name>
              <description>Latch tsft timer of Tx ACK frame, unit: 1us</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TM_TSFT_T4</name>
          <addressOffset>0x00001540</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TM_TSFT_T4</name>
              <description>Latch tsft timer of Rx ACK frame, unit: 1us</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TM_TIMER_OFFSET</name>
          <addressOffset>0x00001544</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TM_TX_PATH_TIME_OFFSET</name>
              <description>Compensate the time, from PHYTXON rising edge to transmit antenna connector. unit: 1us</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TM_RX_PATH_TIME_OFFSET</name>
              <description>Compensate the time, from receive antenna connector to DATAON rising edge. unit: 1us</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BCN_ELY_ADJ</name>
          <addressOffset>0x00001548</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BCN_ELY_ADJ</name>
              <description>beacon early time adjust, unit is 32us</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RXBCN_TSFT_STATISTIC</name>
          <addressOffset>0x0000154C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x80000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_UPD_TSFT_EARLY</name>
              <description>0: don't update TSFT when the following scenarios occur: tim_no_hit, |TSFT - rxbcn.timestamp| &lt;= BIT_RXBCN_TSFT_THRES, and r_wait_rxbcn_finish = 1
1: update TSFT</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXBCN_TSFT_THRES</name>
              <description>used for LPS MAC, if |TSFT - rxbcn.timestamp| &gt; BIT_RXBCN_TSFT_THRES, need to wait fcsok. Else, update TSFT at wmac_rxtsf_rdy (before fcsok)
unit is 1us,max is 8ms</description>
              <bitRange>[28:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_RXBCN_GT_THRES_CNT</name>
              <description>enable the counter of BIT_RXBCN_GT_THRES_CNT</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CLR_RXBCN_GT_THRES_CNT</name>
              <description>clear the BIT_RXBCN_GT_THRES_CNT to 0</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RXBCN_GT_THRES_CNT</name>
              <description>valid when BIT_EN_RXBCN_GT_THRES_CNT = 1. 
counter the number of beacon with the |TSFT - rxbcn.timestamp| exceed the threshold</description>
              <bitRange>[5:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PS_TIMER_D_L</name>
          <addressOffset>0x00001550</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_PS_TIMER_D_L</name>
              <description>When the TSF(that select by reg 0x1520 [16:17]) matches the content of this register, the PS_TIMER_D_INT interrupt is issued</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PS_TIMER_D_H</name>
          <addressOffset>0x00001554</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_PS_TIMER_D_H</name>
              <description>When the TSF(that select by reg 0x1520 [16:17]) matches the content of this register, the PS_TIMER_D_INT interrupt is issued</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PS_TIMER_E_L</name>
          <addressOffset>0x00001558</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_PS_TIMER_E_L</name>
              <description>When the TSF (that select by reg 0x1520 [13:12]) matches the content of this register, the PS_TIMER_E_INT interrupt is issued</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PS_TIMER_E_H</name>
          <addressOffset>0x0000155C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_PS_TIMER_E_H</name>
              <description>When the TSF (that select by reg 0x1520 [13:12]) matches the content of this register, the PS_TIMER_E_INT interrupt is issued</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TSFT_HIOE_RFON_L</name>
          <addressOffset>0x00001560</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TSFT_AT_HIOE_RFON_L</name>
              <description>when hioe_int_chn_on asserted, latch the tsft[31:0] (select port by 0x1530[0])
0x1550[[30] BIT_EN_BCNELY_LATCH_TSFT = 1, when bcn_early_int of port0 asserted, latch TSFT</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TSFT_HIOE_RFON_H</name>
          <addressOffset>0x00001564</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TSFT_AT_HIOE_RFON_H</name>
              <description>when hioe_int_chn_on asserted, latch the tsft[63:32] (select port by 0x1530[0])
0x1550[[30] BIT_EN_BCNELY_LATCH_TSFT = 1, when bcn_early_int of port0 asserted, latch TSFT</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TSFT_BCN_CCAUP_L</name>
          <addressOffset>0x00001568</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TSFT_AT_BCN_CCA_UP_L</name>
              <description>when CCA asserted, latch the tsft[31:0] (select port by 0x1530[0]).
 updated to this register after judging that it is a beacon frame</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TSFT_BCN_CCAUP_H</name>
          <addressOffset>0x0000156C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TSFT_AT_BCN_CCA_UP_H</name>
              <description>when CCA asserted, latch the tsft[63:32] (select port by 0x1530[0]).
 updated to this register after judging that it is a beacon frame</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_POF_BCNELY_AGG_TBTT</name>
          <addressOffset>0x00001570</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000003</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_EN_P0_TBTT_CNT</name>
              <description>enable the tbtt counter function.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P0_TBTT_CNT_THRS</name>
              <description>P0's TBTT counter threshold . Valid when  BIT_EN_P0_TBTT_CNT = 1. when tbtt_cnt &gt;= BIT_P0_TBTT_CNT_THRS, assert p0_tbtt_agg_int.</description>
              <bitRange>[23:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_POF_ELY_AGG</name>
              <description>update bcn_ely_agg initial value of P0 to BIT_INI_POF_ELY_AGG_CNT
1: enable
0: disable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_INI_POF_ELY_AGG_CNT</name>
              <description>bcn_ely_agg initial value of P0. Valid when BIT_EN_POF_ELY_AGG = 1</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_LPSOFFLOAD_RXBCN_DIFF_CFG0</name>
          <addressOffset>0x00001574</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x07010800</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_EN_TSFT_AVG_CAL</name>
              <description>1: calculate the average value of deltaTSFT(latch hioe_int_chn_on and  cca_up) in specified period</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_BCNELY_LATCH_TSFT</name>
              <description>1: latch TSFT to BIT_TSFT_AT_HIOE_RFON (0x153C) when P0's bcn_early int asserted</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TSFT_AVG_CAL_PRD</name>
              <description>2^(BIT_TSFT_AVG_CAL_PERIOD), default is 128 times</description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TSFT_AVG_GT_THRES_CNT_MAX</name>
              <description>The max times of the BIT_TSFT_AVG_VALUE greater than BIT_TSFT_AVG_THRES, if the BIT_TSFT_AVG_VALUE exceeds the BIT_TSFT_AVG_THRES several times in a row, and the number exceeds the BIT_TSFT_AVG_GT_THRES_CNT_MAX, generate an interrupt</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TSFT_AVG_THRES</name>
              <description>The threshold of deltaTSFT(latch hioe_int_chn_on and  cca_up), unit us</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TSFT_AVG_VALUE</name>
          <addressOffset>0x00001578</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TSFT_AVG_GT_THRES_CNT</name>
              <description>statistic the times of the BIT_TSFT_AVG_VALUE than BIT_TSFT_AVG_THRES</description>
              <bitRange>[19:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_TSFT_AVG_VALUE</name>
              <description>the average value of deltaTSFT(latch hioe_int_chn_on and  cca_up) in specified period</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AUDIO_TSFT_CFG0</name>
          <addressOffset>0x0000157C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000019</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_PATH_DELAY_NS_CCK</name>
              <description>the NS part of RX CCK1M PATH DELAY</description>
              <bitRange>[31:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PATH_DELAY_NS_OFDM</name>
              <description>the NS part of RX OFDM6M PATH DELAY</description>
              <bitRange>[21:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_NEW_RX_NSCNT_EN</name>
              <description>1: enable the new ns counter of rx
0: follow old ns counter as tx</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MAC_CLK_PRD</name>
              <description>set the period of MAC CLK, default 40M - 25ns</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AUDIO_TSFT_CFG1</name>
          <addressOffset>0x00001580</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0000000A</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_SEL_TRIG_INC</name>
              <description>1: current is TX mode,select P0/P1's tsft for audio tsft sync,according P0/P1's net mode
0: current is RX mode, select P0's beacon timestamp for audio tsft sync</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_AUDIO_CNT</name>
              <description>1: enable counter, count according to BIT_SEL_TRIG_INC</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_AUDIO_LAT_TSFT_PRD</name>
              <description>indicates the period of rxbcn(P0 rx mode) or TBTT(P1/P0 tx mode), if the counter reaches the BIT_LAT_TSFT_PRD, generate an interrupt</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AUDIO_TSFT_CTRL0</name>
          <addressOffset>0x00001584</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_WMAC_TSF_NS_LAT</name>
              <description>wmac_tsf_ns latch value</description>
              <bitRange>[13:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_INC_I2S_TSF_WL</name>
              <description>when set to 1, i2s tsf counter begin to count, when set to 0 i2s tsf counter pause</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CLR_I2S_TSF_WL</name>
              <description>when set to 1, clear i2s tsf counter</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_INIT_I2S_TSF_WL</name>
              <description>set i2s tsf initial value
when set to 1, set i2s tsf counter value to r_i2s_tsf_tmp[63:0]</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_LAT_I2S_TSF_DRIFT_WL</name>
              <description>add/sub drift to i2s tsf counter
when set to 1, add/sub r_i2s_tsf_drift[31:0] to i2s tsf counter</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AUDIO_TSFT_CTRL1</name>
          <addressOffset>0x00001588</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_I2S_TSF_DRIFT</name>
              <description>i2s tsf counter drift value</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AUDIO_TSFT_CTRL2</name>
          <addressOffset>0x0000158C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_I2S_TSF_TMP_L</name>
              <description>low 32bit of i2s tsf counter initial value</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AUDIO_TSFT_CTRL3</name>
          <addressOffset>0x00001590</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_I2S_TSF_TMP_H</name>
              <description>high 32bit of i2s tsf counter initial value</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AUDIO_TSFT_LATCH0</name>
          <addressOffset>0x00001594</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_WMAC_TSF_US_LAT_L</name>
              <description>low 32bit of wmac_tsf_us latch value</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AUDIO_TSFT_LATCH1</name>
          <addressOffset>0x00001598</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_WMAC_TSF_US_LAT_H</name>
              <description>high 32bit of wmac_tsf_us latch value</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AUDIO_TSFT_LATCH2</name>
          <addressOffset>0x0000159C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_I2S_TSF_LAT_L</name>
              <description>low 32bit of i2s_tsf latch value</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AUDIO_TSFT_LATCH3</name>
          <addressOffset>0x000015A0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_I2S_TSF_LAT_H</name>
              <description>high 32bit of i2s_tsf latch value</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>page6</name>
      <groupName>WIFI</groupName>
      <baseAddress>0x40000000</baseAddress>
      <size>0x00001700</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00001700</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>REG_WMAC_CR</name>
          <addressOffset>0x00000600</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x04000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_WMAC_20MHZBW</name>
              <description></description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_M11J</name>
              <description></description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>wmac_rxuc_bbye_macid</name>
              <description>hw latch macid when rx my unicast bye-bye frame in relay mode
7E:rxpktbuf full
7F:not valid macid</description>
              <bitRange>[14:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_APSDOFF</name>
              <description>1:MAC issue sleep signal to disable BB/AFE/RF TRX function. After MAC has finished, APSDOFF_STATUS will report"1".
0:MAC issue wakeup signal to recall BB/AFE/RF back to RX idle mode. After MAC has finished,APSDOFF _STATUS will report "0".</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_IC_MACPHY_M</name>
              <description>To make ASIC become BB+RF only, and put out the MAC_PHY interface</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TCR</name>
          <addressOffset>0x00000604</addressOffset>
          <size>32</size>
          <description>Transmission Configuration Register</description>
          <resetValue>0x20300000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_WMAC_EN_RTS_ADDR</name>
              <description>when set to 1, enable change RTS multicast address</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_DISABLE_CCK</name>
              <description>when set to 1, disable cck rate packet</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_RAW_LEN</name>
              <description>1: use raw ppdu_len
0: use 4byte alignment ppdu_len</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_NOTX_IN_RXNDP</name>
              <description>1: block original tx when receiving NDP packet</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_EN_EOF</name>
              <description>when set to 1, enable single ampdu for qos packet. In  early mode,not set to 1.</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_BF_SEL</name>
              <description>1: set ndp_rx_standby when rx ppdu of ndpa end;
0: set ndp_rx_standby when rx ndpa packet fcs end;</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_ANTMODE_SEL</name>
              <description>0:4x1 mode, 1:8x1 mode</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_TCRPWRMGT_HWCTL</name>
              <description>If this bit is set to 1, MAC will overwrite power bit of frame control according to 
PWR_ST.  (only for RTS/CTS/ACK/CFEND/BA/BAR frames)</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_SMOOTH_VAL</name>
              <description>smooth value of plcp header HTSIG2</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_EN_SCRAM_INC</name>
              <description>Increase 1 in service field scrambler seed per tx end</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_UNDERFLOWEN_CMPLEN_SEL</name>
              <description>compare length selector for enable condition of underflow, consider plcp header when set 1</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FETCH_MPDU_AFTER_WSECRDY</name>
              <description>If set to 1,mactx_mpdu_gen will fetch mpdu after wsec is ready when sectype is not tkip/wep40/wep104</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_TCR_EN_20MST</name>
              <description>when set to 1, enable ndpa signaling TA when BW =20MHz</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_DIS_SigTa</name>
              <description>when set to 1, disable signaling TA information for response packet</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_DIS_A2B0</name>
              <description>when set to 1, not check bit 0 of rx a2</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_MSK_SIGBCRC</name>
              <description>when set to 1, mask sigb crc in service field  for vht packet</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_TCR_ERRSTEN_2</name>
              <description>If txd fifo underflow when txtype is cmpba, reset mactx state machine</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_TCR_ERRSTEN_1</name>
              <description>If txd fifo underflow, reset mactx state machine</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_TCR_ERRSTEN_0</name>
              <description>Phytxend_ps comes but mactx still active, reset mactx state machine</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_TCR_TXSK_PERPKT</name>
              <description>Search key for each mpdu</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_TCR_ICV</name>
              <description>Integrity Check Value. This bit indicates the existence of an ICV appended to an encipherment packet.
1: No ICV appended
0: ICV appended</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_CFENDFOR</name>
              <description>CF-End Frame Format.The Address 2 field of CF-End is defined to be the address of the STA contained in the AP, but in 802.11n a STA can also send CF-End.The Address 2 field is not specified clearly in this case. This register chooses between MAC ID of the STA or BSSID of the network.
0: BSSID
1: MAC ID</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_TCR_CRC</name>
              <description>Append 32-bit Cyclic Redundancy Check. This bit indicates the existence of a CRC32 appended to a packet.
1: No CRC32 appended
0: A CRC32 is appended</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_TCR_PWRMGT_CTL</name>
              <description>If this bit is set to 1, MAC will overwrite power bit of frame control according to PWR_ST. (only for data frame)</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_TCR_PWRMGT_VAL</name>
              <description>MAC will overwrite power bit of frame control according to PWR_ST.(only for data frame)</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_TCR_UPD_TIMIE</name>
              <description>when set to 1, enable hw to update beacon's time field</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_TCR_UPD_HGQMD</name>
              <description>when set to 1, enable HGQ  set moredata bit in Frame control field</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_TCR_VHTSIGA1_TXPS</name>
              <description>This bit controls TXOP_PS_NOT_ALLOWED bit value of VHT-SIG-A1 field in TX VHT packets
1: TXOP_PS_NOT_ALLOWED is set to 1
0: TXOP_PS_NOT_ALLOWED is set to 0</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_TCR_PADSEL</name>
              <description>AMPDU Padding pattern selection
0: 32-bit Zero padding, 
1: Zero length delimiter.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_TCR_DISGCLK</name>
              <description>when set to 1,disable MACTX clock gating control.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RCR</name>
          <addressOffset>0x00000608</addressOffset>
          <size>32</size>
          <description>Receive Configuration Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_APP_FCS</name>
              <description>When set, wmac RX will append FCS after payload.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_APP_MIC</name>
              <description>When this bit is set to 1, MACRX will retain the MIC at the bottom of the packet. Otherwise, MIC will be removed and reported the status in RXDESC. When a MPDU is encrypted with TKIP without MIC, MACRX will ignore this option, that is, MIC must be remained in back of the plain text.</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_APP_ICV</name>
              <description>When this bit is set to 1, MACRX will retain the ICV at the bottom of the packet. Otherwise, MIC will be removed and reported the status in RXDESC.</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_APP_PHYSTS</name>
              <description>Append RXFF0 PHY Status Enable
When this bit is set, then PHY Status is appended before RX packet in RXFF. When this bit is set, the RX_DRV_INFO_SZ shall be set to include PHY Status report.</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_APP_BASSN</name>
              <description>Append SSN of previous TXBA Enable
When this bit is set, then SSN of previous TXBA is appended as after original RXDESC as the 4-th DW of RXDESC.</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_VHT_DACK</name>
              <description>This bit to control response type for vht single mpdu data packet.
1: ACK as response
0: BA as response</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TCPOFLD_EN</name>
              <description>When set,Enable TCP checksum offload</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ENMBID</name>
              <description>Enable Multiple Bssid.
1: Enable. Only response ACK to the packets whose DID(A1) matching to the addresses in the MBSSID CAM Entries.
0: Disable.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LSIGEN</name>
              <description>Enable LSIG TXOP Protection function.
1: Enable. Search KEYCAM for each rx packet to check if LSIGEN bit is set. If LSIGEN is set, then sender support LSIG TXOP protection and we need send response with LSIG TXOP protection
0: Disable</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MFBEN</name>
              <description>Enable immediate MCS Feedback function
1: Enable. When Rx packet with MRQ = 1"b1, then search KEYCAM to find sender"s MCS Feedback function and send response
0: Disable</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DISCHKPPDLLEN</name>
              <description>When set,do not check PPDU while the PPDU length is smaller than 14 byte.</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PKTCTL_DLKEN</name>
              <description>When set,while rx path dead lock occurs, reset rx path</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DISGCLK</name>
              <description>When set,disable macrx clock gating control</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TIMPSR_EN</name>
              <description>When set, enable RX Beacon TIM Parser</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BCMDINT_EN</name>
              <description>Broadcast data packet interrupt enable. When this bit is set, this bit is auto
clear by MAC. As long as a data type broadcast packet is received, this bit
will be set.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_UCMDINT_EN</name>
              <description>Unicast data packet with FC.MD = 1 interrupt enable. When this bit is set, this bit is auto clear by MAC. As long as a data type unicast packet is received, this bit will be set.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXSK_PERPKT</name>
              <description>Executing key search per MPDU</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HTCBFMC</name>
              <description>1: HTC -&gt; MFC
0: MFC-&gt; HTC</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CHK_PREVTXA2</name>
              <description>When set,enable check rxa1 with txa2.</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ACK_CBSSID</name>
              <description>The field effects behavior of BA/ACK frame.                                                                                       0:Only A1 match to send BA/ACK frame.                                                                                                1:A1 match and satisfy BSSID condition(if BIT_CBSSID_DATA = 1) will send BA/ACK frame. If BIT_CBSSID_DATA = 0, hardware send BA/ACK frame decided by A1 match condition.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CHKTA_MGNT</name>
              <description>Check Transmitter_BCN
When set to 1, MAC will check the Transmitter Address (A2) of RX beacon or Probe response to determine if this packet belongs to this Transmitter Address (Address 2) . Both in  Infrastructure mode and  Ad-hoc mode.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DISDECNMYPKT</name>
              <description>This bit determines whether hw need to do decryption.
1: If A1 match or broadcast, do decryption.
0: Do decryption.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_AICV</name>
              <description>Accept Integrity Check Value Error packets. This bit determines whether packets with ICV errors will be accepted or rejected.
1: Accept
0: Reject</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ACRC32</name>
              <description>Accept CRC32 Error packets.
When set to 1, packets with CRC32 errors will be accepted. When set to 0,
packets with CRC32 errors will be rejected.
1: Accept
0: Reject</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CBSSID_MGNT</name>
              <description>Check port0 BSSID_BCN
When set to 1, MAC will check the BSSID of RX management type frame to determine if this packet belongs to this BSSID.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CBSSID_DATA</name>
              <description>Check port0 BSSID_DATA, To DS, From DS Match Packet.
When set to 1, MAC will check the Rx data type frame"s BSSID, To DS,
and From DS fields, to determine if it is set to Link OK in an Infrastructure
or Ad hoc network. Note this setting is independent of nettype. Driver must
set this bit in ad hoc mode and client mode.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_APWRMGT</name>
              <description>Accept Power Management Packet.
This bit determines whether the RTL8192D will accept or reject packets
with the power management bit set.
1: Accept
0: Reject</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ADD3</name>
              <description>Accept Address 3 Match Packets.
Set this bit to 1 to accept broadcast/multicast data type frames that Address
3 matching RTL8190"s MAC address. This bit is valid only when NETYPE
(bit 3-2, MSR) is set to Link OK on an Infrastructure network.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_AB</name>
              <description>Accept Broadcast packets.
This bit determines whether broadcast packets will be accepted or rejected.
1: Accept
0: Reject</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_AM</name>
              <description>Accept Multicast packets.
This bit determines whether multicast packets will be accepted or rejected.
1: Accept
0: Reject</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_APM</name>
              <description>Accept Physical Match packets.
This bit determines whether physical match packets will be accepted or
rejected.
1: Accept
0: Reject</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_AAP</name>
              <description>Accept Destination Address packets.
This bit determines whether packets with a destination address will be
accepted or rejected. 
1: Accept
0: Reject</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RXPKT_CR</name>
          <addressOffset>0x0000060C</addressOffset>
          <size>32</size>
          <description>RX Packet Control Register</description>
          <resetValue>0x04000410</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_APP_PHYSTS_PER_SUBMPDU</name>
              <description>When this bit is set to 1,append phy status for each mpdu if phy status is valid. Otherwise,append phy status for each ppdu.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_APP_MH_SHIFT_VAL</name>
              <description>When this bit is set to 1,append MAC header shift value in rx descriptor,otherwise, not append</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_ENSHIFT</name>
              <description>MAC header shift function enable signal in MACRX</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RX_DRVINFO_SZ</name>
              <description>RX DESC Driver Info Size: For RXPKTBUF layout, this field indicates the offset starting from the end of RXDESC to the beginning of RX packet. The unit is 8-byte. This value will be copied to DRV_INFO_SIZE field in RXDESC.</description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RX_DLK_TIME</name>
              <description>macrx dead lock timer timeout value (unit in 2us). As CCA is deasserted and no RXD is received but macrx still waits coming RXD, the deadlock timer will be enabled in this case</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPKTLMT</name>
              <description>RX PKT Upper Limit. The unit is 512 bytes. When "0", no RX limit is forced.</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MACID</name>
          <addressOffset>0x00000610</addressOffset>
          <size>32</size>
          <description>MAC ID Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MACID_V1</name>
              <description>MAC Identification Number Register BIT[31:0]</description>
              <bitRange>[31:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MACID_H</name>
          <addressOffset>0x00000614</addressOffset>
          <size>32</size>
          <description>MAC ID Register</description>
          <resetValue>0x01230000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RELAY_MODE</name>
              <description>when set, means relay mesh is eable and must enable address cam for rx</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SUP_ADDR3_EN</name>
              <description>when set, rx filter only check supper address3 and fcs</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MACRX_RESET</name>
              <description>when set, generate one pulse and reset macrx</description>
              <bitRange>[25:25]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_WLAN_RX_REQ_SIFS_CLR</name>
              <description>when set, enable SIFS reach clear wlan_rx_req</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CHKBSSID_MGNT_P1</name>
              <description>when set, enable check port1 management frame bssid</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CHKBSSID_DATA_P1</name>
              <description>when set, enable check port1 data frame bssid</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_AP_BSSID_FIT_UC</name>
              <description>When set1,bssid fit when AP port0 rx unciast data packet</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_PORT1</name>
              <description>When set1,enable PORT1</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_PORT0</name>
              <description>When set1,enable PORT0</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MACID_H</name>
              <description>MAC Identification Number Register BIT[47:32]</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BSSID</name>
          <addressOffset>0x00000618</addressOffset>
          <size>32</size>
          <description>BSSID Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BSSID_V1</name>
              <description>Basic Station Set Identification BIT[31:0]</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BSSID_H</name>
          <addressOffset>0x0000061C</addressOffset>
          <size>32</size>
          <description>BSSID Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BSSID_H</name>
              <description>Basic Station Set Identification BIT[47:32]</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MAR</name>
          <addressOffset>0x00000620</addressOffset>
          <size>32</size>
          <description>Multicast Address Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MAR_V1</name>
              <description>Multicast Address Register BIT[31:0]. The value of this register is written by the driver to specify the type of multicast address supported by RTL8192D. The value is created by a hashed calculation that is also implemented by the hardware for multicast address filtering.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MAR_H</name>
          <addressOffset>0x00000624</addressOffset>
          <size>32</size>
          <description>Multicast Address Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MAR_H</name>
              <description>Multicast Address Register BIT[63:32].The value of this register is written by the driver to specify the type of multicast address supported by RTL8192D. The value is created by a hashed calculation that is also implemented by the hardware for multicast address filtering.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MBIDCAMCFG_1</name>
          <addressOffset>0x00000628</addressOffset>
          <size>32</size>
          <description>MBSSID CAM Configuration Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MBIDCAM_WDATA_L</name>
              <description>BSSID[31:0]</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MBIDCAM_CFG</name>
          <addressOffset>0x0000062C</addressOffset>
          <size>32</size>
          <description>MBSSID CAM Configuration Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MBIDCAM_POLL</name>
              <description>Pooling bit.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_MBIDCAM_WT_EN</name>
              <description>Write Enable.</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MBIDCAM_DA_EN</name>
              <description>CAM Direct Acess Enable</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MBIDCAM_ADDR_V1</name>
              <description>CAM Address</description>
              <bitRange>[28:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MBIDCAM_VALID</name>
              <description>CAM Valid bit.</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LSIC_TXOP_EN</name>
              <description>LSIG TXOP enable</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTS_EN</name>
              <description>Dual CTS/CFE enable</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MBIDCAM_RWDATA_H</name>
              <description>BSSID[47:32]</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TCR_TSFT_OFS_AND_UDFL_CTL</name>
          <addressOffset>0x00000630</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x08840000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_ZLD_NUM</name>
              <description>Fetch zero length delimiter number(unit : 4bytes) when mactx underflow</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_UDF_THSD_V1</name>
              <description>BIT_UDF_THSD[7]=1,enable underflow recovery;r_UDF_THSD[7]=0,disable underflow recovery;
BIT_UDF_THSD[6:0]: when mac_wrptr - PHY_rdptr is less than this value, set underflow;</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_UDF_THSD_VALUE</name>
              <description>Underflow threshold</description>
              <bitRange>[22:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_TCR_TSFT_OFS</name>
              <description>BIT_WMAC_TCR_TSFT_OFS[7:0] is for cck stamp time offset; 
BIT_WMAC_TCR_TSFT_OFS[15:8] is for other rate time offset;</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_STMP_THSD</name>
          <addressOffset>0x00000634</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000002</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_WMAC_TXTIMEOUT</name>
              <description>BIT_WMAC_TXTIMEOUT[7]=1: enable mac tx timeout function;r_WMAC_TXTIMEOUT[7]=0, disable mac tx timeout function;
BIT_WMAC_TXTIMEOUT[6:0]: timeout threshold</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_STMP_THSD</name>
              <description>when PHY_rdptr is greater than this value, then latch STMP value from TSFT</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_USTIME_EDCA</name>
          <addressOffset>0x00000638</addressOffset>
          <size>32</size>
          <description>US Time Tuning for EDCA Register</description>
          <resetValue>0x100A1414</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_SPEC_SIFS_OFDM</name>
              <description>The spec SIFS value for duration calculation</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SPEC_SIFS_CCK</name>
              <description>The spec SIFS value for duration calculation</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ACKTO_CCK</name>
              <description>This register sets the Ack time out value after Tx unicast packet with CCK rate. It is in units of us.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_USTIME_EDCA</name>
              <description>Sets the microsecond time unit used by MAC EDCA clock.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RESP_SIFS</name>
          <addressOffset>0x0000063C</addressOffset>
          <size>32</size>
          <description>Response SIFS for CCK_OFDM Register</description>
          <resetValue>0x0E0E0A0A</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_R2T_SIFS_OFDM</name>
              <description>This register sets the SIFS time required for any immediate response for
example Data-Ack. It is in unit of us.</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_T2T_SIFS_OFDM</name>
              <description>This register sets the SIFS time required for consecutive TX events for
example CTS-Data, or broadcast bursting. It is in unit of us.</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_R2T_SIFS_CCK</name>
              <description>This register sets the SIFS time required for any immediate response for
example Data-Ack. It is in unit of us.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_T2T_SIFS_CCK</name>
              <description>This register sets the SIFS time required for consecutive TX events for
example CTS-Data, or broadcast bursting. It is in unit of us.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ACKTO</name>
          <addressOffset>0x00000640</addressOffset>
          <size>32</size>
          <description>ACK Timeout Register</description>
          <resetValue>0x013A7E2D</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_EIFS</name>
              <description>This register sets the EIFS value mentioned in 802.11 specification. It is in
units of us. To receive 1Mbps ACK frame, EIFS = SIFS + 144us (preamble
length) + 48us (PLCP header length) + 112us (14 bytes of data) = 314us.</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTS2TO</name>
              <description>This register sets the CTS2 time out value after CTS1 in Dual CTS sequence. It is in units of us.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ACKTO</name>
              <description>This register sets the Ack time out value after Tx unicast packet. It is in units of us.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADDRCAM_CTL</name>
          <addressOffset>0x00000644</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0000001B</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_CCA_IDUNMATCH_CNT</name>
              <description>macid no match counter for mpdu</description>
              <bitRange>[31:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_IDUNMATCH_CN_CLR</name>
              <description>when set, generate one pulse and reset cca_idunmatch_cnt</description>
              <bitRange>[6:6]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_MACID_STATIC_SEL</name>
              <description>when set, statistic only A1 match packet;otherwise statistic A1 match and my bc/mc packet for macid_match_no_fcs</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_ADDRCAM</name>
              <description>when set, disable address cam, filter follow old base</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ADDRCAM_NUM</name>
              <description>rx address cam number for rx filter, the max number is 12</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TXOPOWNER_L</name>
          <addressOffset>0x00000648</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00080010</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_txopowner_addr_l</name>
              <description>txopowner mac address Register BIT[31:0]</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TXOPOWNER_H</name>
          <addressOffset>0x0000064C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x000000FF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RESP_HTC_EN</name>
              <description>Enable responder response with HTC field when receiving pkt with HTC field</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txopowner_addr_h</name>
              <description>txopowner mac address Register BIT[47:32]</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RXNAV_CTRL</name>
          <addressOffset>0x00000650</addressOffset>
          <size>32</size>
          <description>RXNAV Control Register</description>
          <resetValue>0x00000426</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_NAV_UPBDY</name>
              <description>When NAV update is beyond this value, then NAV update is aborted. When this field is 0x00, NAV_UPPER function is disable. The unit is 128us.</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RxMyRTS_NAV</name>
              <description>RX my RTS NAV. As rx my unicast RTS and RxMyRTS_NAV is not equal to zero, then rx NAV is set to wait response transition time and RxMyRTS_NAV to avoid contention with the TXOP originator. If RxMyRTS_NAV is equal to zero, this mechanism is disabled</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RTS_RST_DUR</name>
              <description>RTS NAV Reset Time. This is the value in us, not including the time of CTS frame, to reset the NAV set by an RTS frame if no PHY indication occurred during this time. Refer to 802.11 1999 Section 9.2.5.4 for detailed description.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BACAMCMD</name>
          <addressOffset>0x00000654</addressOffset>
          <size>32</size>
          <description>Block ACK CAM Command Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BACAM_POLL</name>
              <description>Polling bit BA CAM</description>
              <bitRange>[31:31]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_BACAM_RST</name>
              <description>Set 1 to reset BA CAM. Hardware will set the invalid bit for all entries. After reset is finished this bit is reset to 0.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BACAM_RW</name>
              <description>Set 1 = Write, set 0 = Read</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXSBMPMOD</name>
              <description>Bit[15]: if macrx_dma idle, grant txsbmp_req
Bit[14]: if macrx is idle, grant txsbmp_req
00: If FSM is idle, grant txsbmp_req
01: If FSM and mac rx is idle, grant txsbmp_req
10: If FSM and macrx_dma is idle, grant txsbmp_req
11: if FSM, macrx and macrx_dma is idle, grant txsbmp_req</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXBACAM_DA_EN</name>
              <description>CAM Direct Acess enable</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_BITMAP_WINDOW_SEL</name>
              <description>1:maintain 32bit bitmap(63:32=0)
0:matain 64bit bitmap</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BACAM_AD</name>
              <description>BA CAM address. Memory is double-word access.</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BACAM_WD</name>
          <addressOffset>0x00000658</addressOffset>
          <size>32</size>
          <description>Block ACK CAM Content Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BA_CONTENT_L</name>
              <description>Used for CAM content read and write access register. Because BA CAM is 64 bit access, the double word (32-bit) responds to the lower 32 bits of CAM content.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BACAM_WD_H</name>
          <addressOffset>0x0000065C</addressOffset>
          <size>32</size>
          <description>Block ACK CAM Content Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BA_CONTENT_H</name>
              <description>Used for CAM content read and write access register. Because BA CAM is 64 bit access, the double word (32-bit) responds to the upper 32 bits of CAM content.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_LBK_DLY</name>
          <addressOffset>0x00000660</addressOffset>
          <size>32</size>
          <description>Loopback Delay Register</description>
          <resetValue>0x00000010</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BITMAP_FLAG_VO</name>
              <description>When BIT_BITMAP_VO = 1, 
HW will check received packet's sequence number by BIT_BITMAP_CONDITION, and clear the bit after occur one time which received the correct sequence number.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BITMAP_FLAG_VI</name>
              <description>When BIT_BITMAP_VI = 1, 
HW will check received packet's sequence number by BIT_BITMAP_CONDITION, and clear the bit after occur one time which received the correct sequence number.</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BITMAP_FLAG_BE</name>
              <description>When BIT_BITMAP_BE = 1, 
HW will check received packet's sequence number by BIT_BITMAP_CONDITION, and clear the bit after occur one time which received the correct sequence number.</description>
              <bitRange>[29:29]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BITMAP_FLAG_BK</name>
              <description>When BIT_BITMAP_BK = 1, 
HW will check received packet's sequence number by BIT_BITMAP_CONDITION, and clear the bit after occur one time which received the correct sequence number.</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BITMAP_CONDITION</name>
              <description>ADDBA condition:
0: HW start sequence - 64.
1: HW start sequence - 128.
2: HW start sequence - 256.
3: HW start sequence - 512.</description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BITMAP_SSNBK_COUNTER_CLR</name>
              <description>Clear BIT_BITMAP_SSNBK_COUNTER.</description>
              <bitRange>[25:25]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_BITMAP_FORCE</name>
              <description>Under the BIT_BITMAP_EN = 1 condition.
1: Rx's packet always checks sequence number by BIT_BITMAP_CONDITION.
0: Disable</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPKT_TYPE</name>
              <description>The type and subtype field of frame control of rx packet</description>
              <bitRange>[23:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_TXACT_IND</name>
              <description>Indicate MAC/PHY is busy to tx packet</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RXACT_IND</name>
              <description>Indicate MAC is busy to rx packet</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BITMAP_SSNBK_COUNTER</name>
              <description>Count the sequence number out of BITMAP condition (0x663[3:2]).</description>
              <bitRange>[15:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BITMAP_EN</name>
              <description>1:Enable of counter and WMAC_BITMAP_CTL(0x663)
0:Disable function</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BACAM_RPMEN</name>
              <description>1:Enable repeat mode
0:Disable function</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LBK_DLY</name>
              <description>Loopback Delay. In unit of 'us'; indicates the delay after which the tdrdy_mac starts. In wep/tkip mode,
the delay should be larger than 15, because the initial delay of security is about 1320 cycles, approximately to 16.5 us.</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RXERR_RPT</name>
          <addressOffset>0x00000664</addressOffset>
          <size>32</size>
          <description>RX Error Report Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RXERR_RPT_SEL_V1_3_0</name>
              <description>Rx packet counter report selection bit3~bit0
RXERR_RPT_SEL[4:0]: Counter description
5'd0: OFDM MPDU OK counter
5'd1: OFDM MPDU Fail counter
5'd2: OFDM False Alarm counter
5'd3: CCK MPDU OK counter
5'd4: CCK MPDU Fail counter
5'd5: CCK False Alarm counter;
5'd6: HT MPDU OK counter
5'd7: HT MPDU Fail counter
5'd8: HT PPDU counter
5'd9: HT False Alarm counter
5'd10: Rx full drop packet counter
5'd11: RSVD
5'd12: user define 0 counter
5'd13: user define 1 counter
5'd14: user define 2 counter
5'd15: user define 3 counter
5'd16: VHT MPDU OK counter
5'd17: VHT MPDU Fail counter
5'd18: VHT PPDU counter
5'd19: VHT False Alarm counter
5'd23: invalid_pkt counter</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXERR_RPT_RST</name>
              <description>Write "one" to set the counter to zero.</description>
              <bitRange>[27:27]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_RXERR_RPT_SEL_V1_4</name>
              <description>Rx packet counter report selection bit4</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_UD_Select_BSSID_2_1</name>
              <description>{25,24,22} Select BSSID:
3'b0: Port 0
3'b1: Port 1
3'b2: Port 2
3'b3: Port 3
3'b4: Port 4</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_W1S</name>
              <description>Write One Setting, it is only valid for RXERR_RPT_SEL (4'd12 ~ 4'd15)</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_UD_Select_BSSID</name>
              <description>Select BSSID:
0: Port 0
1: Port 1</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_UD_Sub_Type</name>
              <description>User defined: SubType</description>
              <bitRange>[21:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_UD_Type</name>
              <description>User defined: Type</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RPT_COUNTER</name>
              <description>The reported counter value corresponding to Report type selected.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WMAC_TRXPTCL_CTL</name>
          <addressOffset>0x00000668</addressOffset>
          <size>32</size>
          <description>WMAC TX/RX Protocol Control Register</description>
          <resetValue>0x0E201000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BLK_EDCA_BBSLP</name>
              <description>Block EDCA Tx while BB in sleep state</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BLK_EDCA_BBSBY</name>
              <description>Block EDCA Tx while BB in standby state</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_STOP_UPDNAV</name>
              <description>When this bit set 1. If RX packet with EDCA_REF is low, not update NAV.</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RST_EDCA_ACKTO</name>
              <description>While in ACKTO duration, reset scheduler top to TX</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RST_EDCA_EIFS</name>
              <description>While in EIFS duration, reset scheduler top to TX</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PLCPCHK_RST_EIFS</name>
              <description>Reset EIFS counter while receive correct PLCP.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CCA_RST_EIFS</name>
              <description>Reset EIFS counter while CCA on</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_UPD_MYRXPKTNAV</name>
              <description>Do not update NAV, while receiving my packet.</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EARLY_TXBA</name>
              <description>While phyrxon down, mac_rxactive on. Ignore mac rx busy, respond BA immediately.</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RESP_CHNBUSY</name>
              <description>Define channel busy condition in responder to determine RX busy
1: PHYRXON (OFDM_VBON/CCKCCA)
0: CCA (CCKCCA/OFDMCCA)</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RESP_DCTS_EN</name>
              <description>Enable responder send dual CTS for responding Rx RTS</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RESP_DCFE_EN</name>
              <description>Enable responder send dual CF-END for responding RX CF-END</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RESP_SPLCPEN</name>
              <description>Enable responder send SPLCP CCK response for acknowledging Rx SPLCP CCK
packet</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RESP_SGIEN</name>
              <description>Enable responder send SGI HT-OFDM response for acknowledging Rx SGI
HT-OFDM packet</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RESP_LDPC_EN</name>
              <description>if rxpkt with ldpc, response pkt with ldpc</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_RESP_ACKINCCA</name>
              <description>Disable to response ack when cca goes high after SIFS</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_RESP_CTSINCCA</name>
              <description>8812
Disable to response cts when cca goes high after SIFS</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SECOND_CCA_TIMER</name>
              <description>8812
The maximum time interval in us that secondary cca is pull high
before primary cca When receive duplicated rts. When station
response with cts, if the time that secondary cca pull high before
primary cca is larger than this threshold, then secondary cca is judged
to be interference, otherwise it is judged to the received RTS frame.
default: 3"b0</description>
              <bitRange>[12:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EARLY_TXACK_RXWEPTKIP</name>
              <description>While phyrxon down, mac_rxactive on. Ignore mac rx busy, respond ACK when receive wep/tkip</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RFMOD</name>
              <description>8812
RF_BW indication, Used to decide response duplicated cts txsc
2"b00: 20M, 2"b01: 40M, 2"b10: 80M
e.g: when RF_BW= 80M, duplicated cts BW= 40M, txsc = 9 or 10
when RF_BW = 40M, duplicated cts BW = 40M, txsc = 0</description>
              <bitRange>[8:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RESP_CTS_DYNBW_SEL</name>
              <description>8812 Response cts bw selection when dynamic rts frame is received
00: current maximum bw indicated by secondary cca
01: bw fall back by one level based on bw in 2"b00 if not reach 20M
10: bw fall back by one level based on bw in 2"b01 if not reach 20M
11: bw fall back by one level based on bw in 2"b10 if not reach 20M
e.g, current maximum bw indicated by secondary_cca is 80M, when set to 2"b00, the response cts bw is 80M, when set to 2"b01, cts bw is 40M, when set to 2"b10 or 2"b11 , cts bw is 20M</description>
              <bitRange>[6:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DLY_TX_WAIT_RXANTSEL</name>
              <description>8188E/8812
In some Cases, the phy status may be received too late to be used in the response
frame. Enable this bit to postpone the tx of response frame until the phy status is
obtained. Otherwise, If the phy status unavailable for its delay, The IOREG value of
0x06D8[6] will be used as before.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXRESP_BY_RXANTSEL</name>
              <description>8188E/8812
Enable responder send the response frame with the antenna selection information
which from the phy status of the previous rx frame.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXACK_WITH_A1MATCH</name>
              <description>SET TO 1 :check every bit of a1 of rxpkt when need to response</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ORIG_DCTS_CHK</name>
              <description>Txok condition for dual CTS frame exchange:
00: Either one Rx ok
01: 1st one Rx ok
10: 2nd one Rx ok
11: both Rx ok</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WMAC_TRXPTCL_CTL_H</name>
          <addressOffset>0x0000066C</addressOffset>
          <size>32</size>
          <description>WMAC TX/RX Protocol Control Register Higher Bit</description>
          <resetValue>0x00042007</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_ACKBA_TYPSEL</name>
              <description>Determine response type for RX BA, and the definition as the bellow
0: NAV
1: Send ACK
ACKBA_TYPESEL[0]: used for Basic BA
ACKBA_TYPESEL[1]: used for Compression BA
ACKBA_TYPESEL[2]: RSVD
ACKBA_TYPESEL[3]: used for MTID BA</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ACKBA_ACKPCHK</name>
              <description>If set 1, then check ACK Policy of BA control field to determine whether send response or not. When this bit set to 1 and
a. ACK Policy of Rx BA control field is 0, then response type is controlled by ACLBA_TYPESEL.
b. ACK Policy of Rx BA control field is 1, then don't send response
If set 0, then ignore the ACK policy of RX BA control field and response type controlled by ACKBA_TYPESEL
ACKBA_ACKPCHK[0]: used for Basic BA
ACKBA_ACKPCHK[1]: used for Compression BA
ACKBA_ACKPCHK[2]: RSVD
ACKBA_ACKPCHK[3]: used for MTID BA</description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ACKBAR_TYPESEL</name>
              <description>Determine response type for RX BAR, and the definition as the bellow
00: NAV
01: Send BA
10: Send ACK
ACKBAR_TYPESEL[1:0]: used for Basic BAR
ACKBAR_TYPESEL[3:2]: used for Compression BAR
ACKBAR_TYPESEL[5:4]: RSVD
ACKBAR_TYPESEL[7:6]: used for MTID BAR</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ACKBAR_ACKPCHK</name>
              <description>If set 1, then check ACK Policy of BAR control field to determine whether send response or not. When this bit set to 1 and
a. ACK Policy of Rx BAR control field is 0, then response type is controlled by ACLBAR_TYPESEL.
b. ACK Policy of Rx BAR control field is 1, then don't send response
If set 0, then ignore the ACK policy of RX BAR control field and response type
controlled by ACKBA_TYPESEL
ACKBA_ACKPCHK[0]: used for Basic BAR
ACKBA_ACKPCHK[1]: used for Compression BAR
ACKBA_ACKPCHK[2]: RSVD
ACKBA_ACKPCHK[3]: used for MTID BAR</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WEPTKIP_USE_ELY_FCS</name>
              <description>when rx is wep/tkip,use fcs from rxfifo to start response flow</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXBA_IGNOREA2_V1</name>
              <description>Disable check A2 field of RX BA</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_SAVE_ALL_TXOPADDR_V1</name>
              <description></description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_TXCTS_TO_TXOPOWNER_INRXNAV_V1</name>
              <description>together with bit41, implement 802.11ac txop owner function</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_TXBA_AMPDUFCSERR_V1</name>
              <description>Disable to send BA for responding RX AMPDU with FCS error subframe</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_TXBA_RXBARINFULL_V1</name>
              <description>Disable to send BA for responding RX control wrapper BAR dropped by rxpkbuffer full</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_TXCFE_INFULL_V1</name>
              <description>Disable to send CF-END for responding RX control wrapper CF-END dropped by rxpktbuffer full. This bit is valid when RESP_DCFE_EN is set to 1</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_TXCTS_INFULL_V1</name>
              <description>Disable to send CTS for responding RX control wrapper RTS dropped by rxpktbuffer full</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_TXACKBA_INTX_RDG_V1</name>
              <description>If this bit is set, then MAC will Tx ACK/BA to respond  previous rx my unicast packets send by another STA during TX RDG</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_TXACKBA_INTXOP_V1</name>
              <description>If this bit is set, then MAC will Tx ACK/BA to respond previous rx my unitcast packets send by another STA during my TXOP</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_TXCTS_INRXNAV_V1</name>
              <description>Enable to send CTS in Rx NAV</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_TXCTS_INTXOP_V1</name>
              <description>Enable to send CTS for responding RX RTS during our TXOP period</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEYCAMCMD</name>
          <addressOffset>0x00000670</addressOffset>
          <size>32</size>
          <description>CAM Command Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_KEYCAM_POLLING</name>
              <description>Security CAM Polling</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_KEYCAM_CLEAR</name>
              <description>Set to 1 to clear all valid bits in CAM. After reset will self clear to 0.</description>
              <bitRange>[30:30]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_MFBCAM_CLEAR</name>
              <description>Write 1 to clear all MFB value in CAM to 7'h7F. After reset will self clear to 0</description>
              <bitRange>[29:29]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_KEYCAM_DA_EN</name>
              <description>Security CAM Direct Acess Enable</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SECCAM_WE</name>
              <description>Security CAM Write Enable</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_KEYCAM_AD</name>
              <description>Security CAM Address Offset
CAM address is organized into 8 double-words/entry.</description>
              <bitRange>[9:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEYCAM_WD</name>
          <addressOffset>0x00000674</addressOffset>
          <size>32</size>
          <description>Security CAM Content Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_KEYCAM_WDATA</name>
              <description>Security CAM Write Content</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CAMREAD</name>
          <addressOffset>0x00000678</addressOffset>
          <size>32</size>
          <description>CAM Read Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_CAMR_DATA</name>
              <description>Security CAM Read Content</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CAMDBG</name>
          <addressOffset>0x0000067C</addressOffset>
          <size>32</size>
          <description>CAM Debug Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_KEYCAM_DBGSEL</name>
              <description>Select TX/RX CAM Information.
Set to 1 to retrieve latest Tx search result.
Set to 0 to retrieve latest Rx search result.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SEC_KEYFOUND_V1</name>
              <description>Security Key Found in CAM
0: key not found
1: key found</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_CAMDBG_SEC_TYPE_V1</name>
              <description>Found security key type</description>
              <bitRange>[14:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_EXT_SECTYPE</name>
              <description>Found security key ext_sectype</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>dummy</name>
              <description>dummy</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CAMDBG_MIC_KEY_IDX_V3</name>
              <description>Mic KEY INDEX</description>
              <bitRange>[9:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_CAMDBG_SEC_KEY_IDX_V2</name>
              <description>Security KEY INDEX</description>
              <bitRange>[4:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SECCFG</name>
          <addressOffset>0x00000680</addressOffset>
          <size>32</size>
          <description>Security Configuration Register</description>
          <resetValue>0x0000000C</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RXFILTER_ACTION_1</name>
              <description>Configured by FW, Refer to 0x68E[10] to decide accepting this frame or not</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXFILTER_CATEGORY_1</name>
              <description>Configured by FW, Refer to 0x68E[10] to decide accepting this frame or not</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_GCLK_WAPI</name>
              <description>Disable gated clock control for WAPI engine</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_GCLK_AES</name>
              <description>Disable gated clock control for AES engine.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_GCLK_TKIP</name>
              <description>not used</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_AES_SEL_QC_1</name>
              <description>1: use QC[7] to compute mic
0: not use QC[7] to compute mic</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_AES_SEL_QC_0</name>
              <description>1:use QC[7] to compute ctr
0: not use QC[7] to compute ctr</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_CKECK_BMC</name>
              <description>If this bit is set to 1, key search engine need to check if broadcast/multicast bit matched.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CHK_KEYID</name>
              <description>If this bit is set to 1, key search engine need to check if key ID matched. If this bit is
set to 0, then key ID table must be filled with 2"b00.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXBCUSEDK</name>
              <description>Force RX Broadcast packets Use Default Key
If this bit is set to 1, use default key for RX key search when received packet is broadcast and multicast.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXBCUSEDK</name>
              <description>Force Tx Broadcast packets Use Default Key
If this bit is set to 1, use default key for TX key search when transmitted packet is broadcast and multicast.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_NOSKMC</name>
              <description>No Key Search for Multicast
Setting 1 to disable key search for multicast frames. Used in MBSSID AP mode. Software should manage security encryption and decryption.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SKBYA2</name>
              <description>Search Key by A2
Setting 1 to search security CAM by address 2 for TX and search CAM by address 1 for RX. Setting 0 to search security CAM by address 1 for TX and search CAM by address 2 for RX. Used in MBSSID client mode.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXDEC</name>
              <description>Enable Rx Decryption
Setting 1 to enable Rx hardware decryption.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXENC</name>
              <description>Enable Tx Encryption
Setting to 1 to enable Tx hardware encryption.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXUHUSEDK</name>
              <description>Force RX Unicast Use Default Key
If this bit is set to 1, use default key for RX key search when pairwise key is not found.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXUHUSEDK</name>
              <description>Force Tx Unicast Use Default Key
If this bit is set to 1, use default key for TX key search when pairwise key is not found.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADDRESS_TABLE0</name>
          <addressOffset>0x00000684</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_ADDR_TABLE_USER_REG0_L</name>
              <description>address table user defined address0, low 32 bit</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADDRESS_TABLE1</name>
          <addressOffset>0x00000688</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_ADDR_TABLE_USER_REG1_L</name>
              <description>address table user defined address1, low 16 bit</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ADDR_TABLE_USER_REG0_H</name>
              <description>address table user defined address0, high 16 bit</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADDRESS_TABLE2</name>
          <addressOffset>0x0000068C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_ADDR_TABLE_USER_REG1_H</name>
              <description>address table user defined address1, high 32 bit</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WOW_NAN_CTRL</name>
          <addressOffset>0x00000690</addressOffset>
          <size>32</size>
          <description>Wake On WLAN Control Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_WMMPS_UAPSD_TID7</name>
              <description>Disable interrupt 8051 when rx WMMPS UAPSD Qos data with TID7</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMMPS_UAPSD_TID6</name>
              <description>Disable interrupt 8051 when rx WMMPS UAPSD Qos data with TID6</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMMPS_UAPSD_TID5</name>
              <description>Disable interrupt 8051 when rx WMMPS UAPSD Qos data with TID5</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMMPS_UAPSD_TID4</name>
              <description>Disable interrupt 8051 when rx WMMPS UAPSD Qos data with TID4</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMMPS_UAPSD_TID3</name>
              <description>Disable interrupt 8051 when rx WMMPS UAPSD Qos data with TID3</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMMPS_UAPSD_TID2</name>
              <description>Disable interrupt 8051 when rx WMMPS UAPSD Qos data with TID2</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMMPS_UAPSD_TID1</name>
              <description>Disable interrupt 8051 when rx WMMPS UAPSD Qos data with TID1</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMMPS_UAPSD_TID0</name>
              <description>Disable interrupt 8051 when rx WMMPS UAPSD Qos data with TID0</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PORTSEL_PS_RX_INFO</name>
              <description>The selector for the source of PS RX information (0x692[4:0]). 
0 for port 0, 1 for clint0, 2 for clint1, 3 for clint2, 4 for clint3.</description>
              <bitRange>[23:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXCTRLIN0</name>
              <description>It is set to 1 if NIC received control frame with correct DA.</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXMGTIN0</name>
              <description>It is set to 1 if NIC received management frame with correct BSSID and DA (including unicast and BMC).</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXDATAIN2</name>
              <description>It is set to 1 if NIC received data frame with correct BSSID and DA (including unicast and BMC).</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXDATAIN1</name>
              <description>It is set to 1 if NIC received data frame with correct BSSID and DA (including unicast and BMC).</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXDATAIN0</name>
              <description>It is set to 1 if NIC received data frame with correct BSSID and DA (including unicast and BMC).</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_NAN_RX_CHKTA</name>
              <description>Enable bit for check TSF filter
When set to 1, the TSF address filter will enable.
When set to 0, the TSF address filter will disable.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_NAN_RX_CHKBSSID</name>
              <description>Check BSSID_BCN for TSF
When set to 1, MAC will check the BSSID (A3) of RX beacon or Probe
to determine if this packet  will sync TSF or not</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_NAN_RX_FILTER_EN</name>
              <description>When set to 1, the TSF address filter will enable.
When set to 0, the TSF address filter will disable.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PSF_BSSIDSEL_H</name>
              <description>Bit 1,2 of Select to check the MACID of which port for the WMAC PSF NSARP
function.
0: to check the MACID of port0;
1: to check the MACID of port1.
2: to check the MACID of port2.
3: to check the MACID of port3.
4: to check the MACID of port4.</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WOWHCI</name>
              <description>This bit is set to allow wake host as wake on wlan event occurring</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PSF_BSSIDSEL_L</name>
              <description>Bit 0 of Select to check the MACID of which port for the WMAC PSF NSARP
function.
0: to check the MACID of port0;
1: to check the MACID of port1.
2: to check the MACID of port2.
3: to check the MACID of port3.
4: to check the MACID of port4.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_UWF</name>
              <description>Unicast Packet.
1: Enable to check packet"s DA match MAC address or not.
0: Disable. (default value)</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MAGIC</name>
              <description>Magic Packet.
This bit is valid when the PMEn bit of the PMR register is set. The
RTL8192 will assert the PMEB signal to wakeup the operating system when
a Magic Packet is received.
Once the RTL8192 has been enabled for Magic Packet wakeup, it scans
incoming packets addressed to the node for a data sequence. The correct
sequence indicates to the controller that this is a Magic Packet frame. A
Magic Packet frame must also meet the basic requirements: Frame Control
+ Duration/ID + Destination address + Address 2 + Address 3 + Sequence
Control + data + CRC.
The destination address may be the node ID of the receiving station or a
multicast address, including the broadcast address.
The specific sequence consists of 16 duplications of 6 byte ID registers,
with no breaks or interrupts. This sequence can be located anywhere within
the packet, but must be preceded by a synchronization stream, 6 bytes of
FFh. The device will also accept a multicast address, as long as the 16
duplications of the IEEE address match the address of the ID registers.
If the Node ID is 11h 22h 33h 44h 55h 66h, then the magic frame"s format is
as follows:
Frame Control + Duration/ID + Destination address + Address 2 + Address
3 + Sequence Control + MISC + FF FF FF FF FF FF + MISC + 11 22 33
44 55 66 + 11 22 33 44 55 66 + 11 22 33 44 55 66 + 11 22 33 44 55 66 + 11
22 33 44 55 66 + 11 22 33 44 55 66 + 11 22 33 44 55 66 + 11 22 33 44 55
66 + 11 22 33 44 55 66 + 11 22 33 44 55 66 + 11 22 33 44 55 66 + 11 22 33
44 55 66 + 11 22 33 44 55 66 + 11 22 33 44 55 66 + 11 22 33 44 55 66 + 11
22 33 44 55 66 + MISC + CRC.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WFMSK</name>
              <description>WoW function on or off.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_LPNAV_CTRL</name>
          <addressOffset>0x00000694</addressOffset>
          <size>32</size>
          <description>Low Power NAV Control Register</description>
          <resetValue>0x000A0200</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_LPNAV_EN</name>
              <description>Low Power NAV Mode Enable. When this bit is set, enable MAC low power NAV mode</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LPNAV_EARLY</name>
              <description>When in LPNAV mode, MAC will recall BB and RF into RX idle mode. The unit is us.</description>
              <bitRange>[30:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LPNAV_THR</name>
              <description>When protected NAV in the received frame is greater than this threshold value, then MAC enters into LPNAV mode. The time unit is 16us.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WKFMCAM_CMD</name>
          <addressOffset>0x00000698</addressOffset>
          <size>32</size>
          <description>Wakeup Frame CAM Number Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_WKFMCAM_WE</name>
              <description>CAM Write Enable</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WKFMCAM_AD</name>
              <description>Entry address</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CAM_NUM</name>
              <description>CAM Entry Number</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WKFMCAM_WD</name>
          <addressOffset>0x0000069C</addressOffset>
          <size>32</size>
          <description>Wakeup Frame CAM CONTENT Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_WKFMCAM_WD</name>
              <description>CAM Write Data</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RXFLTMAP0</name>
          <addressOffset>0x000006A0</addressOffset>
          <size>32</size>
          <description>RX Filter Map Group</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_CTRLFLT15En</name>
              <description>When set, frames with type=01 and subtype=1111 are received into RXFF</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTRLFLT14En</name>
              <description>When set, frames with type=01 and subtype=1110 are received into RXFF</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTRLFLT13En</name>
              <description>When set, frames with type=01 and subtype=1101 are received into RXFF.</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTRLFLT12En</name>
              <description>When set, frames with type=01 and subtype=1100 are received into RXFF.</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTRLFLT11En</name>
              <description>When set, frames with type=01 and subtype=1011 are received into RXFF</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTRLFLT10En</name>
              <description>When set, frames with type=01 and subtype=1010 are received into RXFF.</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTRLFLT9En</name>
              <description>When set, frames with type=01 and subtype=1001 are received into RXFF</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTRLFLT8En</name>
              <description>When set, frames with type=01 and subtype=1000 are received into RXFF</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTRLFLT7En</name>
              <description>When set, frames with type=01 and subtype=0111 are received into RXFF</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTRLFLT6En</name>
              <description>When set, frames with type=01 and subtype=0110 are received into RXFF.</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTRLFLT5En</name>
              <description>When set, frames with type=01 and subtype=0101 are received into RXFF.</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTRLFLT4En</name>
              <description>When set, frames with type=01 and subtype=0100 are received into RXFF.</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTRLFLT3En</name>
              <description>When set, frames with type=01 and subtype=0011 are received into RXFF.</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTRLFLT2En</name>
              <description>When set, frames with type=01 and subtype=0010 are received into RXFF.</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTRLFLT1En</name>
              <description>When set, frames with type=01 and subtype=0001 are received into RXFF.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTRLFLT0En</name>
              <description>When set, frames with type=01 and subtype=0000 are received into RXFF.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGTFLT15En</name>
              <description>When set, frames with type=00 and subtype=1111 are received into RXFF.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGTFLT14En</name>
              <description>When set, frames with type=00 and subtype=1110 are received into RXFF.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGTFLT13En</name>
              <description>When set, frames with type=00 and subtype=1101 are received into RXFF.</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGTFLT12En</name>
              <description>When set, frames with type=00 and subtype=1100 are received into RXFF.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGTFLT11En</name>
              <description>When set, frames with type=00 and subtype=1011 are received into RXFF.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGTFLT10En</name>
              <description>When set, frames with type=00 and subtype=1010 are received into RXFF</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGTFLT9En</name>
              <description>When set, frames with type=00 and subtype=1001 are received into RXFF.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGTFLT8En</name>
              <description>When set, frames with type=00 and subtype=1000 are received into RXFF</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGTFLT7En</name>
              <description>When set, frames with type=00 and subtype=0111 are received into RXFF.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGTFLT6En</name>
              <description>When set, frames with type=00 and subtype=0110 are received into RXFF.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGTFLT5En</name>
              <description>When set, frames with type=00 and subtype=0101 are received into RXFF</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGTFLT4En</name>
              <description>When set, frames with type=00 and subtype=0100 are received into RXFF.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGTFLT3En</name>
              <description>When set, frames with type=00 and subtype=0011 are received into RXFF</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGTFLT2En</name>
              <description>When set, frames with type=00 and subtype=0010 are received into RXFF</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGTFLT1En</name>
              <description>When set, frames with type=00 and subtype=0001 are received into RXFF</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGTFLT0En</name>
              <description>When set, frames with type=00 and subtype=0000 are received into RXFF</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RXFLTMAP</name>
          <addressOffset>0x000006A4</addressOffset>
          <size>32</size>
          <description>RX Filter Map Group 1</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_DATAFLT15En</name>
              <description>When set, frames with type=10 and subtype=1111 are received into RXFF</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATAFLT14En</name>
              <description>When set, frames with type=10 and subtype=1110 are received into RXFF</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATAFLT13En</name>
              <description>When set, frames with type=10 and subtype=1101 are received into RXFF.</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATAFLT12En</name>
              <description>When set, frames with type=10 and subtype=1100 are received into RXFF.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATAFLT11En</name>
              <description>When set, frames with type=10 and subtype=1011 are received into RXFF.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATAFLT10En</name>
              <description>When set, frames with type=10 and subtype=1010 are received into RXFF.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATAFLT9En</name>
              <description>When set, frames with type=10 and subtype=1001 are received into RXFF</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATAFLT8En</name>
              <description>When set, frames with type=10 and subtype=1000 are received into RXFF</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATAFLT7En</name>
              <description>When set, frames with type=10 and subtype=0111 are received into RXFF.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATAFLT6En</name>
              <description>When set, frames with type=10 and subtype=0110 are received into RXFF</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATAFLT5En</name>
              <description>When set, frames with type=10 and subtype=0101 are received into RXFF</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATAFLT4En</name>
              <description>When set, frames with type=10 and subtype=0100 are received into RXFF.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATAFLT3En</name>
              <description>When set, frames with type=10 and subtype=0011 are received into RXFF</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATAFLT2En</name>
              <description>When set, frames with type=10 and subtype=0010 are received into RXFF.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATAFLT1En</name>
              <description>When set, frames with type=10 and subtype=0001 are received into RXFF.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATAFLT0En</name>
              <description>When set, frames with type=10 and subtype=0000 are received into RXFF.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BCN_PSR_RPT0</name>
          <addressOffset>0x000006A8</addressOffset>
          <size>32</size>
          <description>Beacon Parser Report Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_DTIM_CNT0</name>
              <description>The DTIM count field of the TIM element of Rx beacon</description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_DTIM_PERIOD0</name>
              <description>The DTIM period field of the TIM element of Rx beacon</description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HAS_MY_BC0</name>
              <description>indicate has mc/bc frame</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HAS_MY_BSSID0</name>
              <description>Indicate my non-transmitted bssid has packet</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HAS_MYAID0</name>
              <description>Indicate MACID0 AID is set to 1 in the bit map control field of the TIM element of Rx Beacon frame</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RPT_VALID0</name>
              <description>1 means tim report is vaild</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_PS_AID_0</name>
              <description>AID0 for MACID0</description>
              <bitRange>[10:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FLC_CTRL</name>
          <addressOffset>0x000006AC</addressOffset>
          <size>32</size>
          <description>FW LPS Condition PKT Counter</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FLC_RPCT_V1</name>
              <description>When write "1" to this bit, FLC_TRPC will be enabled.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FLC_MODSL</name>
              <description>1:Timer Mode
0:Counter Mode</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TORRD</name>
              <description>It specifies the time-out duration. (unit: 32 ms)</description>
              <bitRange>[29:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FLC_CMFEN</name>
              <description>Count Management Frame (1: Enable, 0:Disable)</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FLC_CCFEN</name>
              <description>Count Control Frame (1: Enable, 0:Disable)</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FLC_CDFEN</name>
              <description>Count Data Frame (1: Enable, 0:Disable)</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FLC_PKTTH</name>
              <description>Rx PKT number threshold</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FLC_RPC</name>
              <description>Number of Rx PKT in the interval which is specified by FLC_TRPC.
The Rx PKT type is specified by 0x6AE[2:0]</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RXPKTMON_CTRL</name>
          <addressOffset>0x000006B0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RXBKQPKT_SEQ</name>
              <description>The expected Rx BKQ packet index</description>
              <bitRange>[23:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RXBEQPKT_SEQ</name>
              <description>The expected Rx BEQ packet index</description>
              <bitRange>[19:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RXVIQPKT_SEQ</name>
              <description>The expected Rx VIQ packet index</description>
              <bitRange>[15:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RXVOQPKT_SEQ</name>
              <description>The expected Rx VOQ packet index</description>
              <bitRange>[11:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RXBKQPKT_ERR</name>
              <description>Indicate monitor find the Rx BKQ packet without incremental index</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RXBEQPKT_ERR</name>
              <description>Indicate monitor find the Rx BEQ packet without incremental index</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RXVIQPKT_ERR</name>
              <description>Indicate monitor find the Rx VIQ packet without incremental index</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RXVOQPKT_ERR</name>
              <description>Indicate monitor find the Rx VOQ packet without incremental index</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RXDMA_MON_EN</name>
              <description>Enable packet loss monitor function for Rx DMA. If this bit is set to 1, then MACRX append the incremental index to fragment field of sequence number field of rxmpdu restored to rxpkbuffer successfully</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPKT_MON_EN</name>
              <description>Enable packet loss monitor function for Rx packets. If this bit is set to 1, then MACRX uses fragment field of sequence number field of rxmpdu as the mpdu index and check if the index is incremental.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_STATE_MON</name>
          <addressOffset>0x000006B4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_STATE_SEL</name>
              <description>WMAC FSM selection</description>
              <bitRange>[28:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_STATE_INFO</name>
              <description>Report the other relation information about FSM</description>
              <bitRange>[15:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_CUR_STATE</name>
              <description>Indicate the FSM current state</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ERROR_EVT_CTL</name>
          <addressOffset>0x000006B8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_CSIRPT_LEN_BB_MORE_THAN_MAC</name>
              <description>Indicate MAC Rx csi rxd number overflow</description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_CSI_CHKSUM_ERROR</name>
              <description>Indicate MAC Rx csi rpt checksum error</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_MACRX_ERR_4</name>
              <description>Indicate last MPDU length of AMPDU or PPDU length is error.</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_MACRX_ERR_3</name>
              <description>Indicate rxfifo or mac phy interface fifo overflow</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_MACRX_ERR_2</name>
              <description>Indicate MAC Rx occurs internal halt event</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_MACRX_ERR_1</name>
              <description>Indicate Rx packet length &gt;= 12K bytes</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_MACRX_ERR_0</name>
              <description>Indicate MAC Rx occurs halt event</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_PRETX_ERRHDL_EN</name>
              <description>Pre tx error block enable signal</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MACTX_ERR_5</name>
              <description>Indicate no phytx timeout</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_MACTX_ERR_4</name>
              <description>Indicate pre tx error/tx plcp error</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_MACTX_ERR_3</name>
              <description>Indicate beamforming nsts error</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_MACTX_ERR_2</name>
              <description>Indicate TXD FIFO underflow when MAC Tx cmpba</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_MACTX_ERR_1</name>
              <description>Indicate TXD FIFO underflow</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_MACTX_ERR_0</name>
              <description>Indicate PHY finish TX before MAC</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SEARCH_MACID</name>
          <addressOffset>0x000006BC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x01500000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_EN_TXRPTBUF_CLK</name>
              <description>when set to 1,keep txrptbuf sram always have clock</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_INFO_INDEX_OFFSET</name>
              <description>Pre-macid information index address offset.</description>
              <bitRange>[28:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_SRCH_FIFOFULL</name>
              <description>when set to 1, when fifofull, stop macid search;</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_INFOSRCH</name>
              <description>when set to 1,disable to search information</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DISABLE_B0</name>
              <description>when set to 1,disable to check a2[0]</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_INFO_ADDR_OFFSET</name>
              <description>per-macid information address offset (Unit:8bytes).</description>
              <bitRange>[12:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BT_COEX_TABLE_V1</name>
          <addressOffset>0x000006C0</addressOffset>
          <size>32</size>
          <description>BT Coexistence Control register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_COEX_TABLE_1</name>
              <description>coexistence table, used at dual antenna &amp; out of band</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BT_COEX_TABLE2_V1</name>
          <addressOffset>0x000006C4</addressOffset>
          <size>32</size>
          <description>BTCoexistence Control register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_COEX_TABLE_2</name>
              <description>coexistence table, used at dual antenna &amp; in band or single antenna</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BT_COEX_BREAK_TABLE</name>
          <addressOffset>0x000006C8</addressOffset>
          <size>32</size>
          <description>BT Coexistence Control register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BREAK_TABLE_2</name>
              <description>Table used to break BT activity, when new WLAN request is coming and BT
is on transmitting or receiving</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BREAK_TABLE_1</name>
              <description>Table used to break WLAN activity, when new BT request is coming and
WLAN is on transmitting or receiving</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BT_COEX_TABLE_H_V1</name>
          <addressOffset>0x000006CC</addressOffset>
          <size>32</size>
          <description>BT Coexistence Control register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_PRI_MASK_RX_RESP_V1</name>
              <description>Priority Mask for RX Response Packet</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PRI_MASK_RXOFDM_V1</name>
              <description>Priority Mask for RX OFDM</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PRI_MASK_RXCCK_V1</name>
              <description>Priority Mask for RX CCK</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PRI_MASK_TXAC</name>
              <description>Priority Mask for Tx Queue</description>
              <bitRange>[27:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PRI_MASK_NAV</name>
              <description>Priority Mask for Tx NAV</description>
              <bitRange>[20:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PRI_MASK_CCK_V1</name>
              <description>Priority Mask for Tx CCK</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PRI_MASK_OFDM_V1</name>
              <description>Priority Mask for Tx OFDM</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PRI_MASK_RTY_V1</name>
              <description>Priority Mask for Tx Retry Packet</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PRI_MASK_NUM</name>
              <description>Priority Mask for Tx packet number</description>
              <bitRange>[9:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PRI_MASK_TYPE</name>
              <description>Priority Mask for Tx packet type
[98]: Rx response
[99]: Tx response
[100]: beacon</description>
              <bitRange>[5:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_OOB_V1</name>
              <description>out of band indication (0: in band ; 1 : out of band)</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ANT_SEL_V1</name>
              <description>single or dual antenna selection (0: single; 1 : dual)</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RXCMD_0</name>
          <addressOffset>0x000006D0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RXCMD_EN</name>
              <description>RXCMD function enable</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXCMD_INFO</name>
              <description>The Information is send to rxpktbuffer for host SW</description>
              <bitRange>[30:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RXCMD_1</name>
          <addressOffset>0x000006D4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RXCMD_PRD</name>
              <description>Define the period unit in us to send the RXCMD_INFO to rxpktbuffer for host SW</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RESP_TXINFO_CFG</name>
          <addressOffset>0x000006D8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0000003F</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RESP_MFB</name>
              <description>MFB information in register for response packet</description>
              <bitRange>[31:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ANTINF_SEL</name>
              <description>Antsel information for response frame in register or ctrl info
00: Antsel_en always disable, 01:Antsel_en field follow ctrl info 1X:Antsel_en always enable</description>
              <bitRange>[24:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ANTSEL_SEL</name>
              <description>antenna select
0: use rx phystatus antsel information;
1: use tx report antsel information; other: use register antsel information.</description>
              <bitRange>[22:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RESP_TXPOWER</name>
              <description>tx power setting when send response packet</description>
              <bitRange>[20:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RESP_TXANT</name>
              <description>tx antenna information</description>
              <bitRange>[17:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BBPSF_CSI_CTRL</name>
          <addressOffset>0x000006DC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x4B040000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_CTL_IDLE_CLR_CSI_RPT_V1</name>
              <description>ckr csi report request if response fsm idle</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_USE_NDPARATE</name>
              <description>1: use ndpa rx rate to decide csi report rate
0: use ndp rx rate to decide csi report rate</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CSI_RATE</name>
              <description>csi report init tx rate</description>
              <bitRange>[29:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RESP_TXRATE</name>
              <description>tx rate use to decide response rate</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_CSI_RATE_FORCE_EN</name>
              <description>0: disable CSI force rate. Refer to RRSR bitmask
1: CSI frame Tx rate refers to 0x6DC[29:24]</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_CSI_RSC_FORCE</name>
              <description>If csi_force_rate_en = 1, CSI frame sub-channel configuration
00: Primary 20Mhz BW(0x483[3:0])
01: Follow Rx packet BW.
10: Duplicate mode.
11: Reserved</description>
              <bitRange>[14:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CSI_GID_SEL</name>
              <description></description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RDCSIMD_FLAG_TRIG_SEL</name>
              <description>0: Trigger read csi mode flag raising when mac_csi_granted &amp; ndp_valid positive edge
1: Trigger read csi mode flag raising when mac_csi_granted positive edge</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_NDPVLD_POS_RST_FFPTR_DIS_V1</name>
              <description>0: Reset rx_fifo read/wrtie pointer when ndp_valid positive edge
1: Not reset rx_fifo read/wrtie pointer when ndp_valid positive edge</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_NDPVLD_PROTECT_RDRDY_DIS</name>
              <description>0: Protect write enable of rx_fifo when ndp_valid =1 
1: Not Protect write enable of rx_fifo when ndp_valid =1</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CSIRD_EMPTY_APPZERO</name>
              <description>0: Not append zero data when rx_fifo read csi data to empty. If csi data length of BB transmitted is smaller than MAC expected, Tx CSI report would be FCS error.
1: Append zero data when rx_fifo read csi data to empty. If csi data length of BB transmitted is smaller than MAC expected, there would be zero before FCS field of Tx CSI report pkt and the CSI report pkt would be FCS ok</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMC_CSI_RATE_FB_EN</name>
              <description>Enable CSI frame rate fallback (only one step in CSI RRSR)
This bit is set to 1 to enable MAC to use previous latched csi resp rate for retry pkt.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXFIFO_WRPTR_WO_CHKSUM</name>
              <description>This bit is set to 1 when rx_fifo don't enable csi data checksum.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_P2P_RX_BCN_NOA</name>
          <addressOffset>0x000006E0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_P2P_NOA_PARSER_EN</name>
              <description>NoA Parser enabled.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P2P_BSSID_SEL_V1</name>
              <description>When this valueis 0/1/2/3/4, then beacon with matched BSSID0/1/2/3/4 is parsed.</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P2P_OUI_TYPE</name>
              <description>NOA OUI Type</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ASSOCIATED_BFMER0_INFO</name>
          <addressOffset>0x000006E4</addressOffset>
          <size>32</size>
          <description>Associated Beamformer0 Info Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_r_WMAC_SOUNDING_RXADD_R0_V1</name>
              <description>MACID of the associated beamformer0 bit[31:0]</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SOUNDING_CFG1</name>
          <addressOffset>0x000006E8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_r_WMAC_TXCSI_AID0</name>
              <description>P_AID of the associated bemaformer0</description>
              <bitRange>[24:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_SOUNDING_RXADD_R0_H</name>
              <description>MACID of the associated beamformer0 bit[47:32]</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SOUNDING_CFG2</name>
          <addressOffset>0x000006EC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_r_WMAC_SOUNDING_RXADD_L</name>
              <description>MACID of the associated beamformer1 bit[31:0]</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SOUNDING_CFG3</name>
          <addressOffset>0x000006F0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_r_WMAC_TXCSI_AID1</name>
              <description>P_AID of the associated bemaformer1</description>
              <bitRange>[24:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_SOUNDING_RXADD_H</name>
              <description>MACID of the associated beamformer1 bit[15:0]</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SOUNDING_CFG0</name>
          <addressOffset>0x000006F4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_r_WMAC_BFINFO_20M_1</name>
              <description>BF Info of the associated beamformer1 at BW=20M
bit[18:16]: Nc index
bit[21:19]: Nr index
bit[23:22]: grouping
bit[25:24]: codebook info
bit[27:26]: coefficient size</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_BFINFO_20M_0</name>
              <description>BF Info of the associated beamformer0 at BW=20M
bit[2:0]: Nc index
bit[5:3]: Nr index
bit[7:6]: grouping
bit[9:8]: codebook info
bit[11:10]: coefficient size</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ANTCD_INFO</name>
          <addressOffset>0x000006F8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_WMAC_RESP_ANTD</name>
              <description>used for antenna select d value  BIT_WMAC_RESP_ANTCD[3:2], used for antsel_d value;</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_RESP_ANTC</name>
              <description>used for antenna select c value  BIT_WMAC_RESP_ANTCD[3:3], used for antsel_d value;</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_RESP_ANTB</name>
              <description>used for antenna select b value  BIT_WMAC_RESP_ANTCD[3:4], used for antsel_d value;</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_RESP_ANTA</name>
              <description>used for antenna select a value  BIT_WMAC_RESP_ANTCD[3:5], used for antsel_d value;</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CSI_PTR</name>
          <addressOffset>0x000006FC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_csi_raddr_latch_v2</name>
              <description>Tx_fifo read pointer latch value after Tx CSI report pkt (unit: 8B)</description>
              <bitRange>[31:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_csi_waddr_latch_v2</name>
              <description>Tx_fifo write pointer latch value at ndp_valid negative edge (unit: 8B)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_A1_ADDR_MASK</name>
          <addressOffset>0x0000160C</addressOffset>
          <size>32</size>
          <description>A1 Addr Mask Register</description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_A1_ADDR_MASK</name>
              <description>mask rx A1 addr [39:8] for test</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RXPSF_CTRL</name>
          <addressOffset>0x00001610</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x000400C0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RXGCK_FIFOTHR_EN</name>
              <description>1: enable RXGCK fifo threshold 
0: disable RXGCK fifo threshold (ignore fifo threshold)
Should be 0 if MAC loopback mode</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXGCK_VHT_FIFOTHR</name>
              <description>VHT rate RXGCK fifo threshold
If RXVHT = 1 and RXGCK fifo write pointer &gt;= this threshold, MAC_RX clock will stop gating.
0: 0
1: 1 (minimum RDRDY threshold for avoiding false alarm), can work at all situation.
2: 3 (number of RDRDY before receiving MAC header - 1), may cause error at some situation.
3: 4 (number of RDRDY before receiving MAC header), may cause error at some situation.</description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXGCK_HT_FIFOTHR</name>
              <description>HT rate RXGCK fifo threshold
If RXHT = 1 and RXGCK fifo write pointer &gt;= this threshold, MAC_RX clock will stop gating.
0: 0
1: 1 (minimum RDRDY threshold for avoiding false alarm), can work at all situation.
2: 2 (number of RDRDY before receiving MAC header - 1), may cause error at some situation.
3: 3 (number of RDRDY before receiving MAC header), may cause error at some situation.</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXGCK_OFDM_FIFOTHR</name>
              <description>OFDM rate RXGCK fifo threshold
If OFDM_VBON = 1 and RXGCK fifo write pointer &gt;= this threshold, MAC_RX clock will stop gating.
0: 0
1: 1 (number of RDRDY before receiving MAC header = minimum RDRDY threshold for avoiding false alarm), can work at all situation.
2: 2, may cause error at some situation.
3: 3 (minimum RDRDY number within one packet), may cause error at some situation.</description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXGCK_CCK_FIFOTHR</name>
              <description>CCK rate RXGCK fifo threshold
If CCKCCA = 1 and RXGCK fifo write pointer &gt;= this threshold, MAC_RX clock will stop gating.
0: 0
1: 1 (minimum RDRDY threshold for avoiding false alarm), can work at all situation.
2: 8, may cause error at some situation.
3: 15 (number of RDRDY before receiving MAC header), may cause error at some situation.</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXGCK_ENTRY_DELAY</name>
              <description>MAC_RX wait some time to gate clock after making the decision (about gating clock).
Unit: T (MAC clock cycle)
0: 0
1: 2
2: 4
3: 8
4: 16
5: 32
6: 64
7: 128</description>
              <bitRange>[19:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXGCK_OFDMCCA_EN</name>
              <description>This bit is set to 1 to let OFDMCCA be one of the signals that can wakeup MAC from Rx_idle</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_PKTLENTHR</name>
              <description>Packet length threshold
3'd0:  16 Bytes
3'd1:  32 Bytes
3'd2:  64 Bytes
3'd3:  128 Bytes
3'd4:  256 Bytes
3'd5:  512 Bytes
3'd6:  1024 Bytes
3'd7:  2048 Bytes
Only the packet which packet length is longer than this threshold will trigger an invalid_pkt pulse.</description>
              <bitRange>[15:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_CTRLEN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet Type=01.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_VHTCHKEN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet rate = VHT</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_HTCHKEN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet rate = HT</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_OFDMCHKEN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet rate = OFDM</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_CCKCHKEN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet rate = CCK</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_OFDMRST</name>
              <description>This bit is set to 1 to reset MAC Rx before sending OFDM (include OFDM, HT, VHT) packet triggered invalid_pkt pulse
(0 for debug)</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_CCKRST</name>
              <description>This bit is set to 1 to reset MAC Rx before sending CCK packet triggered invalid_pkt pulse(0 for debug)</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_MHCHKEN</name>
              <description>This bit is set to 1 to enable MAC to inform BB enter power saving mode as rx unmatch my MACID unicast or unmatch my BSSID Broadcast/Mutlicast packets (including aggrigation and non-aggrigation)</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_CONT_ERRCHKEN</name>
              <description>This bit is set to 1 to enable MAC to inform BB enter power saving mode as continuous rx FCS error packets number in a PPDU is large than the FCS error packet threshold defined by BBPSF_ERRTHR. This function is independent from rate, type and IDs.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_ALL_ERRCHKEN</name>
              <description>This bit is set to 1 to enable MAC to inform BB enter power saving mode as rx FCS error packets number in a PPDU is larger than the FCS error packet threshold defined by BBPSF_ERRTHR. This function is independent from rate, type and IDs.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_ERRTHR</name>
              <description>FCS error packet threshold
3'd0: 1 packet
3'd1: 4 packets
3'd2: 8 packets
3'd3: 12 packets
3'd4: 16 packets
3'd5: 20 packets
3'd6: 24 packets
3'd7: 28 packets</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RXPSF_TYPE_CTRL</name>
          <addressOffset>0x00001614</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RXPSF_DATA15EN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet Type=10 and subtype=1111.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_DATA14EN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet Type=10 and subtype=1110.</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_DATA13EN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet Type=10 and subtype=1101.</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_DATA12EN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet Type=10 and subtype=1100.</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_DATA11EN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet Type=10 and subtype=1011.</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_DATA10EN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet Type=10 and subtype=1010.</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_DATA9EN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet Type=10 and subtype=1001.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_DATA8EN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet Type=10 and subtype=1000.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_DATA7EN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet Type=10 and subtype=0111.</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_DATA6EN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet Type=10 and subtype=0110.</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_DATA5EN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet Type=10 and subtype=0101.</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_DATA4EN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet Type=10 and subtype=0100.</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_DATA3EN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet Type=10 and subtype=0011.</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_DATA2EN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet Type=10 and subtype=0010.</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_DATA1EN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet Type=10 and subtype=0001.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_DATA0EN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet Type=10 and subtype=0000.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_MGT15EN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet Type=00 and subtype=1111.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_MGT14EN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet Type=00 and subtype=1110.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_MGT13EN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet Type=00 and subtype=1101.</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_MGT12EN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet Type=00 and subtype=1100.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_MGT11EN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet Type=00 and subtype=1011.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_MGT10EN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet Type=00 and subtype=1010.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_MGT9EN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet Type=00 and subtype=1001.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_MGT8EN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet Type=00 and subtype=1000.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_MGT7EN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet Type=00 and subtype=0111.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_MGT6EN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet Type=00 and subtype=0110.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_MGT5EN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet Type=00 and subtype=0101.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_MGT4EN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet Type=00 and subtype=0100.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_MGT3EN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet Type=00 and subtype=0011.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_MGT2EN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet Type=00 and subtype=0010.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_MGT1EN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet Type=00 and subtype=0001.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_MGT0EN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet Type=00 and subtype=0000.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WAIT_PHYSTS_CTL</name>
          <addressOffset>0x00001618</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000024</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BB_RST_RESP</name>
              <description>When set to 1,enable bb/rdrdy_err/cca_spoofing to reset mac and will not tx response</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CCA_SPOOFING_EN</name>
              <description>When set to 1,enable cca_spoofing reset macrx</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RDRDY_NUM_CHK_EN</name>
              <description>When set, enable check rdrdy number is enough or not. If number is not enough will rst macrx</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WAIT_PHYSTS_EN</name>
              <description>When set to 1,enable wait physts rpt valid function</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WAIT_PHYSTS_TIME</name>
              <description>Wait physts rpt timeout ,unit us(6us is the recommeded value)</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MACID2</name>
          <addressOffset>0x00001620</addressOffset>
          <size>32</size>
          <description>MAC ID2 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MACID2_V1</name>
              <description>MAC Identification Number 2 Register</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MACID2_H</name>
          <addressOffset>0x00001624</addressOffset>
          <size>32</size>
          <description>MAC ID2 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MACID2_H_V1</name>
              <description>MAC Identification Number 2 Register</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BSSID2</name>
          <addressOffset>0x00001628</addressOffset>
          <size>32</size>
          <description>BSSID2 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BSSID2_V1</name>
              <description>Basic Station Set Identification 2</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BSSID2_H</name>
          <addressOffset>0x0000162C</addressOffset>
          <size>32</size>
          <description>BSSID2 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BSSID2_H_V1</name>
              <description>Basic Station Set Identification 2</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MACID3</name>
          <addressOffset>0x00001630</addressOffset>
          <size>32</size>
          <description>MAC ID3 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MACID3_V1</name>
              <description>MAC Identification Number 3 Register</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MACID3_H</name>
          <addressOffset>0x00001634</addressOffset>
          <size>32</size>
          <description>MAC ID3 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MACID3_H_V1</name>
              <description>MAC Identification Number 3 Register</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MASK_LA_TRX_DBG_L</name>
          <addressOffset>0x00001638</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_LA_TRX_PATTERN_MASK_L</name>
              <description>used for mask one or more bits of debug port</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MASK_LA_TRX_DBG_H</name>
          <addressOffset>0x0000163C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_LA_TRX_PATTERN_MASK_H</name>
              <description>used for mask one or more bits of debug port</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MACID4</name>
          <addressOffset>0x00001640</addressOffset>
          <size>32</size>
          <description>MAC ID4 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MACID4_V1</name>
              <description>MAC Identification Number 4 Register</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MACID4_H</name>
          <addressOffset>0x00001644</addressOffset>
          <size>32</size>
          <description>MAC ID4 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MACID4_H_V1</name>
              <description>MAC Identification Number 4 Register</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_REF_LA_TRX_DBG_L</name>
          <addressOffset>0x00001648</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_LA_TRX_PATTERN_REF_L</name>
              <description>used for mask one or more bits of debug port</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_REF_LA_TRX_DBG_H</name>
          <addressOffset>0x0000164C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_LA_TRX_PATTERN_REF_H</name>
              <description>used for mask one or more bits of debug port</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_NOA_REPORT</name>
          <addressOffset>0x00001650</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>NOA_RPT</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_NOA_REPORT_1</name>
          <addressOffset>0x00001654</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>NOA_RPT_1</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_NOA_REPORT_2</name>
          <addressOffset>0x00001658</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>NOA_RPT_2</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_NOA_REPORT_3</name>
          <addressOffset>0x0000165C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>NOA_RPT_3</name>
              <description></description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PWRBIT_SETTING</name>
          <addressOffset>0x00001660</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_CLI3_PWRBIT_OW_EN</name>
              <description>For client3 (port4). If this bit is set to 1, MAC will overwrite power bit of frame control according to CLI3_PWR_ST. (only for data frame)</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CLI3_PWR_ST</name>
              <description>For client3 (port4). MAC will overwrite power bit of frame control according to CLI3_PWR_ST.(only for data frame)</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CLI2_PWRBIT_OW_EN</name>
              <description>For client2 (port3). If this bit is set to 1, MAC will overwrite power bit of frame control according to CLI2_PWR_ST. (only for data frame)</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CLI2_PWR_ST</name>
              <description>For client2 (port3). MAC will overwrite power bit of frame control according to CLI2_PWR_ST.(only for data frame)</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CLI1_PWRBIT_OW_EN</name>
              <description>For client1 (port2). If this bit is set to 1, MAC will overwrite power bit of frame control according to CLI1_PWR_ST. (only for data frame)</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CLI1_PWR_ST</name>
              <description>For client1 (port2). MAC will overwrite power bit of frame control according to CLI1_PWR_ST.(only for data frame)</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CLI0_PWRBIT_OW_EN</name>
              <description>For client0 (port1). If this bit is set to 1, MAC will overwrite power bit of frame control according to CLI0_PWR_ST. (only for data frame)</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CLI0_PWR_ST</name>
              <description>For client0 (port1). MAC will overwrite power bit of frame control according to CLI0_PWR_ST.(only for data frame)</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_GENERAL_OPTION</name>
          <addressOffset>0x00001664</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_EXT_DBGSEL</name>
              <description>enable extend dbg port sel</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXSERV_FIELD_SEL</name>
              <description></description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RXAI_CTRL</name>
          <addressOffset>0x00001668</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RXAI_INFO_RST</name>
              <description>Write 1 to reset the RXAI events</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXAI_PRTCT_REL</name>
              <description>If MAC_reset_protect is set to 0 by MAC decision circuit (address/A-MPDU checking), set this bit to 1.
Reset by BIT_RXAI_INFO_RST = 1</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RXAI_PRTCT_VIO</name>
              <description>If MAC gets BB_reset_MAC pulse when MAC_reset_protect = 1, set this bit to 1.
Reset by BIT_RXAI_INFO_RST = 1</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RXAI_PRTCT_SEL</name>
              <description>MAC_reset_protect rises at
0: DATA_ON rises
1: PLCP check OK (OFDM/CCK) or receiving 3rd/2nd (VHT/HT) RDRDY</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXAI_AGG_CHKEN</name>
              <description>This bit is only workable when BIT_RXAI_ADDR_CHKEN = 1.
1: if and only if the receiving address matched PPDU is A-MPDU and is not VHT single MPDU, then MAC inform BB not doing reCCA.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXAI_ADDR_CHKEN</name>
              <description>This bit is set to 1 to enable MAC to inform BB not doing reCCA during receiving the address matched PPDU.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RX_BCN_TM</name>
          <addressOffset>0x0000166C</addressOffset>
          <size>32</size>
          <description>rx beacon timer</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RX_BCN_TIMER</name>
              <description>indicate rx beacon timer from cca up to fcs ok, units us</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TRX_PKTCNT_CTRL</name>
          <addressOffset>0x00001670</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TXPKTCNT_RST</name>
              <description>Reset tx packet counter, write "one" to set the counter to zero</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TX_UDPKTCNT_SET</name>
              <description>Set user define packet configure, write one setting, it is only valid for r_wmac_txpktcnt_sel (4'd0 ~ 4'd3)</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_TXPKTCNT_SEL</name>
              <description>Tx packet counter report selection 
4'd0: user define 0 counter
4'd1: user define 1 counter
4'd2: user define 2 counter
4'd3: user define 3 counter
4'd4: HT mpdu tx ok counter
4'd5: VHT SU mpdu tx ok counter
4'd6: CCK ppdu tx ok counter
4'd7: OFDM ppdu tx ok counter
4'd8: HT ppdu tx ok counter
4'd9: VHT SU ppdu tx ok counter
4'd10~4'd15: RSVD</description>
              <bitRange>[9:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_TXPKTCNT_CFG</name>
              <description>Tx packet conuter user define configuration
[5:2]:subtype
[1:0]:type</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TRX_PKTCNT_RPT</name>
          <addressOffset>0x00001674</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_WMAC_TXPKTCNT_RPT</name>
              <description>[25:22]:Tx packet counter report selection,r_wmac_txpktcnt_sel
[21:16]:user define-&gt;tx packet type,[21:18]:subtype,[17:16]:type;
others-&gt;6'h0
[15:0]:The tx reported counter value corresponding to Report type selected</description>
              <bitRange>[25:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CSI_RRSR</name>
          <addressOffset>0x00001678</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_CSI_LDPC_EN</name>
              <description>Enable LDPC in Tx CSI Frame</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CSI_STBC_EN</name>
              <description>Enable STBC in Tx CSI Frame</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CSI_RRSC_BITMAP</name>
              <description>BitMap to indicate the CSI frame rate in this BSS. Each bit is mapped as the following: 
Bit[4:11] = {6M, 9M, 12M, 18M, 24M, 36M, 48M, 54M}
Bit[12:19] = HT MCS0~MCS7
BIT[27:20] = VHT 1SSMCS0~7
The modulation of response rate must be less than or equal to the rate of the initiating frame. If none of the bits are set, no response is generated by Rtl8712.
If both legacy rates and HT rates are defined as Basic Rates, fill in only the legacy portion of the bitmap. If only HT rates are defined as Basic Rates, fill in both the legacy and HT portion of the bitmap.</description>
              <bitRange>[27:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_OFDM_LEN_TH</name>
              <description>CSI frame length threshold for using legacy OFDM (unit: 128B). 0 means disabled.
If CSI frame length &gt; threshold, search from VHT or HT bitmap
If CSI frame length &lt; threshold, search from legacy OFDM bitmap</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MU_BF_OPTION</name>
          <addressOffset>0x0000167C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x1F2A4800</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>WMAC_NOCHK_BFPOLL_BMP</name>
              <description>Set this bit to ignore retransmission bitmap of rx beamforming report poll</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WMAC_CSI_PARA_RDY_DLYCNT</name>
              <description>1:Cycle number from txctl state machine IDLE(VBON falling) to CSI_standby falling.
2:Half of this value is txctl state machine IDLE(VBON falling) to CSI_parameter_ready rising cycle number.</description>
              <bitRange>[28:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ARB_HW_ADAPT_EN</name>
              <description>Enable hardware to arbitrate data according to rate offset of user0 and user1</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ARB_SW_EN</name>
              <description>Enable software to set initial state of MU arbiter</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ARB_SW_STATE</name>
              <description>MU arbiter software initial state</description>
              <bitRange>[21:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_PAUSE_BB_CLR_TH</name>
              <description>MAC_PAUSE_BB High to Low clear threshold of csidma syncff read-write pointer</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_RESP_NONSTA1_DIS</name>
              <description>Disable response BA when receive non-STA1 user position MU PPDU</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_MU_BFEE_PORT_SEL</name>
              <description>Enable software to set initial state of MU arbiter</description>
              <bitRange>[3:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_MU_BFEE_DIS</name>
              <description>If set to 1, HW will be SU only beamformee and not response to NDPA or Beamforming report poll.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WMAC_MU_BF_CTL</name>
          <addressOffset>0x00001680</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BFRPT_PARA_USERID_SEL_V1</name>
              <description>User ID of associated Bfee, MU: 2~7 ,SU:0~1</description>
              <bitRange>[31:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BFRPT_PARA_V1</name>
              <description>CSI report parameter of selected user ID BFee
{bw[1:0],cb[1:0],ng[1:0],nr[2:0],nc[2:0]} ;</description>
              <bitRange>[28:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_WMAC_INVLD_BFPRT_CHK</name>
              <description>Check invalid case of received beamforming report</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_RETXBFRPTSEQ_UPD</name>
              <description>Update sequence number and not set retry bit when retransmit beamforming report.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_MU_BFRPTSEG_SEL</name>
              <description>Beamforming report segment length select
2'h00 :3895 bytes(also means csi segmentation enable),2'h01:7991bytes, 2'h10:11454bytes</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_MU_BF_MYAID</name>
              <description>When I'm one of Bfees, my AID12 to identify STA_info in NDPA</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WMAC_ASSOCIATED_MU_BFMEE2_3</name>
          <addressOffset>0x00001684</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_status_bfee3</name>
              <description>beamforming report status of beamformee3
0: fail, 
1: success</description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_WMAC_MU_BFEE3_EN</name>
              <description>If enabled, NDPA/BF-rpt-poll would be sent to beamformee3, and CSI rpt of beamformee3  can be read  from 0x1682[11:0] when 0x1682[14:12] is 3</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_MU_BFEE3_AID</name>
              <description>P_AID of the target beamformee3</description>
              <bitRange>[24:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_status_bfee2</name>
              <description>beamforming report status of beamformee2 
0: fail, 
1: success</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_WMAC_MU_BFEE2_EN</name>
              <description>If enabled, NDPA/BF-rpt-poll would be sent to beamformee2, and CSI rpt of beamformee2 can be read from 0x1682[11:0] when 0x1682[14:12] is 2</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_MU_BFEE2_AID</name>
              <description>P_AID of the target beamformee2</description>
              <bitRange>[8:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WMAC_ASSOCIATED_MU_BFMEE4_5</name>
          <addressOffset>0x00001688</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BIT_status_bfee5</name>
              <description>beamforming report status of beamformee5
0: fail
1: success</description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_WMAC_MU_BFEE5_EN</name>
              <description>If enabled, NDPA/BF-rpt-poll would be sent to beamformee5, and CSI rpt of beamformee5  can be read  from 0x1682[11:0] when 0x1682[14:12] is 5</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_MU_BFEE5_AID</name>
              <description>P_AID of the target beamformee5</description>
              <bitRange>[24:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_status_bfee4</name>
              <description>beamforming report status of beamformee4
0: fail, 
1: success</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_WMAC_MU_BFEE4_EN</name>
              <description>If enabled, NDPA/BF-rpt-poll would be sent to beamformee4, and CSI rpt of beamformee4  can be read  from 0x1682[11:0] when 0x1682[14:12] is 4</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_MU_BFEE4_AID</name>
              <description>P_AID of the target beamformee4</description>
              <bitRange>[8:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WMAC_ASSOCIATED_MU_BFMEE6_7</name>
          <addressOffset>0x0000168C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_status_bfee7</name>
              <description>beamforming report status of beamformee7
0: fail
1: success</description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_WMAC_MU_BFEE7_EN</name>
              <description>If enabled, NDPA/BF-rpt-poll would be sent to beamformee7, and CSI rpt of beamformee7 can be read from 0x1682[11:0] when 0x1682[14:12] is 7</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_MU_BFEE7_AID</name>
              <description>P_AID of the target beamformee7</description>
              <bitRange>[24:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_status_bfee6</name>
              <description>beamforming report status of beamformee6
0: fail
1: success</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_WMAC_MU_BFEE6_EN</name>
              <description>If enabled, NDPA/BF-rpt-poll would be sent to beamformee6, and CSI rpt of beamformee6 can be read from 0x1682[11:0] when 0x1682[14:12] is 6</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_MU_BFEE6_AID</name>
              <description>P_AID of the target beamformee6</description>
              <bitRange>[8:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WMAC_BB_STOP_RX_COUNTER</name>
          <addressOffset>0x00001690</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_rst_all_counter</name>
              <description>Write one to reset all counters to zero.</description>
              <bitRange>[31:31]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_abort_rx_vbon_counter</name>
              <description>Increase when mac_abort_rx_vbon trigger.
0x120[29] / 0x124[29] : BB_STOP_RX mask/interrupt 
0x0B8[0] / 0x0BC[0] : BB_STOP_RX mask/interrupt 
Interrupts will be trigger when mac detect any counter of 0x1690 increase.</description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_abort_rx_rdrdy_counter</name>
              <description>Increase when mac_abort_rx_rdrdy trigger
0x120[29] / 0x124[29] : BB_STOP_RX mask/interrupt 
0x0B8[0] / 0x0BC[0] : BB_STOP_RX mask/interrupt 
Interrupts will be trigger when mac detect any counter of 0x1690 increase.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_vbon_early_falling_counter</name>
              <description>Increase when VBON fall &amp; no rx plcp error &amp; rx_parser is waiting for rdrdy which is expected but not received .
0x120[29] / 0x124[29] : BB_STOP_RX mask/interrupt 
0x0B8[0] / 0x0BC[0] : BB_STOP_RX mask/interrupt 
Interrupts will be trigger when mac detect any counter of 0x1690 increase.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WMAC_PLCP_MONITOR</name>
          <addressOffset>0x00001694</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_WMAC_PLCP_TRX_SEL</name>
              <description>Selection of Tx/Rx plcp header
0:Rx 
1:Tx</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_PLCP_RDSIG_SEL</name>
              <description>Selection of plcp header signal field 
0:LSIG
1:HTSIG1/VHTSIGA1     
2:HTSIG2/VHTSIGA2   
3:VHTSIGB  
4: SERVICE field</description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_RATE_IDX</name>
              <description>4'b0001 : CCK rate
4'b0010 : OFDM rate
4'b0110 : HT rate
4'b1010 : VHT rate</description>
              <bitRange>[27:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_WMAC_PLCP_RDSIG</name>
              <description>Selected signal field to read out</description>
              <bitRange>[23:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WMAC_CSIDMA_CFG</name>
          <addressOffset>0x0000169C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0F1607CE</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_CSI_SEG_SIZE</name>
              <description>CSI data segmentation size (bytes) =
Max. MPDU length - mac hdr (24) - act type (1) - category  (1) - mimo ctrl (3) - FCS (4)</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CSI_START_PAGE</name>
              <description>The starting page number of csi buffer in TXPKTBUF</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TRANSMIT_ADDRSS_0</name>
          <addressOffset>0x000016A0</addressOffset>
          <size>32</size>
          <description>TA0 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TA0_v1</name>
              <description>Transmitter address for port 0 for beacon/probresp check</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TRANSMIT_ADDRSS_0_H</name>
          <addressOffset>0x000016A4</addressOffset>
          <size>32</size>
          <description>TA0 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TA0_H_V1</name>
              <description>Transmitter address for port 0 for beacon/probresp check</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TRANSMIT_ADDRSS_1</name>
          <addressOffset>0x000016A8</addressOffset>
          <size>32</size>
          <description>TA1 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TA1_V1</name>
              <description>Transmitter address for port 1 for beacon/probresp check</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TRANSMIT_ADDRSS_1_H</name>
          <addressOffset>0x000016AC</addressOffset>
          <size>32</size>
          <description>TA1 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TA1_H_V1</name>
              <description>Transmitter address for port 1 for beacon/probresp check</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADDRESS_TABLE3</name>
          <addressOffset>0x000016B0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_ADDR_TABLE_USER_REG2_L</name>
              <description>address table user defined address2, low 32 bit</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADDRESS_TABLE4</name>
          <addressOffset>0x000016B4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_ADDR_TABLE_USER_REG3_L</name>
              <description>address table user defined address3, low 16 bit</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ADDR_TABLE_USER_REG2_H</name>
              <description>address table user defined address2, high 16 bit</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADDRESS_TABLE5</name>
          <addressOffset>0x000016B8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_ADDR_TABLE_USER_REG3_H</name>
              <description>address table user defined address3, high 32 bit</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MACTRX_LA_DBG_CFG</name>
          <addressOffset>0x000016BC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TXTRIG_TYPE</name>
              <description>iqdump la TX trigger stop condition: frame type</description>
              <bitRange>[21:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXTRIG_TYPE</name>
              <description>iqdump la RX trigger stop condition: frame type</description>
              <bitRange>[15:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXTRIG_STOP_SEL</name>
              <description>iqdump la TX trigger stop condition select</description>
              <bitRange>[9:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXTRIG_STOP_SEL</name>
              <description>iqdump la RX trigger stop condition select</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SUPPER_ADDRESS3_H</name>
          <addressOffset>0x000016C0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_SUP_ADDR3_L</name>
              <description>supper address3 for rx filter check, valid only when 0x617[1] is vaild</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SUPPER_ADDRESS3_L</name>
          <addressOffset>0x000016C4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_SUP_ADDR3_H</name>
              <description>supper address3 for rx filter check, valid only when 0x617[1] is vaild</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_NAN_FUN</name>
          <addressOffset>0x000016C8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000004</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_WMAC_ATTRI_ID1</name>
              <description>the NAN attribute whose ID is r_WMAC_ATTRI_ID1 will be written into NAN beacon report</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_WMAC_ATTRI_ID0</name>
              <description>the NAN attribute whose ID is r_WMAC_ATTRI_ID0 will be written into NAN beacon report</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_WMAC_ATTRI_IDi_VLD</name>
              <description>valid flag bitmap of r_WMAC_ATTRI_IDi</description>
              <bitRange>[12:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_TXRPT_NAN_ENTRY_NUM</name>
              <description>number of NAN beacon report entry in txrptbuffer</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_NAN_ENTRY_SIZE</name>
              <description>size of one NAN beacon report entry, unit is 8byte</description>
              <bitRange>[3:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_WMAC_RXNANPSR_EN</name>
              <description>parse enable of rx NAN sync beacon</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_NAN_CTL</name>
          <addressOffset>0x000016CC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_TXRPT_NAN_ENTRY_FLAG</name>
              <description>indicate NAN beacon report(i) in txrptbuffer is valid, it is set by HW and clear by FW</description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>r_WMAC_ATTRI_ID4</name>
              <description>the NAN attribute whose ID is r_WMAC_ATTRI_ID4 will be written into NAN beacon report</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_WMAC_ATTRI_ID3</name>
              <description>the NAN attribute whose ID is r_WMAC_ATTRI_ID3 will be written into NAN beacon report</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_WMAC_ATTRI_ID2</name>
              <description>the NAN attribute whose ID is r_WMAC_ATTRI_ID2 will be written into NAN beacon report</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_NAN_ADDR_FILTER</name>
          <addressOffset>0x000016D0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000153</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_RX_NAN_ADDR_FILTER_EN</name>
              <description>enable of rx nan beacon address filter</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_NAN_START_ADDR_OFFSET</name>
              <description>Start offset Location of NAN beacon report FIFO. Unit: 8bytes</description>
              <bitRange>[12:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_NAN_ADDR</name>
          <addressOffset>0x000016D4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_RX_NAN_ADDR_FILTER</name>
              <description>bitmap for rx nan beacon address filter</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BCN_IEPSR0</name>
          <addressOffset>0x000016D8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_WMAC_BCN_MBSSID_MASK</name>
              <description>Tim hit and tim no hit of my non-transmitted bssid frame mask</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_WMAC_BCN_CLR_N</name>
              <description>enable clear macbssid indicator when no multiple BSSID element is found.</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_WMAC_BCN_IE1_PSR</name>
              <description>enable parser specified ie 1 element</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_WMAC_BCN_IE0_PSR</name>
              <description>enable parser specified ie0 element</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_WMAC_BCN_MBSSID_PSR</name>
              <description>enable parser multiple BSSID element</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_WMAC_BCN_SW_MBSSID</name>
              <description>enable the MaxBSSID indicator value from SW</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_WMAC_BCN_MBSSID_N</name>
              <description>SW write the value of MaxBSSID Indicator field</description>
              <bitRange>[25:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_WMAC_BCN_ID1_EXT</name>
              <description>indicate current ie is the extend element which need to parser extend id field</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_WMAC_BCN_IE_ID1</name>
              <description>specified Element ID, set corresponding interrupt when it is parsed</description>
              <bitRange>[16:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_WMAC_BCN_ID0_EXT</name>
              <description>indicate current ie is the extend element which need to parser extend id field</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_WMAC_BCN_IE_ID0</name>
              <description>specified Element ID, set corresponding interrupt when it is parsed</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BCN_IEPSR1</name>
          <addressOffset>0x000016DC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_tim_no_hit_reject</name>
              <description>when set, reject tim_no_hit beacon during LPSOFFLOAD</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_WMAC_BCN_BMC_MASK</name>
              <description>when set, mask tim_hit and tim_no_hit interrupt due to aid0 during LPSOFFLOAD</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_WMAC_BCN_MBSSID_IDX</name>
              <description>the multiple bssid index that current sta connect with</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CHINFO_ADDR</name>
          <addressOffset>0x000016E0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_CHINFO_TX_ADDR_L</name>
              <description>tx address for trigger channel info, Low 32bits</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CHINFO_CFG</name>
          <addressOffset>0x000016E4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x01000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_chinfo_fcs</name>
              <description>when set, ignore fcs fail when trigger channel info</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_CHINFO_WTM_OUT</name>
              <description>BB does't send channel info when timeout occur</description>
              <bitRange>[27:27]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>r_CHINFO_TIME_OUT</name>
              <description>BB send channel info length is less than report length</description>
              <bitRange>[26:26]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>r_CSI_BUFF_FULL</name>
              <description>Indicate rxcsibuff full occur</description>
              <bitRange>[25:25]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>r_CHINFO_TIMER</name>
              <description>Wait timeout value, unit 4 mac clock cycles</description>
              <bitRange>[24:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_CHINFO_MODE</name>
              <description>channel info mode setting. Valid when r_CHINFO_EN is 1
0: enable normal rx trigger; 
1: enable ndpa trigger; note: Not support in dplus 
repsonse mode decided by tx descriptor.</description>
              <bitRange>[18:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_CHINFO_EN</name>
              <description>enable for getting channel info from BB. When set to 0, will not trigger channel info function</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_CHINFO_TX_ADDR_H</name>
              <description>tx address for trigger channel info, High 16bits</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RXCSIBUF_CFG</name>
          <addressOffset>0x000016E8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x000004FF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_chinfo_req_size</name>
              <description>The channel info trigger request rxcsibuffer size, unit 32bytes, the actually request size = (r_chinfo_req_size + 1) * 32byte</description>
              <bitRange>[21:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_csibuf_threshod</name>
              <description>rxcsibuffer full threshold, size must greater than or equal to csi descriptors</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_csibuf_endaddr</name>
              <description>End address of rxcsibuffer, unit 8bytes. Rxcsibuffer is 2K bytes</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BT_ZB_COEX_TB</name>
          <addressOffset>0x000016EC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_bt_zb_coex_table</name>
              <description>NO zigbee,NO USE</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CHINFO_TRIG_TYPE0</name>
          <addressOffset>0x000016F0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_CTL_TRG_15En</name>
              <description>When set, control frames with type=01 and subtype=1111 will trigger channel info</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTL_TRG_14En</name>
              <description>When set, control frames with type=01 and subtype=1110 will trigger channel info</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTL_TRG_13En</name>
              <description>When set, control frames with type=01 and subtype=1101 will trigger channel info</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTL_TRG_12En</name>
              <description>When set, control frames with type=01 and subtype=1100 will trigger channel info</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTL_TRG_11En</name>
              <description>When set, control frames with type=01 and subtype=1011 will trigger channel info</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTL_TRG_10En</name>
              <description>When set, control frames with type=01 and subtype=1010 will trigger channel info</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTL_TRG_9En</name>
              <description>When set, control frames with type=01 and subtype=1001 will trigger channel info</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTL_TRG_8En</name>
              <description>When set, control frames with type=01 and subtype=1000 will trigger channel info</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTL_TRG_7En</name>
              <description>When set, control frames with type=01 and subtype=0111 will trigger channel info</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTL_TRG_6En</name>
              <description>When set, control frames with type=01 and subtype=0110 will trigger channel info</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTL_TRG_5En</name>
              <description>When set, control frames with type=01 and subtype=0101 will trigger channel info</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTL_TRG_4En</name>
              <description>When set, control frames with type=01 and subtype=0100 will trigger channel info</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTL_TRG_3En</name>
              <description>When set, control frames with type=01 and subtype=0011 will trigger channel info</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTL_TRG_2En</name>
              <description>When set, control frames with type=01 and subtype=0010 will trigger channel info</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTL_TRG_1En</name>
              <description>When set, control frames with type=01 and subtype=0001 will trigger channel info</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTL_TRG_0En</name>
              <description>When set, control frames with type=01 and subtype=0000 will trigger channel info</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGT_TRG_15En</name>
              <description>When set, management frames with type=00 and subtype=1111 will trigger channel info</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGT_TRG_14En</name>
              <description>When set, management frames with type=00 and subtype=1110 will trigger channel info</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGT_TRG_13En</name>
              <description>When set, management frames with type=00 and subtype=1101 will trigger channel info</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGT_TRG_12En</name>
              <description>When set, management frames with type=00 and subtype=1100 will trigger channel info</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGT_TRG_11En</name>
              <description>When set, management frames with type=00 and subtype=1011 will trigger channel info</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGT_TRG_10En</name>
              <description>When set, management frames with type=00 and subtype=1010 will trigger channel info</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGT_TRG_9En</name>
              <description>When set, management frames with type=00 and subtype=1001 will trigger channel info</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGT_TRG_8En</name>
              <description>When set, management frames with type=00 and subtype=1000 will trigger channel info</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGT_TRG_7En</name>
              <description>When set, management frames with type=00 and subtype=0111 will trigger channel info</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGT_TRG_6En</name>
              <description>When set, management frames with type=00 and subtype=0110 will trigger channel info</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGT_TRG_5En</name>
              <description>When set, management frames with type=00 and subtype=0101 will trigger channel info</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGT_TRG_4En</name>
              <description>When set, management frames with type=00 and subtype=0100 will trigger channel info</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGT_TRG_3En</name>
              <description>When set, management frames with type=00 and subtype=0011 will trigger channel info</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGT_TRG_2En</name>
              <description>When set, management frames with type=00 and subtype=0010 will trigger channel info</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGT_TRG_1En</name>
              <description>When set, management frames with type=00 and subtype=0001 will trigger channel info</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGT_TRG_0En</name>
              <description>When set, management frames with type=00 and subtype=0000 will trigger channel info</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CHINFO_TRIG_TYPE1</name>
          <addressOffset>0x000016F4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_DATA_TRG_15En</name>
              <description>When set, data frames with type=10 and subtype=1111 will trigger channel info</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATA_TRG_14En</name>
              <description>When set, data frames with type=10 and subtype=1110 will trigger channel info</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATA_TRG_13En</name>
              <description>When set, data frames with type=10 and subtype=1101 will trigger channel info</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATA_TRG_12En</name>
              <description>When set, data frames with type=10 and subtype=1100 will trigger channel info</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATA_TRG_11En</name>
              <description>When set, data frames with type=10 and subtype=1011 will trigger channel info</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATA_TRG_10En</name>
              <description>When set, data frames with type=10 and subtype=1010 will trigger channel info</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATA_TRG_9En</name>
              <description>When set, data frames with type=10 and subtype=1001 will trigger channel info</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATA_TRG_8En</name>
              <description>When set, data frames with type=10 and subtype=1000 will trigger channel info</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATA_TRG_7En</name>
              <description>When set, data frames with type=10 and subtype=0111 will trigger channel info</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATA_TRG_6En</name>
              <description>When set, data frames with type=10 and subtype=0110 will trigger channel info</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATA_TRG_5En</name>
              <description>When set, data frames with type=10 and subtype=0101 will trigger channel info</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATA_TRG_4En</name>
              <description>When set, data frames with type=10 and subtype=0100 will trigger channel info</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATA_TRG_3En</name>
              <description>When set, data frames with type=10 and subtype=0011 will trigger channel info</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATA_TRG_2En</name>
              <description>When set, data frames with type=10 and subtype=0010 will trigger channel info</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATA_TRG_1En</name>
              <description>When set, data frames with type=10 and subtype=0001 will trigger channel info</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATA_TRG_0En</name>
              <description>When set, data frames with type=10 and subtype=0000 will trigger channel info</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_VENDOR_TSFT_CTL</name>
          <addressOffset>0x000016F8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_rx_vendor_tsft_en</name>
              <description>when set, enable rx parsing vendor tsft element in beacon and tsft sync</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_rx_vendor_ns_offset</name>
              <description>rx vendor tsft element offset,start from payload</description>
              <bitRange>[25:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_tx_vendor_tsft_en</name>
              <description>when set, enable tx carry vendor tsft element in beacon</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_tx_vendor_ns_offset</name>
              <description>tx vendor tsft element offset,start from payload</description>
              <bitRange>[9:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WMAC_TCR_TSFT_OFS</name>
          <addressOffset>0x000016FC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_WMAC_TCR_TSFT_NS_OFS</name>
              <description>BIT_WMAC_TCR_TSFT_OFS[9:0] is for cck stamp time offset of ns part
BIT_WMAC_TCR_TSFT_OFS[19:10] is for other rate time offset of ns part</description>
              <bitRange>[19:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>page7</name>
      <groupName>WIFI</groupName>
      <baseAddress>0x40000000</baseAddress>
      <size>0x00000800</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00000800</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>REG_MACID1</name>
          <addressOffset>0x00000700</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MACID1_0</name>
              <description>MAC Identification Number Register for port 1</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MACID1_1</name>
          <addressOffset>0x00000704</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MACID1_1</name>
              <description>MAC Identification Number Register for port 1</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BSSID1</name>
          <addressOffset>0x00000708</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BSSID1_0</name>
              <description>Basic Station Set Identification for port 1.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BSSID1_1</name>
          <addressOffset>0x0000070C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BSSID1_1</name>
              <description>Basic Station Set Identification for port 1.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BCN_PSR_RPT1</name>
          <addressOffset>0x00000710</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_DTIM_CNT1</name>
              <description>DTIM count</description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_DTIM_PERIOD1</name>
              <description>DTIM Period</description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HAS_AID0_1</name>
              <description>when set to 1 ,indicate has bc/mc frame</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HAS_MYBSSID1</name>
              <description>when set to 1 , indicate has my non-transmitted bss frame</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HAS_MYAID1</name>
              <description>when set to 1 , indicate has my unicast frame</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_TIM_VALID1</name>
              <description>when set to 1 , indicate tim report valid</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_PS_AID_1</name>
              <description>AID1 for MACID1</description>
              <bitRange>[10:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ASSOCIATED_BFMEE_SEL</name>
          <addressOffset>0x00000714</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BFMEE1_EN</name>
              <description>If enabled, NDPA would be sent to beamformee1.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BFMEE1_AID</name>
              <description>P_AID of the target beamformee1</description>
              <bitRange>[24:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BFMEE0_EN</name>
              <description>If enabled, NDPA would be sent to beamformee0.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BFMEE0_AID</name>
              <description>P_AID of the target beamformee0</description>
              <bitRange>[8:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SND_PTCL_CTRL</name>
          <addressOffset>0x00000718</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x20000280</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_ndp_rx_standby_timer</name>
              <description>A timeout value for MAC to leave NDP_Rx_standby_state and go back to normal Rx mode. (unit: 2us)</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_CHK_RPTPOLL_A2_DIS</name>
              <description>1: For any A1-matched BF Rpt Poll, send back VHT-CB
0: If A1-matched BF Rpt Poll's A2 fails to match the previous receiving NDPA's A2, do not send VHT-CB</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_CHK_UCNDPA_A2_DIS</name>
              <description>0: If A1-matched NDPA's A2 fails to match 0x6E4 or 0x6EC, use default csi parameter
1: For any receiving A1-matched NDPA, use 0x6F4[11:0] as csi parameter</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_HT_CATEGORY</name>
              <description>csi report offset for ht mode</description>
              <bitRange>[21:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_OFFSET_RPTPOLL_EN</name>
              <description>1: If previous Tx pkt is BF Rpt Poll or VHT NDP, use vht csi start offset; otherwise ht csi start offset
0: If previous Tx pkt is vht rate, use vht csi start offset; otherwise ht csi start offset</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_CSI_CHKSUM_DIS</name>
              <description>1:Disable check 16bit checksum value of csi report from BB 
 0:Enable check 16bit checksum value of csi report from BB</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_VHT_CATEGORY</name>
              <description>used as csi report  offset</description>
              <bitRange>[13:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_USE_NSTS</name>
              <description>1: use Nsts as Nr, 0: use register value as Nr</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_Disable_check_vhtsigb_crc</name>
              <description>1: disable, 0: enable</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_disable_check_vhtsiga_crc</name>
              <description>1: disable,  0: enable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_BFPARAM_SEL</name>
              <description>1: use beamforming nc/nr/ng parameter from register 0x6F4
0: use beamforming nc/nr/ng parameter from tx report buffer</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_CSISEQ_SEL</name>
              <description>By which the sequence number of CSI frame is controlled
1: non-QoS SEQ number
0: counter</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_CSI_WITHHTC_EN</name>
              <description>Set to 1, CSI frame would carry HTC in MAC header.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_HT_NDPA_EN</name>
              <description>Set to 1, MAC would inform BB of preparing to receive NDP if the received NDP Announcement MPDU is valid.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_VHT_NDPA_EN</name>
              <description>Set to 1, MAC would inform BB of preparing to receive NDP if the received NDPA is valid.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BEAMFORM_STATUS</name>
          <addressOffset>0x0000071C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_write_enable</name>
              <description>Access flag. '0' for read. '1' for write, 0x72C[15:0] must be sett before this bit is set</description>
              <bitRange>[31:31]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_WMAC_CHECK_SOUNDING_SEQ</name>
              <description>Set to 1,MAC would check sounding sequence number of received CSI report 
and transmitted NDPA</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_vhtht_mimo_ctrl_field</name>
              <description>when 'read':
[24:1]: currently received VHT MIMO Control field 
or
[16:1]: currently received HT MIMO Control field</description>
              <bitRange>[24:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_csi_intrrupt_status</name>
              <description>sounding status: '0': fail; '1': success;</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_NSARP_CFG</name>
          <addressOffset>0x00000720</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_NSARP_RESPEN</name>
              <description>NAARP parser enable</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_NSARP_PARP</name>
              <description>when set to 1, reject ARP</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_NSARP_RIPV6</name>
              <description>when set to 1, reject IPV6</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_NSARP_MODEN</name>
              <description>r_WMAC_NSARP_MODEN[0]: when set to 1, enable arp request;
r_WMAC_NSARP_MODEN[1]: when set to 1, enable ipv6 request;</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_NSARP_RSPFTP</name>
              <description>used to select Response_type and TID</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_NSARP_RSPSEC</name>
              <description>select response packet security type</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ZB_STATISTIC_1</name>
          <addressOffset>0x00000724</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_ZB_HI_RX</name>
              <description>for statistic</description>
              <bitRange>[31:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_ZB_HI_TX</name>
              <description></description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ZB_STATISTIC_2</name>
          <addressOffset>0x00000728</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_ZB_LO_RX</name>
              <description>for statistic</description>
              <bitRange>[31:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_ZB_LO_TX</name>
              <description></description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BEAMFORMING_INFO_NSARP</name>
          <addressOffset>0x0000072C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_UPD_BFMEE_USERID</name>
              <description>Select BFMEE User ID</description>
              <bitRange>[15:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_UPD_BFMEE_FBTP</name>
              <description>Feedback Type(B11) of VHT MIMO Control field, HT is no used</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_UPD_BFMEE_BW</name>
              <description>Channel Width of VHT MIMO control field (B7-6) and (B4) when HT mode</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_UPD_BFMEE_CB</name>
              <description>Codebook Information of MIMO control field [8] for VHT (B10) and (B10-9) when HT mode</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_UPD_BFMEE_NG</name>
              <description>Grouping of MIMO control field [7:6] for VHT (B9-8) and (B6-5) when HT mode</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_UPD_BFMEE_NR</name>
              <description>Nr Index of MIMO control field [5:3] for VHT (B5-3) ,[4:3] for HT mode (B3-2)</description>
              <bitRange>[5:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_UPD_BFMEE_NC</name>
              <description>Nc Index of MIMO control field [2:0] for VHT (B2-0) , [1:0] for HT mode (B1-0)</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ZB_COEX_TABLE_1</name>
          <addressOffset>0x00000740</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_ZB_COEX_TABLE_1</name>
              <description>coexistence table between WLAN and Zigbee, 
selected by BIT_COEX_TABLE_SEL = 0</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ZB_COEX_TABLE_2</name>
          <addressOffset>0x00000744</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_ZB_COEX_TABLE_2</name>
              <description>coexistence table between WLAN and Zigbee, 
selected by BIT_COEX_TABLE_SEL = 1</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ZB_BREAK_TABLE</name>
          <addressOffset>0x00000748</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_ZB_BREAK_TABLE_2</name>
              <description>Table used to break ZB activity, when new WLAN request is coming and ZB is on transmitting or receiving</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ZB_BREAK_TABLE_1</name>
              <description>Table used to break WLAN activity, when new ZB request is coming and WLAN is on transmitting or receiving</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_EXT_ZB_DETEC_CTRL</name>
          <addressOffset>0x0000074C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x40C80000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_ZB_TRX_DETECT_TIME</name>
              <description>Valid if BIT_ZIGBEE_MODE = 1 &amp; BIT_EXT_ZIGBEE_MODE = 0 (external mode, directional PRIORITY) 
After ZB_PRI_DETECT_TIME duration, if ZB_PRIORITY is low or goes low during ZB_TRX_INIT_DETECT_TIME, Zigbee will receive packets; otherwise, if ZG_PRIORITY is high or goes high, ZB will TX data. Unit 1us.</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ZB_PRI_DETECT_TIME</name>
              <description>Valid if BIT_ZIGBEE_MODE = 1 &amp; BIT_EXT_ZIGBEE_MODE = 0 (external mode, directional PRIORITY) 
After ZB_REQUEST asserting, if ZG_PRIORITY is asserted within this ZB_PRI_DETECT_TIME duration, ZG will initiate high priority activities; otherwise, if ZB_PRIORITY is not asserted within this duration, it would be low priority activities. Units 1us. (0-255us)</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ZB_CNT_THR</name>
              <description>ZB count threshold, unit: us</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ZB_ARB_TIME</name>
              <description>8 bit timer register : Arbitration window of ZB trx request (unit: us)</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WMAC_RTX_CTX_SUBTYPE</name>
          <addressOffset>0x00000750</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000076</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_r_WMAC_CTX_SUBTYPE</name>
              <description></description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_RTX_SUBTYPE</name>
              <description></description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WMAC_RTX_SWAES_RD_1</name>
          <addressOffset>0x00000754</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>wmac_swaes_rd_0</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WMAC_RTX_SWAES_RD_2</name>
          <addressOffset>0x00000758</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>wmac_swaes_rd_1</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WMAC_RTX_SWAES_RD_3</name>
          <addressOffset>0x0000075C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>wmac_swaes_rd_2</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WMAC_SWAES_CFG</name>
          <addressOffset>0x00000760</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BTCOEX_SW_RST</name>
              <description></description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_GNT_BOTH_POL</name>
              <description>grant both choose GNT_BT  polarity:
0 : deassert GNT_BT  signal as PTA grant both WiFI and BT.
1 : assert GNT_BT signal as PTA grant both WiFi and BT.</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_GRANTALL_WLMASK</name>
              <description></description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BT_ARB_INST_EN</name>
              <description>1: enable GNT_BT_BYPASS_PRIORITY 
0 : disable</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BT_ARB_TIME</name>
              <description>8 bit timer register : Arbitration window of bt trx request ( in the unit of us)</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SWAES_REQ</name>
              <description>software aes engine request polling</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_R_WMAC_SWAES_WE</name>
              <description>Write enable of register ro_WMAC_SWAES_RD</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_R_WMAC_SWAES_SEL</name>
              <description>When R_WMAC_SWAES_SEL =1,the content of register 0750-075F used to be
aes engine data in or data out .
When R_WMAC_SWAES_SEL =0, the content of register 0754-075F used to be
aes engine security key</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BT_COEX_ENH</name>
          <addressOffset>0x00000764</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x18021E00</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_ZIGBEE_EN</name>
              <description>Enable ZigBee function</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ZIGBEE_MODE</name>
              <description>0: SOC
1: external</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EXT_ZIGBEE_MODE</name>
              <description>The mode of external ZigBee
1: static PRIORITY
0: directional PRIORITY</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_COEX_TABLE_SEL</name>
              <description>Select coexistence table for WLAN &amp; ZB
0: BIT_COEX_TABLE_WL_ZB_1
1: BIT_COEX_TABLE_WL_ZB_2</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EXT_ZB_GNT_POLAR</name>
              <description>Select the polar of ZB_GRANT, for extarnal ZB
0: low active
1: high active</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ZB_ARB_INST_EN</name>
              <description>1: enable the time limit of ZigBee request (zb_pri | zb_rx | zb_tx), PTA is valid during ( &lt;=BIT_ZB_ARB_TIME)
0: disable 
Co-work with BIT_ZB_ARB_TIME</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ZB_CNT_THREN</name>
              <description>ZB count threshold enable, for statistics
co-work with BIT_ZB_CNT_THR</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ZB_STATISTIC_EN</name>
              <description>enable statistic of ZB</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_GNT_ZB_BB_SW_EN</name>
              <description>Enable SW control gnt_zb_bb</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_GNT_ZB_BB_SW</name>
              <description>SW value</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_GNT_ZB_RFC_SW_EN</name>
              <description>Enable SW control gnt_zb_rfc</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_GNT_ZB_RFC_SW</name>
              <description>SW value</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_GNT_ZB_EXT_SW_EN</name>
              <description>Enable SW control gnt_zb_o of external ZigBee</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_GNT_ZB_EXT_SW</name>
              <description>SW value,  external ZigBee</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EXT_ZB_REQ_POLAR</name>
              <description>Select the polar of ZB_REQUEST, for static mode external ZB
0: low active
1: high active</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_BT_DONT_CARE</name>
              <description>1: break table of BT &amp; WL can be all "1"
0: break table of BT &amp; WL cannot be all "1"</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_ZB_DONT_CARE</name>
              <description>1: break table of ZB &amp; WL can be all "1"
0: break table of ZB &amp; WL cannot be all "1"</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_r_gnt_bt_rfc_sw</name>
              <description>SW control BT RF</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_r_gnt_bt_rfc_sw_en</name>
              <description>SW control BT RF enable</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_r_gnt_bt_bb_sw</name>
              <description>SW control BT baseband</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_r_gnt_bt_bb_sw_en</name>
              <description>SW control BT baseband enable</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_r_bt_cnt_thren</name>
              <description>BT count threshold enable</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_r_bt_cnt_thr</name>
              <description>BT count threshold</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WLAN_ACT_MASK_CTRL</name>
          <addressOffset>0x00000768</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_PTA_GNT_INFO</name>
              <description></description>
              <bitRange>[31:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_WACTMSK_OFF_DUR</name>
              <description>WLAN will reserve channel for BT during MASK OFF duration. Unit
0.625ms</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WACTMSK_ON_DUR</name>
              <description>WLAN can block BT during MASK On duration. Unit 0.625ms</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WLAN_ACT_MASK_CTRL_1</name>
          <addressOffset>0x0000076C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BT_STAT_DELAY</name>
              <description>For CSR, BT_PRI and BT_STAT go high form low at the same time. Thus, BT_STAT
 need delay BT_STAT_DELAY time to trigger hardware. Unit: 1us</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BT_TRX_INIT_DETECT</name>
              <description>After BT_PRI asserting for BT_TRX_INIT_DETECT us, 
if BT_STAT is low, then BT will receive packets; otherwise, if BT goes high, BT will TX data. Unit 4us.</description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BT_PRI_DETECT_TO</name>
              <description>After BT_PRI asserting, if BT_STAT is asserted within this TO duration, BT will initiate high priority activities; otherwise, if BT_STAT is not asserted within this duration, it would be low priority activities. Units 1us.</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_STATIS_BT_RSTB</name>
              <description>clear BT static</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_STATIS_BT_EN</name>
              <description>When this bit is set, the BT_ACT_STATISTICS counters starts counting</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_WL_ACT_MASK</name>
              <description>Enable WLAN_ACT Mask Function (related to 0x768h-0x76Dh)</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ENHBT</name>
              <description>Enable Enhanced BT Interface (we suggest to use with BT mode 2)</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WLRX_TER_BY_CTL_1</name>
              <description>When wlan receive a control packet without fit address, whether the signal indicating wlan rx can be terminated as soon as the address check finish is not only controlled by r_WLRX_TER_BY_AD, but also should be refereed to this bit. 
1: enable; 0: disable</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WLRX_TER_BY_AD_1</name>
              <description>When wlan receive the packet without fit address, the signal indicating wlan rx can be terminated as soon as the address check finish. This feature can be enabled by this bit. 
1: en</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ANT_DIVERSITY_SEL_1</name>
              <description>Antenna diversity for 2 antenna mode: MAC_ANT_SEL = GNT_BT ^ ANT_DIVERDITY_SEL</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ANTSEL_FOR_BT_CTRL_EN_1</name>
              <description>Enable the control of antenna selection through GNT_BT:
GNT_BT=1: ANT_SEL for BT device;
GNT_BT=0: ANT_SEL for WL device.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WLACT_LOW_GNTWL_EN_1</name>
              <description>When WLACT_LOW_GNTWL_EN = 1, the TRX of WLAN are blocked according 
to the BTCOEX table arbitration during MASK OFF duration. WLACT_LOW_GNTWL_EN = 0, the TRX of WLAN are paused during MASK OFF duration..</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WLACT_HIGH_GNTBT_EN_1</name>
              <description>When WLACT_HIGH_GNTBT_EN = 1, the TRX of WLAN are blocked according 
to the BTCOEX table arbitration during MASK ON duration. When WLACT_HIGH_ GNTBT_EN = 0, the TRX of WLAN are not paused during MASK OFF duration.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_WLACT_MASK_SYNC</name>
              <description>When NAV update is beyond this value, then NAV update is aborted. When this field
is 0x00, NAV_UPPER function is disable. The unit is 128us.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BT_ENHANCED_CTRL0</name>
          <addressOffset>0x00000770</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_STATIS_BT_31_0</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BT_ENHANCED_CTRL1</name>
          <addressOffset>0x00000774</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_STATIS_BT_63_32</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BT_PROPRI</name>
          <addressOffset>0x00000778</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BT_CMD_RPT</name>
              <description></description>
              <bitRange>[31:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RPT_FROM_BT</name>
              <description></description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BT_HID_ISR_SET</name>
              <description>When EN_BT_PROFILE_OR_HID is set "1", hardware also need to check
this value to trigger an interrupt.
0: default, TX and RX
1: TX
2: RX
3: Reserved</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TDMA_BT_START_NOTIFY</name>
              <description>When the control of TDMA mode is firmware and firmware also receive
signal that NULL packet for BT had sent, firmware can fill this bit to notify HW PTA to pull WLAN_ACT to low and the interval is Tbt</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_Enable_TDMA_HW_Mode</name>
              <description>0: default, PTA TDMA mode is hardware mode.
1: enable firmware mode.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_Enable_PTA_TDMA_Mode</name>
              <description>0: default, disable PTA TDMA mode
1: enable
TDMA mode:
a. WLAN_ACT default is high.
b. Hardware mode:
When NULL packet for BT had sent, hardware will notify PTA to start
TDMA mode.
Firmware mode:
When NULL packet for BT had sent, hardware will trigger an interrupt to
notify firmware. Then, firmware need to set TDMA_BT_START_NOTIFY
to notify PTA to start TDMA mode.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_Enable_Coexist_Tab_In_TDMA</name>
              <description>0: default, no matter which WLAN_ACT is high or low, PTA doesn't execute
co-exist table scheme
1: enable, When WLAN_ACT is high, PTA execute xo-exist table scheme</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_GPIO2_GPIO3_EXANGE_or_NO_BT_CCA</name>
              <description>Enable GPIO2 and GPIO3 exchange. (Note: need to enable mode2 and
enhance 3 wire)
If Enable RTK BT mode, set this bit to 1 to disable granting to BT device
when arbitration</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RTK_BT_Enable</name>
              <description>Enable RTK BT mode</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BT_Status_Report_Register</name>
          <addressOffset>0x0000077C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BT_PROFILE</name>
              <description>When WLAN received CMD_ID 0x3, it will recorder to this.</description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BT_POWER</name>
              <description>When WLAN received CMD_ID 0x2, it will recorder to this</description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BT_PREDECT_STATUS</name>
              <description>When WLAN received CMD_ID 0x0, it will recorder to this</description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BT_CMD_ID</name>
              <description>command information from BT</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BT_Interrupt_Control_Register</name>
          <addressOffset>0x00000780</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_WLAN_RPT_NOTIFY</name>
              <description>When firmware had prepared packet to send to BT, it need to set this bit to
notify hardware that it can transmit.
0: There isn't a valid packet in register" WLAN_RPT_ PKT".
1: There is a valid packet in register" WLAN_RPT_ PKT".</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_WLAN_RPT_AND_BT_QUERY</name>
              <description>Enable two interrupt:
1) PTA sent the report packet successfully
2) PTA sent a query packet
0: Disable
1: Enable</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_MAC_NULL_PKT_NOTIFY</name>
              <description>When MAC had sent NULL packet for BT and firmware also set nav_for_bt
bit, hardware triggers an interrupt to notify firmware.
0: Disable
1: Enable</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_BT_STSTUS_RPT</name>
              <description>When WLAN receive cmd_id "0", hardware trigger an interrupt to notify
firmware.
0: Disable
1: Enable</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_BT_POWER</name>
              <description>When WLAN received the packet including BT Power and check register
"BT_STATUS_RPT", if data contents aren't the same, hardware can trigger
an interrupt to notify firmware.
0: Disable
1: Enable</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_BT_CHANNEL</name>
              <description>When WLAN received the packet including BT channel number, hardware
can trigger an interrupt to notify firmware.
0: Disable
1: Enable</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_BT_SLOT_CHANGE</name>
              <description>When WLAN received the packet including that BT had multi-slots,
hardware can trigger an interrupt to notify firmware.
0: Disable
1: Enable</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_BT_PROFILE_OR_HID</name>
              <description>Enable two interrupt
1) When WLAN received the packet including that WLAN specific profile
and check register "BT_STATUS_RPT", if data contents aren't the same,
hardware can trigger an interrupt to notify firmware.
2) When WLAN received the report packet including HID information,
hardware will trigger an interrupt to notify firmware.
0: Disable
1: Enable</description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_WLAN_RPT_DATA</name>
              <description>Data contents, When the report packet had sent, hardware will clear this
register.</description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_TO_BT_CMDID</name>
              <description>Command id: 0x80~FF</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BT_DATA</name>
              <description>When WLAN received the packet BT sent, hardware will place data to this register in addition to CMD_ID 0x0 ~ 0x3.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WLAN_Report_Time_Out_Control_Register</name>
          <addressOffset>0x00000784</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_ISOLATION_CHK_0</name>
              <description>0: leave PTA
1: enter PTA</description>
              <bitRange>[31:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ISOLATION_EN</name>
              <description>Isolation table enable bit.
0: disable
1: enable</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WLAN_RPT_TO</name>
              <description>When WLANＨW received query packet, HW timer counts. If timer equals
to WLAN_RPT_TO and HW can"t send packet, it will give up query packet
at this time. When BT sent another query packet, WLAN HW need to send
the previous packet and it shouldn't trigger an interrupt to firmware. Unit:
4us.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BT_Isolation_Table_Register_Register_1</name>
          <addressOffset>0x00000788</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_ISOLATION_CHK_1</name>
              <description>0: leave PTA
1: enter PTA</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BT_Isolation_Table_and_interrupt_Register_2</name>
          <addressOffset>0x0000078C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BT_HID_ISR</name>
              <description>When WLAN received the report packet including HID information,
hardware will trigger an interrupt to notify firmware</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BT_QUERY_ISR</name>
              <description>When WLAN received a query packet, hardware triggers an interrupt to
notify firmware</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_MAC_NULL_PKT_NOTIFY_ISR</name>
              <description>When MAC had sent NULL packet for BT and firmware also set nav_for_bt
bit, hardware triggers an interrupt to notify firmware</description>
              <bitRange>[29:29]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_WLAN_RPT_ISR</name>
              <description>When PTA sent the report packet successfully, hardware triggers an interrupt
to notify firmware.</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BT_POWER_ISR</name>
              <description>When WLAN received the packet including BT Power and check register "BT_STATUS_RPT", if data contents aren't the same, hardware can trigger
an interrupt to notify firmware</description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BT_CHANNEL_ISR</name>
              <description>When WLAN received the packet including BT channel number, hardware
can trigger an interrupt to notify firmware.</description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BT_SLOT_CHANGE_ISR</name>
              <description>When WLAN received the packet including that BT had multi-slots,
hardware can trigger an interrupt to notify firmware</description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BT_PROFILE_ISR</name>
              <description>When WLAN received the packet including that WLAN specific profile and check register "BT_STATUS_RPT", if data contents aren't the same, hardware can trigger an interrupt to notify firmware.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_ISOLATION_CHK_2</name>
              <description>0: leave PTA
1: enter PTA</description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BT_TDMA_Time_Register</name>
          <addressOffset>0x00000790</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BT_TIME</name>
              <description>The time is that WLAN_ACT is low. Unit: us</description>
              <bitRange>[31:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BT_RPT_SAMPLE_RATE</name>
              <description>When wifi detected the raising edge of BT report packet, wifi need to counter
BT_RPT_SAMPLE_RATE. Then hw could detect which is high or low. Uint:
20 ns</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BT_ACT_Register</name>
          <addressOffset>0x00000794</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0000007F</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_B_AX_BT_BLE_EN</name>
              <description>Decide the GNT_BT_TX / RX 
0: GNT_BT_TX = GNT_BT &amp; BT_TX ;  GNT_BT_RX = GNT_BT &amp; BT_RX
1: GNT_BT_TX = GNT_BT &amp; (BT_TX | BT_BLE) ;  GNT_BT_RX = GNT_BT &amp; (BT_RX | BT_BLE)</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BT_EISR_EN</name>
              <description>BT eisr enable</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BT_ACT_FALLING_ISR</name>
              <description>When BT_ACT signal is falling edge, it will trigger an interrupt.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BT_ACT_RISING_ISR</name>
              <description>When BT_ACT signal is raising edge, it will trigger an interrupt</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_TDMA_TO_ISR</name>
              <description>When BT_TIME expired, it will trigger an interrupt.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BT_CH</name>
              <description>When hardware receive cm_id "1", it will recorder to this.</description>
              <bitRange>[6:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_LTR_IDLE_LATENCY_V2</name>
          <addressOffset>0x00000798</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x04444400</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_LTR_IDLE_LATENCY</name>
              <description>LTR idle latency.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_LTR_ACTIVE_LATENCY_V2</name>
          <addressOffset>0x0000079C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x02030405</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_LTR_ACTIVE_LATENCY</name>
              <description>LTR Active latency.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_OBFF_CTRL</name>
          <addressOffset>0x000007A0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x4A004010</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_LTR_CTRL</name>
              <description></description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LTR_IDLE_FLAG</name>
              <description></description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_LTR_ACT_FLAG</name>
              <description></description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_OBFF_CTRL</name>
              <description></description>
              <bitRange>[21:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_LTR_CTRL</name>
          <addressOffset>0x000007A4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x03ECECEC</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RX_VENDOR_ADV_EN</name>
              <description>when set, rx vendor adv function is true</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TX_VENDOR_ADV_EN</name>
              <description>when set, tx vendor adv function is true</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_OPT_SIG2</name>
              <description>For rx ofdm ppdu lsig signal filed check when rx vendor adv is true</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_OPT_SIG1</name>
              <description>For rx ofdm ppdu lsig signal filed check when rx vendor adv is true</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_INI_SIG</name>
              <description>For rx ofdm ppdu lsig signal filed check when rx vendor adv is true</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ANTTRN_CTR_V1</name>
          <addressOffset>0x000007B0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TRAIN_STA_ADDR1</name>
              <description>The Address of the trained station. Only available when
ADDR2_MATCH_EN = 1</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ANTTRN_CTR_1_V1</name>
          <addressOffset>0x000007B4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_ANTTRN_SWITCH</name>
              <description>Smart antenna use address cam or port register to search A2.
0:Use address cam
1:Use port register</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_APPEND_MACID_IN_RESP_EN</name>
              <description>Whether to append MACID in the rx descriptor of rx response packet</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ADDR2_MATCH_EN</name>
              <description>Enable the comparison of ADDR2 for the rx packet..</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ANTTRN_EN</name>
              <description>Enable the antenna training function</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TRAIN_STA_ADDR2</name>
              <description>The Address of the trained station. Only available when
ADDR2_MATCH_EN = 1</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RX_INT_CTRL</name>
          <addressOffset>0x000007B8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RX_ACKMD_EN</name>
              <description>Enable ACK/BA/MU-BA frame more data interrupt</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WMAC_STATE_CTRL</name>
          <addressOffset>0x000007BC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_WMAC_PSF_BCNTIMER_RST</name>
              <description>write pluse to reset fsm of wmac_psf_bcntimer</description>
              <bitRange>[10:10]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_WMAC_TRXPTCL_TXCTL_RST</name>
              <description>write pluse to reset fsm of wmac_trxptcl_txctl</description>
              <bitRange>[9:9]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_WMAC_TRXPTCL_RESP_RST</name>
              <description>write pluse to reset fsm of wmac_ptrxptcl_resp</description>
              <bitRange>[8:8]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_WMAC_MACTX_CTL_PPDU_RST</name>
              <description>write pluse to reset fsm of mactx_ctl</description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_WMAC_MACTX_CTL_RST</name>
              <description>write pluse to reset fsm of ppdu control in mactx_ctl</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_IQ_DUMP</name>
          <addressOffset>0x000007C0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_DUMP_OK_ADDR</name>
              <description>[31] : dump signal addr has round up
[30:16] : dump finish addr in txpktbuffer</description>
              <bitRange>[31:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_MACDBG_TRIG_IQDUMP</name>
              <description>Enable dump bb ADC signal trigger from MAC debug port which controled by r_LEVEL_PULSE_SEL.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_TRIG_TIME_SEL</name>
              <description>dump ok time to finish dump signal(unit is 1us)</description>
              <bitRange>[14:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_MAC_TRIG_SEL</name>
              <description>dump bb ADC sel mac strigger even
2'b00 : rxpkt ok trig dump ok
2'b01 : rxpkt_fauil trig dump ok
2'b10 : rxpkt cca rise edge to trig dump ok</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MAC_TRIG_REG</name>
              <description>dump bb ADC sel mac strigger even
write this reg to 1 to trig dump finish</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_LEVEL_PULSE_SEL</name>
              <description>if dump bb ADC signal :
[3] for sel mac trigger event
if dump mac dbg signal
[4:3] : 2'b00 : level signal match
[4:3] : 2'b01 : posedge match
[4:3] : 2'b10 : negdge match</description>
              <bitRange>[4:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_en_LA_MAC</name>
              <description>enable dump mac dbg signal</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_EN_IQDUMP</name>
              <description>enable dump bb ADC signal</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_IQDATA_DUMP</name>
              <description>enable data dump for txpktbuffer high 64K</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MASK_LA_MAC</name>
          <addressOffset>0x000007C4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MASK_LA_MAC</name>
              <description></description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MATCH_REF_MAC</name>
          <addressOffset>0x000007C8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MATCH_REF_MAC</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WMAC_FTM_LA_CTL</name>
          <addressOffset>0x000007CC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xC0000080</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_SEL_DEBUG_DATA</name>
              <description>11: data write to sram
10: data after sync_fifo
01: input data (TXD/RXD/IQ_DMA_DATA from BB)
00: RSVD</description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_TIMEOUT</name>
              <description>Set this bit to 1 to reset mdpk read pointer</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_RE_START</name>
              <description>Before setting 0x7C0[1:0] =2'b11, set this bit to 1 to enable MDPK access mode</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LA_MAC_TIMEOUT_UNIT_SEL</name>
              <description>LA mode triggered by mac debug port timeout value unit selection.
2'b00: 1us, 2'b01:32us, 2'b10: 1ms, 2'b11:RSVD</description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LA_MAC_TIMEOUT_VALUE</name>
              <description>LA mode triggered by mac debug port timeout value, available with non-zero value.</description>
              <bitRange>[25:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LEVEL_PULSE_SEL_EXT</name>
              <description>LA mode triggered by mac debug port timeout event</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TRIG_TIME_UNIT_SEL</name>
              <description>Select trigger time unit of 0x7C0[14:8].
3'b000 : 1us , 3'b001 : 2us ,  3'b010 : 4us , 
3'b011 : 8us , 3'b100 : 16us ,  3'b101 : 32us ,
3'b110 : 64us, 3'b111 : RSV</description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_TXD_DEBUG</name>
              <description>LA MODE function.
enable mactx debug mode</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_RXD_DEBUG</name>
              <description>LA MODE function.
enable macrx debug mode</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TRX_TRIG_SEL_DEBUG</name>
              <description>LA MODE function.
*1: select trig_stop signals from debug port, in MACTX/MACRX mode</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TRX_TRIG_SEL_PATT</name>
              <description>LA MODE function. 
*1: select trig_stop signals from pattern match (see 0x17F0~0x17FC), in MACTX/MACRX mode</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_IQD_LEN_BREAK</name>
              <description>LA MODE function. 
*1: after "trig_stop" signal asserted, if the iqdata's length over the BIT_IQD_LENGTH_REF, finish the iqdump process 
*0: only used TRIG_TIME finish the iqdump process</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_IQD_LENGTH_REF</name>
              <description>LA MODE function. Valid when BIT_EN_IQD_LEN_BREAK = 1
Used to finish IQDUMP, unit is (8KB + 1bit)</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TRX_TRIG_SEL_WMAC</name>
              <description>LA MODE function. 
*1: select trig_stop signals from mactx or macrx, in MACTX/MACRX mode</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXFTM_TXACK_SC</name>
              <description>When HW receive FTM pkt, HW will use RX FTM BW as response ACK TXBW.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXFTM_TXACK_BW</name>
              <description>When HW receive FTM pkt, HW will use RX FTM SC as response ACK TXSC.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_TDE_DEBUG</name>
              <description>LA MODE function.
enable txdma debug mode</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXFTM_EN</name>
              <description>If BIT_FTM_TYPE = 1 &amp;&amp; BIT_RXFTM_EN=1, 
 HW will parsing rx packet, to find FTM request frame.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXFTMREQ_BYDRV</name>
              <description>If set this bit to 1,Rx FTMREQ/FTM can be receive into rxpktbuffer.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXFTMREQ_EN</name>
              <description>If BIT_FTM_TYPE = 1 &amp;&amp; BIT_RXFTMREQ_EN=1,
 HW will parsing rx packet, to find FTM request frame.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FTM_EN</name>
              <description>Fine timing measurement function; 0: Disable 1:enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_OFDM_CCK_LEN_MASK</name>
          <addressOffset>0x000007D0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0FFF0FFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RX_OFDM_LEN_TH</name>
              <description>rx ofdm len over this len to drop pkt(not for ht/vht)</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RX_CCK_LEN_TH</name>
              <description>rx cck len over this length to drop pkt</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WMAC_OPTION_FUNCTION_1</name>
          <addressOffset>0x000007D4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x5080A000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_r_WMAC_RXFIFO_FULL_TH_1</name>
              <description>csi report mac pause bb almost full threshold</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_RX_SYNCFIFO_SYNC_1</name>
              <description></description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_RXRST_DLY_1</name>
              <description>when this bit is set 1, rxrst pulse lasts for 20 cycle of MAC clock, when this bit is set 0, rxrst pulse lasts for 10 cycle of MAC clock,</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_SRCH_TXRPT_REF_DROP_1</name>
              <description>when this bit is set 1, reference macid drop information when macid search</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_SRCH_TXRPT_UA1_1</name>
              <description>when this bit is set 1, use tx A1 to search txrpt when rx  ack/cts, when BIT_r_WMAC_SRCH_TXRPT_TYPE is set 0, BIT_r_WMAC_SRCH_TXRPT_UA1 should be set 1</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_SRCH_TXRPT_TYPE_1</name>
              <description>for rx ack/cts pkt not to search txrpt buffer macid</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_NDP_RST_1</name>
              <description>rx pkt is ndp to clr macrx_active</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_POWINT_EN_1</name>
              <description>enable rx pkt fc column power bit int for FISR</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_SRCH_TXRPT_PERPKT_1</name>
              <description>enable search txrpt buffer for macid every pkt</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_SRCH_TXRPT_MID_1</name>
              <description>enable search txrpt buffer for macid</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_PFIN_TOEN_1</name>
              <description>rx fifo fsm flush state timeout to error stage</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_FIL_SECERR_1</name>
              <description>sec len error drop(sec len is zero)</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_FIL_CTLPKTLEN_1</name>
              <description>drop the rx pkt if the rx ctrl pkt len large than r_WMAC_RX_FIL_LEN</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_FIL_FCTYPE_1</name>
              <description>drop the ofdm pkt if the rx ofdm leg pkt fc type is 2'b11</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_FIL_FCPROVER_1</name>
              <description>drop the ofdm pkt if the rx ofdm leg pkt fc version illegal</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_PHYSTS_SNIF_1</name>
              <description>append sniff info after phy status</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_PHYSTS_PLCP_1</name>
              <description>append plcp header after phy status</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_MAC_TCR_VBONF_RD_1</name>
              <description>vbon neg edge to read all data of mac rx sync fifo for rx parser</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_TCR_MPAR_NDP_1</name>
              <description>nop ok check bb ndp vld &amp; mac rx ndp check ok</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_NDP_FILTER_1</name>
              <description>mac rx ndp pkt set ppdu len to 0</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_RXLEN_SEL_1</name>
              <description>rx vht len sel lsig len
VHT PPDU length selection
0: 收到VHT PPDU PKT 會根據 VHTSIGB PPDU length 來parsing 與計算
1: 收到VHT PPDU PKT 會根據 BB 算的 LSIG length 來parsing 與計算</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_RXLEN_SEL1_1</name>
              <description>rx vht len sel lsig len if sigb len is more than lsig len</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_OFDM_FILTER_1</name>
              <description>RSVD</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_CHK_OFDM_LEN_1</name>
              <description>enable to check ofdm len</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_CHK_CCK_LEN_1</name>
              <description>enable to check rx cck len</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RX_FILTER_FUNCTION</name>
          <addressOffset>0x000007D8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x30810041</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RXHANG_EN</name>
              <description>Force read error content from fifo to solve rxhang.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_MHRDDY_LATCH</name>
              <description>Adjust mach_rdy timing if rx_parser and rxpktfifo FSM is not sync.</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_MHRDDY_CLR</name>
              <description>Reset mach_rdy_latch when rx parser begin parsing mac header.</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_RXPKTCTL_FSM_BASED_MPDURDY1</name>
              <description>Adjust mpdu_rdy timing to solve FSM behavier error.</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_DIS_VHT_PLCP_CHK_MU</name>
              <description>Disable check sigb crc value of MU plcp header.</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_CHK_DELIMIT_LEN</name>
              <description>Drop mpdu if delimeter mpdu length smaller than mac header length + 4.</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_REAPTER_ADDR_MATCH</name>
              <description>when this bit is set 1, physical address is matched when rx A1 is equal to tx A2, used in repeater mode</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_RXPKTCTL_FSM_BASED_MPDURDY</name>
              <description>when this bit is set 1, rxpktfifo_ctl FSM jumps based on mpdu_valid(all MPDU data has been transferred to rxpktbuffer), when this bit is set 0, rxpktfifo_ctl FSM jumps based on fcs_valid(all MPDU data has been parsed by rx_parser)</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_LATCH_MACHRDY</name>
              <description>when this bit set 1,mach_rdy signal is latched to make sure that rxpktfifo_ctl can detect it</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_RXFIL_REND</name>
              <description>when this bit set 1,icvmic_valid signal is cleared when icvmic_rdy is valid(ICV/MIC is parsed)</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_MPDURDY_CLR</name>
              <description>when the bit is set 1,  the last MPDU which will be transferred to rxpktfifo is ready and error occurs, mpdu_rdy signal is also valid(is means all MPDU data has been transferred to rxpktbuffer)</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_CLRRXSEC</name>
              <description>If new rx pkt is coming, reset the previous rx key search result.</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_RXFIL_RDEL</name>
              <description>If new rx pkt is coming, reset the rxpkt_ctl FSM after parsing plcp.</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_RXFIL_FCSE</name>
              <description>If rx pkt is not ampdu and rejected, 
reset rxpkt_ctl FSM immediately after parsing header</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_RXFIL_MESH_DEL</name>
              <description>drop the ofdm pkt if the rx ofdm leg pkt fc type is 2'b11</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_RXFIL_MASKM</name>
              <description>drop the ofdm pkt if the rx ofdm leg pkt fc type is 2'b11</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_RX_FIL_LEN_2</name>
              <description>use with BIT_r_WMAC_FIL_CTLPKTLEN</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RSVD</name>
          <addressOffset>0x000007DC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>dummy</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WMAC_OPTION_FUNCTION_3</name>
          <addressOffset>0x000007E0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x685845A5</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_WMAC_RST_BB_CNT</name>
              <description>macclk cycle number of wmac_rst_bb signal</description>
              <bitRange>[31:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_WAIT_PHY_REF</name>
              <description>mactx hang handle, reset mactx if the phy_txen is set and wait the begin pulse of phy_txon timeout</description>
              <bitRange>[28:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_CCK_LOCKED_CLK</name>
              <description>indicate that the transmit frequency and symbol clocks are derived from the same oscillator</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_MORE_DATA</name>
              <description>more data field in FC for ack/ba</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_TXNDP_SIGB</name>
              <description>SIGB for NDP packet when BW =40MHz</description>
              <bitRange>[20:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TXCMD_DBG_SEL</name>
          <addressOffset>0x000007E4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TXCMD_DBG_SHIFT</name>
              <description></description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXCMD_DBG_SEL</name>
              <description></description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WMAC_DBG_SHIFT</name>
          <addressOffset>0x000007E8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MACTX_CMD_SHIFT</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WSEC_OPTION</name>
          <addressOffset>0x000007EC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00780014</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RXDEC_BM_DIS_CHKFC</name>
              <description>when set, disable check rx multicast management pkt protected frame in frame control when 0x680[3] and 0x7EC[22] are valid</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXDEC_BM_MGNT</name>
              <description>decryption enable of rx multicast management pkt, 0x680[3] shall also be set valid</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXENC_BM_MGNT</name>
              <description>encryption enable of tx multicast management pkt, 0x680[2] shall also be set valid</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXDEC_UNI_MGNT</name>
              <description>decryption enable of rx unicast management pkt, 0x680[3] shall also be set valid</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXENC_UNI_MGNT</name>
              <description>encryption enable of tx unicast management pkt, 0x680[2] shall also be set valid</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_SEC_MASKIV</name>
              <description>MASK IV[15:8] for GCMP security</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_SEC_PN_SEL</name>
              <description>Security GCMP  header PN selection</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WAPI_FC_NOMASK</name>
              <description>If set to 1, enable old WAPI ADD format, don't mask FC bit4-6, bit8-15
If set to 0, enable new WAPI ADD format, mask FC bit15 to 0</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WAPI_QC_NOMASK</name>
              <description>If set to 1, enable old WAPI ADD format, don't mask QC bit4-6, bit8-15
If set to 0, enable new WAPI ADD format, mask QC bit4-6, bit8-15 to 0</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_GCM_WAPI_FC_NOMASK</name>
              <description>If set to 1, enable old GCM-WAPI ADD format, don't mask FC bit4-6, bit8-15
If set to 0, enable new GCM-WAPI ADD format, mask FC bit15 to 0</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BT_TIME_CNT</name>
              <description>US timer counter boundary of BTCOEXIST</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RTS_ADDRESS_0</name>
          <addressOffset>0x000007F0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_r_WMAC_RTS_ADDR0</name>
              <description>if 0x604[31]=1 &amp; rts is multicast, use this value as Address1 of RTS</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RTS_ADDRESS_0_1</name>
          <addressOffset>0x000007F4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_r_WMAC_RTS_ADDR0_1</name>
              <description>if 0x604[31]=1 &amp; rts is multicast, use this value as Address1 of RTS</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RTS_ADDRESS_1</name>
          <addressOffset>0x000007F8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_r_WMAC_RTS_ADDR1</name>
              <description>if 0x604[31]=1 &amp; rts is multicast, use this value as Address1 of RTS</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RTS_ADDRESS_1_1</name>
          <addressOffset>0x000007FC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_r_WMAC_RTS_ADDR1_1</name>
              <description>if 0x604[31]=1 &amp; rts is multicast, use this value as Address1 of RTS</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
  </peripherals>
</device>
