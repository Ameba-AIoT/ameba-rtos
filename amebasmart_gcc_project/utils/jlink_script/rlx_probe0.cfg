/***************************************************************************
    filename:            : rlx_probe.cfg  
    discreption          : set parameters for RLX Probe here
                             -------------------
    created              : Apr 18 2009
    copyright            : (C) 2009 by Realtek Co.
    email                : yf_chen@realsil.com.cn
    ext.                 : 6134
***************************************************************************/
/**************************************************************************
                PROCESSOR DEFINE
             default: PROCESSOR = "ARMM3";
             support : ARMM3,CORTEX-M3,CM3,ARMCORTEX-M3
**************************************************************************/
PROCESSOR = "KM0";
ARM_SWD_EN
TCK_FREQUENCY = "4MHz";
ARM_SWD_WAIT_CNT = 0x4;

//for multi-probe use, exclusive USB ID for each probe
//if only one probe used ,please do not modify it. 
USB_ID = 0;
CORE_ID = 0;
//TEST_PROBE_MEM_WR
/**************************************************************************
                TCP port define
          caution: please input decimal value 
**************************************************************************/
port = 2331;

IF_TYPE = USB11;  //"USB11", "ETHERNET"
FIRMWARE_AUTO_UPDATE = no;
FIRMWARE_FILE_NAME = "E:\proj\EJTAG\IP\FPGA\XC3S250E\RLX_PROBE1.8\for_arm\probe_arm\rlx_probe20_arm\rlx_probe20_arm.xsvf";//rlx_probe20_usb_xcf04s.xsvf";//"rlx_probe20_new.xsvf";// _nic_xcf04s.xsvf";

/**************************************************************************
                Access TAP Number define
  description : if there is JTAG chain ,
                please set the tap number of processor
                the order is that the num1 stand for the 
                TAP whose TDI is connected to RLX Probe
**************************************************************************/
ACC_JTAG_TAP_NUM = 1;
ACC_ARM_AP_NUM = 1 ;
IGNORE_ARM_AP_NUM0 = 0;
IGNORE_ARM_AP_NUM1 = 2;
IGNORE_ARM_AP_NUM2 = 3;
IGNORE_ARM_AP_NUM3 = 4;
SOFTBP_DISABLE
/*************************************************************************
                 Target Processor Endian Mode Setting
                 example :BIG_ENDIAN = "YES";//for big endian
                          BIG_ENDIAN = "NO";//for little endian
*************************************************************************/
BIG_ENDIAN = "no";

/**************************************************************************
                Debug message option
**************************************************************************/
GDB_MESSAGE_SHOW = "yes";//GDB message show or not,control flag
DBG_MESSAGE_SHOW = "YES";//debug message show or not ,control flag
GEN_LOG_FILE = "no";//generate log file of debug message or not
/**************************************************************************
                Reset TARGET Processor before debug 
                recommanded : no
**************************************************************************/
RESET_TARGET_PROCESSOR = "no";

//ARM_RST_HALT

RECONNECT_INIT_OFF;


//ERROR_NO_EXIT


CM_EXP_ALL_EN
//CM_EXP_HARD_BUS_ERR_EN
//CM_EXP_BUS_ERR_EN
//CM_EXP_CHK_ERR_EN
//CM_EXP_HARD_ERR_EN
//CM_EXP_INT_ERR_EN
//CM_EXP_MEMM_ERR_EN
//CM_EXP_NOCP_ERR_EN
//CM_EXP_STAT_ERR_EN

//CM3_FPB_HB_ENABLE

//PCSAMPLE_ENABLE;
//PCSAMPLE_FILE_NAME = "c:\pcsample.txt";

//DEJAGNU_TEST = yes;

//DMA_ENABLE_ALL
/**************************************************************************
               DMEM range define
  description: to avoid DMA operation to DMEM
**************************************************************************/
//DMEM = RANGE (0x00110000, 0x00111fff);//set DMEM range and IMEM range
//IMEM = RANGE (0x00010000, 0x00011fff);

/**************************************************************************
               Physical memory region define
  description:
               Address Range :  BASE address to TOP address
               access mode : DMA or PRACC
               PWE :  
               WR : means read and write ,R means read only
               WER : means flash address(write before erase)
               WRL : means limited read/write such as some registers 
               //undefined address access will be omitted by probe
**************************************************************************/
//MC   0x00000000,0x1fffffff, WR, DMA    // RAM,8M
// MC   0x00000000,0x1fffffff, WR, JAM    // RAM,8M
// MC   0x1FC00000,0x1FFFFFFF, WER, DMA   // Boot ROM,4M
// MC   0x1d010000,0x1d01FFFF, WRL, DMA    // periphral registers
// MC   0xff200000,0xff3fffff, WR, PRACC  // DSU and probe memory
MC 0xefff0000, 0xefffffff, NON
MC 0xffff0000, 0xffffffff, NON


//exec test
//add your own initial code here
//dv "Finished reading rlx_probe.cfg\n"
//console
//end of file


//console

