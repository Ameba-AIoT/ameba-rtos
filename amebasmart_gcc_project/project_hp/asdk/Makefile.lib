
WIFI_MAKE_DIR = make/wlan
APP_LIB_DIR = $(ROOTDIR)/lib/application

ifeq ($(CONFIG_AUDIO_EN),y)
LINK_APP_LIB += $(APP_LIB_DIR)/lib_ac3.a
LINK_APP_LIB += $(APP_LIB_DIR)/lib_amr.a
LINK_APP_LIB += $(APP_LIB_DIR)/lib_haac.a
#LINK_APP_LIB += $(APP_LIB_DIR)/lib_hls.a
LINK_APP_LIB += $(APP_LIB_DIR)/lib_hmp3.a
#LINK_APP_LIB += $(APP_LIB_DIR)/lib_m4a.a
LINK_APP_LIB += $(APP_LIB_DIR)/lib_m4a_self.a
LINK_APP_LIB += $(APP_LIB_DIR)/lib_mp3.a
LINK_APP_LIB += $(APP_LIB_DIR)/lib_flac.a
LINK_APP_LIB += $(APP_LIB_DIR)/lib_ekho.a
LINK_APP_LIB += $(APP_LIB_DIR)/lib_gsm610.a
#for cyberon tts
#LINK_APP_LIB += $(APP_LIB_DIR)/LIBtts2.a
LINK_APP_LIB += $(APP_LIB_DIR)/lib_opusfile.a
LINK_APP_LIB += $(APP_LIB_DIR)/lib_opusenc.a
LINK_APP_LIB += $(APP_LIB_DIR)/lib_libogg.a
LINK_APP_LIB += $(APP_LIB_DIR)/lib_opus.a

# MMF LIBRARY
# LINK_APP_LIB += $(APP_LIB_DIR)/lib_rtsp.a
# LINK_APP_LIB += $(APP_LIB_DIR)/lib_g711.a
# LINK_APP_LIB += $(APP_LIB_DIR)/lib_haac.a
# LINK_APP_LIB += $(APP_LIB_DIR)/lib_faac.a
LINK_APP_LIB += $(APP_LIB_DIR)/lib_cmsis_dsp.a
endif

ifeq ($(CONFIG_BT), y)
ifeq ($(CONFIG_BT_AUDIO_CODEC_SUPPORT), y)
LINK_THIRD_APP_LIB += $(APP_LIB_DIR)/lib_btcodec.a
endif
ifneq ($(CONFIG_BT_ZEPHYR), y)
ifeq ($(CONFIG_BT_BLE_ONLY), y)
LINK_THIRD_APP_LIB += $(BASEDIR)/component/bluetooth/rtk_stack/platform/amebasmart/lib/km4/ble_only/btgap.a
else ifeq ($(CONFIG_BT_DUAL_MODE), y)
LINK_THIRD_APP_LIB += $(BASEDIR)/component/bluetooth/rtk_stack/platform/amebasmart/lib/km4/dual_mode/btgap.a
LINK_THIRD_APP_LIB += $(BASEDIR)/component/bluetooth/rtk_stack/platform/amebasmart/lib/km4/bt_mgr.a
endif
LINK_THIRD_APP_LIB += $(BASEDIR)/component/bluetooth/rtk_stack/platform/amebasmart/lib/km4/leaudio.a
LINK_THIRD_APP_LIB += $(BASEDIR)/component/bluetooth/rtk_stack/platform/amebasmart/lib/km4/ble_mgr.a
LINK_THIRD_APP_LIB += $(BASEDIR)/component/bluetooth/rtk_stack/platform/amebasmart/lib/km4/sysm.a
ifeq ($(findstring y, $(CONFIG_BT_MESH_PROVISIONER_SUPPORT) $(CONFIG_BT_MESH_DEVICE_SUPPORT)), y)
LINK_THIRD_APP_LIB += $(BASEDIR)/component/bluetooth/rtk_stack/src/mesh/lib/amebasmart/km4/btmesh.a
endif
endif
endif


APP_LIB = $(APP_LIB_DIR)/lib_wps.a \
	$(APP_LIB_DIR)/lib_httpc.a \
	$(APP_LIB_DIR)/lib_httpd.a \
	$(APP_LIB_DIR)/lib_websocket.a \
	#$(APP_LIB_DIR)/lib_coap.a
	#$(APP_LIB_DIR)/lib_eap.a
	#$(APP_LIB_DIR)/lib_mdns.a 

ifeq ($(CONFIG_WLAN),y)

# AP
ifeq ($(CONFIG_AS_INIC_AP), y)
LINK_APP_LIB += $(APP_LIB)

# NP
else ifeq ($(CONFIG_AS_INIC_NP), y)

LINK_APP_LIB += $(APP_LIB_DIR)/lib_coex.a

#Single core
else ifeq ($(CONFIG_SINGLE_CORE_WIFI), y)
LINK_APP_LIB += $(APP_LIB)

ifeq ($(CONFIG_MP_INCLUDED), y)
LINK_APP_LIB += $(APP_LIB_DIR)/lib_wps.a
endif
LINK_APP_LIB += $(APP_LIB_DIR)/lib_coex.a
endif

endif

ifeq ($(findstring y, $(CONFIG_USB_HOST_EN)), y)
LINK_APP_LIB += $(APP_LIB_DIR)/lib_usbh.a
endif
ifeq ($(findstring y, $(CONFIG_USB_DEVICE_EN)), y)
LINK_APP_LIB += $(APP_LIB_DIR)/lib_usbd.a
endif

#soc
LINK_LOADER_LIB += $(ROOTDIR)/lib/soc/lib_bootloader.a
LINK_LOADER_LIB += $(ROOTDIR)/lib/soc/lib_crashdump.a

LINK_APP_LIB += $(ROOTDIR)/lib/soc/lib_pmc.a
LINK_APP_LIB += $(ROOTDIR)/lib/soc/lib_crashdump.a

#audio
ifneq ($(CONFIG_MEDIA_PLAYER)$(CONFIG_MEDIA_PLAYER_LITE),)
LINK_APP_LIB += $(APP_LIB_DIR)/lib_playback.a
ifeq ($(CONFIG_MEDIA_CODEC_AAC),y)
LINK_APP_LIB += $(APP_LIB_DIR)/lib_fdkaac.a
endif
ifeq ($(CONFIG_MEDIA_CODEC_HAAC),y)
LINK_APP_LIB += $(APP_LIB_DIR)/lib_haac.a
endif
ifeq ($(CONFIG_MEDIA_CODEC_OPUS),y)
LINK_APP_LIB += $(APP_LIB_DIR)/lib_opus.a
endif
ifeq ($(CONFIG_MEDIA_DEMUX_FLAC),y)
LINK_APP_LIB += $(APP_LIB_DIR)/lib_flac.a
endif
ifeq ($(CONFIG_MEDIA_DEMUX_OGG),y)
LINK_APP_LIB += $(APP_LIB_DIR)/lib_vorbisdec.a
endif

endif

ifeq ($(CONFIG_AUDIO_MIXER),y)
LINK_APP_LIB += $(APP_LIB_DIR)/lib_audio_mixer.a
else ifeq ($(CONFIG_AUDIO_PASSTHROUGH),y)
LINK_APP_LIB += $(APP_LIB_DIR)/lib_audio_passthrough.a
endif

ifeq ($(CONFIG_IMQ_EN),y)
LINK_APP_LIB += $(APP_LIB_DIR)/lib_rpc.a
endif
ifneq ($(CONFIG_AUDIO_RPC_AFE)$(CONFIG_AUDIO_LOCAL_AFE)$(CONFIG_AUDIO_FWK),)
LINK_APP_LIB += $(APP_LIB_DIR)/lib_audio_hal.a
LINK_APP_LIB += $(APP_LIB_DIR)/lib_base.a
endif

lib_bootloader: prebuild copy_ld_img2 make_subdirs_lib_boot
lib_image2: prebuild copy_ld_img2 make_subdirs_lib_img2

ifneq ($(wildcard ./$(WIFI_MAKE_DIR)/Makefile.lib.wifi),)
include ./$(WIFI_MAKE_DIR)/Makefile.lib.wifi
make_subdirs_lib_img2: make_wifi_lib
endif

#*****************************************************************************#
#                      RULES TO CREATE DIRECTORY                              #
#*****************************************************************************#

make_subdirs_lib_boot:
	@ rm -f $(RAM_OBJS_LIST)
# build loader libs
	@+$(MAKE) -C make_lib/bootloader_lib all
	@+$(MAKE) -C make_lib/chipinfo_lib all
	@+$(MAKE) -C make_lib/crashdump_lib all

make_subdirs_lib_img2:
	@ rm -f $(RAM_OBJS_LIST)
# build pmc libs
	@+$(MAKE) -C make_lib/pmc_lib all

ifeq ($(CONFIG_WLAN), y)

# AP
ifeq ($(CONFIG_AS_INIC_AP), y)
	@+$(MAKE) -C make/wps all
	@+$(MAKE) -C make/network/httpc all
	@+$(MAKE) -C make/network/httpd all
	@+$(MAKE) -C make/network/websocket all
	#@+$(MAKE) -C make/network/eap all
	#@+$(MAKE) -C make/network/http2 all
	#@+$(MAKE) -C make/network/tftp all

# NP
else ifeq ($(CONFIG_AS_INIC_NP),y)
	@+$(MAKE) -C make/rtk_coex all
# Single core
else ifeq ($(CONFIG_SINGLE_CORE_WIFI),y)
	@+$(MAKE) -C make/wps all
	@+$(MAKE) -C make/network/httpc all
	@+$(MAKE) -C make/network/httpd all
	@+$(MAKE) -C make/network/websocket all
	#@+$(MAKE) -C make/network/eap all
	#@+$(MAKE) -C make/network/http2 all
	#@+$(MAKE) -C make/network/tftp all
	@+$(MAKE) -C make/rtk_coex all
endif
endif
	#@+$(MAKE) -C make/file_system/dct all
ifeq ($(CONFIG_AUDIO_EN),y)
	@+$(MAKE) -C make/cmsis-dsp all
	#MMF LIBRARY
 	#@+$(MAKE) -C make/audio/g711 all
 	#@+$(MAKE) -C make/audio/faac all
 	#@+$(MAKE) -C make/audio/haac all
	#@+$(MAKE) -C make/network/rtsp all
	+$(MAKE) -C make/audio/ac3 all
	+$(MAKE) -C make/audio/amr	all
	+$(MAKE) -C make/audio/flac all
	+$(MAKE) -C make/audio/haac all
	+$(MAKE) -C make/audio/hmp3 all
	+$(MAKE) -C make/audio/mp3 all
	+$(MAKE) -C make/audio/gsm610 all
	+$(MAKE) -C make/audio/ekho all
	+$(MAKE) -C make/audio/libogg-1.3.3 all
	+$(MAKE) -C make/audio/opus-1.3.1 all
	+$(MAKE) -C make/audio/opusfile-0.11 all
	+$(MAKE) -C make/audio/libopusenc-0.2.1 all
	+$(MAKE) -C make/audio/m4a_selfparse all
endif
	@+$(MAKE) -C make/usb_otg/device/lib all
	@+$(MAKE) -C make/usb_otg/host/lib all

ifeq ($(CONFIG_BT), y)
ifeq ($(CONFIG_BT_AUDIO_CODEC_SUPPORT), y)
	@+$(MAKE) -C make/bluetooth/bt_audio/bt_codec all
endif
endif
# build audio libs
	@+$(MAKE) -C make/audio lib
# build utils libs
	@+$(MAKE) -C make/utils lib
