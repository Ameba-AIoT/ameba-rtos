
# ATTENTION:
# Brief explaination:
#
# 1. "make menuconfig" will see this file.
# 2. make menuconfig save file will produce "/.config" and "/autoconf.h" two files.
# 3. makefile will see the "/.config" file
# 4. C code will see the "/autoconf.h"  
#
# in this file, declare variable xxx, please add the prefix "CONFIG_" word.  Example: "CONFIG_XXX"


#===========================================================================
mainmenu_name 'RTL Bootcode Configuration'

separator "GeneralStart"

comment '--------------General config------------'

mainmenu_option next_comment
comment '< CONFIG BOOT OPTION'

bool "XIP_FLASH "  						CONFIG_XIP_FLASH
endmenu

mainmenu_option next_comment
comment '< CLINTWOOD Config'

bool "Enable CLINTWOOD TEST "  						CONFIG_CLINTWOOD
	if [ "$CONFIG_CLINTWOOD" = "y" ]; then
		define_bool CONFIG_CLINTWOOD_FOR_LP y
		define_bool CONFIG_CLINTWOOD_FOR_HP y
		define_bool CONFIG_CLINTWOOD_FOR_AP y
		define_bool CONFIG_AUDIO_FWK_FOR_HP y
		define_bool CONFIG_AUDIO_PASSTHROUGH_FOR_HP y
		define_bool CONFIG_AUDIO_MIXER_FOR_HP n
		define_bool CONFIG_IMQ_EN_FOR_HP y
		define_bool CONFIG_IMQ_EN_FOR_AP y
	fi
endmenu

mainmenu_option next_comment
comment '< CONFIG Mass Production'
bool "Enable MP"			CONFIG_MP_INCLUDED
if [ "$CONFIG_MP_INCLUDED" = "y" ]; then
	choice 'Enable MP SHRINK'	"normal			CONFIG_MP_NORMAL \
								shrink			CONFIG_MP_SHRINK	\
								" shrink
fi
endmenu

mainmenu_option next_comment
comment '< CONFIG Linux'
bool "Enable Linux (CA32 Linux Need KM4 Support)"			CONFIG_LINUX_FW_EN
endmenu

mainmenu_option next_comment
comment '< CONFIG Shell CMD'
bool "Enable New ATCMD"		CONFIG_NEW_ATCMD
if [ "$CONFIG_NEW_ATCMD" = "y" ]; then
choice 'ATCMD IO Type'	"LOGUART	CONFIG_ATCMD_IO_LOGUART \
						UART		CONFIG_ATCMD_IO_UART \
						"
fi
bool "Enable Longer CMD"	CONFIG_LONGER_CMD
endmenu

mainmenu_option next_comment
comment '< CONFIG VFS'
bool "Enable VFS LITTLEFS"                     CONFIG_VFS_LITTLEFS_INCLUDED
bool "Enable VFS FATFS"			CONFIG_VFS_FATFS_INCLUDED
if [ "$CONFIG_VFS_FATFS_INCLUDED" = "y" ]; then
choice 'FATFS Memory Type'	"SD			FATFS_DISK_SD \
							FlASH		FATFS_DISK_FLASH \
							"
fi
endmenu

mainmenu_option next_comment
comment '< CONFIG OTA OPTION'
bool "Upgrade Bootloader"		CONFIG_UPGRADE_BOOTLOADER
endmenu

comment '--------------Network Config Start------------'

mainmenu_option next_comment
comment '< CONFIG Application Processor'

choice 'Select AP Core'			"CA32	CONFIG_AP_CORE_CA32 \
								KM4	CONFIG_AP_CORE_KM4 \
								" CA32
endmenu #CONFIG Application Processor

mainmenu_option next_comment
comment '< CONFIG BT'
bool "Enable BT"														CONFIG_BT_MENU
if [ "$CONFIG_BT_MENU" = "y" ]; then
	if [ "$CONFIG_AP_CORE_CA32" = "y" ]; then
		define_bool CONFIG_BT_CA32_SINGLE_CORE y
		define_bool CONFIG_BT_KM4_SINGLE_CORE n
	fi
	if [ "$CONFIG_AP_CORE_KM4" = "y" ]; then
		define_bool CONFIG_BT_CA32_SINGLE_CORE n
		define_bool CONFIG_BT_KM4_SINGLE_CORE y
	fi
	if [ "$CONFIG_BT_CA32_SINGLE_CORE" = "y" ]; then
		define_bool CONFIG_BT_FOR_AP y
		define_bool CONFIG_FTL_ENABLED_FOR_AP y
		choice 'BT Mode Selection'	"BLE_ONLY							CONFIG_BT_BLE_ONLY_MENU \
									DUAL_MODE							CONFIG_BT_DUAL_MODE_MENU \
									" DUAL_MODE
		if [ "$CONFIG_BT_BLE_ONLY_MENU" = "y" ]; then
			define_bool CONFIG_BT_BLE_ONLY_FOR_AP y
		fi
		if [ "$CONFIG_BT_DUAL_MODE_MENU" = "y" ]; then
			define_bool CONFIG_BT_DUAL_MODE_FOR_AP y
		fi
		bool "BT Advanced Feature"										CONFIG_BT_ADVANCED_FEATURE_MENU
		if [ "$CONFIG_BT_ADVANCED_FEATURE_MENU" = "y" ]; then
			bool "  Exclude BT AT Command"								CONFIG_BT_EXCLUDE_AT_COMMAND_FOR_AP
#			bool "  Use Zephyr BT Stack"								CONFIG_BT_ZEPHYR_MENU
			if [ "$CONFIG_BT_ZEPHYR_MENU" = "y" ]; then
				define_bool CONFIG_BT_ZEPHYR_FOR_AP y
			fi
		fi
		bool "BT Example Demo"											CONFIG_BT_EXAMPLE_DEMO_MENU
		if [ "$CONFIG_BT_EXAMPLE_DEMO_MENU" = "y" ]; then
			bool "  BLE Peripheral"										CONFIG_BT_PERIPHERAL_FOR_AP
			bool "  BLE Central"										CONFIG_BT_CENTRAL_FOR_AP
			bool "  BLE Scatternet"										CONFIG_BT_SCATTERNET_FOR_AP
#			bool "  BLE Throughput"										CONFIG_BT_THROUGHPUT_FOR_AP
			bool "  BLE Mesh Provisioner"								CONFIG_BT_MESH_PROVISIONER_MENU
			bool "  BLE Mesh Device"									CONFIG_BT_MESH_DEVICE_MENU
			bool "  BLE Mesh Provisioner and BLE Scatternet"			CONFIG_BT_MESH_PROVISIONER_SCATTERNET_MENU
			bool "  BLE Mesh Device and BLE Scatternet"					CONFIG_BT_MESH_DEVICE_SCATTERNET_MENU
#			bool "  BLE Mesh Provisioner Test"							CONFIG_BT_MESH_PROVISIONER_TEST_MENU
#			bool "  BLE Mesh Device Test"								CONFIG_BT_MESH_DEVICE_TEST_MENU
#			bool "  BLE ISO Test"										CONFIG_BT_ISO_TEST_FOR_AP
			bool "  BLE Audio"											CONFIG_BT_LE_AUDIO_MENU
			if [ "$CONFIG_BT_LE_AUDIO_MENU" = "y" ]; then
				bool "    BLE Audio Basic Audio Profile"				CONFIG_BT_BAP_MENU
				bool "    BLE Audio Common Audio Profile"				CONFIG_BT_CAP_MENU
				bool "    BLE Audio Public Broadcast Profile"			CONFIG_BT_PBP_MENU
				bool "    BLE Audio Telephony and Media Audio Profile"	CONFIG_BT_TMAP_MENU
				bool "    BLE Audio Gaming Audio Profile"				CONFIG_BT_GMAP_MENU
				if [ "$CONFIG_BT_BAP_MENU" = "y" ]; then
					define_bool CONFIG_BT_BAP_FOR_AP y
					define_bool CONFIG_BT_BAP_SUPPORT_FOR_AP y
				fi
				if [ "$CONFIG_BT_CAP_MENU" = "y" ]; then
					define_bool CONFIG_BT_CAP_FOR_AP y
					define_bool CONFIG_BT_CAP_SUPPORT_FOR_AP y
				fi
				if [ "$CONFIG_BT_PBP_MENU" = "y" ]; then
					define_bool CONFIG_BT_PBP_FOR_AP y
					define_bool CONFIG_BT_PBP_SUPPORT_FOR_AP y
				fi
				if [ "$CONFIG_BT_TMAP_MENU" = "y" ]; then
					define_bool CONFIG_BT_TMAP_FOR_AP y
					define_bool CONFIG_BT_TMAP_SUPPORT_FOR_AP y
					define_bool CONFIG_BT_CAP_SUPPORT_FOR_AP y
				fi
				if [ "$CONFIG_BT_GMAP_MENU" = "y" ]; then
					define_bool CONFIG_BT_GMAP_FOR_AP y
					define_bool CONFIG_BT_GMAP_SUPPORT_FOR_AP y
					define_bool CONFIG_BT_CAP_SUPPORT_FOR_AP y
				fi
			fi
			bool "  BT A2DP"											CONFIG_BT_A2DP_MENU
			bool "  BT HFP"												CONFIG_BT_HFP_MENU
			bool "  BT A2DP and BT HFP"									CONFIG_BT_A2DP_HFP_MENU
			bool "  BT SPP"												CONFIG_BT_SPP_FOR_AP
#			bool "  BT Audio MP Test"									CONFIG_BT_AUDIO_MP_TEST_MENU
#			bool "  BT HID"												CONFIG_BT_HID_FOR_AP
			bool "  BT A2DP and BLE Scatternet"							CONFIG_BT_A2DP_SCATTERNET_MENU
			bool "  BT A2DP and BLE Audio PBP"							CONFIG_BT_A2DP_LE_AUDIO_PBP_MENU
			bool "  BT A2DP and BLE Audio TMAP"							CONFIG_BT_A2DP_LE_AUDIO_TMAP_MENU
			if [ "$CONFIG_BT_MESH_PROVISIONER_MENU" = "y" ]; then
				define_bool CONFIG_BT_MESH_PROVISIONER_FOR_AP y
				define_bool CONFIG_BT_MESH_PROVISIONER_SUPPORT_FOR_AP y
			fi
			if [ "$CONFIG_BT_MESH_DEVICE_MENU" = "y" ]; then
				define_bool CONFIG_BT_MESH_DEVICE_FOR_AP y
				define_bool CONFIG_BT_MESH_DEVICE_SUPPORT_FOR_AP y
			fi
			if [ "$CONFIG_BT_MESH_PROVISIONER_SCATTERNET_MENU" = "y" ]; then
				define_bool CONFIG_BT_MESH_PROVISIONER_SCATTERNET_FOR_AP y
				define_bool CONFIG_BT_MESH_PROVISIONER_SUPPORT_FOR_AP y
			fi
			if [ "$CONFIG_BT_MESH_DEVICE_SCATTERNET_MENU" = "y" ]; then
				define_bool CONFIG_BT_MESH_DEVICE_SCATTERNET_FOR_AP y
				define_bool CONFIG_BT_MESH_DEVICE_SUPPORT_FOR_AP y
			fi
			if [ "$CONFIG_BT_MESH_PROVISIONER_TEST_MENU" = "y" ]; then
				define_bool CONFIG_BT_MESH_PROVISIONER_TEST_FOR_AP y
				define_bool CONFIG_BT_MESH_PROVISIONER_SUPPORT_FOR_AP y
			fi
			if [ "$CONFIG_BT_MESH_DEVICE_TEST_MENU" = "y" ]; then
				define_bool CONFIG_BT_MESH_DEVICE_TEST_FOR_AP y
				define_bool CONFIG_BT_MESH_DEVICE_SUPPORT_FOR_AP y
			fi
			if [ "$CONFIG_BT_LE_AUDIO_MENU" = "y" ]; then
				define_bool CONFIG_BT_LE_AUDIO_FOR_AP y
				define_bool CONFIG_BT_APP_AUDIO_DATA_FOR_AP y
				define_bool CONFIG_BT_AUDIO_CODEC_SUPPORT_FOR_AP y
				define_bool CONFIG_BT_AUDIO_CODEC_LC3_FOR_AP y
			fi
			if [ "$CONFIG_BT_A2DP_MENU" = "y" ]; then
				define_bool CONFIG_BT_A2DP_FOR_AP y
				define_bool CONFIG_BT_APP_AUDIO_DATA_FOR_AP y
				define_bool CONFIG_BT_AUDIO_CODEC_SUPPORT_FOR_AP y
				define_bool CONFIG_BT_AUDIO_CODEC_SBC_FOR_AP y
			fi
			if [ "$CONFIG_BT_HFP_MENU" = "y" ]; then
				define_bool CONFIG_BT_HFP_FOR_AP y
				define_bool CONFIG_BT_APP_AUDIO_DATA_FOR_AP y
				define_bool CONFIG_BT_AUDIO_CODEC_SUPPORT_FOR_AP y
				define_bool CONFIG_BT_AUDIO_CODEC_CVSD_FOR_AP y
			fi
			if [ "$CONFIG_BT_A2DP_SCATTERNET_MENU" = "y" ]; then
				define_bool CONFIG_BT_A2DP_SCATTERNET_FOR_AP y
				define_bool CONFIG_BT_APP_AUDIO_DATA_FOR_AP y
				define_bool CONFIG_BT_AUDIO_CODEC_SUPPORT_FOR_AP y
				define_bool CONFIG_BT_AUDIO_CODEC_SBC_FOR_AP y
			fi
			if [ "$CONFIG_BT_A2DP_HFP_MENU" = "y" ]; then
				define_bool CONFIG_BT_A2DP_HFP_FOR_AP y
				define_bool CONFIG_BT_APP_AUDIO_DATA_FOR_AP y
				define_bool CONFIG_BT_AUDIO_CODEC_SUPPORT_FOR_AP y
				define_bool CONFIG_BT_AUDIO_CODEC_SBC_FOR_AP y
				define_bool CONFIG_BT_AUDIO_CODEC_CVSD_FOR_AP y
			fi
			if [ "$CONFIG_BT_AUDIO_MP_TEST_MENU" = "y" ]; then
				define_bool CONFIG_BT_AUDIO_MP_TEST_FOR_AP y
				define_bool CONFIG_BT_APP_AUDIO_DATA_FOR_AP y
				define_bool CONFIG_BT_AUDIO_CODEC_SUPPORT_FOR_AP y
				define_bool CONFIG_BT_AUDIO_CODEC_SBC_FOR_AP y
				define_bool CONFIG_BT_AUDIO_CODEC_CVSD_FOR_AP y
			fi
			if [ "$CONFIG_BT_A2DP_LE_AUDIO_PBP_MENU" = "y" ]; then
				define_bool CONFIG_BT_LE_AUDIO_FOR_AP y
				define_bool CONFIG_BT_A2DP_LE_AUDIO_PBP_FOR_AP y
				define_bool CONFIG_BT_PBP_SUPPORT_FOR_AP y
				define_bool CONFIG_BT_APP_AUDIO_DATA_FOR_AP y
				define_bool CONFIG_BT_AUDIO_CODEC_SUPPORT_FOR_AP y
				define_bool CONFIG_BT_AUDIO_CODEC_SBC_FOR_AP y
				define_bool CONFIG_BT_AUDIO_CODEC_LC3_FOR_AP y
			fi
			if [ "$CONFIG_BT_A2DP_LE_AUDIO_TMAP_MENU" = "y" ]; then
				define_bool CONFIG_BT_LE_AUDIO_FOR_AP y
				define_bool CONFIG_BT_A2DP_LE_AUDIO_TMAP_FOR_AP y
				define_bool CONFIG_BT_TMAP_SUPPORT_FOR_AP y
				define_bool CONFIG_BT_APP_AUDIO_DATA_FOR_AP y
				define_bool CONFIG_BT_AUDIO_CODEC_SUPPORT_FOR_AP y
				define_bool CONFIG_BT_AUDIO_CODEC_SBC_FOR_AP y
				define_bool CONFIG_BT_AUDIO_CODEC_LC3_FOR_AP y
			fi
		fi
	fi

	if [ "$CONFIG_BT_KM4_SINGLE_CORE" = "y" ]; then
		define_bool CONFIG_BT_FOR_HP y
		define_bool CONFIG_FTL_ENABLED_FOR_HP y
		choice 'BT Mode Selection'	"BLE_ONLY							CONFIG_BT_BLE_ONLY_MENU \
									DUAL_MODE							CONFIG_BT_DUAL_MODE_MENU \
									" DUAL_MODE
		if [ "$CONFIG_BT_BLE_ONLY_MENU" = "y" ]; then
			define_bool CONFIG_BT_BLE_ONLY_FOR_HP y
		fi
		if [ "$CONFIG_BT_DUAL_MODE_MENU" = "y" ]; then
			define_bool CONFIG_BT_DUAL_MODE_FOR_HP y
		fi
		bool "BT Advanced Feature"										CONFIG_BT_ADVANCED_FEATURE_MENU
		if [ "$CONFIG_BT_ADVANCED_FEATURE_MENU" = "y" ]; then
			bool "  Exclude BT AT Command"								CONFIG_BT_EXCLUDE_AT_COMMAND_FOR_HP
#			bool "  Use Zephyr BT Stack"								CONFIG_BT_ZEPHYR_MENU
			if [ "$CONFIG_BT_ZEPHYR_MENU" = "y" ]; then
				define_bool CONFIG_BT_ZEPHYR_FOR_HP y
			fi
		fi
		bool "BT Example Demo"											CONFIG_BT_EXAMPLE_DEMO_MENU
		if [ "$CONFIG_BT_EXAMPLE_DEMO_MENU" = "y" ]; then
			bool "  BLE Peripheral"										CONFIG_BT_PERIPHERAL_FOR_HP
			bool "  BLE Central"										CONFIG_BT_CENTRAL_FOR_HP
			bool "  BLE Scatternet"										CONFIG_BT_SCATTERNET_FOR_HP
#			bool "  BLE Throughput"										CONFIG_BT_THROUGHPUT_FOR_HP
			bool "  BLE Mesh Provisioner"								CONFIG_BT_MESH_PROVISIONER_MENU
			bool "  BLE Mesh Device"									CONFIG_BT_MESH_DEVICE_MENU
			bool "  BLE Mesh Provisioner and BLE Scatternet"			CONFIG_BT_MESH_PROVISIONER_SCATTERNET_MENU
			bool "  BLE Mesh Device and BLE Scatternet"					CONFIG_BT_MESH_DEVICE_SCATTERNET_MENU
#			bool "  BLE Mesh Provisioner Test"							CONFIG_BT_MESH_PROVISIONER_TEST_MENU
#			bool "  BLE Mesh Device Test"								CONFIG_BT_MESH_DEVICE_TEST_MENU
#			bool "  BLE ISO Test"										CONFIG_BT_ISO_TEST_FOR_HP
			bool "  BLE Audio"											CONFIG_BT_LE_AUDIO_MENU
			if [ "$CONFIG_BT_LE_AUDIO_MENU" = "y" ]; then
				bool "    BLE Audio Basic Audio Profile"				CONFIG_BT_BAP_MENU
				bool "    BLE Audio Common Audio Profile"				CONFIG_BT_CAP_MENU
				bool "    BLE Audio Public Broadcast Profile"			CONFIG_BT_PBP_MENU
				bool "    BLE Audio Telephony and Media Audio Profile"	CONFIG_BT_TMAP_MENU
				bool "    BLE Audio Gaming Audio Profile"				CONFIG_BT_GMAP_MENU
				if [ "$CONFIG_BT_BAP_MENU" = "y" ]; then
					define_bool CONFIG_BT_BAP_FOR_HP y
					define_bool CONFIG_BT_BAP_SUPPORT_FOR_HP y
				fi
				if [ "$CONFIG_BT_CAP_MENU" = "y" ]; then
					define_bool CONFIG_BT_CAP_FOR_HP y
					define_bool CONFIG_BT_CAP_SUPPORT_FOR_HP y
				fi
				if [ "$CONFIG_BT_PBP_MENU" = "y" ]; then
					define_bool CONFIG_BT_PBP_FOR_HP y
					define_bool CONFIG_BT_PBP_SUPPORT_FOR_HP y
				fi
				if [ "$CONFIG_BT_TMAP_MENU" = "y" ]; then
					define_bool CONFIG_BT_TMAP_FOR_HP y
					define_bool CONFIG_BT_TMAP_SUPPORT_FOR_HP y
					define_bool CONFIG_BT_CAP_SUPPORT_FOR_HP y
				fi
				if [ "$CONFIG_BT_GMAP_MENU" = "y" ]; then
					define_bool CONFIG_BT_GMAP_FOR_HP y
					define_bool CONFIG_BT_GMAP_SUPPORT_FOR_HP y
					define_bool CONFIG_BT_CAP_SUPPORT_FOR_HP y
				fi
			fi
			bool "  BT A2DP"											CONFIG_BT_A2DP_MENU
			bool "  BT HFP"												CONFIG_BT_HFP_MENU
			bool "  BT A2DP and BT HFP"									CONFIG_BT_A2DP_HFP_MENU
			bool "  BT SPP"												CONFIG_BT_SPP_FOR_HP
#			bool "  BT Audio MP Test"									CONFIG_BT_AUDIO_MP_TEST_MENU
#			bool "  BT HID"												CONFIG_BT_HID_FOR_HP
			bool "  BT A2DP and BLE Scatternet"							CONFIG_BT_A2DP_SCATTERNET_MENU
			bool "  BT A2DP and BLE Audio PBP"							CONFIG_BT_A2DP_LE_AUDIO_PBP_MENU
			bool "  BT A2DP and BLE Audio TMAP"							CONFIG_BT_A2DP_LE_AUDIO_TMAP_MENU
			if [ "$CONFIG_BT_MESH_PROVISIONER_MENU" = "y" ]; then
				define_bool CONFIG_BT_MESH_PROVISIONER_FOR_HP y
				define_bool CONFIG_BT_MESH_PROVISIONER_SUPPORT_FOR_HP y
			fi
			if [ "$CONFIG_BT_MESH_DEVICE_MENU" = "y" ]; then
				define_bool CONFIG_BT_MESH_DEVICE_FOR_HP y
				define_bool CONFIG_BT_MESH_DEVICE_SUPPORT_FOR_HP y
			fi
			if [ "$CONFIG_BT_MESH_PROVISIONER_SCATTERNET_MENU" = "y" ]; then
				define_bool CONFIG_BT_MESH_PROVISIONER_SCATTERNET_FOR_HP y
				define_bool CONFIG_BT_MESH_PROVISIONER_SUPPORT_FOR_HP y
			fi
			if [ "$CONFIG_BT_MESH_DEVICE_SCATTERNET_MENU" = "y" ]; then
				define_bool CONFIG_BT_MESH_DEVICE_SCATTERNET_FOR_HP y
				define_bool CONFIG_BT_MESH_DEVICE_SUPPORT_FOR_HP y
			fi
			if [ "$CONFIG_BT_MESH_PROVISIONER_TEST_MENU" = "y" ]; then
				define_bool CONFIG_BT_MESH_PROVISIONER_TEST_FOR_HP y
				define_bool CONFIG_BT_MESH_PROVISIONER_SUPPORT_FOR_HP y
			fi
			if [ "$CONFIG_BT_MESH_DEVICE_TEST_MENU" = "y" ]; then
				define_bool CONFIG_BT_MESH_DEVICE_TEST_FOR_HP y
				define_bool CONFIG_BT_MESH_DEVICE_SUPPORT_FOR_HP y
			fi
			if [ "$CONFIG_BT_LE_AUDIO_MENU" = "y" ]; then
				define_bool CONFIG_BT_LE_AUDIO_FOR_HP y
				define_bool CONFIG_BT_APP_AUDIO_DATA_FOR_HP y
				define_bool CONFIG_BT_AUDIO_CODEC_SUPPORT_FOR_HP y
				define_bool CONFIG_BT_AUDIO_CODEC_LC3_FOR_HP y
			fi
			if [ "$CONFIG_BT_A2DP_MENU" = "y" ]; then
				define_bool CONFIG_BT_A2DP_FOR_HP y
				define_bool CONFIG_BT_APP_AUDIO_DATA_FOR_HP y
				define_bool CONFIG_BT_AUDIO_CODEC_SUPPORT_FOR_HP y
				define_bool CONFIG_BT_AUDIO_CODEC_SBC_FOR_HP y
			fi
			if [ "$CONFIG_BT_HFP_MENU" = "y" ]; then
				define_bool CONFIG_BT_HFP_FOR_HP y
				define_bool CONFIG_BT_APP_AUDIO_DATA_FOR_HP y
				define_bool CONFIG_BT_AUDIO_CODEC_SUPPORT_FOR_HP y
				define_bool CONFIG_BT_AUDIO_CODEC_CVSD_FOR_HP y
			fi
			if [ "$CONFIG_BT_A2DP_SCATTERNET_MENU" = "y" ]; then
				define_bool CONFIG_BT_A2DP_SCATTERNET_FOR_HP y
				define_bool CONFIG_BT_APP_AUDIO_DATA_FOR_HP y
				define_bool CONFIG_BT_AUDIO_CODEC_SUPPORT_FOR_HP y
				define_bool CONFIG_BT_AUDIO_CODEC_SBC_FOR_HP y
			fi
			if [ "$CONFIG_BT_A2DP_HFP_MENU" = "y" ]; then
				define_bool CONFIG_BT_A2DP_HFP_FOR_HP y
				define_bool CONFIG_BT_APP_AUDIO_DATA_FOR_HP y
				define_bool CONFIG_BT_AUDIO_CODEC_SUPPORT_FOR_HP y
				define_bool CONFIG_BT_AUDIO_CODEC_SBC_FOR_HP y
				define_bool CONFIG_BT_AUDIO_CODEC_CVSD_FOR_HP y
			fi
			if [ "$CONFIG_BT_AUDIO_MP_TEST_MENU" = "y" ]; then
				define_bool CONFIG_BT_AUDIO_MP_TEST_FOR_HP y
				define_bool CONFIG_BT_APP_AUDIO_DATA_FOR_HP y
				define_bool CONFIG_BT_AUDIO_CODEC_SUPPORT_FOR_HP y
				define_bool CONFIG_BT_AUDIO_CODEC_SBC_FOR_HP y
				define_bool CONFIG_BT_AUDIO_CODEC_CVSD_FOR_HP y
			fi
			if [ "$CONFIG_BT_A2DP_LE_AUDIO_PBP_MENU" = "y" ]; then
				define_bool CONFIG_BT_LE_AUDIO_FOR_HP y
				define_bool CONFIG_BT_A2DP_LE_AUDIO_PBP_FOR_HP y
				define_bool CONFIG_BT_PBP_SUPPORT_FOR_HP y
				define_bool CONFIG_BT_APP_AUDIO_DATA_FOR_HP y
				define_bool CONFIG_BT_AUDIO_CODEC_SUPPORT_FOR_HP y
				define_bool CONFIG_BT_AUDIO_CODEC_SBC_FOR_HP y
				define_bool CONFIG_BT_AUDIO_CODEC_LC3_FOR_HP y
			fi
			if [ "$CONFIG_BT_A2DP_LE_AUDIO_TMAP_MENU" = "y" ]; then
				define_bool CONFIG_BT_LE_AUDIO_FOR_HP y
				define_bool CONFIG_BT_A2DP_LE_AUDIO_TMAP_FOR_HP y
				define_bool CONFIG_BT_TMAP_SUPPORT_FOR_HP y
				define_bool CONFIG_BT_APP_AUDIO_DATA_FOR_HP y
				define_bool CONFIG_BT_AUDIO_CODEC_SUPPORT_FOR_HP y
				define_bool CONFIG_BT_AUDIO_CODEC_SBC_FOR_HP y
				define_bool CONFIG_BT_AUDIO_CODEC_LC3_FOR_HP y
			fi
		fi
	fi
fi
endmenu

mainmenu_option next_comment
comment '< CONFIG WIFI'
bool "Enable Wifi"                CONFIG_WLAN_MENU
if [ "$CONFIG_WLAN_MENU" = "y" ]; then
	if [ "$CONFIG_AP_CORE_CA32" = "y" ]; then
		define_bool CONFIG_AS_INIC_KM4_NP_CA32_AP y
		define_bool CONFIG_SINGLE_CORE_WIFI_KM4 n
	fi
	if [ "$CONFIG_AP_CORE_KM4" = "y" ]; then
		define_bool CONFIG_AS_INIC_KM4_NP_CA32_AP n
		define_bool CONFIG_SINGLE_CORE_WIFI_KM4 y
	fi
	if [ "$CONFIG_CLINTWOOD" = "y" ]; then
		define_bool CONFIG_SINGLE_CORE_WIFI_KM4 y
		define_bool CONFIG_AS_INIC_KM4_NP_CA32_AP n
	fi
	if [ "$CONFIG_AS_INIC_KM4_NP_CA32_AP" = "y" ]; then
		define_bool CONFIG_WLAN_FOR_AP y
		define_bool CONFIG_AS_INIC_AP_FOR_AP y
		if [ "$CONFIG_MP_SHRINK" = "y" ]; then
			define_bool CONFIG_LWIP_LAYER_FOR_AP n
		else
			define_bool CONFIG_LWIP_LAYER_FOR_AP y
		fi
		define_bool CONFIG_WLAN_FOR_HP y
		define_bool CONFIG_AS_INIC_NP_FOR_HP y

	fi
	if [ "$CONFIG_SINGLE_CORE_WIFI_KM4" = "y" ]; then
		define_bool CONFIG_WLAN_FOR_HP y
		if [ "$CONFIG_MP_SHRINK" = "y" ]; then
			define_bool CONFIG_LWIP_LAYER_FOR_HP n
		else
			define_bool CONFIG_LWIP_LAYER_FOR_HP y
		fi
		define_bool CONFIG_SINGLE_CORE_WIFI_FOR_HP y
	fi
	bool "Enable HIGH TP"	CONFIG_HIGH_TP_TEST

	if [ "$CONFIG_AS_INIC_KM4_NP_CA32_AP" = "y" ]; then
		bool "Enable WPS"		CONFIG_ENABLE_WPS_FOR_AP
		if [ "$CONFIG_ENABLE_WPS_FOR_AP" = "y" ]; then
			define_bool CONFIG_ENABLE_WPS_DISCOVERY_FOR_AP y
		fi
	fi
	
	if [ "$CONFIG_SINGLE_CORE_WIFI_KM4" = "y" ]; then
		bool "Enable WPS"		CONFIG_ENABLE_WPS_FOR_HP
		if [ "$CONFIG_ENABLE_WPS_FOR_HP" = "y" ]; then
			define_bool CONFIG_ENABLE_WPS_DISCOVERY_FOR_HP y
		fi
	fi

	bool "Enable CSI"		CONFIG_WIFI_CSI_ENABLE
	bool "Enable ANTDIV"		CONFIG_WIFI_ANTDIV_ENABLE
	bool "Enable 11K"		CONFIG_WIFI_11K_ENABLE
	bool "Enable 11V"		CONFIG_WIFI_11V_ENABLE
	bool "Enable 11R"		CONFIG_WIFI_11R_ENABLE
	bool "Enable WIFI SPEAKER"	CONFIG_WIFI_SPEAKER_ENABLE
else
	define_bool CONFIG_WLAN n
	define_bool CONFIG_AS_INIC_AP_FOR_AP y
	define_bool CONFIG_AS_INIC_NP_FOR_HP y
	define_bool CONFIG_LWIP_LAYER n
fi
endmenu

mainmenu_option next_comment
comment '< CONFIG LWIP'
if [ "$CONFIG_AS_INIC_KM4_NP_CA32_AP" = "y" ]; then
	bool "Enable Fast DHCP"		CONFIG_FAST_DHCP_FOR_AP
fi

if [ "$CONFIG_SINGLE_CORE_WIFI_KM4" = "y" ]; then
	bool "Enable Fast DHCP"		CONFIG_FAST_DHCP_FOR_HP
fi

bool "Enable LWIP Debug"		CONFIG_LWIP_DEBUG
if [ "$CONFIG_LWIP_DEBUG" = "y" ]; then
	mainmenu_option next_comment
	comment '< CONFIG LWIP DEBUG'
		bool "Enable ETHARP DEBUG"				CONFIG_ETHARP_DEBUG
		bool "Enable NETIF DEBUG"				CONFIG_NETIF_DEBUG
		bool "Enable PBUF DEBUG"				CONFIG_PBUF_DEBUG
		bool "Enable API LIB DEBUG"				CONFIG_API_LIB_DEBUG
		bool "Enable API MSG DEBUG"				CONFIG_API_MSG_DEBUG
		bool "Enable SOCKETS DEBUG"				CONFIG_SOCKETS_DEBUG
		bool "Enable ICMP DEBUG"				CONFIG_ICMP_DEBUG
		bool "Enable IPNAT DEBUG"				CONFIG_IPNAT_DEBUG
		bool "Enable IGMP DEBUG"				CONFIG_IGMP_DEBUG
		bool "Enable INET DEBUG"				CONFIG_INET_DEBUG
		bool "Enable IP DEBUG"					CONFIG_IP_DEBUG
		bool "Enable IP REASS DEBUG"			CONFIG_IP_REASS_DEBUG
		bool "Enable RAW DEBUG"					CONFIG_RAW_DEBUG
		bool "Enable MEM DEBUG"					CONFIG_MEM_DEBUG
		bool "Enable MEMP DEBUG"				CONFIG_MEMP_DEBUG
		bool "Enable SYS DEBUG"					CONFIG_SYS_DEBUG
		bool "Enable TIMERS DEBUG"				CONFIG_TIMERS_DEBUG
		bool "Enable TCP DEBUG"					CONFIG_TCP_DEBUG
		bool "Enable TCP INPUT DEBUG"			CONFIG_TCP_INPUT_DEBUG
		bool "Enable TCP FR DEBUG"				CONFIG_TCP_FR_DEBUG
		bool "Enable TCP RTO DEBUG"				CONFIG_TCP_RTO_DEBUG
		bool "Enable TCP CWND DEBUG"			CONFIG_TCP_CWND_DEBUG
		bool "Enable TCP WND DEBUG"				CONFIG_TCP_WND_DEBUG
		bool "Enable TCP OUTPUT DEBUG"			CONFIG_TCP_OUTPUT_DEBUG
		bool "Enable TCP RST DEBUG"				CONFIG_TCP_RST_DEBUG
		bool "Enable TCP QLEN DEBUG"			CONFIG_TCP_QLEN_DEBUG
		bool "Enable UDP DEBUG"					CONFIG_UDP_DEBUG
		bool "Enable TCPIP DEBUG"				CONFIG_TCPIP_DEBUG
		bool "Enable SLIP DEBUG"				CONFIG_SLIP_DEBUG
		bool "Enable DHCP DEBUG"				CONFIG_DHCP_DEBUG
		bool "Enable AUTOIP DEBUG"				CONFIG_AUTOIP_DEBUG
		bool "Enable DNS DEBUG"					CONFIG_DNS_DEBUG
		bool "Enable IP6 DEBUG"					CONFIG_IP6_DEBUG
		bool "Enable DHCP6 DEBUG"				CONFIG_DHCP6_DEBUG
	endmenu
fi
endmenu

separator "GeneralEnd"
separator "LPStart"

comment '--------------KM0 config------------'
mainmenu_option next_comment
comment '< MENUCONFIG FOR KM0 CONFIG'

comment '--------------CPU config Start------------'

mainmenu_option next_comment
comment '< CONFIG CHIP'
comment 'Target Platform Selection'
comment 'Choose a Vendor/Product combination.'

choice 'Product' "AMEBASMART CONFIG_AMEBASMART_FOR_LP  \
		" AMEBASMART

choice 'ArmCore' "ARM_KM0 ARM_CORE_CM0_FOR_LP  \
		"ARM_KM0

bool "Select FPGA"            CONFIG_FPGA_FOR_LP

choice 'Chip Version' "
		AMEBASMART_A_Cut			CONFIG_AMEBASMART_A_CUT_FOR_LP
		" AMEBASMART_A_Cut

endmenu

#===========================================================================
# Common Config with every IC have this function in here. Don't litmit someone ic.
#
comment '--------------OS config Start------------'
mainmenu_option next_comment
comment '< CONFIG OS'

bool "Enable Kernel"                     CONFIG_KERNEL_FOR_LP

if [ "$CONFIG_KERNEL_FOR_LP" = "y" ]; then
choice 'Kernel Selecte' "FREERTOS        PLATFORM_FREERTOS_FOR_LP \
						"FREERTOS        
define_int TASK_SCHEDULER_DISABLED_FOR_LP 0
fi
endmenu #CONFIG OS

#===========================================================================

#===========================================================================
# Normall function config
#
comment '--------------Application Config Start------------'

comment '--------------Peripheral Test start---------------'
mainmenu_option next_comment
comment '< CONFIG FUNCTION TEST'
bool "Enable Peripheral Test"		CONFIG_PER_TEST_FOR_LP
if [ "$CONFIG_PER_TEST_FOR_LP" = "y" ]; then
	bool "System_Verify_Mode"	CONFIG_SYS_VERIFY_FOR_LP
	if [ "$CONFIG_SYS_VERIFY_FOR_LP" = "y" ]; then
	choice 'System Verify Type'	"IMG_SIM	CONFIG_SIMULATION_FOR_LP \
								OLT_Test	CONFIG_OLT_FOR_LP \
								"
	fi
	bool "DBGPORT Enable"		CONFIG_DBGPORT_ENABLE_FOR_LP
	bool "Timer_Verify_Mode"	CONFIG_TIMER_VERIFY_FOR_LP
	bool "WDG_Verify_Mode"		CONFIG_WDG_VERIFY_FOR_LP
	bool "Gdma_Verify_Mode"		CONFIG_GDMA_VERIFY_FOR_LP
	bool "GPIO_Verify_Mode"		CONFIG_GPIO_VERIFY_FOR_LP
	bool "SPI_COM_Verify_Mode"	CONFIG_SPI_COM_VERIFY_FOR_LP
	bool "UART_Verify_Mode"		CONFIG_UART_VERIFY_FOR_LP
	bool "I2C_Verify_Mode"		CONFIG_I2C_VERIFY_FOR_LP
	bool "PMC_Verify_Mode"		CONFIG_PMC_VERIFY_FOR_LP
	bool "EFUSE_Verify_Mode"	CONFIG_EFUSE_VERIFY_FOR_LP
	bool "SPIC_Verify_Mode"		CONFIG_SPIC_VERIFY_FOR_LP
	bool "ADC_Verify_Mode"		CONFIG_ADC_VERIFY_FOR_LP
	bool "RSIP_Verify_Mode"		CONFIG_RSIP_VERIFY_FOR_LP
	bool "CapTouch_Verify_Mode"	CONFIG_CAPTOUCH_VERIFY_FOR_LP
	bool "SGPIO_Verify_Mode"	CONFIG_SGPIO_VERIFY_FOR_LP
	bool "Qdecoder_Verify_Mode"	CONFIG_QDEC_VERIFY_FOR_LP
	bool "Dhrystone Test"		CONFIG_DHRYSTONE_TEST_FOR_LP
	bool "SSL ROM Test"		CONFIG_SSL_ROM_TEST_FOR_LP
	bool "RTLIB ROM Test"		CONFIG_RTLIB_VERIFY_FOR_LP
	bool "SecureBoot Test"		CONFIG_SBOOT_VERIFY_FOR_LP
	bool "IPC Test"			CONFIG_IPC_VERIFY_FOR_LP
	bool "MPU Test"			CONFIG_MPU_VERIFY_FOR_LP
	bool "CACHE Test"		CONFIG_CACHE_VERIFY_FOR_LP
	bool "WFE Test"			CONFIG_WFE_VERIFY_FOR_LP
	bool "Thermal_Verify_Mode"	CONFIG_THERMAL_VERIFY_FOR_LP
	bool "chip_reset_verify"		CONFIG_CHIP_RST_VERIFY_FOR_LP
	bool "debugtimer_verify"		CONFIG_DBG_TIMER_VERIFY_FOR_LP
	bool "SPI Nand Test"		CONFIG_SPINAND_VERIFY_FOR_LP
	bool "LOGUART Test"		CONFIG_LOGUART_VERIFY_FOR_LP
fi #CONFIG_PER_TEST_FOR_LP
endmenu #CONFIG PER TEST


comment '--------------WIFI FW Config Start------------'
mainmenu_option next_comment
comment '< CONFIG WIFI FW'
bool "Enable Wifi firmware"                CONFIG_WIFI_FW_EN_FOR_LP
if [ "$CONFIG_WIFI_FW_EN_FOR_LP" = "y" ]; then
bool "WIFI FW Test"		CONFIG_WIFI_FW_VERIFY_FOR_LP
bool "SOCZB_PTA_Verify_Mode"	CONFIG_SOCZB_PTA_VERIFY_FOR_LP
fi
endmenu

#===========================================================================
# Normal: Build all code, includes ROM code. Normally for FPGA verification.
# Release: Build user application code and link with ROM + RAM libraries.
# Build_ROM_Lib: Build the ROM code library only.
# Build_RAM_Lib: Build the RAM code library only.
# Build_RAM_All: Build all RAM code, includes user application, and link with ROM library.
comment '--------------Build Config------------'
mainmenu_option next_comment

comment '< Build Option'

comment 'Select toolchain  '
choice 'Toolchain'		"ASDK             CONFIG_TOOLCHAIN_ASDK_FOR_LP  \
                                 ARM_GCC          CONFIG_TOOLCHAIN_ARM_GCC_FOR_LP  \
 			           		" ASDK

comment 'Choose the build configuration '
choice 'Link ROM Mode ' 			"Link_ROM_Library      CONFIG_LINK_ROM_LIB_FOR_LP  \
                                     Link_ROM_Symbol       CONFIG_LINK_ROM_SYMB_FOR_LP  \
					               " Link_ROM_Library
endmenu


comment '--------------------------'
endmenu


separator "LPEnd"
separator "HPStart"

comment '--------------KM4 config------------'
mainmenu_option next_comment
comment '< MENUCONFIG FOR KM4 CONFIG'

comment '--------------CPU config Start------------'

mainmenu_option next_comment
comment '< CONFIG CHIP'
comment 'Target Platform Selection'
comment 'Choose a Vendor/Product combination.'

choice 'Product' "AMEBASMART CONFIG_AMEBASMART_FOR_HP  \
		" AMEBASMART

choice 'ArmCore' "ARM_CM4 ARM_CORE_CM4_FOR_HP \
		"ARM_CM4

bool "Select FPGA"            CONFIG_FPGA_FOR_HP

choice 'Chip Version' "
		AMEBASMART_B_Cut			CONFIG_AMEBASMART_B_CUT_FOR_HP
		" AMEBASMART_B_Cut

endmenu

mainmenu_option next_comment
comment '< CONFIG TrustZone'
bool "Enable TrustZone"			CONFIG_TRUSTZONE_FOR_HP
if [ "$CONFIG_TRUSTZONE_FOR_HP" = "y" ]; then
	define_bool CONFIG_TRUSTZONE_EN_FOR_HP y
fi
endmenu

#===========================================================================
# Common Config with every IC have this function in here. Don't litmit someone ic.
#
comment '--------------OS config Start------------'
mainmenu_option next_comment
comment '< CONFIG OS'

bool "Enable Kernel"                     CONFIG_KERNEL_FOR_HP

if [ "$CONFIG_KERNEL_FOR_HP" = "y" ]; then
choice 'Kernel Selecte' "FREERTOS        PLATFORM_FREERTOS_FOR_HP \
						"FREERTOS        
define_int TASK_SCHEDULER_DISABLED_FOR_HP 0
fi
endmenu #CONFIG OS

#===========================================================================

#===========================================================================
# Normall function config
#


comment '--------------Peripheral config Start------------'

mainmenu_option next_comment
comment '< CONFIG USB'
bool "Enable USB"			CONFIG_USB_OTG_EN_FOR_HP
if [ "$CONFIG_USB_OTG_EN_FOR_HP" = "y" ]; then

choice 'USB Mode'			"DEVICE_MODE		CONFIG_USB_DEVICE_EN_FOR_HP \
					 HOST_MODE		CONFIG_USB_HOST_EN_FOR_HP \
					"

if [ "$CONFIG_USB_DEVICE_EN_FOR_HP" = "y" ]; then
bool "CDC ACM"				CONFIG_USBD_CDC_ACM_FOR_HP
bool "Composite"			CONFIG_USBD_COMPOSITE_FOR_HP
bool "HID"				CONFIG_USBD_HID_FOR_HP
bool "MSC"				CONFIG_USBD_MSC_FOR_HP
bool "Vendor"				CONFIG_USBD_VENDOR_FOR_HP
fi

if [ "$CONFIG_USB_HOST_EN_FOR_HP" = "y" ]; then
bool "CDC ACM"				CONFIG_USBH_CDC_ACM_FOR_HP
bool "CDC ECM"				CONFIG_USBH_CDC_ECM_FOR_HP
if [ "$CONFIG_USBH_CDC_ECM_FOR_HP" = "y" ]; then
	define_bool CONFIG_ETHERNET_FOR_HP y
	bool "Enable ethernet bridge" CONFIG_ETHERNET_BRIDGE_FOR_HP
fi
bool "MSC"				CONFIG_USBH_MSC_FOR_HP
bool "UVC"				CONFIG_USBH_UVC_FOR_HP
bool "Vendor"				CONFIG_USBH_VENDOR_FOR_HP
fi

fi
endmenu


comment '--------------Peripheral Test start---------------'
mainmenu_option next_comment
comment '< CONFIG FUNCTION TEST'
bool "Enable Peripheral Test"		CONFIG_PER_TEST_FOR_HP
if [ "$CONFIG_PER_TEST_FOR_HP" = "y" ]; then
	bool "System_Verify_Mode"	CONFIG_SYS_VERIFY_FOR_HP
	if [ "$CONFIG_SYS_VERIFY_FOR_HP" = "y" ]; then
	choice 'System Verify Type' "FT_Test	CONFIG_FT_FOR_HP\
								EQC_Test	CONFIG_EQC_FOR_HP \
								OLT_Test	CONFIG_OLT_FOR_HP \
								QA_Test		CONFIG_QA_FOR_HP \
								EMC_Test	CONFIG_EMC_FOR_HP \
								Corner_Test	CONFIG_CORNER_FOR_HP \
								IMG_SIM		CONFIG_SIMULATION_FOR_HP \
								"
	fi
	bool "DBGPORT_Verify_Mode"	CONFIG_DBGPORT_ENABLE_FOR_HP
	bool "Timer_Verify_Mode"	CONFIG_TIMER_VERIFY_FOR_HP
	bool "WDG_Verify_Mode"		CONFIG_WDG_VERIFY_FOR_HP
	bool "TRNG_Verify_Mode"		CONFIG_TRNG_VERIFY_FOR_HP
	bool "Gdma_Verify_Mode"		CONFIG_GDMA_VERIFY_FOR_HP
	bool "GPIO_Verify_Mode"		CONFIG_GPIO_VERIFY_FOR_HP
	bool "ZB_INT_Verify_Mode"	CONFIG_ZB_INT_VERIFY_FOR_HP
	bool "SPI_COM_Verify_Mode"	CONFIG_SPI_COM_VERIFY_FOR_HP
	bool "UART_Verify_Mode"		CONFIG_UART_VERIFY_FOR_HP
	bool "LCDC_Verify_Mode"		CONFIG_LCDC_VERIFY_FOR_HP
	bool "LEDC_Verify_Mode"		CONFIG_LEDC_VERIFY_FOR_HP
	bool "I2C_Verify_Mode"		CONFIG_I2C_VERIFY_FOR_HP
	bool "PMC_Verify_Mode"		CONFIG_PMC_VERIFY_FOR_HP
	bool "SGPIO_Verify_Mode"	CONFIG_SGPIO_VERIFY_FOR_HP
	bool "PSRAM_Verify_Mode"	CONFIG_PSRAM_VERIFY_FOR_HP
	bool "AUDIO_Verify_Mode"	CONFIG_AUDIO_VERIFY_FOR_HP
	bool "SOC_PS_Verify_Mode"	CONFIG_SOC_PS_VERIFY_FOR_HP
	bool "Crypto_Verify_Mode"	CONFIG_CRYPTO_VERIFY_FOR_HP
	bool "EFUSE_Verify_Mode"	CONFIG_EFUSE_VERIFY_FOR_HP
	bool "SPIC_Verify_Mode"		CONFIG_SPIC_VERIFY_FOR_HP
	bool "FTL_Verify_Mode"		CONFIG_FTL_VERIFY_FOR_HP
	bool "ADC_Verify_Mode"		CONFIG_ADC_VERIFY_FOR_HP
	bool "CapTouch_Verify_Mode"	CONFIG_CAPTOUCH_VERIFY_FOR_HP
	bool "Thermal_Verify_Mode"	CONFIG_THERMAL_VERIFY_FOR_HP
	bool "RSIP_Verify_Mode"		CONFIG_RSIP_VERIFY_FOR_HP
	bool "SDIO_DEVICE_Verify_Mode"	CONFIG_SDIO_DEVICE_VERIFY_FOR_HP
	bool "SDIO_HOST_Verify_Mode"	CONFIG_SDIOH_VERIFY_FOR_HP
	bool "chip_reset_verify"		CONFIG_CHIP_RST_VERIFY_FOR_HP
	bool "debugtimer_verify"		CONFIG_DBG_TIMER_VERIFY_FOR_HP
	bool "Flash_AVL_Mode"		CONFIG_Flash_AVL_FOR_HP
	bool "RF_Interference_Flash"		CONFIG_RF_Interference_Flash_FOR_HP
	bool "Dhrystone Test"		CONFIG_DHRYSTONE_TEST_FOR_HP
	bool "RTLIB ROM Test"		CONFIG_RTLIB_VERIFY_FOR_HP
	bool "IPC Test"			CONFIG_IPC_VERIFY_FOR_HP
	bool "IR Test"			CONFIG_IR_VERIFY_FOR_HP
	bool "MPU Test"			CONFIG_MPU_VERIFY_FOR_HP
	bool "CACHE Test"		CONFIG_CACHE_VERIFY_FOR_HP
	bool "WFE Test"			CONFIG_WFE_VERIFY_FOR_HP
	bool "DDR Test"			CONFIG_DDR_VERIFY_FOR_HP
	bool "RSA Test"			CONFIG_RSA_VERIFY_FOR_HP
	bool "ECDSA Test"		CONFIG_ECDSA_VERIFY_FOR_HP
	bool "ED25519 Test"		CONFIG_ED25519_VERIFY_FOR_HP
	bool "SpiNand Test"		CONFIG_SPINAND_VERIFY_FOR_HP
	bool "LOGUART Test"		CONFIG_LOGUART_VERIFY_FOR_HP
	bool "Flash RW Test"	CONFIG_FLASH_RW_VERIFY_FOR_HP
	bool "Multi-int Test"	CONFIG_MULTI_INT_VERIFY_FOR_HP
	bool "USB Test"		CONFIG_USB_VERIFY_FOR_HP
	if [ "$CONFIG_USB_VERIFY_FOR_HP" = "y" ]; then
		if [ "$CONFIG_USB_DEVICE_EN_FOR_HP" = "y" ]; then
		bool "USB Device Verification"		CONFIG_USBD_VERIFY_FOR_HP
		fi
		if [ "$CONFIG_USB_HOST_EN_FOR_HP" = "y" ]; then
		bool "USB Host Verification"		CONFIG_USBH_VERIFY_FOR_HP
		fi
	fi
	bool "WIFI Test"        CONFIG_WIFI_VERIFY_FOR_HP
	if [ "$CONFIG_WIFI_VERIFY_FOR_HP" = "y" ]; then
	choice 'WIFI Verify Type'         "WIFI_ASIC			  CONFIG_WIFI_VERIFY_ASIC_FOR_HP \
									   WIFI_MAC_LBK           CONFIG_MAC_LBK_FOR_HP \
									   WIFI_2MAC_WITH_PSPHY   CONFIG_WIFI_VERIFY_PSPHY_FOR_HP \
									   WIFI_2MAC_WITH_TUREPHY CONFIG_WIFI_VERIFY_TRUEPHY_FOR_HP \
									  "
	fi
fi #CONFIG_PER_TEST_FOR_HP
endmenu #CONFIG PER TEST



mainmenu_option next_comment
comment '< CONFIG SECURE TEST'
bool "SEC_Verify_Mode"			CONFIG_SEC_VERIFY_FOR_HP
if [ "$CONFIG_SEC_VERIFY_FOR_HP" = "y" ]; then
	bool "CACHE Secure Test"	CONFIG_CACHE_SEC_VERIFY_FOR_HP
	bool "EFUSE Secure Test"	CONFIG_EFUSE_SEC_VERIFY_FOR_HP
	bool "GDMA Secure Test"		CONFIG_GDMA_SEC_VERIFY_FOR_HP
	bool "AES Secure Test"		CONFIG_AES_SEC_VERIFY_FOR_HP
	bool "Crypto Secure Test"	CONFIG_CRYPTO_SEC_VERIFY_FOR_HP
	bool "CRC Secure Test"		CONFIG_CRC_SEC_VERIFY_FOR_HP
	bool "RDP Secure Test"		CONFIG_RDP_SEC_VERIFY_FOR_HP
	bool "WDG Secure Test"		CONFIG_WDG_SEC_VERIFY_FOR_HP
	bool "TRNG Secure Test"		CONFIG_TRNG_SEC_VERIFY_FOR_HP
	bool "TIMER Secure Test"	CONFIG_TIMER_SEC_VERIFY_FOR_HP
	bool "LCDC Secure Test"		CONFIG_LCDC_SEC_VERIFY_FOR_HP
	bool "UART_Secure_TEST"		CONFIG_UART_SEC_VERIFY_FOR_HP
	bool "SPI_Secure_TEST"		CONFIG_SPI_SEC_VERIFY_FOR_HP
	bool "I2C_Secure_TEST"		CONFIG_I2C_SEC_VERIFY_FOR_HP
	bool "EDDSA Secure Test"	CONFIG_EDDSA_SEC_VERIFY_FOR_HP
	bool "ECDSA Secure Test"	CONFIG_ECDSA_SEC_VERIFY_FOR_HP
	bool "RSA Secure Test"		CONFIG_RSA_SEC_VERIFY_FOR_HP
	bool "LEDC Secure Test"		CONFIG_LEDC_SEC_VERIFY_FOR_HP
	bool "IRDA Secure Test"		CONFIG_IRDA_SEC_VERIFY_FOR_HP
	bool "Trustzone Secure Test"		CONFIG_TZ_SEC_VERIFY_FOR_HP
	bool "AUDIO Secure Test"	CONFIG_AUDIO_SEC_VERIFY_FOR_HP
fi #CONFIG_PER_TEST_FOR_HP
endmenu #CONFIG PER TEST


comment '--------------Application Config Start------------'
mainmenu_option next_comment
comment '< SSL Config'
define_bool CONFIG_USE_MBEDTLS_ROM_FOR_HP y
bool "MBEDTLS Enable"		CONFIG_MBED_TLS_ENABLED_FOR_HP
bool "SSL ROM Test"		CONFIG_SSL_ROM_TEST_FOR_HP
endmenu

mainmenu_option next_comment
comment '< Audio Config'
bool "Enable Audio Framework"		CONFIG_AUDIO_FWK_FOR_HP
if [ "$CONFIG_AUDIO_FWK_FOR_HP" = "y" ]; then
	choice 'Select Audio Interfaces' "Mixer	CONFIG_AUDIO_MIXER_FOR_HP \
								PassThrough	CONFIG_AUDIO_PASSTHROUGH_FOR_HP"
fi
endmenu

mainmenu_option next_comment
comment '< IPC Message Queue Config'
bool "Enable IPC Message Queue"        CONFIG_IMQ_EN_FOR_HP
if [ "$CONFIG_IMQ_EN_FOR_HP" = "y" ]; then
	bool "Enable RPC"	 CONFIG_RPC_EN_FOR_HP
	bool "Enable IPC Message Queue Test"        CONFIG_IMQ2_TEST_FOR_HP
	define_bool CONFIG_IPC_MSG_MASTER_FOR_HP y
fi
endmenu

#===========================================================================
# Normal: Build all code, includes ROM code. Normally for FPGA verification.
# Release: Build user application code and link with ROM + RAM libraries.
# Build_ROM_Lib: Build the ROM code library only.
# Build_RAM_Lib: Build the RAM code library only.
# Build_RAM_All: Build all RAM code, includes user application, and link with ROM library.
comment '--------------Build Config------------'
mainmenu_option next_comment

comment '< Build Option'

comment 'Select toolchain  '
choice 'Toolchain'		"ASDK             CONFIG_TOOLCHAIN_ASDK_FOR_HP  \
                                 ARM_GCC          CONFIG_TOOLCHAIN_ARM_GCC_FOR_HP  \
 			           		" ASDK

comment 'Choose the build configuration '
choice 'Link ROM Mode ' 			"Link_ROM_Library      CONFIG_LINK_ROM_LIB_FOR_HP  \
                                     Link_ROM_Symbol       CONFIG_LINK_ROM_SYMB_FOR_HP  \
					               " Link_ROM_Library
endmenu

comment '--------------------------'
endmenu


separator "HPEnd"
separator "APStart"

#===========================================================================

comment '--------------CA32 config------------'

mainmenu_option next_comment
comment '< MENUCONFIG FOR CA32 CONFIG'

comment '--------------CPU config Start------------'

mainmenu_option next_comment
comment '< CONFIG CHIP'
comment 'Target Platform Selection'
comment 'Choose a Vendor/Product combination.'

choice 'Product' "AMEBASMART CONFIG_AMEBASMART_FOR_AP  \
		" AMEBASMART

choice 'ArmCore' "ARM_CA32 ARM_CORE_CA32_FOR_AP  \
		"ARM_CA32

bool "Select FPGA"            CONFIG_FPGA_FOR_AP

choice 'Chip Version' "AMEBASMART_A_Cut			CONFIG_AMEBASMART_A_CUT_FOR_AP
		" AMEBASMART_A_Cut

endmenu

comment '--------------smp config Start------------'
mainmenu_option next_comment
comment '< CONFIG SMP'

choice 'Select Core Num'			"DUAL	CONFIG_SMP_DUAL_CORE_FOR_AP \
								SINGLE	CONFIG_SMP_SINGLE_CORE_FOR_AP \
								" DUAL

if [ "$CONFIG_SMP_DUAL_CORE_FOR_AP" = "y" ]; then
	define_int  CONFIG_CORE_NUM_FOR_AP 2
else
	define_int CONFIG_CORE_NUM_FOR_AP 1
fi
endmenu #CONFIG OS

#===========================================================================
# Common Config with every IC have this function in here. Don't litmit someone ic.
#
comment '--------------OS config Start------------'
mainmenu_option next_comment
comment '< CONFIG OS'

bool "Enable Kernel"                     CONFIG_KERNEL_FOR_AP

if [ "$CONFIG_KERNEL_FOR_AP" = "y" ]; then
choice 'Kernel Selecte' "FREERTOS        PLATFORM_FREERTOS_FOR_AP \
						"FREERTOS        
define_int TASK_SCHEDULER_DISABLED_FOR_AP 0
fi
endmenu #CONFIG OS

#===========================================================================

#===========================================================================
# Normall function config
#


comment '--------------Peripheral config Start------------'


mainmenu_option next_comment
comment '< CONFIG USB'
bool "Enable USB"			CONFIG_USB_OTG_EN_FOR_AP
if [ "$CONFIG_USB_OTG_EN_FOR_AP" = "y" ]; then

choice 'USB Mode'			"DEVICE_MODE		CONFIG_USB_DEVICE_EN_FOR_AP \
					 HOST_MODE		CONFIG_USB_HOST_EN_FOR_AP \
					"

if [ "$CONFIG_USB_DEVICE_EN_FOR_AP" = "y" ]; then
bool "CDC ACM"				CONFIG_USBD_CDC_ACM_FOR_AP
bool "Composite"			CONFIG_USBD_COMPOSITE_FOR_AP
bool "HID"				CONFIG_USBD_HID_FOR_AP
bool "MSC"				CONFIG_USBD_MSC_FOR_AP
bool "Vendor"				CONFIG_USBD_VENDOR_FOR_AP
fi

if [ "$CONFIG_USB_HOST_EN_FOR_AP" = "y" ]; then
bool "CDC ACM"				CONFIG_USBH_CDC_ACM_FOR_AP
bool "CDC ECM"				CONFIG_USBH_CDC_ECM_FOR_AP
if [ "$CONFIG_USBH_CDC_ECM_FOR_AP" = "y" ]; then
       define_bool CONFIG_ETHERNET_FOR_AP y
       bool "Enable ethernet bridge" CONFIG_ETHERNET_BRIDGE_FOR_AP
fi
bool "MSC"				CONFIG_USBH_MSC_FOR_AP
bool "UVC"				CONFIG_USBH_UVC_FOR_AP
bool "Vendor"				CONFIG_USBH_VENDOR_FOR_AP
fi

fi
endmenu


comment '--------------Peripheral Test start---------------'
mainmenu_option next_comment
comment '< CONFIG FUNCTION TEST'
bool "Enable Peripheral Test"		CONFIG_PER_TEST_FOR_AP
if [ "$CONFIG_PER_TEST_FOR_AP" = "y" ]; then
	bool "System_Verify_Mode"	CONFIG_SYS_VERIFY_FOR_AP
	if [ "$CONFIG_SYS_VERIFY_FOR_AP" = "y" ]; then
	choice 'System Verify Type' "FT_Test	CONFIG_FT_FOR_AP\
								EQC_Test	CONFIG_EQC_FOR_AP \
								OLT_Test	CONFIG_OLT_FOR_AP \
								IMG_SIM		CONFIG_SIMULATION_FOR_AP \
								"
	fi
	bool "DBGPORT_Verify_Mode"	CONFIG_DBGPORT_ENABLE_FOR_AP
	bool "Timer_Verify_Mode"	CONFIG_TIMER_VERIFY_FOR_AP
	bool "WDG_Verify_Mode"		CONFIG_WDG_VERIFY_FOR_AP
	bool "Gdma_Verify_Mode"		CONFIG_GDMA_VERIFY_FOR_AP
	bool "GPIO_Verify_Mode"		CONFIG_GPIO_VERIFY_FOR_AP
	bool "SPI_COM_Verify_Mode"	CONFIG_SPI_COM_VERIFY_FOR_AP
	bool "UART_Verify_Mode"		CONFIG_UART_VERIFY_FOR_AP
	bool "LCDC_Verify_Mode"		CONFIG_LCDC_VERIFY_FOR_AP
	bool "I2C_Verify_Mode"		CONFIG_I2C_VERIFY_FOR_AP
	bool "PMC_Verify_Mode"		CONFIG_PMC_VERIFY_FOR_AP
	bool "EFUSE_Verify_Mode"	CONFIG_EFUSE_VERIFY_FOR_AP
	bool "SPIC_Verify_Mode"		CONFIG_SPIC_VERIFY_FOR_AP
	bool "RF_Interference_Flash"		CONFIG_RF_Interference_Flash_VERIFY_FOR_AP
	bool "ADC_Verify_Mode"		CONFIG_ADC_VERIFY_FOR_AP
	bool "RSIP_Verify_Mode"		CONFIG_RSIP_VERIFY_FOR_AP
	bool "KeyScan_Verify_Mode"	CONFIG_KEYSCAN_VERIFY_FOR_AP
	bool "CapTouch_Verify_Mode"	CONFIG_CAPTOUCH_VERIFY_FOR_AP
	bool "SGPIO_Verify_Mode"	CONFIG_SGPIO_VERIFY_FOR_AP
	bool "Qdecoder_Verify_Mode"	CONFIG_QDEC_VERIFY_FOR_AP
	bool "DDR Test"				CONFIG_DDR_VERIFY_FOR_AP
	bool "Dhrystone Test"		CONFIG_DHRYSTONE_TEST_FOR_AP
	bool "SSL ROM Test"		CONFIG_SSL_ROM_TEST_FOR_AP
	bool "RTLIB ROM Test"		CONFIG_RTLIB_VERIFY_FOR_AP
	bool "SecureBoot Test"		CONFIG_SBOOT_VERIFY_FOR_AP
	bool "IPC Test"			CONFIG_IPC_VERIFY_FOR_AP
	bool "MPU Test"			CONFIG_MPU_VERIFY_FOR_AP
	bool "CACHE Test"		CONFIG_CACHE_VERIFY_FOR_AP
	bool "WFE Test"			CONFIG_WFE_VERIFY_FOR_AP
	bool "SDH_HOST_Verify_Mode"	CONFIG_SDH_VERIFY_FOR_AP
	bool "AUDIO_Verify_Mode"	CONFIG_AUDIO_VERIFY_FOR_AP
	bool "Multi-int Test"		CONFIG_MULTI_INT_VERIFY_FOR_AP
	bool "USB Test"			CONFIG_USB_VERIFY_FOR_AP
	if [ "$CONFIG_USB_VERIFY_FOR_AP" = "y" ]; then
		if [ "$CONFIG_USB_DEVICE_EN_FOR_AP" = "y" ]; then
		bool "USB Device Verification"		CONFIG_USBD_VERIFY_FOR_AP
		fi
		if [ "$CONFIG_USB_HOST_EN_FOR_AP" = "y" ]; then
		bool "USB Host Verification"		CONFIG_USBH_VERIFY_FOR_AP
		fi
	fi
fi #CONFIG_PER_TEST_FOR_AP
endmenu #CONFIG PER TEST


comment '--------------Application Config Start------------'
mainmenu_option next_comment
comment '< LWIP Config'
bool "NAT REPEATER Enable"		CONFIG_IP_NAT
endmenu
mainmenu_option next_comment
comment '< SSL Config'
bool "MBEDTLS Enable"		CONFIG_MBED_TLS_ENABLED_FOR_AP
if [ "$CONFIG_MBED_TLS_ENABLED_FOR_AP" = "y" ]; then
choice 'MBEDTLS Version'        "MBEDTLS_V_3_4_1   MBEDTLS_V_3_4_1_ENABLE \
								 MBEDTLS_V_2_16_9   MBEDTLS_V_2_16_9_ENABLE
								 " MBEDTLS_V_2_16_9

if [ "$MBEDTLS_V_3_4_1_ENABLE" = "y" ]; then
define_int	MBEDTLS_VERSION     0x03040100
fi
if [ "$MBEDTLS_V_2_16_9_ENABLE" = "y" ]; then
define_int	MBEDTLS_VERSION     0x02100300
fi			 
fi
endmenu

mainmenu_option next_comment
comment '< 802154 Config'
bool "Enable 802154"                     CONFIG_802154_EN_FOR_AP
if [ "$CONFIG_802154_EN_FOR_AP" = "y" ]; then
	if [ "$CONFIG_MBED_TLS_ENABLED_FOR_AP" = "n" ]; then
		comment '    Must Enable MBEDTLS Before Enable THREAD'
	fi
	if [ "$CONFIG_MBED_TLS_ENABLED_FOR_AP" = "y" ]; then
		bool "Enable THREAD"                	CONFIG_802154_THREAD_EN_FOR_AP
		if [ "$CONFIG_802154_THREAD_EN_FOR_AP" = "y" ]; then
			choice 'THREAD ROLE'      "BORDER_ROUTER		CONFIG_802154_THREAD_BORDER_ROUTER_EN_FOR_AP \
							FTD			        CONFIG_802154_THREAD_FTD_EN_FOR_AP \
							MTD			        CONFIG_802154_THREAD_MTD_EN_FOR_AP \
							RCP			        CONFIG_802154_THREAD_RCP_EN_FOR_AP \
							"
			if [ "$CONFIG_802154_THREAD_RCP_EN_FOR_AP" = "n" ]; then
				bool "RCP AS RADIO"                	CONFIG_802154_THREAD_RADIO_RCP_EN_FOR_AP
			fi
			bool "USE FLASH FOR OPENTHREAD SETTING" CONFIG_802154_THREAD_FLASH_API_EN_FOR_AP
			bool "STABILITY TEST"                	CONFIG_802154_THREAD_STABILITY_TEST_EN_FOR_AP
		fi
	fi
	bool "Enable 802154 Test"               CONFIG_802154_TEST_EN_FOR_AP
	if [ "$CONFIG_802154_TEST_EN_FOR_AP" = "y" ]; then
		define_bool CONFIG_802154_THREAD_EN_FOR_AP n
	fi
fi
endmenu

mainmenu_option next_comment
comment '< Audio Config'

bool "Enable Audio Framework"		CONFIG_AUDIO_FWK_FOR_AP
if [ "$CONFIG_AUDIO_FWK_FOR_AP" = "y" ]; then
	choice 'Select Audio Interfaces' "Mixer	CONFIG_AUDIO_MIXER_FOR_AP \
		PassThrough	CONFIG_AUDIO_PASSTHROUGH_FOR_AP"
fi
bool "Enable Media Framework"		CONFIG_MEDIA_PLAYER_FOR_AP
if [ "$CONFIG_MEDIA_PLAYER_FOR_AP" = "y" ]; then
	mainmenu_option next_comment
	comment '    Demux'
		bool "Demux WAV"	CONFIG_MEDIA_DEMUX_WAV_FOR_AP
		bool "Demux MP3"	CONFIG_MEDIA_DEMUX_MP3_FOR_AP
		bool "Demux AAC"	CONFIG_MEDIA_DEMUX_AAC_FOR_AP
		bool "Demux M4A"	CONFIG_MEDIA_DEMUX_MP4_FOR_AP
		bool "Demux FLAC"	CONFIG_MEDIA_DEMUX_FLAC_FOR_AP
		bool "Demux OGG"	CONFIG_MEDIA_DEMUX_OGG_FOR_AP
	endmenu
	mainmenu_option next_comment
	comment '    Codec'
		bool "Codec PCM"	CONFIG_MEDIA_CODEC_PCM_FOR_AP
		bool "Codec MP3"	CONFIG_MEDIA_CODEC_MP3_FOR_AP
		bool "Codec AAC"	CONFIG_MEDIA_CODEC_HAAC_FOR_AP
		bool "Codec VORBIS"	CONFIG_MEDIA_CODEC_VORBIS_FOR_AP
		bool "Codec OPUS"	CONFIG_MEDIA_CODEC_OPUS_FOR_AP
	endmenu
fi
#bool "Enable Media Lite Framework"      CONFIG_MEDIA_LITE_PLAYER_FOR_AP
#if [ "$CONFIG_MEDIA_LITE_PLAYER_FOR_AP" = "y" ]; then
#	mainmenu_option next_comment
#	comment '    Demux'
#		bool "Demux WAV"	CONFIG_MEDIA_LITE_DEMUX_WAV_FOR_AP
#		bool "Demux MP3"	CONFIG_MEDIA_LITE_DEMUX_MP3_FOR_AP
#		bool "Demux AAC"	CONFIG_MEDIA_LITE_DEMUX_AAC_FOR_AP
#		bool "Demux M4A"	CONFIG_MEDIA_LITE_DEMUX_MP4_FOR_AP
#	endmenu
#	mainmenu_option next_comment
#	comment '    Codec'
#		bool "Codec PCM"	CONFIG_MEDIA_LITE_CODEC_PCM_FOR_AP
#		bool "Codec MP3"	CONFIG_MEDIA_LITE_CODEC_MP3_FOR_AP
#		bool "Codec AAC"	CONFIG_MEDIA_LITE_CODEC_HAAC_FOR_AP
#	endmenu
#fi
#bool "Enable WIFI AUDIO"           CONFIG_WIFI_AUDIO_FOR_AP
#if [ "$CONFIG_WIFI_AUDIO_FOR_AP" = "y" ]; then
#	mainmenu_option next_comment
#	comment '    Codec'
#		bool "Codec PCM"	CONFIG_MEDIA_CODEC_PCM_FOR_AP
#		bool "Dec FLAC"	CONFIG_MEDIA_DEC_FLAC_FOR_AP
#		bool "Enc FLAC"	CONFIG_MEDIA_ENC_FLAC_FOR_AP
#	endmenu
#fi
if [ "$CONFIG_MEDIA_PLAYER_FOR_AP" = "y" -o "$CONFIG_MEDIA_LITE_PLAYER_FOR_AP" = "y"  -o "$CONFIG_WIFI_AUDIO_FOR_AP" = "y" ]; then
	define_bool CONFIG_AUDIO_FWK_FOR_AP y
fi
endmenu

mainmenu_option next_comment
comment '< IPC Message Queue Config'
bool "Enable IPC Message Queue"        CONFIG_IMQ_EN_FOR_AP
if [ "$CONFIG_IMQ_EN_FOR_AP" = "y" ]; then
	bool "Enable RPC"	 CONFIG_RPC_EN_FOR_AP
	bool "Enable IPC Message Queue Test"        CONFIG_IMQ2_TEST_FOR_AP
fi
endmenu

mainmenu_option next_comment
comment '< GUI Config'
bool "Enable GUI"                               CONFIG_GUI_EN_FOR_AP
if [ "$CONFIG_GUI_EN_FOR_AP" = "y" ]; then
	bool "LVGL"             CONFIG_LVGL_EN_FOR_AP
fi
endmenu

mainmenu_option next_comment
comment '< Range Config'
bool "Range Enable"		CONFIG_RANGE_ENABLED
endmenu

#===========================================================================
# Normal: Build all code, includes ROM code. Normally for FPGA verification.
# Release: Build user application code and link with ROM + RAM libraries.
# Build_ROM_Lib: Build the ROM code library only.
# Build_RAM_Lib: Build the RAM code library only.
# Build_RAM_All: Build all RAM code, includes user application, and link with ROM library.
comment '--------------Build Config------------'
mainmenu_option next_comment

comment '< Build Option'

comment 'Select toolchain  '
choice 'Toolchain'		"ASDK             CONFIG_TOOLCHAIN_ASDK_FOR_AP  \
                                 ARM_GCC          CONFIG_TOOLCHAIN_ARM_GCC_FOR_AP  \
 			           		" ASDK

comment 'Choose the build configuration '
choice 'Link ROM Mode ' 			"Link_ROM_Library      CONFIG_LINK_ROM_LIB_FOR_AP  \
                                     Link_ROM_Symbol       CONFIG_LINK_ROM_SYMB_FOR_AP  \
					               " Link_ROM_Library
endmenu

comment '--------------------------'
endmenu

separator "APEnd"

