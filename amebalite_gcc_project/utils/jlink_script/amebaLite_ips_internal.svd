<?xml version="1.0" encoding="utf-8"?>

<!-- File naming: RL6842_ips.svd -->

<!--  Copyright (C) 2012-2025 Realsil Limited. All rights reserved.   -->

<device xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" schemaVersion="1.1" xs:noNamespaceSchemaLocation="CMSIS-SVD.xsd">
  <vendor>Realtek</vendor>
  <vendorID>RTK</vendorID>
  <name>RL6842_IP_SVD</name>
  <description>IP svd file</description>
  <peripherals>
    <peripheral>
      <name>aud</name>
      <baseAddress>0x41022100</baseAddress>
      <size>0x00000030</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00000030</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>ADDA_CTL</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description>ADC And DAC Control Register</description>
          <resetValue>0x00000132</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>POWADDACK</name>
              <description>AD/DA clock power down control
0: power down
1: power on</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DAC_CKXEN</name>
              <description>DAC chopper clock enable control
0: disable
1: enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DAC_CKXSEL</name>
              <description>DAC chopper clock selection
0: ckx2/4
1: ckx2/8</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DAC_POW</name>
              <description>DAC power down control
0: power down
1: power on</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DPRAMP_CSEL</name>
              <description>Depop C size selection
00: 1x
01: 2x
10: 3x
11: 4x</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DPRAMP_ENRAMP</name>
              <description>DPRAMP enable ramp control
0: disable
1: enable</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DPRAMP_POW</name>
              <description>DPRAMP power down control
0: power down
1: power on</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DTSDM_CKXEN</name>
              <description>ADC integrater 1 OP chopper enable
0: disable
1: enable</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DTSDM_POW_L</name>
              <description>Left channel ADC power on control
0: power down
1: power on</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DTSDM_POW_R</name>
              <description>Right channel ADC power on control
0: power down
1: power on</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LO_CTL</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description>Lineout Control Register</description>
          <resetValue>0x00006072</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>LO_CAL</name>
              <description>Lineout output offset calibration mode selection
1: calibration mode
0: normal mode</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LO_ENDP</name>
              <description>Lineout enable depop control
0: disable
1: enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LO_POW</name>
              <description>Lineout power down control
0: power down
1: power on</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LO_MDP</name>
              <description>Lineout mute depop mode control
0: no depop
1: depop</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LO_SE</name>
              <description>Lineout  single-end mode control
0: differential
1: single-ended</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LO_M</name>
              <description>Lineout mute control
0: un-mute
1: mute
&lt;0&gt;: DAC
&lt;1&gt;: Analog in</description>
              <bitRange>[6:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LO_OPNDP</name>
              <description>Lineout op negative depop mode control
0: no depop
1: depop</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LO_OPPDP</name>
              <description>Lineout op positive depop mode control
0: no depop
1: depop</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LO_GSEL</name>
              <description>Lineout  gain selection
00: 0dB
01: -3dB
10: -6dB
11: -9dB</description>
              <bitRange>[10:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LO_BIAS</name>
              <description>Lineout mode output MOS quiescent current tuning
00: 120uA</description>
              <bitRange>[12:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LO_CCSEL</name>
              <description>Lineout op 1st stage miller cap size
00: 20pF
01: 24pF
10: 28pF
11: 32pF</description>
              <bitRange>[14:13]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MICBIAS_CTL0</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description>MICBIAS Control Register 0</description>
          <resetValue>0x0000029A</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>MBIAS_POW</name>
              <description>MBIAS power control
0: power down
1: power on</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MICBIAS1_ENCHX</name>
              <description>MICBIAS enable chopper clock
0: disable
1: enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MICBIAS1_POW</name>
              <description>MICBIAS power control 
0: power down
1: power on</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MICBIAS1_VSET</name>
              <description>MICBIAS select output voltage level, 0.1V per step
0000:1.15V
0001:1.25V
0010:1.35V
0011:1.45V
0100:1.55V
0101:1.65V
0110:1.75V
0111:1.8V</description>
              <bitRange>[6:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MICBIAS1_OCSEL</name>
              <description>OCP current selection
00: 2.5mA
01: 5mA
10: 7.5mA
11: 10mA</description>
              <bitRange>[8:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MICBIAS1_COUNT</name>
              <description>when OCP happen disable time @312.5kHz
00: 819.2us
01: 1638.4us
10: 3276.8us
11: 6553.6us</description>
              <bitRange>[10:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MICBIAS1_POWSHDT</name>
              <description>MICBIAS OCP power control
0: disable OCP
1: enable OCP</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MICBIAS1_COMP</name>
              <description>Bit[12]:
0: disable internal miller cap
1: enable internal miller cap
Bit[15:13]: reserved</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MICBIAS1_OC</name>
              <description>OCP happen output signal</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MICBST_CTL0</name>
          <addressOffset>0x0000000C</addressOffset>
          <size>32</size>
          <description>MICBST Control Register 0</description>
          <resetValue>0x0003C000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>MICBST_POWL</name>
              <description>MICBST power control, left channel
0: power down
1: power on</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MICBST_POWR</name>
              <description>MICBST power control, right channel
0: power down
1: power on</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MICBST_ENDFL</name>
              <description>MICBST left channel enable differential 
0: single to differential
1: differential to differential</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MICBST_ENDFR</name>
              <description>MICBST right channel enable differential 
0: single to differential
1: differential to differential</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MICBST_ENCALL</name>
              <description>MICBST left channel enable calibration path
0: disable
1: enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MICBST_ENCAL_SWAPL</name>
              <description>MICBST left channel swap calibration path
0: disable
1: enable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MICBST_GSELL</name>
              <description>MICBST left channel gain select
0000: 0dB
0001: 5dB
0010: 10dB
0011: 15dB
0100: 20dB
0101: 25dB
0110: 30dB
0111: 35dB
1XXX: 40dB</description>
              <bitRange>[9:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MICBST_GSELR</name>
              <description>MICBST right channel gain select
0000: 0dB
0001: 5dB
0010: 10dB
0011: 15dB
0100: 20dB
0101: 25dB
0110: 30dB
0111: 35dB
1XXX: 40dB</description>
              <bitRange>[13:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MICBST_MUTE_L</name>
              <description>MICBST left channel  mute control
mute&lt;0&gt;: mic in
mute&lt;1&gt;: line in
0: unmute
1: mute</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MICBST_MUTE_R</name>
              <description>MICBST right channel mute control
mute&lt;0&gt;: mic in
mute&lt;1&gt;: line in
0: unmute
1: mute</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MICBST_CTL1</name>
          <addressOffset>0x00000010</addressOffset>
          <size>32</size>
          <description>MICBST Control Register 1</description>
          <resetValue>0x00020100</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>MICBST3_POW</name>
              <description>MICBST3 power control, left channel
0: power down
1: power on</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MICBST3_ENDF</name>
              <description>MICBST3 channel enable differential 
0: single to differential
1: differential to differential</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MICBST3_ENCAL</name>
              <description>MICBST3 enable calibration path
0: disable
1: enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MICBST3_ENCAL_SWAP</name>
              <description>MICBST3 swap calibration path
0: disable
1: enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MICBST3_GSEL</name>
              <description>MICBST3 channel gain select 
If CODEC_RESERVE&lt;3&gt;=0 (MICBST3_GAIN_OPT=0)
0000: 3.52 dB
0001: 7.23 dB
0010: 11.36 dB
0011: 15.85 dB
0100: 20.42 dB
0101: 25.34 dB
0110: 31.25 dB
0111: 35.19 dB
1XXX: 40.04 dB
If CODEC_RESERVE&lt;3&gt;=1 (MICBST3_GAIN_OPT=1)
0000: 3.52 dB
0001: 7.23 dB
0010: 11.36 dB
0011: 15.85 dB
0100: 20.42 dB
0101: 25.34 dB
0110: 25.34 dB
0111: 29.25 dB
1XXX: 34.07 dB</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MICBST3_MUTE</name>
              <description>MICBST3 mute control
mute: mic in
0: unmute
1: mute</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LDO_POW</name>
              <description>LDO power control
0: disable LDO
1: enable LDO</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LDO_TUNE</name>
              <description>LDO voltage control
10000: Vref 0.9V, LDO 1.8V</description>
              <bitRange>[17:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LDO_COMP_INT</name>
              <description>LDO miller compensation
0: close  
1: short</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LDO_POW_0P9V</name>
              <description>LDO precharge
0: LDO
1: Unity gain buffer</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LDO_PREC</name>
              <description>LOD_PREC</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CODEC_RSVD</name>
          <addressOffset>0x00000014</addressOffset>
          <size>32</size>
          <description>CODEC Reserved Register</description>
          <resetValue>0x00000030</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>MICBSTL_ENERGY_METER_MODE</name>
              <description>0: turn off energy-meter mode of MICBST_L
1: turn on energy-meter mode of MICBST_L</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MICBSTR_ENERGY_METER_MODE</name>
              <description>0: turn off energy-meter mode of MICBST_R
1: turn on energy-meter mode of MICBST_R</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MICBST3_ENERGY_METER_MODE</name>
              <description>0: turn off energy-meter mode of MICBST3
1: turn on energy-meter mode of MICBST3</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MICBST3_GAIN_OPT</name>
              <description>Influence gain of MICBST3, see MICBST3_GSEL</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LDO_CODEC_DRIVING_PATH</name>
              <description>Selection for driving  path of LDO_CODEC
0: select strong driving path, PMOS W=240um, L=0.44um
1: select 1.8kohm driving path</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LDO_CODEC_DISCHARGE_PATH</name>
              <description>Selection for discharge  path of LDO_CODEC
0: discharge path is turned off
1: 1.8kohm discharge path is turned on</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LDO_CUR_SEL</name>
              <description>LDO current control
If LPMODE_EN=1:
000: 1uA
001: 1.5uA
010: 2uA
011: 2.5uA
100: 3uA
101: 3.5uA
110: 4uA
111: 4.5uA
If LPMODE_EN=0:
000: 2uA
001: 3uA
010: 4uA
011: 5uA
100: 6uA
101: 7uA
110: 8uA
111: 9uA</description>
              <bitRange>[8:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DPRAMP_CUR_SEL</name>
              <description>DPRAMP current control:
If LPMODE_EN=1:
000: 1uA
001: 1.5uA
010: 2uA
011: 2.5uA
100: 3uA
101: 3.5uA
110: 4uA
111: 4.5uA
If LPMODE_EN=0:
000: 2uA
001: 3uA
010: 4uA
011: 5uA
100: 6uA
101: 7uA
110: 8uA
111: 9uA</description>
              <bitRange>[11:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VCM_CUR_SEL</name>
              <description>DAC VCM buffer current control: 
If LPMODE_EN=1:
000: 1uA
001: 1.5uA
010: 2uA
011: 2.5uA
100: 3uA
101: 3.5uA
110: 4uA
111: 4.5uA
If LPMODE_EN=0:
000: 2uA
001: 3uA
010: 4uA
011: 5uA
100: 6uA
101: 7uA
110: 8uA
111: 9uA</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CODEC_RESERVE</name>
              <description>Reserved</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CODEC_RESERVE1</name>
              <description>Reserved</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DTS_CTL</name>
          <addressOffset>0x00000018</addressOffset>
          <size>32</size>
          <description>DTS Control Register</description>
          <resetValue>0x00000008</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DTSDM3_CKXEN</name>
              <description>ADC integrater 1 OP chopper enable
0: disable
1: enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DTSDM3_POW</name>
              <description>Left channel ADC power on control
0: power down
1: power on</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LPMODE_EN</name>
              <description>low power mode enable
0: disable, current uses 12.5uA
1: enable, current uses 1uA</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MBIAS_CTL0</name>
          <addressOffset>0x0000001C</addressOffset>
          <size>32</size>
          <description>MBIAS Control Register 0</description>
          <resetValue>0x00006666</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>MBIAS_ISEL_DAC</name>
              <description>DAC current control
If LPMODE_EN=1:
000: 1uA
001: 1.5uA
010: 2uA
011: 2.5uA
100: 3uA
101: 3.5uA
110: 4uA
111: 4.5uA
If LPMODE_EN=0:
000: 2uA
001: 3uA
010: 4uA
011: 5uA
100: 6uA
101: 7uA
110: 8uA
111: 9uA</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MBIAS_ISEL_LO</name>
              <description>Lineout current control
If LPMODE_EN=1:
000: 1uA
001: 1.5uA
010: 2uA
011: 2.5uA
100: 3uA
101: 3.5uA
110: 4uA
111: 4.5uA
If LPMODE_EN=0:
000: 2uA
001: 3uA
010: 4uA
011: 5uA
100: 6uA
101: 7uA
110: 8uA
111: 9uA</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MBIAS_ISEL_DTSDM3</name>
              <description>DTSDM3 current control
If LPMODE_EN=1:
000: 1uA
001: 1.5uA
010: 2uA
011: 2.5uA
100: 3uA
101: 3.5uA
110: 4uA
111: 4.5uA
If LPMODE_EN=0:
000: 2uA
001: 3uA
010: 4uA
011: 5uA
100: 6uA
101: 7uA
110: 8uA
111: 9uA</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MBIAS_ISEL_DTSDM3_INT1</name>
              <description>DTSDM3 integrator current control
If LPMODE_EN=1:
000: 2uA
001: 3uA
010: 4uA
011: 5uA
100: 6uA
101: 7uA
110: 8uA
111: 9uA
If LPMODE_EN=0:
000: 4uA
001: 6uA
010: 8uA
011: 10uA
100: 12uA
101: 14uA
110: 16uA
111: 18uA</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MBIAS_CTL1</name>
          <addressOffset>0x00000020</addressOffset>
          <size>32</size>
          <description>MBIAS Control Register 1</description>
          <resetValue>0x66066666</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>MBIAS_ISEL_DTSDM_L</name>
              <description>DTSDM1_L current control
If LPMODE_EN=1:
000: 1uA
001: 1.5uA
010: 2uA
011: 2.5uA
100: 3uA
101: 3.5uA
110: 4uA
111: 4.5uA
If LPMODE_EN=0:
000: 2uA
001: 3uA
010: 4uA
011: 5uA
100: 6uA
101: 7uA
110: 8uA
111: 9uA</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MBIAS_ISEL_DTSDM_INT1_L</name>
              <description>DTSDM1_L integrator current control
If LPMODE_EN=1:
000: 2uA
001: 3uA
010: 4uA
011: 5uA
100: 6uA
101: 7uA
110: 8uA
111: 9uA
If LPMODE_EN=0:
000: 4uA
001: 6uA
010: 8uA
011: 10uA
100: 12uA
101: 14uA
110: 16uA
111: 18uA</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MBIAS_ISEL_DTSDM_R</name>
              <description>DTSDM1_R current control
If LPMODE_EN=1:
000: 1uA
001: 1.5uA
010: 2uA
011: 2.5uA
100: 3uA
101: 3.5uA
110: 4uA
111: 4.5uA
If LPMODE_EN=0:
000: 2uA
001: 3uA
010: 4uA
011: 5uA
100: 6uA
101: 7uA
110: 8uA
111: 9uA</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MBIAS_ISEL_DTSDM_INT1_R</name>
              <description>DTSDM1_R integrator current control
If LPMODE_EN=1:
000: 2uA
001: 3uA
010: 4uA
011: 5uA
100: 6uA
101: 7uA
110: 8uA
111: 9uA
If LPMODE_EN=0:
000: 4uA
001: 6uA
010: 8uA
011: 10uA
100: 12uA
101: 14uA
110: 16uA
111: 18uA</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MBIAS_ISEL_MICBIAS1</name>
              <description>MICBIAS1 current control
If LPMODE_EN=1:
000: 1uA
001: 1.5uA
010: 2uA
011: 2.5uA
100: 3uA
101: 3.5uA
110: 4uA
111: 4.5uA
If LPMODE_EN=0:
000: 2uA
001: 3uA
010: 4uA
011: 5uA
100: 6uA
101: 7uA
110: 8uA
111: 9uA</description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MBIAS_ISEL_MICBST_L</name>
              <description>MICBST_L current control
If LPMODE_EN=1:
000: 1uA
001: 1.5uA
010: 2uA
011: 2.5uA
100: 3uA
101: 3.5uA
110: 4uA
111: 4.5uA
If LPMODE_EN=0:
000: 2uA
001: 3uA
010: 4uA
011: 5uA
100: 6uA
101: 7uA
110: 8uA
111: 9uA</description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MBIAS_ISEL_MICBST_R</name>
              <description>MICBST_R current control
If LPMODE_EN=1
If LPMODE_EN=1:
000: 1uA
001: 1.5uA
010: 2uA
011: 2.5uA
100: 3uA
101: 3.5uA
110: 4uA
111: 4.5uA
If LPMODE_EN=0:
000: 2uA
001: 3uA
010: 4uA
011: 5uA
100: 6uA
101: 7uA
110: 8uA
111: 9uA</description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MBIAS_CTL2</name>
          <addressOffset>0x00000024</addressOffset>
          <size>32</size>
          <description>MBIAS Control Register 2</description>
          <resetValue>0x00000600</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>MBIAS_ISEL_MICBST3</name>
              <description>MICBST3 current control
If LPMODE_EN=1:
000: 1uA
001: 1.5uA
010: 2uA
011: 2.5uA
100: 3uA
101: 3.5uA
110: 4uA
111: 4.5uA
If LPMODE_EN=0:
000: 2uA
001: 3uA
010: 4uA
011: 5uA
100: 6uA
101: 7uA
110: 8uA
111: 9uA</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LO_RSVD</name>
          <addressOffset>0x00000028</addressOffset>
          <size>32</size>
          <description>LO Reserved Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>LO_RESERVED</name>
              <description>Reserved</description>
              <bitRange>[7:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LO_OP_SECOND_USE_SMALL_GM</name>
              <description>0: enlarge 2nd stage gm of LO opamp to reduce voltage stress
1: 2nd stage gm of LO opamp uses default small gm</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VB0_USE_SMALL_SW</name>
              <description>0: use large switch to get better THD performance of Lineout
1: use small switch</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AUD_DUMMY</name>
          <addressOffset>0x0000002C</addressOffset>
          <size>32</size>
          <description>AUD Dummy Register</description>
          <resetValue>0x000000FF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>HW used only, reserved</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>pll</name>
      <baseAddress>0x4100C440</baseAddress>
      <size>0x00000038</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00000038</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>REG_CPUPLL_CTRL0</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0036B083</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>cpupll_pow_erc</name>
              <description>erc enable.  0 -&gt; 1</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cpupll_pow_div_in</name>
              <description>input divider enable  (need pwl signal) 0 -&gt; 1</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cpupll_pow_pll</name>
              <description>(need pwl signal) 0 -&gt; 1</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cpupll_cp_bia</name>
              <description>charge pump current selection . Default=10uA                      CP current select : 
000: Icp=10uA,  001: Icp=15uA,  010: Icp=20uA,  011: Icp=25uA;    100: Icp=30uA,  101: Icp=35uA,  110: Icp=40uA,  111: Icp=450uA;</description>
              <bitRange>[28:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cpupll_dogenb</name>
              <description>0: watch dog on, 1: watch dog off</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cpupll_ps</name>
              <description></description>
              <bitRange>[24:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cpupll_psen</name>
              <description>phase selector enable</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cpupll_cp_set</name>
              <description>Cp selection. Default=6p                                         00: Cp=4p, 01: Cp=5p, 10: Cp=6p, 11: Cp=7p                                      40M = 6p(10),  26M = 6p(10)</description>
              <bitRange>[20:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cpupll_rs_set</name>
              <description>Rs selection. Default=5k                                          000: Rs=15k,   001: Rs=13k,   010: Rs=11k,   011: Rs=9k,          100: Rs=7k,    101: Rs=5k,    110: Rs=3k,    111: Rs=1k;           40M = 5k(101),  26M = 5k(101)</description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cpupll_cs_sel</name>
              <description>Cs selection. Default=60p                                          00: Cs=40p, 01: Cs=50p, 10: Cs=60p, 11: Cs=70p                                                      40M = 60p(10),  26M = 60p(10)</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cpupll_fref_edge</name>
              <description>0:fref, 1:frefb</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cpupll_ck_en</name>
              <description>output clk enable</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cpupll_ck_en_d4</name>
              <description>output clk div 4 enable</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cpupll_dummy0</name>
              <description></description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cpupll_xtal_manual_mode</name>
              <description>reg_xtal_maunal_mode.  Default=0                                            0: reg_xtal_sel&lt;3:0&gt; is controlled by REG,                                 xtal_div_sel is controlled by mapping table.                      1: reg_xtal_sel&lt;3:0&gt;=4'b1111,                                    xtal_div_sel is controlled by reg_xtal_div_sel_maunal&lt;1:0&gt;</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cpupll_xtal_div_sel_manual</name>
              <description>input divider selection in xtal maunal mode. Default=00                                                                00=/1,  10=/2,  11=/4</description>
              <bitRange>[6:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cpupll_vc_thl</name>
              <description>VC voltage, Default=00                                           00: VC=1/4Vdd,  01: VC=1/2Vdd,  10=3/4Vdd,  11: VC=Vdd</description>
              <bitRange>[4:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cpupll_c3_set</name>
              <description>C3 selection. Default=1p                                          00: 0.5p, 01: 1p, 10: Cs=1.5p, 11: 2p</description>
              <bitRange>[2:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cpupll_r3_set</name>
              <description>Rs selection. Default=1k                                          0: 0 Ohm, 1: 1k Ohm</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CPUPLL_CTRL1</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x008101A1</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>cpupll_xtal_sel</name>
              <description>xtal selection, Default=40MHz                                                                                        0000= 40MHz, 0001= 25MHz,      0010= 13MHz,    0011= 19.2MHz                                      0100= 20MHz, 0101= 26MHz,      0110= 38.4MHz,  0111= 17.664MHz                              1000= 16MHz, 1001= 14.138MHz,  1010= 12MHz,    1011= 52MHz                             1100= 48MHz, 1101= 27MHz,      1110= 24MHz,    1111= none</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cpupll_freq_sel</name>
              <description>output clk selection, Default=400MHz                            0000= 400MHz,  0001= X,         0010= X,       0011= X,                    0100= 216MHz,  0101=196.608MHz, 0110=192MHz,   0111= 180.632MHz, 1000= 148.5MHz,1001= X,         1010= X,       1011= X,        1100= X,       1101= X,         1110= X,       1111= 500MHz</description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cpupll_TBASE_FREQ</name>
              <description>now is empty</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cpupll_STEP_FREQ</name>
              <description>step size selection for switching freq.                           0000: 2^5                                                          0001: 2^6                                                    0010: 2^7                                                          0011: 2^8                                                     0100: 2^9                                                    0101: 2^10                                                    0110: 2^11                                                    0111: 2^12</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cpupll_TRIG_FREQ</name>
              <description>freq. step up or step down enable</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cpupll_BB_DBG_SEL_AFE_SDM</name>
              <description></description>
              <bitRange>[14:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cpupll_DIVN_SDM</name>
              <description>393.216M (98.304M / 24.576M)                             40M: 000111                                                          26M: 001101</description>
              <bitRange>[10:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cpupll_ck_out_sel</name>
              <description>output divider selection. Default=1110(/16)                                                                0000=/1,  1000=/2,  1100=/8,  1110=/16,   1111=/32</description>
              <bitRange>[4:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cpupll_icp_half</name>
              <description>charge pump current half or not                                    0: no half    1: half</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CPUPLL_CTRL2</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>cpupll_STEP</name>
              <description>ssc step size selection.</description>
              <bitRange>[31:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cpupll_TBASE</name>
              <description>ssc freq selection</description>
              <bitRange>[18:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cpupll_EN_SSC</name>
              <description>ssc enable. Default=0</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cpupll_dummy1</name>
              <description>HW used only , these are for reserved</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CPUPLL_CTRL3</name>
          <addressOffset>0x0000000C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>cpupll_F0F_SDM</name>
              <description>393.216M (98.304M / 24.576M)                             40M: 1 0100 1001 0101                                                       26M: 1 1111 1010 1010</description>
              <bitRange>[31:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cpupll_F0N_SDM</name>
              <description>393.216M (98.304M / 24.576M)                             40M: 110                                                          26M: 000</description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cpupll_ORDER_SDM</name>
              <description>SDM order</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cpupll_dummy2</name>
              <description>HW used only , these are for reserved</description>
              <bitRange>[14:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PERIPLL_CTRL0</name>
          <addressOffset>0x00000010</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0036B083</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>peripll_pow_erc</name>
              <description>erc enable.  0 -&gt; 1</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>peripll_pow_div_in</name>
              <description>input divider enable  (need pwl signal) 0 -&gt; 1</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>peripll_pow_pll</name>
              <description>(need pwl signal) 0 -&gt; 1</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>peripll_cp_bia</name>
              <description>charge pump current selection . Default=10uA                      CP current select : 
000: Icp=10uA,  001: Icp=15uA,  010: Icp=20uA,  011: Icp=25uA;    100: Icp=30uA,  101: Icp=35uA,  110: Icp=40uA,  111: Icp=450uA;</description>
              <bitRange>[28:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>peripll_dogenb</name>
              <description>0: watch dog on, 1: watch dog off</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>peripll_ps</name>
              <description></description>
              <bitRange>[24:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>peripll_psen</name>
              <description>phase selector enable</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>peripll_cp_set</name>
              <description>Cp selection. Default=6p                                         00: Cp=4p, 01: Cp=5p, 10: Cp=6p, 11: Cp=7p                                      40M = 6p(10),  26M = 6p(10)</description>
              <bitRange>[20:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>peripll_rs_set</name>
              <description>Rs selection. Default=5k                                          000: Rs=15k,   001: Rs=13k,   010: Rs=11k,   011: Rs=9k,          100: Rs=7k,    101: Rs=5k,    110: Rs=3k,    111: Rs=1k;           40M = 3k(110),  26M = 3k(110)</description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>peripll_cs_sel</name>
              <description>Cs selection. Default=60p                                          00: Cs=40p, 01: Cs=50p, 10: Cs=60p, 11: Cs=70p                                                      40M = 60p(10),  26M = 60p(10)</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>peripll_fref_edge</name>
              <description>0:fref, 1:frefb</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>peripll_ck_en</name>
              <description>output clk enable</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>peripll_ck_en_d4</name>
              <description>output clk div 4 enable</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>peripll_dummy0</name>
              <description></description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>peripll_xtal_manual_mode</name>
              <description>reg_xtal_maunal_mode.  Default=0                                            0: reg_xtal_sel&lt;3:0&gt; is controlled by REG,                                 xtal_div_sel is controlled by mapping table.                      1: reg_xtal_sel&lt;3:0&gt;=4'b1111,                                    xtal_div_sel is controlled by reg_xtal_div_sel_maunal&lt;1:0&gt;</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>peripll_xtal_div_sel_manual</name>
              <description>input divider selection in xtal maunal mode. Default=00                                                                00=/1,  10=/2,  11=/4</description>
              <bitRange>[6:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>peripll_vc_thl</name>
              <description>VC voltage, Default=00                                           00: VC=1/4Vdd,  01: VC=1/2Vdd,  10=3/4Vdd,  11: VC=Vdd</description>
              <bitRange>[4:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>peripll_c3_set</name>
              <description>C3 selection. Default=1p                                          00: 0.5p, 01: 1p, 10: Cs=1.5p, 11: 2p</description>
              <bitRange>[2:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>peripll_r3_set</name>
              <description>Rs selection. Default=1k                                          0: 0 Ohm, 1: 1k Ohm</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PERIPLL_CTRL1</name>
          <addressOffset>0x00000014</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00810100</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>peripll_xtal_sel</name>
              <description>xtal selection, Default=40MHz                                                                                        0000= 40MHz, 0001= 25MHz,      0010= 13MHz,    0011= 19.2MHz                                      0100= 20MHz, 0101= 26MHz,      0110= 38.4MHz,  0111= 17.664MHz                              1000= 16MHz, 1001= 14.138MHz,  1010= 12MHz,    1011= 52MHz                             1100= 48MHz, 1101= 27MHz,      1110= 24MHz,    1111= none</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>peripll_freq_sel</name>
              <description>output clk selection, Default=400MHz                            0000= 400MHz,  0001= X,         0010= X,       0011= X,                    0100= 216MHz,  0101=196.608MHz, 0110=192MHz,   0111= 180.632MHz, 1000= 148.5MHz,1001= X,         1010= X,       1011= X,        1100= X,       1101= X,         1110= X,       1111= 500MHz</description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>peripll_TBASE_FREQ</name>
              <description>now is empty</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>peripll_STEP_FREQ</name>
              <description>step size selection for switching freq.                           0000: 2^5                                                          0001: 2^6                                                    0010: 2^7                                                          0011: 2^8                                                     0100: 2^9                                                    0101: 2^10                                                    0110: 2^11                                                    0111: 2^12</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>peripll_TRIG_FREQ</name>
              <description>freq. step up or step down enable</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>peripll_BB_DBG_SEL_AFE_SDM</name>
              <description></description>
              <bitRange>[14:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>peripll_DIVN_SDM</name>
              <description>1000M</description>
              <bitRange>[10:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>peripll_ck_out_sel</name>
              <description>output divider selection. Default=0000(/1)                                                                0000=/1,  1000=/2,  1100=/8,  1110=/16,   1111=/32</description>
              <bitRange>[4:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>peripll_icp_half</name>
              <description>charge pump current half or not                                    0: no half    1: half</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PERIPLL_CTRL2</name>
          <addressOffset>0x00000018</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>peripll_STEP</name>
              <description>ssc step size selection.</description>
              <bitRange>[31:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>peripll_TBASE</name>
              <description>ssc freq selection</description>
              <bitRange>[18:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>peripll_EN_SSC</name>
              <description>ssc enable. Default=0</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>peripll_dummy1</name>
              <description>HW used only , these are for reserved</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PERIPLL_CTRL3</name>
          <addressOffset>0x0000001C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>peripll_F0F_SDM</name>
              <description>600M                                                      40M: 0 0000 0000 0000                                                          26M: 1 0011 1011 0001</description>
              <bitRange>[31:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>peripll_F0N_SDM</name>
              <description>600M                                                        40M: 000                                                          26M: 000</description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>peripll_ORDER_SDM</name>
              <description>SDM order</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>peripll_dummy2</name>
              <description>HW used only , these are for reserved</description>
              <bitRange>[14:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PLL_TEST</name>
          <addressOffset>0x00000020</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0000980C</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pow_erc_test</name>
              <description>1 for enable test, 0 for disable</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>test_dummy</name>
              <description>dummy</description>
              <bitRange>[14:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ckmon_sel</name>
              <description>0 for CKMON, 1 for CKMOND div by 4</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pow_div4</name>
              <description>1 for ckmon div 4 , 0 for disable div 4</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>iso</name>
              <description>1 for ISO ck_fref/ck_frefb</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ref_clk_sel</name>
              <description>xtal clk from 0 special route 1 APR</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ck_mon_en</name>
              <description>ckmon enable</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ck_sel</name>
              <description>ckmon clk sel 
1111:TL
1110:TL
1101:CK_400M_CPU_I
1100:CK_CPUD4_I
1011:CK_500M_PERI_I
1010:CK_PERID4_I
1001:TL
1000:READY_CPU_I
0111:READY_PERI_I
0110:TL
0101:TL
0100:TL
0011:TL
0010:TL
0001:TL
0000:TL</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>drv_sel</name>
              <description>AGPIO driving sel</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>gpo</name>
              <description>AGPIO output enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>gpe</name>
              <description>AGPIO enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CPUPLL_PS</name>
          <addressOffset>0x00000024</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000118</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>cpupll_ps_dummy</name>
              <description>HW used only , these are for reserved</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cpupll_pow_ckgen</name>
              <description>pow of ckgen</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cpupll_REG_CKGEN_DIV</name>
              <description>DIV9B , N=DIV&lt;8:0&gt;+2</description>
              <bitRange>[13:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cpupll_en_ck400m_ps</name>
              <description></description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cpupll_en_ck400m</name>
              <description></description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cpupll_phase_sel</name>
              <description></description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PERIPLL_PS</name>
          <addressOffset>0x00000028</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000118</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>peripll_ps_dummy</name>
              <description>HW used only , these are for reserved</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>peripll_pow_ckgen</name>
              <description>pow of ckgen</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>peripll_REG_CKGEN_DIV</name>
              <description>DIV9B , N=DIV&lt;8:0&gt;+2</description>
              <bitRange>[13:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>peripll_en_ck400m_ps</name>
              <description></description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>peripll_en_ck400m</name>
              <description></description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>peripll_phase_sel</name>
              <description></description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AUX_BG</name>
          <addressOffset>0x0000002C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00004442</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>POW_BG</name>
              <description>power on BG</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>POW_I</name>
              <description>power on BG current</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>POW_MBIAS</name>
              <description>power on mbias</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bg_dummy0</name>
              <description>HW used only , these are for reserved</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>R1_tune</name>
              <description>Add 200k per step fine tune BG (Efuse)</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bg_dummy1</name>
              <description>HW used only , these are for reserved</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>R2_tune</name>
              <description>Add 20k per step fine tune BG (Efuse)</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bg_dummy2</name>
              <description>HW used only , these are for reserved</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VR1200_tune</name>
              <description>Add 40k per step fine tune BG (Efuse)</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bg_dummy3</name>
              <description>HW used only , these are for reserved</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PLL_STATE</name>
          <addressOffset>0x00000030</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dsp_pll_rdy</name>
              <description>PERI PLL clock is ready</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>cpu_pll_rdy</name>
              <description>CPU PLL clock is ready</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_DUMMY</name>
          <addressOffset>0x00000034</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x000000FF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>HW used only , these are for reserved</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>regu</name>
      <baseAddress>0x4100C100</baseAddress>
      <size>0x00000080</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00000080</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>REG_REGU_POWER_CTRL</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x01000104</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SWR_BOOT_SEL_TRAP</name>
              <description>power plan trap value,
1: SWR select boot parameter SET1, FB from FB pad
0: SWR select boot parameter SET0, FB from core power pad</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SWR_BOOT_TRAP_BYPASS</name>
              <description>1: Bypass SWR TRAP Value, use SWR_BOOT_SEL_OTP to select boot paramter
0: use SWR_BOOT_SEL_TRAP to select boot paramter</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SWR_BOOT_SEL_OTP</name>
              <description>1: SWR select boot parameter SET1, FB from FB pad
0: SWR select boot parameter SET0, FB from core power pad</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>swr_boot_set_sel</name>
              <description>VOL_L1/PWM_VREF_SEL/reg_vofb_sel parameter select
0:select SET0 parameter 1:select SET1 parameter</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sys_pwm_req</name>
              <description>system request SWR mode.
0: PFM
1: PWM</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>core_ldo_mode_sel</name>
              <description>core ldo mode select(the bit no use now, use swr mode to control core ldo standby)
0: reg_standby_L_1209
1: reg_standby_L_1209_slp</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MODE_L</name>
              <description>SWR current mode for debug</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PRDY_SWR</name>
              <description>SWR power ready flag by analog</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>XTAL32K_OK</name>
              <description>XTAL32K ok</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>OSC32K_OK</name>
              <description>OSC128K ok</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>HW_PDB_0P9</name>
              <description>Digital control AIP 3.3v power down
1: enable
0: power down</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GATED_STUB_OK</name>
              <description>No used</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>POW_SW</name>
              <description>SWR power enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>POW_4MOSC</name>
              <description>1: power AON 4M osc</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>POW_32KXTAL</name>
              <description>1: power AON external 32xtal</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>POW_32KOSC</name>
              <description>1: power AON 128k osc for SDM</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SWR_ARB_CTRL0</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x80010913</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SWR_DBNC_FEN</name>
              <description>SWR arb debounce enable</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>swr_manual_en</name>
              <description>SWR manual mode enable. In manual mode,SWR's PFM vol value use normal pfm vol register,PWM vol use normal pwm vol register</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fpwm_l1_manual</name>
              <description>PWM/PFM manual (original fpwm_l1)</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pwm_force_manual</name>
              <description>force pwm bias manual (original pwm_force)</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SWR_MODECHOSE</name>
              <description>SWR arb voltage adjustment control signal option
0:arb internal signal
1:aip real signal</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SWR_TUTIME</name>
              <description>Because using AON 100k clock, this can set to 0</description>
              <bitRange>[23:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SWR_MODE_WAIT_TIME</name>
              <description>00: 50u
01: 100u
10: 250u
11: 500us</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SWR_REQ_DBNC_CYC</name>
              <description>Arbit dbc time for every step change . 
The real time  is 10us * (this value + 1)</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SWR_PSW_WAIT_CYC</name>
              <description>Stable time for every step change . 
The real time  is 10us * (this value + 1)</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AON_LDO_CTRL</name>
          <addressOffset>0x0000000C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000081</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>aon_ldo_dummy0</name>
              <description>// [REGU][AONLDO] dummy</description>
              <bitRange>[15:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>en_sleep_l</name>
              <description>Enable LDO09H sleep mode
0 : disable (default)
1 : enable</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AONLDO_VOSEL_H</name>
              <description>AONLDO09 voltage select
VREF 0P600V 0P575V
0000: 0.600V 0.575V
0001: 0.715V 0.685V
0010: 0.747V 0.716V
0011: 0.781V 0.749V
0100: 0.820V 0.786V
0101: 0.840V 0.806V
0110: 0.862V 0.826V
0111: 0.885V 0.848V
1000: 0.909V 0.871V
1001: 0.934V 0.896V
1010: 0.961V 0.921V
1011: 0.989V 0.949V
1100: 1.020V 0.977V
1101: 1.052V 1.009V
1110: 1.086V 1.041V
1111: 1.122V 1.076V</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>aon_ldo_dummy1</name>
              <description>// [REGU][AONLDO] dummy</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LV_POR_VREF_SEL</name>
              <description>LV_POR VREF
0 (default) VREF = 0P600V
1 VREF = 0P450V</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AONLDO_VREF_SEL</name>
              <description>AONLDO VREF_SEL
0 (default) VREF = 0P600V
1 VREF = 0P575V</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_REGU_32KXTAL0</name>
          <addressOffset>0x00000010</addressOffset>
          <size>16</size>
          <description></description>
          <resetValue>0x00007465</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>XTAL32K_GM</name>
              <description>// [RF][32KXTAL] REG_CTRL
// gm size</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL32K_CUR_REP</name>
              <description>// [RF][32KXTAL] REG_CTRL
// replica buffer current</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL32K_CUR_GM</name>
              <description>// [RF][32KXTAL] REG_CTRL
// awake gm current, 7pXtal: 0100</description>
              <bitRange>[9:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL32K_CUR_GM_INI</name>
              <description>// [RF][32KXTAL] REG_CTRL
// initial gm current, 7pXtal: 0100</description>
              <bitRange>[5:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL32K_CUR_MAIN</name>
              <description>// [RF][32KXTAL] REG_CTRL
// xtal main current</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_REGU_32KXTAL1</name>
          <addressOffset>0x00000012</addressOffset>
          <size>16</size>
          <description></description>
          <resetValue>0x0000E083</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>XTAL32K_TOK</name>
              <description>// [RF][32KXTAL] REG_CTRL
// 00: 100ms 01:200ms 10:400ms 11: 800ms</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL32K_SC_XO</name>
              <description>// [RF][32KXTAL] REG_CTRL
// xo cap</description>
              <bitRange>[13:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL32K_SC_XI</name>
              <description>// [RF][32KXTAL] REG_CTRL
// xi cap</description>
              <bitRange>[7:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EN_XTAL32K_CAP_AWAKE</name>
              <description>// [RF][32KXTAL] REG_CTRL
// internal cap enable as awake</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EN_XTAL32K_CAP_INITIAL</name>
              <description>// [RF][32KXTAL] REG_CTRL
// internal cap enable as initial</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_REGU_32KXTAL2</name>
          <addressOffset>0x00000014</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0000004E</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>xtal_32k_dummy</name>
              <description>// [RF][32KXTAL] REG_CTRL
// dummy</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL32K_GPIO_SEL</name>
              <description>// [RF][32KXTAL] REG_CTRL
// 0: 32K  1: GPIO</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL32K_SC_XO_EXTRA</name>
              <description>// [RF][32KXTAL] REG_CTRL
// 0: w/i 2.8pF cap 1: w/o 2.8pF cap</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL32K_SC_XI_EXTRA</name>
              <description>// [RF][32KXTAL] REG_CTRL
// 0: w/i 2.8pF cap 1: w/o 2.8pF cap</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL32K_GM_REP</name>
              <description>// [RF][32KXTAL] REG_CTRL
// repilca size</description>
              <bitRange>[3:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ENB_XTAL32K_FBRES</name>
              <description>// [RF][32KXTAL] REG_CTRL
// 0: enable feedback resistor</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_REGU_32KOSC</name>
          <addressOffset>0x00000018</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000020</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>osc32k_dummy2</name>
              <description>HW used only , these are for reserved</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SEL_LDO_VREF</name>
              <description>// [RF][32KOSC] REG_CTRL
// 0: LDO low valtage setting 1:high voltage</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>osc32k_dummy</name>
              <description>// [RF][32KOSC] REG_CTRL
// dummy</description>
              <bitRange>[14:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RCAL</name>
              <description>// [RF][32KOSC] REG_CTRL
// osc frequency is highier as RCAL's larger</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_REGU_4MOSC0</name>
          <addressOffset>0x0000001C</addressOffset>
          <size>16</size>
          <description></description>
          <resetValue>0x00009949</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>VCM_SEL_H</name>
              <description>// [RF][4MOSC] REG_CTRL</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VCM_SEL_L</name>
              <description>// [RF][4MOSC] REG_CTRL</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Freq_R_SEL</name>
              <description>// [RF][4MOSC] REG_CTRL</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_REGU_4MOSC1</name>
          <addressOffset>0x0000001E</addressOffset>
          <size>16</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>C_SEL</name>
              <description>// [RF][4MOSC] REG_CTRL</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EN_4MOSC</name>
              <description>// [RF][4MOSC] 1'b1 : enable
Controlley by HW function .</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>osc4m_dummy</name>
              <description>// [RF][4MOSC] REG_CTRL</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IB_Bias_SEL</name>
              <description>// [RF][4MOSC] REG_CTRL</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SWR_ON_CTRL0</name>
          <addressOffset>0x00000020</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xD4AD98D5</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PFMCMP_IQ</name>
              <description>PFM comparator bias
0: 50nA
1: 250nA</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>swr_on_dummy0</name>
              <description>Dummy</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OFF_END_SEL</name>
              <description>PFM function, COT off time controlled by
0: ZCD
1: min off time</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>POW_MINOFF_L</name>
              <description>OCP cmp current select
0: normal current
1: increase OCP cmp current</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>COT_I_L</name>
              <description>SWR PFM on time
COT ON Current
00: 150nA
01: 150nA+100nA
10: 150nA+150nA
11: 150nA+250nA</description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VREFPFM_L</name>
              <description>SWR/LDO
0000 0.750
0001 0.800
0010 0.850
0011 0.900
0100 0.950
0101 1.000
0110 1.050
0111 1.100
1000 1.150
1001 1.200
1010 1.250
1011 1.300
1100 1.350
1101 1.400
1110 1.450
1111 1.500</description>
              <bitRange>[25:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Force_ZCD_Bias</name>
              <description>0: ZCD bias on after SS
1: ZCD bias on when ZCD enable</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ZCD_SDZ_L</name>
              <description>Increase ZCD delay cell</description>
              <bitRange>[20:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_zcdc_H</name>
              <description>SWR ZCD current control
00: 0.1u
01: 0.2u(PFM)
10: 0.7u(PWM)
11: 0.8u
PMW mode parameter when system is high load</description>
              <bitRange>[18:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>POW_ZCD_L</name>
              <description>SWR ZCD enable</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OCP_L1</name>
              <description>PWM current(A) PFM current(A)
000 0.533 0.105
001 0.580 0.145
010 0.630 0.185
011 0.680 0.223
100 0.730 0.263
101 0.780 0.303
110 0.830 0.342
111 0.890 0.290(VIN/10)</description>
              <bitRange>[15:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>POWOCP_L1</name>
              <description>SWR OCP enable
POWOCP_L1=1=&gt; enable over current protection</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SAW_FREQ_L</name>
              <description>SWR PWM frequency
0000     458.0k       
0001     680.2k       
0010     898.9k       
0011     1.113M       
0100     1.321M       
0101     1.522M       
0110     1.716M       
0111     1.902M       
1000     2.087M       
1001     2.258M       
1010     2.426M       
1011     2.582M       
1100     2.743M       
1101     2.888M       
1110     3.035M       
1111     3.165M
PMW mode parameter when system is high load</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_bypass_L</name>
              <description>PWM loop with/wo SR latch
1: bypass SSR latch</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FPWM_L1</name>
              <description>SWR PWM/PFM register
FPWM_L1 = 1: force PWM 
FPWM_L1 = 0: force PFM</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>STD_L1</name>
              <description>SWR setting time
00: 750u
01: 1.5m
10: 3m
11: 6m</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VOL_L1</name>
              <description>VREF 0.865 0.635 0.6 0.835
Code VOUT VOUT VOUT VOUT
1111 1.482857 1.088571 1.028571 1.431429
1110 1.441667 1.058333 1 1.391667
1101 1.402703 1.02973 0.972973 1.354054
1100 1.365789 1.002632 0.947368 1.318421
1011 1.348052 0.98961 0.935065 1.301299
1010 1.330769 0.976923 0.923077 1.284615
1001 1.313924 0.964557 0.911392 1.268354
1000 1.2975 0.9525 0.9 1.2525
0111 1.281481 0.940741 0.888889 1.237037
0110 1.265854 0.929268 0.878049 1.221951
0101 1.250602 0.918072 0.86747 1.207229
0100 1.221176 0.896471 0.847059 1.178824
0011 1.193103 0.875862 0.827586 1.151724
0010 1.166292 0.85618 0.808989 1.125843
0001 1.140659 0.837363 0.791209 1.101099
0000 1.116129 0.819355 0.774194 1.077419</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SWR_ON_CTRL1</name>
          <addressOffset>0x00000024</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x888966A0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SN_N_L</name>
              <description>NGATE NMOS driving</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SP_N_L</name>
              <description>NGATE PMOS driving</description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SN_P_L</name>
              <description>PGATE NMOS driving</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SP_P_L</name>
              <description>PGATE PMOS driving</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VO_DISCHG_PWM_H</name>
              <description>1: dummy loading 5mA</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_mode_predriver</name>
              <description>1: 3 level predriver</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_adjsldo_L</name>
              <description>Small ldo voltage
0000 1.043 
0001 1.075 
0010 1.108 
0011 1.143 
0100 1.180 
0101 1.220 
0110 1.263 
0111 1.286 
1000 1.309 
1001 1.333 
1010 1.359 
1011 1.385 
1100 1.412 
1101 1.444 
1110 1.469 
1111 1.500</description>
              <bitRange>[13:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_ldor_L</name>
              <description>Ldo resistor
1: ldos res short</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PWM_Force</name>
              <description>For PFM=&gt;PWM control
0: PWM bias enabled only at PWM mode
1: Force PWM bias enable when in PWM/PFM mode</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PFM_PD_RST</name>
              <description>For PFM=&gt;PWM control
1: When leave PFM mode, COT logic is reset</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VC_PFM_RSTB</name>
              <description>For PFM=&gt;PWM control
When into PFM, VC is
0: clamped (bit 40 also =1)
1: floating</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PFM_IN_SEL</name>
              <description>PFM function
Power MOS into PFM when PFM CTRL,
0: rising
1: falling</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VC_RSTB</name>
              <description>For PFM=&gt;PWM control
Before SS VC is
0: pulled low
1: floating</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FPWMDELAY</name>
              <description>For PFMPWM time tune
1: PFM&lt;=&gt;PWM 
PFM/PWM change by using DFF (CKMOD)</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ENFPWMDELAY_H</name>
              <description>For PFMPWM time tune
1: PFM=&gt;PWM delay
PWM enable and wait one clock cycle then PFM off</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_mos_half_L</name>
              <description>1: power mos half
PMW mode parameter when system is high load</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Current_Sense_MOS</name>
              <description>OCP function
1: current sensing MOS for large OC current</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SWR_ON_CTRL2</name>
          <addressOffset>0x00000028</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x14924F52</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SWR_ON_Dummy1</name>
              <description>dummy</description>
              <bitRange>[31:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VOFB_SEL</name>
              <description>0:Feedback from REGU Internal PAD for 1.25V/1.35V
1:Feedback from External PAD for 0.9V/1.0V</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PWM_VREF_SEL</name>
              <description>SWR reference voltage select
00:VREF=0.600
01:VREF=0.635
10:VREF=0.835
11:VREF=0.865</description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>REG_SWR_ZCD_CTRL</name>
              <description>// SWR ZCD CTRL control
&lt;1&gt;1: double current 
&lt;0&gt;1'b1: force in CCM/DCM boundary mode(default), 1'b0 : no boundary
PMW mode parameter when system is high load</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BG_VR1200_tune</name>
              <description>BG</description>
              <bitRange>[23:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BG_R2_tuen</name>
              <description>BG R2</description>
              <bitRange>[20:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BG_R1_tune</name>
              <description>BG R1</description>
              <bitRange>[17:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ZCD_Ioffset_b</name>
              <description>00=&gt;+600nA
01=&gt;+400nA
10=&gt;+200nA
11=&gt;0nA</description>
              <bitRange>[14:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_psrr_H</name>
              <description>0: default
1: res+cap
PMW mode parameter when system is high load</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>R2_L1</name>
              <description>SWR compensation
00 =&gt; 0.4M
01 =&gt; 0.3M
10 =&gt; 0.2M
11 =&gt; 0.1M</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>C3_L1</name>
              <description>SWR compensation
00 =&gt; 1.59p
01 =&gt; 3.2p
10 =&gt; 4.76p
11 =&gt; 6.34p</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>C1_L1</name>
              <description>SWR compensation
00 =&gt; 1.03p
01 =&gt; 2.06p
10 =&gt; 3.1p
11 =&gt; 4.12p</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>External_clk_sel</name>
              <description>0:internal clock
1:external clock</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_bg_current_L</name>
              <description>00: 23.9n
01: 54.6n
10: 117.8n</description>
              <bitRange>[4:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>REG_BG_ANA_L</name>
              <description>Default BG from External SWR
1:External SWR BG switch on</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>REG_BG_DIG_L</name>
              <description>Default BG from Local SWR:
1:Local SWR BG switch on</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>REG_VC_CLAMP_SEL_L</name>
              <description>For PFMPWM voltage drop improve
0: unity gain feedback clamp VC=VREF
1: orignal clamp (roll back option)</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SWR_ON_CTRL3</name>
          <addressOffset>0x0000002C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SWR_ON_Dummy2</name>
              <description>dummy</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SWR_OFF_CTRL0</name>
          <addressOffset>0x00000030</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x4274FAAA</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SDZN_L</name>
              <description>Nonoverlap delay cell for NMOS</description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_autozcd_L</name>
              <description>0: register
1: 10000</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_vofb_sel</name>
              <description>0:vo15
1:LX_SPS</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TBOX_L1</name>
              <description>TBOX_L1&lt;1:0&gt; output
00: CKOVER/RAMPOVER
01: NI/PI
10: CKSS/SSOVER
11: i/NIOFF_H</description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ENOCPMUX_L</name>
              <description>1: OCP signal control by MUX
0: OCP signal control by I</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Force_LDOS</name>
              <description>1: LDOS force on</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VO_DISCHG</name>
              <description>1: VO with 1mA discharge</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LDO_OC_clamp</name>
              <description>0: OC clamp with P/NMOS
1: OC clamp with PMOS</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MINOFF_LIQ</name>
              <description>0: Min. off circuit always on
1: Min. off circuit pulse on</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MINON_LIQ</name>
              <description>0: Min. on circuit always on
1: Min. on circuit pulse on</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>POW_AUTO_L</name>
              <description>1: auto PFM/PWM
0: register control</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ARENB_H</name>
              <description>1: off 
0: on</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NO_OFFTIME_L</name>
              <description>0: from min OFF time(PFM COT)
1: always on</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EN_ON_END_L</name>
              <description>1: EN min OFF time (PFM COT)</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ENCOT_L</name>
              <description>1: PFM COT</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_clk_sel</name>
              <description>PWM,Two SWR with the same clock source
00: out of phase CKSS
01: out of phase PWM_CTRIL
10: ckout
11: HG</description>
              <bitRange>[14:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_type_L</name>
              <description>1: type3
0: type2</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>R3_L1</name>
              <description>00: 36k
01: 30k
10: 24k
11: 24k</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>swr_off_dummy2</name>
              <description></description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>R1_L1</name>
              <description>00: 900k
01: 720k
10: 900k
11: 1080k</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>swr_off_dummy1</name>
              <description></description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>C2_L1</name>
              <description>SWR compensation
00: 13f
01: 26f
10: 39f
11: 41f</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>swr_off_dummy0</name>
              <description></description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SWR_OFF_CTRL1</name>
          <addressOffset>0x00000034</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0000C0C5</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>null1</name>
              <description>HW used only , these are for reserved</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>null0</name>
              <description>HW used only , these are for reserved</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_nmos_off_L</name>
              <description>0: normal
1: NMOS always off
PMW mode parameter when system is high load</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_mux_PI_L</name>
              <description>1: PI (original)
0: i</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_PWM_CTRL_L</name>
              <description>0: internal PWM
1: external PWM</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ENSR_L</name>
              <description>1: with SSR latch</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SDZP_L</name>
              <description>Nonoverlap delay cell for PMOS</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_LDO_1209_CTRL</name>
          <addressOffset>0x00000040</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00001A56</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>reg_ldo_1209_dummy</name>
              <description>BIT15:dummy
BIT14:LDO dmy load ctrl
0: dmyload_1X(5mA)
1: dmyload_2X(10mA)</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_force_diode_L_1209</name>
              <description>// [REGU][LDO] REG_CTRL
// PGATE diode clamp (this is directly force no gating)
// (purpose for powerCut mode iOCP)
// 0: disable force diode clamp (default)
// 1: enable force diode clamp</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_buffertype_sel_L_1209</name>
              <description>// [REGU][LDO] REG_CTRL
// LDO Buffer Type Select
// 0: PMOS buffer (for HV 3P3V)
// 1(default): NMOS buffer (for SWR 1P35V)</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_dmyload_L_1209</name>
              <description>// [REGU][LDO] REG_CTRL
// BIT11:LDO dmy load ctrl
// 0: dmy load disable
// 1: dmy load enable
// BIT10:reg_light_dmyload_L
// 0: dmy load disable
// 1:9k Ω (0.1mA)</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_itail_half_en_L_1209</name>
              <description>// [REGU][LDO] REG_CTRL
// PGATE diode clamp (this gating to disable by pd_regu_L)
// 1: enable clamp 
// 0: disable clamp</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_standby_L_1209</name>
              <description>// [REGU][LDO] REG_CTRL
// LDO mode control
// 00: normal mode
// 01: don't use
// 10 : don' use
// 11 : sleep mode</description>
              <bitRange>[8:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>en_diode_L_1209</name>
              <description>//0:disable ssmode function
//1:enable: ssmode function (smaller power mos size)</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>voadj_L_1209</name>
              <description>// [REGU][LDO] REG_CTRL
// LDO VOSEL
// 0000, 0001, 0010, 0011: 0.809, 0.826, 0.844, 0.859
// 0100, 0101(default), 0110, 0111: 0.878, 0.895, 0.912, 0.930
// 1000, 1001, 1010, 1011: 0.949, 0.968, 0.988, 1.005
// 1100, 1101, 1110, 1111: 1.022, 1.040, 1.059, 1.078</description>
              <bitRange>[5:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pd_regu_L_1209</name>
              <description>// [REGU][LDO] REG_CTRL
// PowerDown CTRL
// 0: normal-Mode
// 1: power-down Mode (default)</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>en_pc_bt_L_1209</name>
              <description>// [REGU][LDO] REG_CTRL
// PWRCUT enable
// 0: LDO-Mode (default)
// 1: PWRCUT-Mode</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_LDO_3318_CTRL</name>
          <addressOffset>0x00000044</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00001062</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ldo_3318_dummy1</name>
              <description>Dummy</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Diode_3318</name>
              <description>0: disable diode
1: enable diode</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OP_buffer_3318</name>
              <description>0: PMOS buffer
1: NMOS buffer</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>loading_dummy_3318</name>
              <description>00:-
01:200kΩ
10:125Ω
11:125Ω</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_itail_half_en_L_3318</name>
              <description>// LDO iq half ctrl
// 0(default): iq normal (for normal mode)
// 1: iq half (for suspend mode)</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_standby_L_3318</name>
              <description>//11: iq=1.5uA; load=1mA~10mA
//10: iq=45uA; load=10mA(Start Up)
//00: iq=45uA; load=5mA~160mA</description>
              <bitRange>[8:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>en_diode_L_3318</name>
              <description>// PGATE diode clamp (this gating to disable by pd_regu_L)
// 0: disable clamp
// 1: enable clamp (default)</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>voadj_L_3318</name>
              <description>// LDO VOSEL
// 0000, 0001, 0010, 0011:
 1.655, 1.672, 1.690, 1.708
// 0100, 0101, 0110, 0111:
 1.727, 1.745, 1.764, 1.784
// 1000, 1001(default), 1010, 1011:
 1.804, 1.825, 1.846, 1.868
// 1100, 1101, 1110, 1111:
 1.890, 1.912, 1.935, 1.959</description>
              <bitRange>[5:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pd_regu_L_3318</name>
              <description>// [REGU][LDO_UART] REG_CTRL
// PowerDown CTRL
// 0: normal-Mode(default)
// 1: power-down Mode</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>en_pc_bt_L_3318</name>
              <description>// [REGU][LDO] REG_CTRL
// PWRCUT enable
// 0: LDO-Mode (default)
// 1: PWRCUT-Mode</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SWR_DIG_OCP</name>
          <addressOffset>0x00000050</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x80000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SPS_DIG_OCP_CKE</name>
              <description>SPS OCP clock enable</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPS_DIG_OCP_THD</name>
              <description>SPS OCP event threshold</description>
              <bitRange>[30:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPS_DIG_OCP_WND</name>
              <description>SPS OCP time window</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SWR_DIG_ZCD</name>
          <addressOffset>0x00000054</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000110</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SPS_DIG_ZCD_DBG</name>
              <description>The acture zcd code used for SPS core</description>
              <bitRange>[20:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SPS_DIG_ZCD_MODE</name>
              <description>SPS ZCD SW mode enable</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPS_DIG_ZCD_AUTO</name>
              <description>SPS HW ZCD code auto count function enable</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPS_DIG_ZCD_CODE</name>
              <description>SPS_DIG_ZCD_CODE,this is used for SW mode</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SWR_NEW</name>
          <addressOffset>0x00000060</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x35060378</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>VOFB_SEL_SET1</name>
              <description>0:Feedback from REGU Internal PAD for 1.25V/1.35V
1:Feedback from External PAD for 0.9V/1.0V</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PWM_VREF_SEL_SET1</name>
              <description>SWR reference voltage select
00:VREF=0.600
01:VREF=0.635
10:VREF=0.835
11:VREF=0.865</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VOL_L1_SET1</name>
              <description>VREF 0.865 0.635 0.6 0.835
Code VOUT VOUT VOUT VOUT
1111 1.482857 1.088571 1.028571 1.431429
1110 1.441667 1.058333 1 1.391667
1101 1.402703 1.02973 0.972973 1.354054
1100 1.365789 1.002632 0.947368 1.318421
1011 1.348052 0.98961 0.935065 1.301299
1010 1.330769 0.976923 0.923077 1.284615
1001 1.313924 0.964557 0.911392 1.268354
1000 1.2975 0.9525 0.9 1.2525
0111 1.281481 0.940741 0.888889 1.237037
0110 1.265854 0.929268 0.878049 1.221951
0101 1.250602 0.918072 0.86747 1.207229
0100 1.221176 0.896471 0.847059 1.178824
0011 1.193103 0.875862 0.827586 1.151724
0010 1.166292 0.85618 0.808989 1.125843
0001 1.140659 0.837363 0.791209 1.101099
0000 1.116129 0.819355 0.774194 1.077419</description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_standby_L_1209_slp</name>
              <description>// LDO mode control
// 00: normal mode
// 01: don't use
// 10 : don' use
// 11 : sleep mode</description>
              <bitRange>[18:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_nmos_off_L_PFM</name>
              <description>0: normal
1: NMOS always off
PFM mode parametr</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_nmos_off_L_PWM_LL</name>
              <description>0: normal
1: NMOS always off
PWM mode parametr for system low load</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_psrr_H_PWM_LL</name>
              <description>0: default
1: res+cap
PWM mode parametr for system low load</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>REG_SWR_ZCD_CTRL_PFM</name>
              <description>// SWR ZCD CTRL control
&lt;1&gt;1: double current 
&lt;0&gt;1'b1: force in CCM/DCM boundary mode (default)
1'b0: no boundary
PFM mode parametr</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>REG_SWR_ZCD_CTRL_PWM_LL</name>
              <description>// SWR ZCD CTRL control
&lt;1&gt;1: double current 
&lt;0&gt;1'b1: force in CCM/DCM boundary mode (default)
1'b0: no boundary
PWM mode parametr for system low load</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_mos_half_L_PFM</name>
              <description>1: power mos half
PFM mode parametr</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_mos_half_L_PWM_LL</name>
              <description>1: power mos half
PWM mode parametr for system low load</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_zcdc_H_PFM</name>
              <description>00: 0.1u
01: 0.2u (PFM)
10: 0.7u (PWM)
11: 0.8u
PFM mode parametr</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_zcdc_H_PWM_LL</name>
              <description>00: 0.1u
01: 0.2u (PFM)
10: 0.7u (PWM)
11: 0.8u
PWM mode parametr for system low load</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SAW_FREQ_L_PWM_LL</name>
              <description>0000: 458.0K
0001: 680.2K  
0010: 898.9K  
0011: 1.113M   
0100: 1.321M
0101: 1.522M  
0110: 1.716M 
0111: 1.902M  
1000: 2.087M  
1001: 2.258M
1010: 2.426M 
1011: 2.582M  
1100: 2.743M
1101: 2.888M
1110: 3.035M
1111: 3.165M
PWM mode parametr for system low load</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AON_BOR_CTRL</name>
          <addressOffset>0x00000070</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0000005B</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>REG_BOD_R_5</name>
              <description>// 0: disable BOD
// 1: enable BOD</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>REG_BOD_R_4_0</name>
              <description>00000: 3.3333
00001: 3.2877
00010: 3.2432
00011: 3.2000
00100: 3.1579
00101: 3.1035
00110: 3.0508
00111: 3.0000
01000: 2.9508
01001: 2.9032
01010: 2.8571
01011: 2.8125
01100: 2.7692
01101: 2.7169
01110: 2.6666
01111: 2.6182
10000: 2.5623
10001: 2.5087
10010: 2.4574
10011: 2.4080
10100: 2.3606
10101: 2.3151
10110: 2.2713
10111: 2.2154
11000: 2.1621
11001: 2.1114
11010: 2.0630
11011: 2.0168
11100: 1.9672
11101: 1.9098
11110: 1.8556
11111: 1.8045</description>
              <bitRange>[10:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>REG_BOD_F_5</name>
              <description>// dummy</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>REG_BOD_F_4_0</name>
              <description>00000: 3.3333
00001: 3.2877
00010: 3.2432
00011: 3.2000
00100: 3.1579
00101: 3.1035
00110: 3.0508
00111: 3.0000
01000: 2.9508
01001: 2.9032
01010: 2.8571
01011: 2.8125
01100: 2.7692
01101: 2.7169
01110: 2.6666
01111: 2.6182
10000: 2.5623
10001: 2.5087
10010: 2.4574
10011: 2.4080
10100: 2.3606
10101: 2.3151
10110: 2.2713
10111: 2.2154
11000: 2.1621
11001: 2.1114
11010: 2.0630
11011: 2.0168
11100: 1.9672
11101: 1.9098
11110: 1.8556
11111: 1.8045</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AON_DUMMY_CTRL</name>
          <addressOffset>0x00000074</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>REG_DUMMY_L</name>
              <description>HW used only , these are for reserved</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AON_POW_32K</name>
          <addressOffset>0x00000078</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>REG_POW_32K</name>
              <description>HW used only , these are for reserved</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REGU_DUMMY</name>
          <addressOffset>0x0000007C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x000000FF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>REG_ANA_REGU_LDO_1209[5:2] = {[9],[1],[8],[0]} in PFM mode
// [REGU][LDO] REG_CTRL
// LDO VOSEL
// 0000, 0001, 0010, 0011: 0.809, 0.826, 0.844, 0.859
// 0100, 0101(default), 0110, 0111: 0.878, 0.895, 0.912, 0.930
// 1000, 1001, 1010, 1011: 0.949, 0.968, 0.988, 1.005
// 1100, 1101, 1110, 1111: 1.022, 1.040, 1.059, 1.078</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>wlafe</name>
      <baseAddress>0x4100C480</baseAddress>
      <size>0x00000040</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00000040</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>REG_ANAPAR_POW_MAC_0</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000080</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ISO_WLAFE</name>
              <description>isolation signal</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>hw_en_rfafe_2regu</name>
              <description>control 3.3V power reset of wl rfafe, need level shift to 3.3V by regu</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>hw_en_rfafe</name>
              <description>core power reset of wl rfafe</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pow_ldo_rssi_adc</name>
              <description>Power on ldo for rssi adc</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pow_ldo_adc</name>
              <description>Power on ldo for adc</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pow_ldo_dac</name>
              <description>Power on ldo for dac</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pow_pll</name>
              <description>Power on pll</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pow_ldo</name>
              <description>Power on AFE power cut and pll ldo</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ANAPAR_MAC_0</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x20900008</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CK5M_EN</name>
              <description>1: Enable
0: Output "1"</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_cp_offset</name>
              <description>CP current offset 1: on 0:off</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_rs_set</name>
              <description>Set LPF rs
000~111: 1k/3k/5k/7k/9k/11k/13k/15k</description>
              <bitRange>[29:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_r3_set</name>
              <description>Set LPF r3
000~111: 1k/3k/5k/7k/9k/11k/13k/15k</description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_cs_set</name>
              <description>Set LPF cs
00/01/10/11: 12pF/20pF/24pF/32pF</description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_cp_set</name>
              <description>Set LPF cp
00/01/10/11: 0.8pF/1.2pF/1.6pF/2.0pF</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_c3_set</name>
              <description>Set LPF c3
00/01/10/11: 0.4pF/0.8pF/1.2pF/1.6pF</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_ck320_sel</name>
              <description>Ck 320MHz selection, 1 from ck_ext</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_dogenb</name>
              <description>enable watch dog
0: Enable
1: Disable</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_vc_tl</name>
              <description>Tie vc to 1/4 VDD</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_vc_th</name>
              <description>Tie vc to 3/4 VDD</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_cp_bia</name>
              <description>pll: CP: current: selection: (efuse)
000: 5uA
001: 10uA
010: 15uA
011: 20uA
100: 25uA
101: 30uA
110: 35uA
111: 40uA</description>
              <bitRange>[13:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_en_mon</name>
              <description>1: Enable
0: Output "1"</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_testen</name>
              <description>1: Enable  ck_test</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>null0</name>
              <description></description>
              <bitRange>[8:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_ps</name>
              <description>Phase swallow setting</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_ps_en</name>
              <description>Phase swallow enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_monckselh</name>
              <description>ck_mon selection
111: 160MHz
001: 110MHz
010: 101MHz
100: 320MHz
011: ck_200M_test
010: ck_sync
001: 5MHz (duty50-50)
000: ck_test</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ANAPAR_MAC_1</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00010100</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>F0F</name>
              <description>SDM divider sel</description>
              <bitRange>[31:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DIVN</name>
              <description>SDM divider sel</description>
              <bitRange>[18:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BB_DBG_SEL_AFE_SDM</name>
              <description>SDM debug selection</description>
              <bitRange>[12:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RFE_SEL_SDM</name>
              <description>pll referemce clk select 1:table 0:regesters</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BB_RFE_SEL_AFE_SDM</name>
              <description>pll referemce clk select 
AFE[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15] = [40M 25M 54M 19.2M 20M 26M 38.4M 17.664M 16M 32M 60M 52M 48M 27M 24M 80M] (efuse)</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CK320M_AFE_EN</name>
              <description>1: Enable
0: Output "1"</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CK_200M_TEST</name>
              <description></description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CK320M_EN</name>
              <description>1: Enable
0: Output "1"</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_fref_edge</name>
              <description>PLL referemce clk edge select
0: positive
1: negtive</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ANAPAR_MAC_2</name>
          <addressOffset>0x0000000C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x15000D00</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_WLAFE_LDO_ST</name>
              <description>stable time select for WLAFE LDO
2'b00:10us, 2'b01:20us, 2'b10:100us, 2'b11:200us</description>
              <bitRange>[28:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VPLUSE_LDO_PLL</name>
              <description>For PLL(WL PLL LDO)</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SW_LDO_OUT_PLL</name>
              <description>Ldo voltage 00/01/10/11 0.85/0.9/0.95/1V(PLL LDO)</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SW_LDO2PWRCUT_PLL</name>
              <description>1 power cut mode 0 ldo mode(PLL LDO)</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SEL_8715_LUT</name>
              <description>1 -&gt; 8 phase 500MHz
0 -&gt; 6 phase 640MHz</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ORDER_SDM</name>
              <description>SDM order  
1: 3th order
0: 2nd order</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>S_DCB</name>
              <description>Driving control buffer 
11:larger current</description>
              <bitRange>[20:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>gpo</name>
              <description></description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>gpe</name>
              <description>gpe=1 and gpo=1=&gt;output
gpe=1 and gpo=0=&gt;input</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_cp_idouble</name>
              <description>1 for cp currnet double</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CK320M_PS</name>
              <description>Debug</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>null1</name>
              <description></description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VPLUSE_LDO_DAC</name>
              <description>For DAC(WL DAC LDO)</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VPLUSE_LDO_ADC</name>
              <description>For ADC(WL ADC LDO and RSSI ADC LDO)</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SW_LDO_OUT</name>
              <description>Ldo voltage
00/01/10/11: 0.85V/0.9V/0.95V/1V (ADDA LDO)</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SW_LDO2PWRCUT</name>
              <description>1 power cut mode 0 ldo mode (ADDA LDO)</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DITHER</name>
              <description>Dither funtion</description>
              <bitRange>[6:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>F0N</name>
              <description>SDM divider sel</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DBG_WLAFE_PMC</name>
          <addressOffset>0x00000010</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dbg_wlafe_pmc</name>
              <description>debug signal of wlafe_pmc</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DBG_WLAFE</name>
          <addressOffset>0x00000014</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dbg_wlafe_reg</name>
              <description>debug signal of wlafe_reg</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DUMMY</name>
          <addressOffset>0x00000018</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>HW used only , these are for reserved.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ANAPAR_RFC</name>
          <addressOffset>0x00000020</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_rfafe_VIO1833_sel</name>
              <description>IND_VIO1833 output decided by:
1: 1.8V 
0: 3.3V</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ANAPOW_RFC</name>
              <description>wlan power rf control</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_LDO_VPLUSE_SEL</name>
          <addressOffset>0x00000024</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00020083</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>vpluse_sel</name>
              <description>vpluse_ldo output decided by:
1: power on ldo 
0: ctrl reg</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>vpluse_cnt</name>
              <description>vpluse_ldo high output delay cycle after pll_ldo set high,default:5(1.25us)</description>
              <bitRange>[16:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>vpluse_wait_mcycle</name>
              <description>1: vpluse_ldo_dac and vpluse_ldo_adc pull low should wait more cycle after ldo pull high</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WLRFC_CTRL</name>
          <addressOffset>0x00000028</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0000003A</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>wlrfc_pwc_en</name>
              <description>1: gen request of wlan rfc power cut
0: gen request of turn off wlan rfc power cut</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>iso_wlrfc_en</name>
              <description>Isolation control for wlan rfc
1: isolation
0: attach</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>wlrfc_retain_en</name>
              <description>1: backup(save)
0: restore
this reg is usleless in lite,because no retention dff used in rfc</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>wlrfc_pwc_sel</name>
              <description>Option to turn off wlrfc pwr cut
1: enable 
0: disable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>wlafe_ckrfc_en</name>
              <description>1: enable WLRFC clock; 0: gated</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>wlrfc_clk_sel</name>
              <description>rfc clock divider, it is based on 320m wlpll
0: div1
1: div2
2: div3
3/other: divider by this value + 1,(default is 3:80M)</description>
              <bitRange>[7:5]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ANAPAR_DCK_0</name>
          <addressOffset>0x0000002C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DCK_COMP_ZERO_CR</name>
              <description>0: DOS [+/-]
1: DOS[+/0/-]</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_CMP_BAR_CR</name>
              <description>0:AVG_VOS1 - AVG_VOS2 / 1:AVG_VOS2 - AVG_VOS1</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_WAVE_MID_SH_CR</name>
              <description>DA[8:0] to shift -15 ~ +15 the middle value</description>
              <bitRange>[29:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_WAVE_OFSP_CR</name>
              <description>id[7:0] or qd[7:0] = wave_mid_val + wave_ofs_val</description>
              <bitRange>[24:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_CK_SYS_BAR_CR</name>
              <description>0: original clock
1: inverse clock</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_CK_DAC_BAR_CR</name>
              <description>0: original clock
1: inverse clock</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_CK_ADC_BAR_CR</name>
              <description>0: original clock
1: inverse clock</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_ADC_OFS_CR</name>
              <description>Compensate ADC offset : adc2cal_AD[9:0] + ADC_ofs_CR[5:0]</description>
              <bitRange>[13:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_LPOW_CR</name>
              <description>Low power enable when calibration done</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_CAL_OS_Q_CR</name>
              <description>DC-offset calibration enable qpath</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_CAL_OS_I_CR</name>
              <description>DC-offset calibration enable ipath</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_CAL_OS_CR</name>
              <description>DC-offset calibration enable, ipath and qpath</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_POW_DA_CR</name>
              <description>power on for DC-offset calibration</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_RSTB</name>
              <description>DCK power on reset</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_SWAP_MANU_CR</name>
              <description>SWAP by manual</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_SWAP_FORCE_CR</name>
              <description>Force the SWAP from SWAP_Manu_CR</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ANAPAR_DCK_1</name>
          <addressOffset>0x00000030</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0000003F</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DCK_FETCH_ADDR_CR</name>
              <description>Fetch the _AD-DATA
0: first
1: half-odd
2: half-even
3: final</description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_KOS_EN_FORCE_Q_CR</name>
              <description>Force the KOS_EN_Q[5:0] from KOS_EN_Manu_Q_CR[5:0]</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_KOS_EN_FORCE_I_CR</name>
              <description>Force the KOS_EN_I[5:0] from KOS_EN_Manu_I_CR[5:0]</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_DOS_MANU_I_CR</name>
              <description>DOS_I[5:0] by manual</description>
              <bitRange>[27:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_DOS_MANU_CR</name>
              <description>DOS[5:0] by manual</description>
              <bitRange>[21:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_KOS_EN_FORCE_CR</name>
              <description>Force the KOS_EN[5:0] from KOS_EN_Manu_CR[5:0]</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_DOS_FORCE_Q_CR</name>
              <description>Force the DOS_Q[5:0] from DOS_Manu_Q_CR[5:0]</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_DOS_FORCE_I_CR</name>
              <description>Force the DOS_I[5:0] from DOS_Manu_I_CR[5:0]</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_DOS_FORCE_CR</name>
              <description>Force the DOS[5:0] from DOS_Manu_CR[5:0]</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_DEBUG_PATH_CR</name>
              <description>1: DCK ready for debug</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_VOSK_SEL_Q_CR</name>
              <description>0: fetch the middle VOS_SR=VOS1-VOS2 0: first / 1: final</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_VOSK_SEL_I_CR</name>
              <description>0: fetch the middle VOS_SR=VOS1-VOS2 0: first / 1: final</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_SWITCH_WAIT_IQ_CR</name>
              <description>Switch I2Q waiting time</description>
              <bitRange>[8:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_AVG_CYC_CR</name>
              <description>DC-offset calibration fetch ADC data numbers to average</description>
              <bitRange>[5:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_WAIT_CYC_SET_CR</name>
              <description>DC-offset calibration digital waiting clock cycle for setting time</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ANAPAR_DCK_2</name>
          <addressOffset>0x00000034</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0000C000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DCK_BT_KOS_EN_FORCE_I_CR</name>
              <description>Manual write KOSEN at BT mode</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_BT_DOS_FORCE_Q_CR</name>
              <description>Manual write DOS data at BT mode</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_BT_DOS_FORCE_I_CR</name>
              <description>Manual write DOS data at BT mode</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_FIFO_CLEAR_CR</name>
              <description>Clear all FIFO</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_KOS_EN_MANU_Q_CR</name>
              <description>KOS_EN_Q[5:0] by manual</description>
              <bitRange>[27:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_KOS_EN_MANU_I_CR</name>
              <description>KOS_EN_I[5:0] by manual</description>
              <bitRange>[21:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_VOS_ADDR_CR</name>
              <description>Fetch the k-th offset average value to monitor</description>
              <bitRange>[15:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_OFS_POLAR_CR</name>
              <description>id[8:0] &amp; qd[8:0] offset +/- =&gt; 0(+) / 1(-)</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_KOS_EN_MANU_CR</name>
              <description>KOS_EN[5:0] by manual</description>
              <bitRange>[11:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_DOS_MANU_Q_CR</name>
              <description>DOS_Q[5:0] by manual</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ANAPAR_DCK_3</name>
          <addressOffset>0x00000038</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00020000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DCK_AD_DATA_SW_DEBUG_CR</name>
              <description>0: choose I path vos data
1: choose Q path vos data</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_ADC_OFS_Q_CR</name>
              <description>Compensate ADC qpath offset: adc2cal_AD[9:0] + ADC_ofs_CR[5:0]</description>
              <bitRange>[30:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_WAVE_OFSN_CR</name>
              <description></description>
              <bitRange>[24:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_RESERVE_CR</name>
              <description></description>
              <bitRange>[16:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_ad_iq_chge</name>
              <description>0:adci to DCK  I ;adcq to DCK Q /1:adci to DCK Q;adcq to DCK I</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_WL_KOS_EN_FORCE_Q_CR</name>
              <description>Manual write KOSEN at WL mode</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_WL_KOS_EN_FORCE_I_CR</name>
              <description>Manual write KOSEN at WL mode</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_WL_DOS_FORCE_Q_CR</name>
              <description>Manual write DOS data at WL mode</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_WL_DOS_FORCE_I_CR</name>
              <description>Manual write DOS data at WL mode</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_BT_KOS_EN_FORCE_Q_CR</name>
              <description>Manual write KOSEN at BT mode</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ANAPAR_DCK_BT</name>
          <addressOffset>0x0000003C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>reg_manual_mode</name>
              <description>0:select wifi DCK data
1:select bt DCK data</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_GNT_BT_SEL</name>
              <description>0:select BTG_GNT_BT_RF  to select DCK data
1:select reg_manual_mode to select DCK data</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_DOS_MANU_I_BT</name>
              <description>DOS_I[5:0] by manual</description>
              <bitRange>[23:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_DOS_MANU_Q_BT</name>
              <description>DOS_Q[5:0] by manual</description>
              <bitRange>[17:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_KOS_EN_MANU_Q_BT</name>
              <description>KOS_EN_Q[5:0] by manual</description>
              <bitRange>[11:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCK_KOS_EN_MANU_I_BT</name>
              <description>KOS_EN_I[5:0] by manual</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>xtal</name>
      <baseAddress>0x4100C400</baseAddress>
      <size>0x00000040</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00000040</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>ANAPAR_POW_XTAL_0</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x49498900</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>xtal_dbnc_cyc</name>
              <description>XTAL arb debounce cycle @4M</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>xtal_bg2hpmod_cyc</name>
              <description>XTAL arb bandgap enable to hp mode delay cycle @4M</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>xtal_dbnc_fen</name>
              <description>XTAL arb debounce fen</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>xtal_tutime</name>
              <description>XTAL arb fine timing setting</description>
              <bitRange>[13:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sys_xtal_mode_req</name>
              <description>system request xtal mode
0:lps
1:normal</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sys_xtal_en_req</name>
              <description>system request xtal enable
0:disable
1:enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>POW_XTAL</name>
              <description>0 to 1 Enable xtal</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>POW_BG</name>
              <description>Enable BG  (BG for xtal and AFE)  (有option關)</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ANAPAR_XTAL_ON_0</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x008100E7</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>XTAL_SC_INIT</name>
              <description>0: reduce cap, 1: increase cap. (140fF per unit)
[efuse for BT only ] 有外掛電容設全0</description>
              <bitRange>[30:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_SC_XO</name>
              <description>1: reduce cap, 0: increase cap. (140fF per unit)
[efuse for BT only ]</description>
              <bitRange>[23:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_SC_XI</name>
              <description>1: reduce cap, 0: increase cap. (140fF per unit)
[efuse for BT only ]</description>
              <bitRange>[16:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_GMN</name>
              <description>GMN: 0~31</description>
              <bitRange>[9:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_GMP</name>
              <description>GMP: 0~31</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ANAPAR_XTAL_ON_1</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFC399C80</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>XTAL_CFIX</name>
              <description>11: 5.88pF(42*140fF), 10: 3.78pF(27*140fF), 01: 2.1pF(15*140fF), 00: off
CFIX会叠加在XI&amp;XO cap上作为固定cap存在.</description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_AAC_OPCUR</name>
              <description>00: 200nA , 200n/step  
For AAC robust 11</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_VREF_SEL</name>
              <description>Analog AAC VREF, 390mV~700mV, 10mV/step
11000: Vpp 500mV</description>
              <bitRange>[27:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_LPS_DIVISOR</name>
              <description>XTAL LPS clock divider 
0: XTAL/128(40M), 1: XTAL/64</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_CKDIGI_SEL</name>
              <description>1: DIGI CLK from self-bias
0: DIGI CLK from Schmitt</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EN_XTAL_LPS_CLK</name>
              <description>1: enable XTAL LPS clock 
與anapar_xtal_on[43]都是312.5KHz enable</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EN_XTAL_SCHMITT</name>
              <description>1: enable XTAL SCHMITT</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_LDO_VREF</name>
              <description>(起震前)
111: 1.1V  110: 1.05V  101:1V  100:0.95V
011: 0.9V  010: 0.85V   001: 0.8V  000: 0.75V</description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_SEL_TOK</name>
              <description>For cycles / 40MHz / 26MHz
000: 2^10 / 0.025m / 0.05m
001: 2^11 / 0.05m / 0.1m
010: 2^12 / 0.1m / 0.2m
011: 2^13 / 0.2m / 0.3m
100: 2^14 / 0.4m / 0.6m
101: 2^15 / 0.8m / 1.2m
110: 2^16 / 1.6m / 2.5m
111: 2^17 / 3.2m / 4.9m</description>
              <bitRange>[15:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EN_XTAL_DRV_LPS</name>
              <description>LPS enable clock source control, 1:enable, 0: gated
與anapar_xtal_on[51]都是312.5KHz enable</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EN_XTAL_DRV_DIGI</name>
              <description>DIGI enable clock source control, 1:enable, 0: gated</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EN_XTAL_DRV_USB</name>
              <description>USB enable clock source control, 1:enable, 0: gated</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EN_XTAL_DRV_AFE</name>
              <description>AFE enable clock source control, 1:enable, 0: gated
(for WL AFE PLL)</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EN_XTAL_DRV_RF2</name>
              <description>RF2 enable clock source control, 1:enable, 0: gated (for BT)</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EN_XTAL_DRV_RF1</name>
              <description>RF1 enable clock source control, 1:enable, 0: gated (for WL SYN)</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_SC_LPS</name>
              <description>0: reduce cap, 1: increase cap. (160fF per unit)
[efuse for BT only ] 若有頻偏再修改</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ANAPAR_XTAL_ON_2</name>
          <addressOffset>0x0000000C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x000000E9</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>XTAL_DUMMY</name>
              <description>Dummy control bits</description>
              <bitRange>[13:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GM_MANUAL</name>
              <description>Gm manual at EN_XTAL_AAC_DIGI=0</description>
              <bitRange>[9:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EN_XTAL_AAC_GM</name>
              <description>1: enable xtal aac gm control</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EN_XTAL_DRV_IQK_BCN</name>
              <description>IQKPLL enable clock source control, 1:enable, 0: gate</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EN_XTAL_DRV_DIGI_DIV2</name>
              <description>DIGI_DIV2 enable clock source control, 1:enable, 0: gated</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AAC_MODE</name>
              <description>AAC_MODE for LPS
00: all XOXI cap off
01: cap from XTAL_SC_LPS
10: cap from XTAL_SC_INIT
11: cap from XTAL_SC_XI/XO</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ANAPAR_XTAL_OFF_0</name>
          <addressOffset>0x00000010</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xCC0FFF90</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>XTAL_PDCK_OK_MANU</name>
              <description>1: force PDCK_OK=1 for PDCK manual</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EN_XTAL_PDCK_VREF</name>
              <description>1: analog AAC VREF from PDCK digital circuit
0: analog AAC VREF from XTAL_VREF_SEL for BT only mode</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_SEL_PWR</name>
              <description>1: external 0.9V, 0: internal 0.9V (FIB)</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_PK_SEL_OFFSET</name>
              <description>1: XI Vpk-to-Vpk offset to
00: 0.4V  01: 0.5V  10: 0.6V  11: 0.7V</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_MANU_PK_SEL</name>
              <description>XI Vpk-to-Vpk
00: 0.7V  01: 0.8V  10: 0.9V  11: 1V</description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_AACK_PK_MANU</name>
              <description>1: manual for peak detector peak selection</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EN_XTAL_AAC_PKDET</name>
              <description>1: enable xtal aac peak detector</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_LDO_OPVB_SEL</name>
              <description>0: OP bias from IBG, 1: OP bias from Res divider</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_LDO_NC</name>
              <description>1: low current normal mode (22C)
0:high current normal mode
(此pin要拉給BT控制)</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_LPMODE</name>
              <description>1: low power mode enable 
22C turn off replica path, RF1 no CLK
RF2 sweep to LPS buf</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_DELAY_DIGI</name>
              <description>1: turn on XI/XO Cfix, single side 8pF</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_DELAY_USB</name>
              <description>0: short, 1:long</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_DELAY_AFE</name>
              <description>0: short, 1:long</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_DRV_DIGI</name>
              <description>Driving control of DIGI/LPS clock buffer, 11:large current, 00: small current</description>
              <bitRange>[16:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_DRV_USB</name>
              <description>Driving control of USB clock buffer, 11:large current, 00: small current</description>
              <bitRange>[14:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_DRV_AFE</name>
              <description>Driving control of AFE clock buffer, 11:large current, 00: small current</description>
              <bitRange>[12:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_DRV_RF2</name>
              <description>Driving control of RF2 clock buffer, 11:large current, 00: small current</description>
              <bitRange>[10:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_DRV_RF1</name>
              <description>Dummy
由RFC控制</description>
              <bitRange>[8:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_DRV_RF_LATCH</name>
              <description>1: latch enable</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_GM_SEP</name>
              <description>0: GMP=GMN</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XQSEL_RF_AWAKE</name>
              <description>0: Schmitt trigger, 1:replica INV(for OK0=1)</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XQSEL_RF_INITIAL</name>
              <description>0: Schmitt trigger, 1:replica INV(for OK0=0)
22C OK0=0, RF no CLK</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XQSEL</name>
              <description>0: Schmitt trigger, 1:replica INV(for AFE)</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GATED_XTAL_OK0</name>
              <description>1:Gated xtal OK0</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ANAPAR_XTAL_OFF_1</name>
          <addressOffset>0x00000014</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000068</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>XTAL_EN_LNBUF</name>
              <description>0: separate bias buffer (lower current higher noise)
1: self-bias (higher current lower noise)</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_AAC_TIE_MID</name>
              <description>XTAL_ AAC_TIE_MID=1 &amp; EN_XTAL_PDCK_VREF=0 &amp;
using XTAL_VREF_SEL&lt;4:0&gt; for lock detect</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_AAC_IOFFSET</name>
              <description>Analog AAC IOFFSET current
00: off, 01:2uA, 10:4uA, 11:6uA</description>
              <bitRange>[8:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_AAC_CAP</name>
              <description>Analog AAC domain pole cap 3pF/step
00: no cap,11: max cap</description>
              <bitRange>[6:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_PDSW</name>
              <description>XTAL analog AAC peak detector source follower size, 00: small 11: large</description>
              <bitRange>[4:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_LPS_BUF_VB</name>
              <description>00: small current, 11: large current</description>
              <bitRange>[2:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_PDCK_MANU</name>
              <description>1: open analog AAC loop for PDCK manual</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ANAPAR_XTAL_OFF_2</name>
          <addressOffset>0x00000018</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>xtal_off_dummy</name>
              <description>HW used only</description>
              <bitRange>[9:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>XTAL_FEN</name>
          <addressOffset>0x0000001C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000004</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>fen_xmddc</name>
              <description>1:enable xmddc
0:reset xmddc module</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_xaack</name>
              <description>1:enable AACK 
0:reset AACK module</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_xpdck</name>
              <description>1:enable PDCK 
0:reset PDCK module</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ANAPAR_XTAL_PDCK</name>
          <addressOffset>0x00000020</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x002539D0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PDCK_STATE</name>
              <description>PDCK state for debug</description>
              <bitRange>[31:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PDCK_LPOW</name>
              <description>PDCK low power mode, 1:gating input clk
Set to 1 when PDCK finished</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XPDCK_VREF_SEL</name>
              <description>PDCK calibrated result +offset 
For AAC robust +3</description>
              <bitRange>[22:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_PDCK_UNIT</name>
              <description>PDCK settling cycles (4M CLK)
00: 4us
01: 8us 
10: 16us 
11: 32us</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VREF_INIT</name>
              <description>PDCK VREF initial setting</description>
              <bitRange>[15:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VREF_MANUAL</name>
              <description>VREF manual at EN_XTAL_PDCK_DIGI=0</description>
              <bitRange>[10:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PDCK_WAIT_CYC</name>
              <description>Enable PDCK waiting (4M CLK)
00: 64us
01:128us 
10:256us 
11:512us</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PDCK_SEARCH_MODE</name>
              <description>0: binary search, 1: full search from 31</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EN_XTAL_PDCK_DIGI</name>
              <description>Default set 0 due to POW_XTAL will 1 before do PDCK</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ANAPAR_XTAL_AAC</name>
          <addressOffset>0x00000024</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xC00E4E04</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>XAACK_AAC_MODE</name>
              <description>11: XTAL_AACK_PK_SEL=&lt;11&gt;'s XTAL_GM_OUT3
10: XTAL_AACK_PK_SEL=&lt;10&gt;'s XTAL_GM_OUT2
01: XTAL_AACK_PK_SEL=&lt;01&gt;'s XTAL_GM_OUT1
00: XTAL_AACK_PK_SEL=&lt;00&gt;'s XTAL_GM_OUT0</description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EN_XTAL_AAC_TRIG</name>
              <description>MAC內部訊號(目前floating)
Set by pmc and clr by HW finish calibration</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EN_XTAL_AAC</name>
              <description>MAC內部訊號(目前floating)
0: 不做AAC (default), 1: power on 做AAC</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EN_XTAL_AAC_DIGI</name>
              <description>1:enable aac digital circuit</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GM_STUP</name>
              <description>aac gm start up setting (pkdet=0時,回到最大gm)</description>
              <bitRange>[21:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_CK_SET</name>
              <description>aac settling cycles (4M CLK)
000:  64us
001:  128us
010:  256us
011:  512us
100:  1024us
101:  2048us
110:  4096us
111:  8192us</description>
              <bitRange>[16:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GM_INIT</name>
              <description>aac gm initial setting</description>
              <bitRange>[13:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GM_STEP</name>
              <description>aac gm searching step. 0:step 1, 1:step 2</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XAAC_GM_OFFSET</name>
              <description>aac calibrated gm result +/- offset</description>
              <bitRange>[7:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OFFSET_PLUS</name>
              <description>0: aac calibrated gm result -offset , 1:aac calibrated gm result + offset</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ANAPAR_XTAL_AAC_ON_1</name>
          <addressOffset>0x00000028</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0000003C</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>XAAC_DONE</name>
              <description>for XAAC debug</description>
              <bitRange>[31:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>XAAC_STATE</name>
              <description>for XAAC debug</description>
              <bitRange>[15:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>XAAC_DBG</name>
              <description>for XAAC debug</description>
              <bitRange>[11:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>XAAC_BUSY</name>
              <description>for XAAC debug</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PK_END_AR</name>
              <description>AAC peak sel end (star&gt;end)</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PK_START_AR</name>
              <description>AACK peak sel start (star&gt;end)</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XAAC_LUT_MANUAL_EN</name>
              <description>1: enable LUT
data: GM_MANUAL&lt;4:0&gt; , sel: AAC_MODE&lt;1:0&gt;</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XAAC_LPOW</name>
              <description>AACK low power mode, 1:gating input clk</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ANAPAR_XTAL_MODE_DEC_ON_0</name>
          <addressOffset>0x0000002C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x980924E0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>XTAL_LPS_CAP_STEP</name>
              <description>00:1 step/01:2 step/10:4 step /11:8 step
一次降幾檔Cap</description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_LPS_CAP_CYC</name>
              <description>00:8u/01:16u/10:32u/11:64u
多久降一次Cap step</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XMD_SEL</name>
              <description>00:100K/01:500K/10:4M/11:12M
隨著系統頻率變化,需要改變此reg</description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_LDO_LPS</name>
              <description>(起震後, 進入LPS時)
111: 1.1V  110: 1.05V  101:1V  100:0.95V
011: 0.9V  010: 0.85V   001: 0.8V  000: 0.75V</description>
              <bitRange>[24:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_WAIT_CYC</name>
              <description>Next state wait cycle, 83ns/unit</description>
              <bitRange>[21:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_LDO_OK</name>
              <description>(起震後)
111: 1.1V  110: 1.05V  101:1V  100:0.95V
011: 0.9V  010: 0.85V   001: 0.8V  000: 0.75V</description>
              <bitRange>[15:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_MD_LPOW</name>
              <description>XTAL mode decoder low power mode
1: gated input clock</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_OV_RATIO</name>
              <description>overlap unit times (4M CLK)
00:  128us
01:  256us
10:  512us
11:  1024us</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_OV_UNIT</name>
              <description>overlap time settling cycles (4M CLK) 
000: 10us
001: 20us 
010: 40us
011: 80us
100: 160us
101: 320us
110: 640us
111: 1280us</description>
              <bitRange>[9:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_MODE_MANUAL</name>
              <description>01: LPS mode
10: Normal mode
11: high performance mode
[efuse for power on ]</description>
              <bitRange>[6:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_MANU_SEL</name>
              <description>1: enable xtal mode manual
[efuse for power on ]</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>POW_XTAL_LPS</name>
              <description>POW_XTAL_LPS</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>XTAL_MODE</name>
              <description>22C xtal mode define:
{POW_XTAL, XTAL_MODE, POW_XTAL_LPS}
[efuse for power on ]</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ANAPAR_XTAL_MODE_DEC_ON_1</name>
          <addressOffset>0x00000030</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>xmd_state</name>
              <description>for xmd debug</description>
              <bitRange>[20:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>xtal_mode_dec</name>
              <description>for xmd debug
10:NM
01: LPS
11: HP</description>
              <bitRange>[9:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>XTAL_LPS_CAP_CTRL</name>
              <description>1:cap step control</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>XTAL_DEBUG</name>
          <addressOffset>0x00000034</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x71C00000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>xtal_tout</name>
              <description>xtal arbiter wait feedback signal timeout delay cycle, if this valua is max, arbiter will disable timeout function. Time unit is xtal_tutime</description>
              <bitRange>[31:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XAAC_PK_SEL</name>
              <description>XAAC_PK_SEL(AAC calibration address)</description>
              <bitRange>[20:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>XAAC_READY</name>
              <description>signal for xtal</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>XTAL_GM_OUT</name>
              <description>AACK digital calculate result for ANA comparator</description>
              <bitRange>[17:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>XPDCK_BUSY</name>
              <description>signal for xtal</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>XPDCK_READY</name>
              <description>signal for xtal</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>XPDCK_VREF_OUT</name>
              <description>PDCK digital calculate result for ANA comparator</description>
              <bitRange>[10:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>manu_pow_bg</name>
              <description>manual mode POW_BG</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>manu_xtal_mode</name>
              <description>manual mode XTAL_MODE</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>manu_pow_xtal_lps</name>
              <description>manual mode POW_XTAL_LPS</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>manu_pow_xtal</name>
              <description>manual mode POW_XTAL</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>xtal_auto_pdck</name>
              <description>Auto PDCK enable signal. If set this bit, arbiter will do PDCK before XTAL enter LPS mode.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>xtal_arb_manual_en</name>
              <description>Aribter manual mode enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>XTAL_ART_CKON_TIM</name>
          <addressOffset>0x00000038</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000201</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>xtal_arb_ckon_st</name>
              <description>Indicate when enter which state , still req ana clock .
[0] : IDLE (OFF)
[1] : LPS
[2} : NM
[3] : HP</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>xtal_arb_ckon_tim</name>
              <description>After enter one xtal state , still req ana clock for this count cycles .
HW will use CAP_CTRL_READY for clock req , this timer is for debug.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>XTAL_DUMMY</name>
          <addressOffset>0x0000003C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x000000FF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>HW used only</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>memx</name>
      <baseAddress>0x4100C600</baseAddress>
      <size>0x00000200</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00000200</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>MBIST_ALL_CTRL</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>mbist_sta</name>
              <description>Total mbist status
[16] MBIST DRF_START_PAUSE
[17] MBIST NRML_DONE_ALL
[18] MBIST NRML_FAIL_ALL
[19] MBIST DRF_DONE_ALL
[20] MBIST DRF_FAIL_ALL</description>
              <bitRange>[20:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>mbist_ctrl</name>
              <description>Total mbist control
[0] MBIST_CLK_EN_ALL
    BIS_CLK enable of all system memory groups.
[1] MBIST_RSTB_ALL
    Reset controll mbist circuit of all system memory groups.
[3:2]MBIST_MSEL_ALL 
    mbist method selection of all memory groups:
    2'b01: enable normal mode mbist
    2'b10: enable DRF mode mbist 
    2'b11: enable normal&amp;DRF mode mbist
[4]MBIST_RESUME
[5]MBIST_RESUME_PS
[6]MBIST_DYN_READ_EN
   If MBIST_MSEL_ALL[1]=1 &amp; MBIST_DYN_READ_EN=1, run VDDR mode mbist.
[7]MBIST_PHYCLK_STOP</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MBIST_DONE_STA0</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>mbist_done</name>
              <description>30 mbist_group in es003
1 special group bt_e0</description>
              <bitRange>[30:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MBIST_START_PAUSE0</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>mbist_start_pause</name>
              <description></description>
              <bitRange>[30:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MBIST_NORM_FAIL0</name>
          <addressOffset>0x0000000C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>mbist_norm_fail_31_0</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MBIST_NORM_FAIL1</name>
          <addressOffset>0x00000010</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>mbist_norm_fail_63_32</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MBIST_NORM_FAIL2</name>
          <addressOffset>0x00000014</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>mbist_norm_fail_87_64</name>
              <description>87 memory block in es003
1 special bt block</description>
              <bitRange>[23:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MBIST_DRF_FAIL0</name>
          <addressOffset>0x00000018</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>mbist_drf_fail_31_0</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MBIST_DRF_FAIL1</name>
          <addressOffset>0x0000001C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>mbist_drf_fail_63_32</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MBIST_DRF_FAIL2</name>
          <addressOffset>0x00000020</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>mbist_drf_fail_87_64</name>
              <description>87 memory block in es003
1 special bt block</description>
              <bitRange>[23:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BT_BIST_DONE</name>
          <addressOffset>0x00000024</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bt_bist_done</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BT_BIST_FAIL</name>
          <addressOffset>0x00000028</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bt_bist_fail</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BT_BIST_DRF_PASUE</name>
          <addressOffset>0x0000002C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bt_bist_drf_pause</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MISR_DOUT_SEL</name>
          <addressOffset>0x00000038</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>kr4_itcm0_misr_sel</name>
              <description>Used for KR4 itcm rom mbist, select which rom's misr_dataout[63:0] can be read from KR4_ITCM_ROM_MISR_DOUT.</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>km4_itcm0_misr_sel</name>
              <description>Used for KM4 itcm rom mbist, select which rom's misr_dataout[63:0] can be read from KM4_ITCM_ROM_MISR_DOUT.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MBIST_ROM_MISR0</name>
          <addressOffset>0x0000003C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>rom_lspmc_e0_misr_dout_31_0</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MBIST_ROM_MISR1</name>
          <addressOffset>0x00000040</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>rom_lspmc_e0_misr_dout_35_32</name>
              <description></description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MBIST_ROM_MISR2</name>
          <addressOffset>0x00000044</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>rom_aonpmc_e0_misr_dout_31_0</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MBIST_ROM_MISR3</name>
          <addressOffset>0x00000048</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>rom_aonpmc_e0_misr_dout_35_32</name>
              <description></description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MBIST_ROM_MISR4</name>
          <addressOffset>0x0000004C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>km4_itcm0_rom_misr_dout_31_0</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MBIST_ROM_MISR5</name>
          <addressOffset>0x00000050</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>km4_itcm0_rom_misr_dout_63_32</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MBIST_ROM_MISR6</name>
          <addressOffset>0x00000054</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>kr4_itcm0_rom_misr_dout_31_0</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MBIST_ROM_MISR7</name>
          <addressOffset>0x00000058</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>kr4_itcm0_rom_misr_dout_63_32</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BT_BIST_RPT</name>
          <addressOffset>0x00000060</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bt_bist_rpt</name>
              <description>bt_rpt_sel 0~3 : read bt_bist_rpt to get BT bist status;
bt_rpt_sel 4~15 : read bt_bist_rpt to get BT rom misr_dout;</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CON_BT_E0_CTRL1</name>
          <addressOffset>0x00000064</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000FFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bt_rpt_sel</name>
              <description>Select which rom's misr_dataout or bist_status of each memory can be read from bt_bist_rpt.</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_bt_e0_grp_en</name>
              <description>Devide all 30 BT memory blocks into 4 groups.
grp_bt_e0_grp_en[N]=1 N=0~3: enable mbist of bt_e0 group N.</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_bt_e0_cell_en</name>
              <description>grp_bt_e0_cell_en[M]=1 M=0~7: enable mbist of mem cell M in groups whose grp_bt_e0_grp_en set 1.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BT_FTC_MEM_CTRL</name>
          <addressOffset>0x00000068</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0002AD8C</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BT_DS_ALL</name>
              <description>1 - All BT memory switch to Deep Sleep mode
0 - Power mode of BT memory are controlled by BTPMC</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BT_LVDRF_CLKDIS</name>
              <description></description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BT_TMCK_ALL</name>
              <description></description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BT_ROM_DVSE</name>
              <description></description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BT_ROM_DVS</name>
              <description>FSNOU_A_SPNN</description>
              <bitRange>[18:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BT_1PSR_DVSE</name>
              <description>Not used in Lite</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BT_1PSR_DVS</name>
              <description>Not used in Lite</description>
              <bitRange>[13:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BT_1PRF1_DVSE</name>
              <description></description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BT_1PRF1_DVS</name>
              <description>FSNOU_A_SYNL</description>
              <bitRange>[8:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BT_1PRF0_DVSE</name>
              <description></description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BT_1PRF0_DVS</name>
              <description>FSNOU_A_SYNL</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MBIST_GRP_EN_CTRL0</name>
          <addressOffset>0x00000070</addressOffset>
          <size>32</size>
          <description>Used to on-off mbist of a memory group.</description>
          <resetValue>0x3FFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>grp_en_btonk4_e1</name>
              <description></description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_en_btonk4_e0</name>
              <description></description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_en_wpoff_e6</name>
              <description>Not used, TPRAM/DPRAM don't need grp_en</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_en_wpoff_e5</name>
              <description>Not used, TPRAM/DPRAM don't need grp_en</description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_en_wpoff_e2</name>
              <description>Not used, TPRAM/DPRAM don't need grp_en</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_en_wpoff_e1</name>
              <description></description>
              <bitRange>[19:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_en_wlk4_e0</name>
              <description></description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_en_hsys_e1</name>
              <description></description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_en_hsys_e0</name>
              <description></description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MBIST_GRP_EN_CTRL1</name>
          <addressOffset>0x00000074</addressOffset>
          <size>32</size>
          <description>Used to on-off mbist in a memory group.</description>
          <resetValue>0x0FFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>grp_en_km4_icache_e0</name>
              <description></description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_en_km4_dcache_e0</name>
              <description></description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_en_hifi5_e5</name>
              <description></description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_en_hifi5_e4</name>
              <description></description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_en_hifi5_e3</name>
              <description></description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_en_hifi5_e2</name>
              <description></description>
              <bitRange>[11:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_en_hifi5_e1</name>
              <description></description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MBIST_GRP_EN_CTRL2</name>
          <addressOffset>0x00000078</addressOffset>
          <size>32</size>
          <description>Used to on-off mbist of memory block in a group.</description>
          <resetValue>0x0007FFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>grp_en_kr4_itcm0_e0</name>
              <description></description>
              <bitRange>[18:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_en_kr4_icache_e0</name>
              <description></description>
              <bitRange>[12:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_en_kr4_dcache_e0</name>
              <description></description>
              <bitRange>[10:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_en_km4_itcm0_e0</name>
              <description></description>
              <bitRange>[8:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GRP_PWR_MSK0</name>
          <addressOffset>0x00000080</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>grp_pmsk_wpoff_e6</name>
              <description>WIFI-PMC controlled memory group:
bit[N] = 1: power mode of memory block N is controlled by wifi-PMC power signals
bit[N] = 0: power port of memory block N is tie0.</description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_pmsk_wpoff_e5</name>
              <description>merged</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_pmsk_wpoff_e4</name>
              <description>merged</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_pmsk_wpoff_e3</name>
              <description>merged</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_pmsk_wpoff_e2</name>
              <description>merged</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_pmsk_wpoff_e1</name>
              <description>merged</description>
              <bitRange>[23:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_pmsk_wpoff_e0</name>
              <description>merged</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_pmsk_wlk4_e0</name>
              <description></description>
              <bitRange>[12:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_pmsk_aonpmc_e0</name>
              <description></description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_pmsk_lspmc_e0</name>
              <description></description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_pmsk_lret_e0</name>
              <description></description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_pmsk_hsys_e1</name>
              <description></description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_pmsk_hsys_e0</name>
              <description>SYSPMC controlled memory groups:
bit[N] = 1: power mode of memory block N is controlled by rw_hsys_e0_pwr_slp[2:0];
bit[N] = 0: power mode of memory block N is controlled by rw_hsys_e0_pwr_act[2:0]</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GRP_PWR_MSK1</name>
          <addressOffset>0x00000084</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>grp_pmsk_hifi5_e5</name>
              <description></description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_pmsk_hifi5_e4</name>
              <description></description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_pmsk_hifi5_e3</name>
              <description></description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_pmsk_hifi5_e2</name>
              <description></description>
              <bitRange>[19:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_pmsk_hifi5_e1</name>
              <description></description>
              <bitRange>[13:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_pmsk_hifi5_e0</name>
              <description></description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_pmsk_btoffk4_e1</name>
              <description></description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_pmsk_btoffk4_e0</name>
              <description></description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_pmsk_btonk4_e1</name>
              <description></description>
              <bitRange>[4:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_pmsk_btonk4_e0</name>
              <description></description>
              <bitRange>[2:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_pmsk_wpon_e0</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GRP_PWR_MSK2</name>
          <addressOffset>0x00000088</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x007FFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>grp_pmsk_kr4_itcm0_e0</name>
              <description>CPU cache/rom:
bit[N]=1 : power mode of memory block N is controlled by rw_itcm_pwr_act[2:0]
bit[N/=0: power port of memory block N is tie0.</description>
              <bitRange>[22:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_pmsk_kr4_icache_e0</name>
              <description>merged</description>
              <bitRange>[16:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_pmsk_kr4_dcache_e0</name>
              <description>merged</description>
              <bitRange>[14:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_pmsk_km4_itcm0_e0</name>
              <description>merged</description>
              <bitRange>[12:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_pmsk_km4_icache_e0</name>
              <description>merged</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_pmsk_km4_dcache_e0</name>
              <description>merged</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RSEL0</name>
          <addressOffset>0x00000090</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000004</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>rsel0_test1</name>
              <description></description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rsel0_rm</name>
              <description></description>
              <bitRange>[4:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rsel0_rme</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RSEL1</name>
          <addressOffset>0x00000094</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000004</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>rsel1_test1</name>
              <description></description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rsel1_rm</name>
              <description></description>
              <bitRange>[4:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rsel1_rme</name>
              <description>SNPS_ULP dummy parameter</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RSEL2</name>
          <addressOffset>0x00000098</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000016</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>rsel2_tmck</name>
              <description></description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rsel2_dvs</name>
              <description></description>
              <bitRange>[4:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rsel2_dvse</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RSEL3</name>
          <addressOffset>0x0000009C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000018</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>rsel3_tmck</name>
              <description></description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rsel3_dvs</name>
              <description></description>
              <bitRange>[4:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rsel3_dvse</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RSEL4</name>
          <addressOffset>0x00000100</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000014</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>rsel4_tmck</name>
              <description></description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rsel4_dvs</name>
              <description></description>
              <bitRange>[4:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rsel4_dvse</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RSEL5</name>
          <addressOffset>0x00000104</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0000000A</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>rsel5_dvs</name>
              <description></description>
              <bitRange>[4:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rsel5_dvse</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RSEL6</name>
          <addressOffset>0x00000108</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000014</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>rsel6_tmck</name>
              <description></description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rsel6_dvs</name>
              <description></description>
              <bitRange>[4:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rsel6_dvse</name>
              <description>FTC_ULP dummy parameter</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ASEL0</name>
          <addressOffset>0x0000010C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x000000A9</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>asel0_waem</name>
              <description></description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>asel0_wae</name>
              <description></description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>asel0_raem</name>
              <description></description>
              <bitRange>[2:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>asel0_rae</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ASEL1</name>
          <addressOffset>0x00000110</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x000000A0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>asel1_waem</name>
              <description></description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>asel1_wae</name>
              <description></description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>asel1_raem</name>
              <description></description>
              <bitRange>[2:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>asel1_rae</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ASEL2</name>
          <addressOffset>0x00000114</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x000000A0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>asel2_waem</name>
              <description></description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>asel2_wae</name>
              <description></description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>asel2_raem</name>
              <description></description>
              <bitRange>[2:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>asel2_rae</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GRP_HSYS_E0_CTRL0</name>
          <addressOffset>0x00000134</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x000D2002</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>grp_HSYS_E0_msel</name>
              <description>01 - This memory group can do normal mbist;
10 - This memory group can do DRF mbist;
11 - This memory group can do normal &amp; DRF mbist</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_HSYS_E0_loop_mode</name>
              <description>0 - Assist loop mode
1 - Don't assist loop mode</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_HSYS_E0_rstn</name>
              <description>0 - Reset mbist circuit of this memory group;
1 - Release mbist circuit of this memory group.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_HSYS_E0_pwr_lps</name>
              <description>Reserved for grp_HSYS_E0_pwr_lps for memory groups power controlled by SYSPMC.
Setted before chip goes to SLEEP.Used to controll power mode of this memory group when chip is in SLEEP.
For FTC_ULP mem, pwr_lps[2:0] map to {SLP,RET,NAP};
For SNPS mem, pwr_lps[2:0] map to {SD,DS,LS}.
  000 - active
  001 - light sleep
  010 - deep sleep
  100 - shut down</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_HSYS_E0_pwr_act</name>
              <description>Used to controll power mode of this memory group when chip is ACTIVE.
For FTC_ULP mem, pwr_act[2:0] map to {SLP,RET,NAP};
For SNPS mem, pwr_act[2:0] map to {SD,DS,LS}.
  000 - active
  001 - light sleep
  010 - deep sleep
  100 - shut down</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_hsys_e0_rm_sel</name>
              <description>1PSR, FSNOU_A_SHNL</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GRP_HSYS_E1_CTRL0</name>
          <addressOffset>0x00000138</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x000D2002</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>grp_HSYS_E1_msel</name>
              <description>01 - This memory group can do normal mbist;
10 - This memory group can do DRF mbist;
11 - This memory group can do normal &amp; DRF mbist</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_HSYS_E1_loop_mode</name>
              <description>0 - Assist loop mode
1 - Don't assist loop mode</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_HSYS_E1_rstn</name>
              <description>0 - Reset mbist circuit of this memory group;
1 - Release mbist circuit of this memory group.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_HSYS_E1_pwr_lps</name>
              <description>Reserved for grp_HSYS_E1_pwr_lps for memory groups power controlled by SYSPMC.
Setted before chip goes to SLEEP.Used to controll power mode of this memory group when chip is in SLEEP.
For FTC_ULP mem, pwr_lps[2:0] map to {SLP,RET,NAP};
For SNPS mem, pwr_lps[2:0] map to {SD,DS,LS}.
  000 - active
  001 - light sleep
  010 - deep sleep
  100 - shut down</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_HSYS_E1_pwr_act</name>
              <description>Used to controll power mode of this memory group when chip is ACTIVE.
For FTC_ULP mem, pwr_act[2:0] map to {SLP,RET,NAP};
For SNPS mem, pwr_act[2:0] map to {SD,DS,LS}.
  000 - active
  001 - light sleep
  010 - deep sleep
  100 - shut down</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_hsys_e1_rm_sel</name>
              <description>1PSR, FSNOU_A_SHNL</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GRP_LRET_E0_CTRL0</name>
          <addressOffset>0x0000013C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x000D2403</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>grp_LRET_E0_msel</name>
              <description>01 - This memory group can do normal mbist;
10 - This memory group can do DRF mbist;
11 - This memory group can do normal &amp; DRF mbist</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_LRET_E0_loop_mode</name>
              <description>0 - Assist loop mode
1 - Don't assist loop mode</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_LRET_E0_rstn</name>
              <description>0 - Reset mbist circuit of this memory group;
1 - Release mbist circuit of this memory group.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_lret_e0_pwr_lps</name>
              <description>Reserved for grp_@_pwr_lps for memory groups power controlled by SYSPMC.
Setted before chip goes to SLEEP.Used to controll power mode of this memory group when chip is in SLEEP.
For FTC_ULP mem, pwr_lps[2:0] map to {SLP,RET,NAP};
For SNPS mem, pwr_lps[2:0] map to {SD,DS,LS}.
  100 - active
  101 - light sleep
  110 - deep sleep
  000 - shut down</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_lret_e0_pwr_act</name>
              <description>Used to controll power mode of this memory group when chip is ACTIVE.
For FTC_ULP mem, pwr_act[2:0] map to {SLP,RET,NAP};
For SNPS mem, pwr_act[2:0] map to {SD,DS,LS}.
  100 - active
  101 - light sleep
  110 - deep sleep
  000 - shut down</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_lret_e0_rm_sel</name>
              <description>1PRF, FSNOU_A_SYNL</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GRP_LSPMC_E0_CTRL0</name>
          <addressOffset>0x00000140</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x000D2005</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>grp_LSPMC_E0_msel</name>
              <description>01 - This memory group can do normal mbist;
10 - This memory group can do DRF mbist;
11 - This memory group can do normal &amp; DRF mbist</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_LSPMC_E0_loop_mode</name>
              <description>0 - Assist loop mode
1 - Don't assist loop mode</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_LSPMC_E0_rstn</name>
              <description>0 - Reset mbist circuit of this memory group;
1 - Release mbist circuit of this memory group.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_LSPMC_E0_pwr_lps</name>
              <description>Reserved for grp_LSPMC_E0_pwr_lps for memory groups power controlled by SYSPMC.
Setted before chip goes to SLEEP.Used to controll power mode of this memory group when chip is in SLEEP.
For FTC_ULP mem, pwr_lps[2:0] map to {SLP,RET,NAP};
For SNPS mem, pwr_lps[2:0] map to {SD,DS,LS}.
  000 - active
  001 - light sleep
  010 - deep sleep
  100 - shut down</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_LSPMC_E0_pwr_act</name>
              <description>Used to controll power mode of this memory group when chip is ACTIVE.
For FTC_ULP mem, pwr_act[2:0] map to {SLP,RET,NAP};
For SNPS mem, pwr_act[2:0] map to {SD,DS,LS}.
  000 - active
  001 - light sleep
  010 - deep sleep
  100 - shut down</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_lspmc_e0_rm_sel</name>
              <description>FTC_ULP ROM</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GRP_AONPMC_E0_CTRL0</name>
          <addressOffset>0x00000144</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x000D2005</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>grp_AONPMC_E0_msel</name>
              <description>01 - This memory group can do normal mbist;
10 - This memory group can do DRF mbist;
11 - This memory group can do normal &amp; DRF mbist</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_AONPMC_E0_loop_mode</name>
              <description>0 - Assist loop mode
1 - Don't assist loop mode</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_AONPMC_E0_rstn</name>
              <description>0 - Reset mbist circuit of this memory group;
1 - Release mbist circuit of this memory group.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_AONPMC_E0_pwr_lps</name>
              <description>Reserved for grp_AONPMC_E0_pwr_lps for memory groups power controlled by SYSPMC.
Setted before chip goes to SLEEP.Used to controll power mode of this memory group when chip is in SLEEP.
For FTC_ULP mem, pwr_lps[2:0] map to {SLP,RET,NAP};
For SNPS mem, pwr_lps[2:0] map to {SD,DS,LS}.
  000 - active
  001 - light sleep
  010 - deep sleep
  100 - shut down</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_AONPMC_E0_pwr_act</name>
              <description>Used to controll power mode of this memory group when chip is ACTIVE.
For FTC_ULP mem, pwr_act[2:0] map to {SLP,RET,NAP};
For SNPS mem, pwr_act[2:0] map to {SD,DS,LS}.
  000 - active
  001 - light sleep
  010 - deep sleep
  100 - shut down</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_aonpmc_e0_rm_sel</name>
              <description>FTC_ULP ROM</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GRP_WLK4_E0_CTRL0</name>
          <addressOffset>0x00000148</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x000D2003</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>grp_WLK4_E0_msel</name>
              <description>01 - This memory group can do normal mbist;
10 - This memory group can do DRF mbist;
11 - This memory group can do normal &amp; DRF mbist</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_WLK4_E0_loop_mode</name>
              <description>0 - Assist loop mode
1 - Don't assist loop mode</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_WLK4_E0_rstn</name>
              <description>0 - Reset mbist circuit of this memory group;
1 - Release mbist circuit of this memory group.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_WLK4_E0_pwr_lps</name>
              <description>Reserved for grp_WLK4_E0_pwr_lps for memory groups power controlled by SYSPMC.
Setted before chip goes to SLEEP.Used to controll power mode of this memory group when chip is in SLEEP.
For FTC_ULP mem, pwr_lps[2:0] map to {SLP,RET,NAP};
For SNPS mem, pwr_lps[2:0] map to {SD,DS,LS}.
  000 - active
  001 - light sleep
  010 - deep sleep
  100 - shut down</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_WLK4_E0_pwr_act</name>
              <description>Used to controll power mode of this memory group when chip is ACTIVE.
For FTC_ULP mem, pwr_act[2:0] map to {SLP,RET,NAP};
For SNPS mem, pwr_act[2:0] map to {SD,DS,LS}.
  000 - active
  001 - light sleep
  010 - deep sleep
  100 - shut down</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_wlk4_e0_rm_sel</name>
              <description>1PRF,FSNOU_A_SYNL</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GRP_WPOFF_E0_CTRL0</name>
          <addressOffset>0x0000014C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x000D2000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>grp_WPOFF_E0_msel</name>
              <description>01 - This memory group can do normal mbist;
10 - This memory group can do DRF mbist;
11 - This memory group can do normal &amp; DRF mbist</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_WPOFF_E0_loop_mode</name>
              <description>0 - Assist loop mode
1 - Don't assist loop mode</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_WPOFF_E0_rstn</name>
              <description>0 - Reset mbist circuit of this memory group;
1 - Release mbist circuit of this memory group.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_wpoff_e0_pwr_lps</name>
              <description>Used to controll power mode of this memory group when chip is SLEEP.
SNPS mem map to {SD,DS,LS}.
SNPS_with_PG memory don't assign DS/SD in scan mode</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_wpoff_e0_pwr_act</name>
              <description>Used to controll power mode of this memory group when chip is ACTIVE.
SNPS mem map to {SD,DS,LS}.
SNPS_with_PG memory don't assign DS/SD in scan mode</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_wpoff_e0_rm_sel</name>
              <description>1PRF,SNPS</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GRP_WPOFF_E1_CTRL0</name>
          <addressOffset>0x00000150</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x000D2000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>grp_WPOFF_E1_msel</name>
              <description>01 - This memory group can do normal mbist;
10 - This memory group can do DRF mbist;
11 - This memory group can do normal &amp; DRF mbist</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_WPOFF_E1_loop_mode</name>
              <description>0 - Assist loop mode
1 - Don't assist loop mode</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_WPOFF_E1_rstn</name>
              <description>0 - Reset mbist circuit of this memory group;
1 - Release mbist circuit of this memory group.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_WPOFF_E1_pwr_lps</name>
              <description>Reserved for grp_WPOFF_E1_pwr_lps for memory groups power controlled by SYSPMC.
Setted before chip goes to SLEEP.Used to controll power mode of this memory group when chip is in SLEEP.
For FTC_ULP mem, pwr_lps[2:0] map to {SLP,RET,NAP};
For SNPS mem, pwr_lps[2:0] map to {SD,DS,LS}.
  000 - active
  001 - light sleep
  010 - deep sleep
  100 - shut down</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_WPOFF_E1_pwr_act</name>
              <description>Used to controll power mode of this memory group when chip is ACTIVE.
For FTC_ULP mem, pwr_act[2:0] map to {SLP,RET,NAP};
For SNPS mem, pwr_act[2:0] map to {SD,DS,LS}.
  000 - active
  001 - light sleep
  010 - deep sleep
  100 - shut down</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_wpoff_e1_rm_sel</name>
              <description>1PRF,SNPS</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GRP_WPOFF_E2_CTRL0</name>
          <addressOffset>0x00000154</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x000D2004</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>grp_WPOFF_E2_msel</name>
              <description>01 - This memory group can do normal mbist;
10 - This memory group can do DRF mbist;
11 - This memory group can do normal &amp; DRF mbist</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_WPOFF_E2_loop_mode</name>
              <description>0 - Assist loop mode
1 - Don't assist loop mode</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_WPOFF_E2_rstn</name>
              <description>0 - Reset mbist circuit of this memory group;
1 - Release mbist circuit of this memory group.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_WPOFF_E2_pwr_lps</name>
              <description>Reserved for grp_WPOFF_E2_pwr_lps for memory groups power controlled by SYSPMC.
Setted before chip goes to SLEEP.Used to controll power mode of this memory group when chip is in SLEEP.
For FTC_ULP mem, pwr_lps[2:0] map to {SLP,RET,NAP};
For SNPS mem, pwr_lps[2:0] map to {SD,DS,LS}.
  000 - active
  001 - light sleep
  010 - deep sleep
  100 - shut down</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_WPOFF_E2_pwr_act</name>
              <description>Used to controll power mode of this memory group when chip is ACTIVE.
For FTC_ULP mem, pwr_act[2:0] map to {SLP,RET,NAP};
For SNPS mem, pwr_act[2:0] map to {SD,DS,LS}.
  000 - active
  001 - light sleep
  010 - deep sleep
  100 - shut down</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_wpoff_e2_rm_sel</name>
              <description>2PRF,FSNOU_A_SZNN</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GRP_WPOFF_E3_CTRL0</name>
          <addressOffset>0x00000158</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x000D2000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>grp_WPOFF_E3_msel</name>
              <description>01 - This memory group can do normal mbist;
10 - This memory group can do DRF mbist;
11 - This memory group can do normal &amp; DRF mbist</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_WPOFF_E3_loop_mode</name>
              <description>0 - Assist loop mode
1 - Don't assist loop mode</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_WPOFF_E3_rstn</name>
              <description>0 - Reset mbist circuit of this memory group;
1 - Release mbist circuit of this memory group.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_WPOFF_E3_pwr_lps</name>
              <description>Reserved for grp_WPOFF_E3_pwr_lps for memory groups power controlled by SYSPMC.
Setted before chip goes to SLEEP.Used to controll power mode of this memory group when chip is in SLEEP.
For FTC_ULP mem, pwr_lps[2:0] map to {SLP,RET,NAP};
For SNPS mem, pwr_lps[2:0] map to {SD,DS,LS}.
  000 - active
  001 - light sleep
  010 - deep sleep
  100 - shut down</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_WPOFF_E3_pwr_act</name>
              <description>Used to controll power mode of this memory group when chip is ACTIVE.
For FTC_ULP mem, pwr_act[2:0] map to {SLP,RET,NAP};
For SNPS mem, pwr_act[2:0] map to {SD,DS,LS}.
  000 - active
  001 - light sleep
  010 - deep sleep
  100 - shut down</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_wpoff_e3_rm_sel</name>
              <description>1PRF,SNPS</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GRP_WPOFF_E4_CTRL0</name>
          <addressOffset>0x0000015C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x000D2000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>grp_WPOFF_E4_msel</name>
              <description>01 - This memory group can do normal mbist;
10 - This memory group can do DRF mbist;
11 - This memory group can do normal &amp; DRF mbist</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_WPOFF_E4_loop_mode</name>
              <description>0 - Assist loop mode
1 - Don't assist loop mode</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_WPOFF_E4_rstn</name>
              <description>0 - Reset mbist circuit of this memory group;
1 - Release mbist circuit of this memory group.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_WPOFF_E4_pwr_lps</name>
              <description>Reserved for grp_WPOFF_E4_pwr_lps for memory groups power controlled by SYSPMC.
Setted before chip goes to SLEEP.Used to controll power mode of this memory group when chip is in SLEEP.
For FTC_ULP mem, pwr_lps[2:0] map to {SLP,RET,NAP};
For SNPS mem, pwr_lps[2:0] map to {SD,DS,LS}.
  000 - active
  001 - light sleep
  010 - deep sleep
  100 - shut down</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_WPOFF_E4_pwr_act</name>
              <description>Used to controll power mode of this memory group when chip is ACTIVE.
For FTC_ULP mem, pwr_act[2:0] map to {SLP,RET,NAP};
For SNPS mem, pwr_act[2:0] map to {SD,DS,LS}.
  000 - active
  001 - light sleep
  010 - deep sleep
  100 - shut down</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_wpoff_e4_rm_sel</name>
              <description>1PRF,SNPS</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GRP_WPOFF_E5_CTRL0</name>
          <addressOffset>0x00000160</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x000D2004</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>grp_WPOFF_E5_msel</name>
              <description>01 - This memory group can do normal mbist;
10 - This memory group can do DRF mbist;
11 - This memory group can do normal &amp; DRF mbist</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_WPOFF_E5_loop_mode</name>
              <description>0 - Assist loop mode
1 - Don't assist loop mode</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_WPOFF_E5_rstn</name>
              <description>0 - Reset mbist circuit of this memory group;
1 - Release mbist circuit of this memory group.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_WPOFF_E5_pwr_lps</name>
              <description>Reserved for grp_WPOFF_E5_pwr_lps for memory groups power controlled by SYSPMC.
Setted before chip goes to SLEEP.Used to controll power mode of this memory group when chip is in SLEEP.
For FTC_ULP mem, pwr_lps[2:0] map to {SLP,RET,NAP};
For SNPS mem, pwr_lps[2:0] map to {SD,DS,LS}.
  000 - active
  001 - light sleep
  010 - deep sleep
  100 - shut down</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_WPOFF_E5_pwr_act</name>
              <description>Used to controll power mode of this memory group when chip is ACTIVE.
For FTC_ULP mem, pwr_act[2:0] map to {SLP,RET,NAP};
For SNPS mem, pwr_act[2:0] map to {SD,DS,LS}.
  000 - active
  001 - light sleep
  010 - deep sleep
  100 - shut down</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_wpoff_e5_rm_sel</name>
              <description>2PRF,FSNOU_A_SZNL</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GRP_WPOFF_E6_CTRL0</name>
          <addressOffset>0x00000164</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x000D2004</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>grp_WPOFF_E6_msel</name>
              <description>01 - This memory group can do normal mbist;
10 - This memory group can do DRF mbist;
11 - This memory group can do normal &amp; DRF mbist</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_WPOFF_E6_loop_mode</name>
              <description>0 - Assist loop mode
1 - Don't assist loop mode</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_WPOFF_E6_rstn</name>
              <description>0 - Reset mbist circuit of this memory group;
1 - Release mbist circuit of this memory group.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_WPOFF_E6_pwr_lps</name>
              <description>Reserved for grp_WPOFF_E6_pwr_lps for memory groups power controlled by SYSPMC.
Setted before chip goes to SLEEP.Used to controll power mode of this memory group when chip is in SLEEP.
For FTC_ULP mem, pwr_lps[2:0] map to {SLP,RET,NAP};
For SNPS mem, pwr_lps[2:0] map to {SD,DS,LS}.
  000 - active
  001 - light sleep
  010 - deep sleep
  100 - shut down</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_WPOFF_E6_pwr_act</name>
              <description>Used to controll power mode of this memory group when chip is ACTIVE.
For FTC_ULP mem, pwr_act[2:0] map to {SLP,RET,NAP};
For SNPS mem, pwr_act[2:0] map to {SD,DS,LS}.
  000 - active
  001 - light sleep
  010 - deep sleep
  100 - shut down</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_wpoff_e6_rm_sel</name>
              <description>2PRF,FSNOU_A_SZNL</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GRP_WPON_E0_CTRL0</name>
          <addressOffset>0x00000168</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x000D2003</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>grp_WPON_E0_msel</name>
              <description>01 - This memory group can do normal mbist;
10 - This memory group can do DRF mbist;
11 - This memory group can do normal &amp; DRF mbist</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_WPON_E0_loop_mode</name>
              <description>0 - Assist loop mode
1 - Don't assist loop mode</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_WPON_E0_rstn</name>
              <description>0 - Reset mbist circuit of this memory group;
1 - Release mbist circuit of this memory group.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_WPON_E0_pwr_lps</name>
              <description>Reserved for grp_WPON_E0_pwr_lps for memory groups power controlled by SYSPMC.
Setted before chip goes to SLEEP.Used to controll power mode of this memory group when chip is in SLEEP.
For FTC_ULP mem, pwr_lps[2:0] map to {SLP,RET,NAP};
For SNPS mem, pwr_lps[2:0] map to {SD,DS,LS}.
  000 - active
  001 - light sleep
  010 - deep sleep
  100 - shut down</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_WPON_E0_pwr_act</name>
              <description>Used to controll power mode of this memory group when chip is ACTIVE.
For FTC_ULP mem, pwr_act[2:0] map to {SLP,RET,NAP};
For SNPS mem, pwr_act[2:0] map to {SD,DS,LS}.
  000 - active
  001 - light sleep
  010 - deep sleep
  100 - shut down</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_wpon_e0_rm_sel</name>
              <description>1prf,FSNOU_A_SYNL</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GRP_BTONK4_E0_CTRL0</name>
          <addressOffset>0x0000016C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x000D2002</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>grp_BTONK4_E0_msel</name>
              <description>01 - This memory group can do normal mbist;
10 - This memory group can do DRF mbist;
11 - This memory group can do normal &amp; DRF mbist</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_BTONK4_E0_loop_mode</name>
              <description>0 - Assist loop mode
1 - Don't assist loop mode</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_BTONK4_E0_rstn</name>
              <description>0 - Reset mbist circuit of this memory group;
1 - Release mbist circuit of this memory group.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_BTONK4_E0_pwr_lps</name>
              <description>Reserved for grp_BTONK4_E0_pwr_lps for memory groups power controlled by SYSPMC.
Setted before chip goes to SLEEP.Used to controll power mode of this memory group when chip is in SLEEP.
For FTC_ULP mem, pwr_lps[2:0] map to {SLP,RET,NAP};
For SNPS mem, pwr_lps[2:0] map to {SD,DS,LS}.
  000 - active
  001 - light sleep
  010 - deep sleep
  100 - shut down</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_BTONK4_E0_pwr_act</name>
              <description>Used to controll power mode of this memory group when chip is ACTIVE.
For FTC_ULP mem, pwr_act[2:0] map to {SLP,RET,NAP};
For SNPS mem, pwr_act[2:0] map to {SD,DS,LS}.
  000 - active
  001 - light sleep
  010 - deep sleep
  100 - shut down</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_btonk4_e0_rm_sel</name>
              <description>1PSR,FSNOU_A_SHNL</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GRP_BTONK4_E1_CTRL0</name>
          <addressOffset>0x00000170</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x000D2002</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>grp_BTONK4_E1_msel</name>
              <description>01 - This memory group can do normal mbist;
10 - This memory group can do DRF mbist;
11 - This memory group can do normal &amp; DRF mbist</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_BTONK4_E1_loop_mode</name>
              <description>0 - Assist loop mode
1 - Don't assist loop mode</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_BTONK4_E1_rstn</name>
              <description>0 - Reset mbist circuit of this memory group;
1 - Release mbist circuit of this memory group.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_BTONK4_E1_pwr_lps</name>
              <description>Reserved for grp_BTONK4_E1_pwr_lps for memory groups power controlled by SYSPMC.
Setted before chip goes to SLEEP.Used to controll power mode of this memory group when chip is in SLEEP.
For FTC_ULP mem, pwr_lps[2:0] map to {SLP,RET,NAP};
For SNPS mem, pwr_lps[2:0] map to {SD,DS,LS}.
  000 - active
  001 - light sleep
  010 - deep sleep
  100 - shut down</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_BTONK4_E1_pwr_act</name>
              <description>Used to controll power mode of this memory group when chip is ACTIVE.
For FTC_ULP mem, pwr_act[2:0] map to {SLP,RET,NAP};
For SNPS mem, pwr_act[2:0] map to {SD,DS,LS}.
  000 - active
  001 - light sleep
  010 - deep sleep
  100 - shut down</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_btonk4_e1_rm_sel</name>
              <description>1PSR,FSNOU_A_SHNL</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GRP_BTOFFK4_E0_CTRL0</name>
          <addressOffset>0x00000174</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x000D2002</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>grp_BTOFFK4_E0_msel</name>
              <description>01 - This memory group can do normal mbist;
10 - This memory group can do DRF mbist;
11 - This memory group can do normal &amp; DRF mbist</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_BTOFFK4_E0_loop_mode</name>
              <description>0 - Assist loop mode
1 - Don't assist loop mode</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_BTOFFK4_E0_rstn</name>
              <description>0 - Reset mbist circuit of this memory group;
1 - Release mbist circuit of this memory group.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_btoffk4_e0_pwr_lps</name>
              <description>Reserved for grp_@_pwr_lps for memory groups power controlled by SYSPMC.
Setted before chip goes to SLEEP.Used to controll power mode of this memory group when chip is in SLEEP.
For FTC_ULP mem, pwr_lps[2:0] map to {SLP,RET,NAP};
For SNPS mem, pwr_lps[2:0] map to {SD,DS,LS}.
  100 - active
  101 - light sleep
  110 - deep sleep
  000 - shut down</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_btoffk4_e0_pwr_act</name>
              <description>Used to controll power mode of this memory group when chip is ACTIVE.
For FTC_ULP mem, pwr_act[2:0] map to {SLP,RET,NAP};
For SNPS mem, pwr_act[2:0] map to {SD,DS,LS}.
  100 - active
  101 - light sleep
  110 - deep sleep
  000 - shut down</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_btoffk4_e0_rm_sel</name>
              <description>1PSR,FSNOU_A_SHNL</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GRP_BTOFFK4_E1_CTRL0</name>
          <addressOffset>0x00000178</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x000D2002</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>grp_BTOFFK4_E1_msel</name>
              <description>01 - This memory group can do normal mbist;
10 - This memory group can do DRF mbist;
11 - This memory group can do normal &amp; DRF mbist</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_BTOFFK4_E1_loop_mode</name>
              <description>0 - Assist loop mode
1 - Don't assist loop mode</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_BTOFFK4_E1_rstn</name>
              <description>0 - Reset mbist circuit of this memory group;
1 - Release mbist circuit of this memory group.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_btoffk4_e1_pwr_lps</name>
              <description>Reserved for grp_@_pwr_lps for memory groups power controlled by SYSPMC.
Setted before chip goes to SLEEP.Used to controll power mode of this memory group when chip is in SLEEP.
For FTC_ULP mem, pwr_lps[2:0] map to {SLP,RET,NAP};
For SNPS mem, pwr_lps[2:0] map to {SD,DS,LS}.
  100 - active
  101 - light sleep
  110 - deep sleep
  000 - shut down</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_btoffk4_e1_pwr_act</name>
              <description>Used to controll power mode of this memory group when chip is ACTIVE.
For FTC_ULP mem, pwr_act[2:0] map to {SLP,RET,NAP};
For SNPS mem, pwr_act[2:0] map to {SD,DS,LS}.
  100 - active
  101 - light sleep
  110 - deep sleep
  000 - shut down</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_btoffk4_e1_rm_sel</name>
              <description>1PSR,FSNOU_A_SHNL</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GRP_HIFI5_E0_CTRL0</name>
          <addressOffset>0x0000017C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x000D2000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>grp_HIFI5_E0_msel</name>
              <description>01 - This memory group can do normal mbist;
10 - This memory group can do DRF mbist;
11 - This memory group can do normal &amp; DRF mbist</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_HIFI5_E0_loop_mode</name>
              <description>0 - Assist loop mode
1 - Don't assist loop mode</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_HIFI5_E0_rstn</name>
              <description>0 - Reset mbist circuit of this memory group;
1 - Release mbist circuit of this memory group.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_HIFI5_E0_pwr_lps</name>
              <description>Reserved for grp_HIFI5_E0_pwr_lps for memory groups power controlled by SYSPMC.
Setted before chip goes to SLEEP.Used to controll power mode of this memory group when chip is in SLEEP.
For FTC_ULP mem, pwr_lps[2:0] map to {SLP,RET,NAP};
For SNPS mem, pwr_lps[2:0] map to {SD,DS,LS}.
  000 - active
  001 - light sleep
  010 - deep sleep
  100 - shut down</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_HIFI5_E0_pwr_act</name>
              <description>Used to controll power mode of this memory group when chip is ACTIVE.
For FTC_ULP mem, pwr_act[2:0] map to {SLP,RET,NAP};
For SNPS mem, pwr_act[2:0] map to {SD,DS,LS}.
  000 - active
  001 - light sleep
  010 - deep sleep
  100 - shut down</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_hifi5_e0_rm_sel</name>
              <description>SNPS</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GRP_HIFI5_E1_CTRL0</name>
          <addressOffset>0x00000180</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x000D2000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>grp_HIFI5_E1_msel</name>
              <description>01 - This memory group can do normal mbist;
10 - This memory group can do DRF mbist;
11 - This memory group can do normal &amp; DRF mbist</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_HIFI5_E1_loop_mode</name>
              <description>0 - Assist loop mode
1 - Don't assist loop mode</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_HIFI5_E1_rstn</name>
              <description>0 - Reset mbist circuit of this memory group;
1 - Release mbist circuit of this memory group.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_HIFI5_E1_pwr_lps</name>
              <description>Reserved for grp_HIFI5_E1_pwr_lps for memory groups power controlled by SYSPMC.
Setted before chip goes to SLEEP.Used to controll power mode of this memory group when chip is in SLEEP.
For FTC_ULP mem, pwr_lps[2:0] map to {SLP,RET,NAP};
For SNPS mem, pwr_lps[2:0] map to {SD,DS,LS}.
  000 - active
  001 - light sleep
  010 - deep sleep
  100 - shut down</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_HIFI5_E1_pwr_act</name>
              <description>Used to controll power mode of this memory group when chip is ACTIVE.
For FTC_ULP mem, pwr_act[2:0] map to {SLP,RET,NAP};
For SNPS mem, pwr_act[2:0] map to {SD,DS,LS}.
  000 - active
  001 - light sleep
  010 - deep sleep
  100 - shut down</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_hifi5_e1_rm_sel</name>
              <description>SNPS</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GRP_HIFI5_E2_CTRL0</name>
          <addressOffset>0x00000184</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x000D2000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>grp_HIFI5_E2_msel</name>
              <description>01 - This memory group can do normal mbist;
10 - This memory group can do DRF mbist;
11 - This memory group can do normal &amp; DRF mbist</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_HIFI5_E2_loop_mode</name>
              <description>0 - Assist loop mode
1 - Don't assist loop mode</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_HIFI5_E2_rstn</name>
              <description>0 - Reset mbist circuit of this memory group;
1 - Release mbist circuit of this memory group.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_HIFI5_E2_pwr_lps</name>
              <description>Reserved for grp_HIFI5_E2_pwr_lps for memory groups power controlled by SYSPMC.
Setted before chip goes to SLEEP.Used to controll power mode of this memory group when chip is in SLEEP.
For FTC_ULP mem, pwr_lps[2:0] map to {SLP,RET,NAP};
For SNPS mem, pwr_lps[2:0] map to {SD,DS,LS}.
  000 - active
  001 - light sleep
  010 - deep sleep
  100 - shut down</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_HIFI5_E2_pwr_act</name>
              <description>Used to controll power mode of this memory group when chip is ACTIVE.
For FTC_ULP mem, pwr_act[2:0] map to {SLP,RET,NAP};
For SNPS mem, pwr_act[2:0] map to {SD,DS,LS}.
  000 - active
  001 - light sleep
  010 - deep sleep
  100 - shut down</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_hifi5_e2_rm_sel</name>
              <description>SNPS</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GRP_HIFI5_E3_CTRL0</name>
          <addressOffset>0x00000188</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x000D2000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>grp_HIFI5_E3_msel</name>
              <description>01 - This memory group can do normal mbist;
10 - This memory group can do DRF mbist;
11 - This memory group can do normal &amp; DRF mbist</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_HIFI5_E3_loop_mode</name>
              <description>0 - Assist loop mode
1 - Don't assist loop mode</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_HIFI5_E3_rstn</name>
              <description>0 - Reset mbist circuit of this memory group;
1 - Release mbist circuit of this memory group.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_HIFI5_E3_pwr_lps</name>
              <description>Reserved for grp_HIFI5_E3_pwr_lps for memory groups power controlled by SYSPMC.
Setted before chip goes to SLEEP.Used to controll power mode of this memory group when chip is in SLEEP.
For FTC_ULP mem, pwr_lps[2:0] map to {SLP,RET,NAP};
For SNPS mem, pwr_lps[2:0] map to {SD,DS,LS}.
  000 - active
  001 - light sleep
  010 - deep sleep
  100 - shut down</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_HIFI5_E3_pwr_act</name>
              <description>Used to controll power mode of this memory group when chip is ACTIVE.
For FTC_ULP mem, pwr_act[2:0] map to {SLP,RET,NAP};
For SNPS mem, pwr_act[2:0] map to {SD,DS,LS}.
  000 - active
  001 - light sleep
  010 - deep sleep
  100 - shut down</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_hifi5_e3_rm_sel</name>
              <description>SNPS</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GRP_HIFI5_E4_CTRL0</name>
          <addressOffset>0x0000018C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x000D2000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>grp_HIFI5_E4_msel</name>
              <description>01 - This memory group can do normal mbist;
10 - This memory group can do DRF mbist;
11 - This memory group can do normal &amp; DRF mbist</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_HIFI5_E4_loop_mode</name>
              <description>0 - Assist loop mode
1 - Don't assist loop mode</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_HIFI5_E4_rstn</name>
              <description>0 - Reset mbist circuit of this memory group;
1 - Release mbist circuit of this memory group.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_HIFI5_E4_pwr_lps</name>
              <description>Reserved for grp_HIFI5_E4_pwr_lps for memory groups power controlled by SYSPMC.
Setted before chip goes to SLEEP.Used to controll power mode of this memory group when chip is in SLEEP.
For FTC_ULP mem, pwr_lps[2:0] map to {SLP,RET,NAP};
For SNPS mem, pwr_lps[2:0] map to {SD,DS,LS}.
  000 - active
  001 - light sleep
  010 - deep sleep
  100 - shut down</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_HIFI5_E4_pwr_act</name>
              <description>Used to controll power mode of this memory group when chip is ACTIVE.
For FTC_ULP mem, pwr_act[2:0] map to {SLP,RET,NAP};
For SNPS mem, pwr_act[2:0] map to {SD,DS,LS}.
  000 - active
  001 - light sleep
  010 - deep sleep
  100 - shut down</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_hifi5_e4_rm_sel</name>
              <description>SNPS</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GRP_HIFI5_E5_CTRL0</name>
          <addressOffset>0x00000190</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x000D2000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>grp_HIFI5_E5_msel</name>
              <description>01 - This memory group can do normal mbist;
10 - This memory group can do DRF mbist;
11 - This memory group can do normal &amp; DRF mbist</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_HIFI5_E5_loop_mode</name>
              <description>0 - Assist loop mode
1 - Don't assist loop mode</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_HIFI5_E5_rstn</name>
              <description>0 - Reset mbist circuit of this memory group;
1 - Release mbist circuit of this memory group.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_hifi5_e5_pwr_lps</name>
              <description>Used to controll power mode of this memory group when chip is SLEEP.
SNPS mem map to {SD,DS,LS}.
SNPS_with_PG memory don't assign DS/SD in scan mode</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_hifi5_e5_pwr_act</name>
              <description>Used to controll power mode of this memory group when chip is ACTIVE.
SNPS mem map to {SD,DS,LS}.
SNPS_with_PG memory don't assign DS/SD in scan mode</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_hifi5_e5_rm_sel</name>
              <description>SNPS</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GRP_KM4_ITCM0_E0_CTRL0</name>
          <addressOffset>0x00000194</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x000D2000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>grp_KM4_ITCM0_E0_msel</name>
              <description>01 - This memory group can do normal mbist;
10 - This memory group can do DRF mbist;
11 - This memory group can do normal &amp; DRF mbist</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_KM4_ITCM0_E0_loop_mode</name>
              <description>0 - Assist loop mode
1 - Don't assist loop mode</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_KM4_ITCM0_E0_rstn</name>
              <description>0 - Reset mbist circuit of this memory group;
1 - Release mbist circuit of this memory group.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_KM4_ITCM0_E0_pwr_lps</name>
              <description>Reserved for grp_KM4_ITCM0_E0_pwr_lps for memory groups power controlled by SYSPMC.
Setted before chip goes to SLEEP.Used to controll power mode of this memory group when chip is in SLEEP.
For FTC_ULP mem, pwr_lps[2:0] map to {SLP,RET,NAP};
For SNPS mem, pwr_lps[2:0] map to {SD,DS,LS}.
  000 - active
  001 - light sleep
  010 - deep sleep
  100 - shut down</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_KM4_ITCM0_E0_pwr_act</name>
              <description>Used to controll power mode of this memory group when chip is ACTIVE.
For FTC_ULP mem, pwr_act[2:0] map to {SLP,RET,NAP};
For SNPS mem, pwr_act[2:0] map to {SD,DS,LS}.
  000 - active
  001 - light sleep
  010 - deep sleep
  100 - shut down</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_km4_itcm0_e0_rm_sel</name>
              <description>SNPS</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GRP_KM4_ICACHE_E0_CTRL0</name>
          <addressOffset>0x00000198</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x000D2000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>grp_KM4_ICACHE_E0_msel</name>
              <description>01 - This memory group can do normal mbist;
10 - This memory group can do DRF mbist;
11 - This memory group can do normal &amp; DRF mbist</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_KM4_ICACHE_E0_loop_mode</name>
              <description>0 - Assist loop mode
1 - Don't assist loop mode</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_KM4_ICACHE_E0_rstn</name>
              <description>0 - Reset mbist circuit of this memory group;
1 - Release mbist circuit of this memory group.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_KM4_ICACHE_E0_pwr_lps</name>
              <description>Reserved for grp_KM4_ICACHE_E0_pwr_lps for memory groups power controlled by SYSPMC.
Setted before chip goes to SLEEP.Used to controll power mode of this memory group when chip is in SLEEP.
For FTC_ULP mem, pwr_lps[2:0] map to {SLP,RET,NAP};
For SNPS mem, pwr_lps[2:0] map to {SD,DS,LS}.
  000 - active
  001 - light sleep
  010 - deep sleep
  100 - shut down</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_KM4_ICACHE_E0_pwr_act</name>
              <description>Used to controll power mode of this memory group when chip is ACTIVE.
For FTC_ULP mem, pwr_act[2:0] map to {SLP,RET,NAP};
For SNPS mem, pwr_act[2:0] map to {SD,DS,LS}.
  000 - active
  001 - light sleep
  010 - deep sleep
  100 - shut down</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_km4_icache_e0_rm_sel</name>
              <description>SNPS</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GRP_KM4_DCACHE_E0_CTRL0</name>
          <addressOffset>0x0000019C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x000D2000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>grp_KM4_DCACHE_E0_msel</name>
              <description>01 - This memory group can do normal mbist;
10 - This memory group can do DRF mbist;
11 - This memory group can do normal &amp; DRF mbist</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_KM4_DCACHE_E0_loop_mode</name>
              <description>0 - Assist loop mode
1 - Don't assist loop mode</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_KM4_DCACHE_E0_rstn</name>
              <description>0 - Reset mbist circuit of this memory group;
1 - Release mbist circuit of this memory group.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_KM4_DCACHE_E0_pwr_lps</name>
              <description>Reserved for grp_KM4_DCACHE_E0_pwr_lps for memory groups power controlled by SYSPMC.
Setted before chip goes to SLEEP.Used to controll power mode of this memory group when chip is in SLEEP.
For FTC_ULP mem, pwr_lps[2:0] map to {SLP,RET,NAP};
For SNPS mem, pwr_lps[2:0] map to {SD,DS,LS}.
  000 - active
  001 - light sleep
  010 - deep sleep
  100 - shut down</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_KM4_DCACHE_E0_pwr_act</name>
              <description>Used to controll power mode of this memory group when chip is ACTIVE.
For FTC_ULP mem, pwr_act[2:0] map to {SLP,RET,NAP};
For SNPS mem, pwr_act[2:0] map to {SD,DS,LS}.
  000 - active
  001 - light sleep
  010 - deep sleep
  100 - shut down</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_km4_dcache_e0_rm_sel</name>
              <description>SNPS</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GRP_KR4_ITCM0_E0_CTRL0</name>
          <addressOffset>0x000001A0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x000D2000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>grp_KR4_ITCM0_E0_msel</name>
              <description>01 - This memory group can do normal mbist;
10 - This memory group can do DRF mbist;
11 - This memory group can do normal &amp; DRF mbist</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_KR4_ITCM0_E0_loop_mode</name>
              <description>0 - Assist loop mode
1 - Don't assist loop mode</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_KR4_ITCM0_E0_rstn</name>
              <description>0 - Reset mbist circuit of this memory group;
1 - Release mbist circuit of this memory group.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_KR4_ITCM0_E0_pwr_lps</name>
              <description>Reserved for grp_KR4_ITCM0_E0_pwr_lps for memory groups power controlled by SYSPMC.
Setted before chip goes to SLEEP.Used to controll power mode of this memory group when chip is in SLEEP.
For FTC_ULP mem, pwr_lps[2:0] map to {SLP,RET,NAP};
For SNPS mem, pwr_lps[2:0] map to {SD,DS,LS}.
  000 - active
  001 - light sleep
  010 - deep sleep
  100 - shut down</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_KR4_ITCM0_E0_pwr_act</name>
              <description>Used to controll power mode of this memory group when chip is ACTIVE.
For FTC_ULP mem, pwr_act[2:0] map to {SLP,RET,NAP};
For SNPS mem, pwr_act[2:0] map to {SD,DS,LS}.
  000 - active
  001 - light sleep
  010 - deep sleep
  100 - shut down</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_kr4_itcm0_e0_rm_sel</name>
              <description>SNPS</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GRP_KR4_ICACHE_E0_CTRL0</name>
          <addressOffset>0x000001A4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x000D2000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>grp_KR4_ICACHE_E0_msel</name>
              <description>01 - This memory group can do normal mbist;
10 - This memory group can do DRF mbist;
11 - This memory group can do normal &amp; DRF mbist</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_KR4_ICACHE_E0_loop_mode</name>
              <description>0 - Assist loop mode
1 - Don't assist loop mode</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_KR4_ICACHE_E0_rstn</name>
              <description>0 - Reset mbist circuit of this memory group;
1 - Release mbist circuit of this memory group.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_KR4_ICACHE_E0_pwr_lps</name>
              <description>Reserved for grp_KR4_ICACHE_E0_pwr_lps for memory groups power controlled by SYSPMC.
Setted before chip goes to SLEEP.Used to controll power mode of this memory group when chip is in SLEEP.
For FTC_ULP mem, pwr_lps[2:0] map to {SLP,RET,NAP};
For SNPS mem, pwr_lps[2:0] map to {SD,DS,LS}.
  000 - active
  001 - light sleep
  010 - deep sleep
  100 - shut down</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_KR4_ICACHE_E0_pwr_act</name>
              <description>Used to controll power mode of this memory group when chip is ACTIVE.
For FTC_ULP mem, pwr_act[2:0] map to {SLP,RET,NAP};
For SNPS mem, pwr_act[2:0] map to {SD,DS,LS}.
  000 - active
  001 - light sleep
  010 - deep sleep
  100 - shut down</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_kr4_icache_e0_rm_sel</name>
              <description>SNPS</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GRP_KR4_DCACHE_E0_CTRL0</name>
          <addressOffset>0x000001A8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x000D2000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>grp_KR4_DCACHE_E0_msel</name>
              <description>01 - This memory group can do normal mbist;
10 - This memory group can do DRF mbist;
11 - This memory group can do normal &amp; DRF mbist</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_KR4_DCACHE_E0_loop_mode</name>
              <description>0 - Assist loop mode
1 - Don't assist loop mode</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_KR4_DCACHE_E0_rstn</name>
              <description>0 - Reset mbist circuit of this memory group;
1 - Release mbist circuit of this memory group.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_KR4_DCACHE_E0_pwr_lps</name>
              <description>Reserved for grp_KR4_DCACHE_E0_pwr_lps for memory groups power controlled by SYSPMC.
Setted before chip goes to SLEEP.Used to controll power mode of this memory group when chip is in SLEEP.
For FTC_ULP mem, pwr_lps[2:0] map to {SLP,RET,NAP};
For SNPS mem, pwr_lps[2:0] map to {SD,DS,LS}.
  000 - active
  001 - light sleep
  010 - deep sleep
  100 - shut down</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_KR4_DCACHE_E0_pwr_act</name>
              <description>Used to controll power mode of this memory group when chip is ACTIVE.
For FTC_ULP mem, pwr_act[2:0] map to {SLP,RET,NAP};
For SNPS mem, pwr_act[2:0] map to {SD,DS,LS}.
  000 - active
  001 - light sleep
  010 - deep sleep
  100 - shut down</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_kr4_dcache_e0_rm_sel</name>
              <description>SNPS</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GRP_BT_E0_CTRL0</name>
          <addressOffset>0x000001AC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x000D2000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>grp_BT_E0_msel</name>
              <description>01 - This memory group can do normal mbist;
10 - This memory group can do DRF mbist;
11 - This memory group can do normal &amp; DRF mbist</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_BT_E0_loop_mode</name>
              <description>0 - Assist loop mode
1 - Don't assist loop mode</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_BT_E0_rstn</name>
              <description>0 - Reset mbist circuit of this memory group;
1 - Release mbist circuit of this memory group.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_BT_E0_pwr_lps</name>
              <description>Reserved for grp_BT_E0_pwr_lps for memory groups power controlled by SYSPMC.
Setted before chip goes to SLEEP.Used to controll power mode of this memory group when chip is in SLEEP.
For FTC_ULP mem, pwr_lps[2:0] map to {SLP,RET,NAP};
For SNPS mem, pwr_lps[2:0] map to {SD,DS,LS}.
  000 - active
  001 - light sleep
  010 - deep sleep
  100 - shut down</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_BT_E0_pwr_act</name>
              <description>Used to controll power mode of this memory group when chip is ACTIVE.
For FTC_ULP mem, pwr_act[2:0] map to {SLP,RET,NAP};
For SNPS mem, pwr_act[2:0] map to {SD,DS,LS}.
  000 - active
  001 - light sleep
  010 - deep sleep
  100 - shut down</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>grp_bt_e0_rm_sel</name>
              <description>special group</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCAN_CTRL1</name>
          <addressOffset>0x000001C0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SCAN_OCC_DBG_EN_SEC</name>
              <description>scan occ dbg en sec</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCAN_OCC_DBG_EN_ECDSA</name>
              <description>scan occ dbg en ecdsa</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCAN_OCC_DBG_EN_PSRAM</name>
              <description>scan occ dbg en psram</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCAN_OCC_DBG_EN_SPIC</name>
              <description>scan occ dbg en spic</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCAN_OCC_DBG_EN_WMACAXI</name>
              <description>scan occ dbg en wmacaxi</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCAN_OCC_DBG_EN_SRAM2</name>
              <description>scan occ dbg en sram2</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCAN_OCC_DBG_EN_HBUS</name>
              <description>scan occ dbg en hbus</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCAN_OCC_DBG_EN_GDMAXI</name>
              <description>scan occ dbg en gdmaxi</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCAN_OCC_DBG_EN_PLFM</name>
              <description>scan occ dbg en plfm</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCAN_OCC_DBG_EN_HFCORE</name>
              <description>scan occ dbg en hifi core</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCAN_CTRL0</name>
          <addressOffset>0x000001C4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SCAN_RET_EN</name>
              <description>scan retention test enable</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCAN_PLL_OUT_SEL</name>
              <description>scan pll out sel</description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCAN_CFT2</name>
              <description>scan QFN88 package ft mode2</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCAN_CFT1</name>
              <description>scan QFN88 package ft mode1</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCAN_CFT0</name>
              <description>scan QFN88 package ft mode0</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCAN_BFT2</name>
              <description>scan QFN144 NON-MCM package ft mode2</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCAN_BFT1</name>
              <description>scan QFN144 NON-MCM package ft mode1</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCAN_BFT0</name>
              <description>scan QFN144 NON-MCM package ft mode0</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCAN_AFT2</name>
              <description>scan QFN144 MCM package ft mode2</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCAN_AFT1</name>
              <description>scan QFN144 MCM package ft mode1</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCAN_AFT0</name>
              <description>scan QFN144 MCM package ft mode0</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCAN_CP1</name>
              <description>scan cp mode1</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCAN_CP0</name>
              <description>scan cp mode0</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCAN_SPC_DISABLE</name>
              <description>scan spc disable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCAN_PLL_BYPASS</name>
              <description>scan pll bypass</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCAN_COMPRESS</name>
              <description>scan compress</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCAN_PAR_LATPS</name>
              <description>Used as scan latch enable bit .
If want to change scan par from func setting , set this bit to 1 first , then write func register will also effect scan shadow register .</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCAN_MODE_SETPS</name>
              <description>scan mode pulse</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DUMMY_1F4</name>
          <addressOffset>0x000001F4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>HW used only , these are for reserved.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DUMMY_1F8</name>
          <addressOffset>0x000001F8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>HW used only , these are for reserved.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DUMMY_1FC</name>
          <addressOffset>0x000001FC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>HW used only , these are for reserved.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>lp_pmc</name>
      <baseAddress>0x4100C300</baseAddress>
      <size>0x00000064</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00000064</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>REG_WAK_STATUS0</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>wak_sta_31_0</name>
              <description>wak evt status.
It can't be cleare here, clear at IP side .
Bit0: WIFI_FISR_FESR_IRQ
Bit1: WIFI_FTSR_MAILBOX_IRQ
Bit2: AP_WAKE_IRQ
Bit3: DSP_WAKE_IRQ
Bit4: BT_WAKE_HOST
Bit5: IPC_KR4
Bit6: IPC_KM4
Bit7: IPC_DSP
Bit8: IWDG
Bit9: Timer0
Bit10: Timer1
Bit11: Timer2
Bit12: Timer3
Bit13: Timer4
Bit14: Timer5
Bit15: Timer6
Bit16: Timer7
Bit17: UART0
Bit18: UART1
Bit19: UART2
Bit20: UART3
Bit21: UART_LOG
Bit22: GPIOA
Bit23: GPIOB
Bit24: CTOUCH
Bit25: SPI0
Bit26: SPI1
Bit27: AON_RTS
Bit28: ADC
Bit29: ADC_COMP
Bit30: BOR
Bit31: PWR_DOWN</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WAK_STATUS1</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>wak_sta_63_32</name>
              <description>wak evt status.
It can't be cleare here, clear at IP side .
Bit0: AON_TIMER
Bit1: AON_GPIO_WAKE
Bit2: VAD
Bit3~31: Reserved</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WAK_MASK0_NP</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>wak_np_imr_31_0</name>
              <description>1:mask enable for wake NP, this used to wak pmc</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WAK_MASK1_NP</name>
          <addressOffset>0x0000000C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>wak_np_imr_63_32</name>
              <description>1:mask enable for wake NP</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WAK_MASK0_AP</name>
          <addressOffset>0x00000010</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>wak_ap_imr_31_0</name>
              <description>1:mask enable for wake AP</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WAK_MASK1_AP</name>
          <addressOffset>0x00000014</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>wak_ap_imr_63_32</name>
              <description>1:mask enable for wake AP</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WAK_MASK0_DSP</name>
          <addressOffset>0x00000018</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>wak_dsp_imr_31_0</name>
              <description>1:mask enable for wake DSP</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WAK_MASK1_DSP</name>
          <addressOffset>0x0000001C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>wak_dsp_imr_63_32</name>
              <description>1:mask enable for wake DSP</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WLPMC_ISR</name>
          <addressOffset>0x00000020</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DUMMY</name>
              <description></description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WL_OFF_IMR</name>
              <description></description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WL_ON_IMR</name>
              <description></description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WL_OFF_ISR</name>
              <description></description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>WL_ON_ISR</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WLAN_PWRCTL</name>
          <addressOffset>0x00000024</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SW_CLR_RDY2ACT</name>
              <description>System infrom WLAN ready to active</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SW_SET_RDY2ACT</name>
              <description></description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WL_RDY2ACT</name>
              <description>System infrom WLAN ready to active</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>WL_REQ2ACT</name>
              <description></description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>WL_HW_RESP_FEN</name>
              <description>1: enable HW auto response</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SYSPMC_CTRL</name>
          <addressOffset>0x00000028</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x131F0010</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PMC_STL_PDPBG</name>
              <description>timer wait for PLL bandgag power stable . Spec is 160us
00:8us * 2^4
01:8us * 2^5
10:8us * 2^6
11:8us * 2^7</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PMC_STL_PDSOC</name>
              <description>timer wait for core power power-cut power stable .
00:8us * 2^5
01:8us * 2^6
10:8us * 2^7
11:8us * 2^8</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PMC_TUTIME</name>
              <description>PMC timeunit setting,  in cycles of osc4M 
e.g, default 0x1F,  timeunit = 8us</description>
              <bitRange>[21:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PMC_MEM_SLP_MODE</name>
              <description>memory power mode parameter select
1:select paramter of sleep mode
0:select paramter of normal mode</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PMC_POF_WAIT_SLEP</name>
              <description>1.when SW set pmen_slep or pmen_dslp , hw pmc will wait km0 enter sleep mode , then begin to pof seq
0.Not wait km0 sleep</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>KR4_IRQ_MASK</name>
              <description>1.mask all KR4 interrupt
0:release all KR4 interrupt</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>KM4_IRQ_MASK</name>
              <description>1.mask all KM4 interrupt
0:release all KM4 interrupt</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PMC_PMEN_SLEP</name>
              <description>1: Request PMC to enter sleep state,
auto clear to 0 after PMC finishes</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PMC_PMEN_DSLP</name>
              <description>1: Request PMC to enter deep-sleep state,
auto clear to 0 after PMC finishes</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SYSPMC_OPT</name>
          <addressOffset>0x0000002C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00200000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PST_NORM_XMD</name>
              <description>Normal setting for XTAL mode selection
00: XTAL will be off when PMC resume from sleep mode
01: XTAL will be in LPS when PMC resume from sleep mode
10/11: XTAL will be in Normal when PMC resume from sleep mode</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PST_SLEP_XMD</name>
              <description>Sleep setting for XTAL mode selection
00: XTAL will be off when PMC enter into sleep mode
01: XTAL will be in LPS when PMC enter into sleep mode
10/11: XTAL will be in Normal when PMC enter into sleep mode</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PST_SLEP_LDOM</name>
              <description>Sleep setting for core LDO mode selection(the bit is discarded,use PST_SLEP_EPWM instead)
1: core LDO keeps at normal mode when PMC enter into sleep mode
0: core switch to standby mode when PMC enter into sleep mode</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PST_SLEP_EPWM</name>
              <description>Sleep setting for SWR mode selection
1: SWR keeps at PWM mode when PMC enter into sleep mode
0: SWR switch to PFM when PMC enter into sleep mode</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PST_SLEP_ERCK</name>
              <description>1: Enable lpon clock when PMC enter into sleep mode
0: Gate lpon clock when PMC enter into sleep mode</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PST_SLEP_EBUS</name>
              <description>1: Enable platform clock when PMC entro into sleep mode
0: Gate platform clock when PMC entro into sleep mode</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PST_SLEP_ESOC</name>
              <description>1: power enable SOC platform when PMC enter into sleep mode (clock-gating)
0: power off SoC domain when PMC enter into sleep mode (power-gating)</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PMC_PATCH_GRP0_0</name>
          <addressOffset>0x00000034</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PATCH_GRP0_INSTR1_5_0</name>
              <description>instruction1 of  LSYSON PMC patch group0,bit[5:0]</description>
              <bitRange>[31:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PATCH_GRP0_INSTR0</name>
              <description>instruction0 of  LSYSON PMC patch group0</description>
              <bitRange>[25:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PATCH_GRP0_SADDR</name>
              <description>Start address of the first instruction of  LSYSON PMC patch group0</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PMC_PATCH_GRP0_1</name>
          <addressOffset>0x00000038</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PATCH_GRP0_INSTR2</name>
              <description>instruction2 of  LSYSON PMC patch group0</description>
              <bitRange>[29:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PATCH_GRP0_INSTR1_17_6</name>
              <description>instruction1 of  LSYSON PMC patch group0,bit[17:6]</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PMC_PATCH_GRP1_0</name>
          <addressOffset>0x0000003C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PATCH_GRP1_INSTR1_5_0</name>
              <description>instruction1 of  LSYSON PMC patch group1,bit[5:0]</description>
              <bitRange>[31:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PATCH_GRP1_INSTR0</name>
              <description>instruction0 of  LSYSON PMC patch group1</description>
              <bitRange>[25:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PATCH_GRP1_SADDR</name>
              <description>Start address of the first instruction of  LSYSON PMC patch group1</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PMC_PATCH_GRP1_1</name>
          <addressOffset>0x00000040</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PATCH_GRP1_INSTR2</name>
              <description>instruction2 of  LSYSON PMC patch group1</description>
              <bitRange>[29:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PATCH_GRP1_INSTR1_17_6</name>
              <description>instruction1 of  LSYSON PMC patch group1,bit[17:6]</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PMC_PATCH_GRP2_0</name>
          <addressOffset>0x00000044</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PATCH_GRP2_INSTR1_5_0</name>
              <description>instruction1 of  LSYSON PMC patch group2,bit[5:0]</description>
              <bitRange>[31:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PATCH_GRP2_INSTR0</name>
              <description>instruction0 of  LSYSON PMC patch group2</description>
              <bitRange>[25:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PATCH_GRP2_SADDR</name>
              <description>Start address of the first instruction of  LSYSON PMC patch group2</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PMC_PATCH_GRP2_1</name>
          <addressOffset>0x00000048</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PATCH_GRP2_INSTR2</name>
              <description>instruction2 of  LSYSON PMC patch group2</description>
              <bitRange>[29:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PATCH_GRP2_INSTR1_17_6</name>
              <description>instruction1 of  LSYSON PMC patch group2,bit[17:6]</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PMC_PATCH_GRP3_0</name>
          <addressOffset>0x0000004C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PATCH_GRP3_INSTR1_5_0</name>
              <description>instruction1 of  LSYSON PMC patch group3,bit[5:0]</description>
              <bitRange>[31:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PATCH_GRP3_INSTR0</name>
              <description>instruction0 of  LSYSON PMC patch group3</description>
              <bitRange>[25:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PATCH_GRP3_SADDR</name>
              <description>Start address of the first instruction of  LSYSON PMC patch group3</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PMC_PATCH_GRP3_1</name>
          <addressOffset>0x00000050</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PATCH_GRP3_INSTR2</name>
              <description>instruction2 of  LSYSON PMC patch group3</description>
              <bitRange>[29:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PATCH_GRP3_INSTR1_17_6</name>
              <description>instruction1 of  LSYSON PMC patch group3,bit[17:6]</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PMC_PATCH_GRP4_0</name>
          <addressOffset>0x00000054</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PATCH_GRP4_INSTR1_5_0</name>
              <description>instruction1 of  LSYSON PMC patch group4,bit[5:0]</description>
              <bitRange>[31:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PATCH_GRP4_INSTR0</name>
              <description>instruction0 of  LSYSON PMC patch group4</description>
              <bitRange>[25:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PATCH_GRP4_SADDR</name>
              <description>Start address of the first instruction of  LSYSON PMC patch group4</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PMC_PATCH_GRP4_1</name>
          <addressOffset>0x00000058</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PATCH_GRP4_INSTR2</name>
              <description>instruction2 of  LSYSON PMC patch group4</description>
              <bitRange>[29:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PATCH_GRP4_INSTR1_17_6</name>
              <description>instruction1 of  LSYSON PMC patch group4,bit[17:6]</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PMC_PATCH_GRP5_0</name>
          <addressOffset>0x0000005C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PATCH_GRP5_INSTR1_5_0</name>
              <description>instruction1 of  LSYSON PMC patch group5,bit[5:0]</description>
              <bitRange>[31:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PATCH_GRP5_INSTR0</name>
              <description>instruction0 of  LSYSON PMC patch group5</description>
              <bitRange>[25:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PATCH_GRP5_SADDR</name>
              <description>Start address of the first instruction of  LSYSON PMC patch group5</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PMC_PATCH_GRP5_1</name>
          <addressOffset>0x00000060</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PATCH_GRP5_INSTR2</name>
              <description>instruction2 of  LSYSON PMC patch group5</description>
              <bitRange>[29:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PATCH_GRP5_INSTR1_17_6</name>
              <description>instruction1 of  LSYSON PMC patch group5,bit[17:6]</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>lp_aon</name>
      <baseAddress>0x4100C000</baseAddress>
      <size>0x00000100</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00000100</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>REG_PWC</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x000E0E10</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>LPPAD_RSTB</name>
              <description>1: Release LP PAD RSTB33 (except GPIOA)
0: Global Assert LP PAD RSTB33</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LPPAD_SHDN</name>
              <description>1: Global Enable LP PAD (except GPIOA)
0: Shutdown LP PAD
Note: Default value must be fixed after AON PMC done.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOD_RSTB</name>
              <description>1: Enable GPIOD group pad
0: Reset PAD</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOC_RSTB</name>
              <description>1: Enable GPIOC group pad
0: Reset PAD</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOB_RSTB</name>
              <description>1: Enable GPIOB group pad
0: Reset PAD</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOA_RSTB</name>
              <description>1: Enable GPIOA group pad
0: Reset PAD</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOD_SHDN</name>
              <description>1: Enable GPIOD group pad
0: Shutdown PAD</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOC_SHDN</name>
              <description>1: Enable GPIOC group pad
0: Shutdown PAD</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOB_SHDN</name>
              <description>1: Enable GPIOB group pad
0: Shutdown PAD</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOA_SHDN</name>
              <description>1: Enable GPIOA group pad
0: Shutdown PAD</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pc_step</name>
              <description>power cut enable time step.
0: not valid
1: 10us
2: 20us
3: 30us</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pwc_aon_otp</name>
              <description>OTP power cut enable for core power, high active.
1:enable 
0:disable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ISO</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000003</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>iso_aon_otp</name>
              <description>1: ISO signals from otp core power domain
0: Release</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>iso_lpon</name>
              <description>When LDO core power on, PD_LPON is on.
1: ISO signal of LPON power domain
0: Release</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FEN</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>fen_lpon</name>
              <description>LS global reset
1: Enable LS function
0: Disable</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_otpc</name>
              <description>1: Enable OTP function
0: Disable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_sic</name>
              <description>1: enable SIC function
0: reset</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_sdm32k</name>
              <description>1: Enable 32.768K SDM function
0: Disable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_rtc</name>
              <description>1: Enable RTC function
0: Disable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_atim</name>
              <description>1: Enable AON timer
0: Reset AON timer
Note: AON timer starts to run only when event happens.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_iwdg</name>
              <description>1: Enable IWDG by HW autoload.
Once enabled, IWDG can't be disabled unless por asserts.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_bor</name>
              <description>Enable bor reset function, default is 0 when power on</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CLK</name>
          <addressOffset>0x0000000C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000005</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>cke_otpc</name>
              <description>1: Enable OTPC clock
0: Disable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_sic</name>
              <description>1: Enable SIC clock
0: Disable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_sdm32k</name>
              <description>1: Enable 32.768K SDM module's clock
0: Disable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_rtc</name>
              <description>1: Enable RTC clock
0: Disable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_atim</name>
              <description>1: Enable AON timer clock
0: Disable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_aon</name>
              <description>if 0, AON clock will be gated except PMC and this register.
Note: AON clock can't be shutdown as analog need.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CKSL</name>
          <addressOffset>0x00000010</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>cksl_32k</name>
              <description>This field is used to select 32K clock.
00/01: SDM32K
10: Crystal 32K
11: External 32K</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cksl_sdm32K</name>
              <description>sdm 128 clock select , this must be fixed after initial selection.
0:osc128
1:xtal lps 312.5K</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cksl_otpc</name>
              <description>This field is used to select OTPC clk
0: OSC4M
1: XLAL</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>otpc_flg</name>
              <description>This field is used to indicate OTP autoload field
1: ls 
0:aon</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BOOT_REASON_HW</name>
          <addressOffset>0x00000020</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>rstf_hifi_warm2peri</name>
              <description>This bit will be set to 1 when hifi warm  resets the system. Write 1 to clear.</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>rstf_kr4_warm2peri</name>
              <description>This bit will be set to 1 when kr4 warm  resets the system. Write 1 to clear.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>rstf_km4_warm2peri</name>
              <description>This bit will be set to 1 when km4 warm  resets the system. Write 1 to clear.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>rstf_wdg4</name>
              <description>This bit will be set to 1 when WDG resets the system. Write 1 to clear.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>rstf_wdg3</name>
              <description>This bit will be set to 1 when WDG resets the system. Write 1 to clear.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>rstf_wdg2</name>
              <description>This bit will be set to 1 when WDG resets the system. Write 1 to clear.</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>rstf_wdg1</name>
              <description>This bit will be set to 1 when WDG resets the system. Write 1 to clear.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>rstf_iwdg</name>
              <description>This bit will be set to 1 when WDG resets the system. Write 1 to clear.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>rstf_hifi_sys</name>
              <description>This bit will be set to 1 when HIFI resets the system. Write 1 to clear.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>rstf_kr4_sys</name>
              <description>This bit will be set to 1 when KR4 resets the system. Write 1 to clear.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>rstf_km4_sys</name>
              <description>This bit will be set to 1 when KM4 resets the system. Write 1 to clear.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>rstf_dslp</name>
              <description>This is boot reason for dslp exit, clear by SW write to 1.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>rstf_bor</name>
              <description>This bit will be set to 1 when BOR resets the system. Write 1 to clear.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>rstf_thm</name>
              <description>This bit will be set to 1 when THERMAL resets the system. Write 1 to clear.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AON_WAK_EVT</name>
          <addressOffset>0x00000024</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>rtc_isr_evt</name>
              <description>RTC interrupt  wake event occurs.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>gpio_pin1_wakdet_evt</name>
              <description>Wake event for wake pin1
1: wake event detected
0: no wake event
Note: aon gpio only used to wake hw pmc, to interrupt SW, it must enable GPIO interrupt in LP GPIO IP, and the poly must be same as AON GPIO setting.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>gpio_pin0_wakdet_evt</name>
              <description>Wake event for wake pin0
1: wake event detected
0: no wake event
Note: aon gpio only used to wake hw pmc, to interrupt SW, it must enable GPIO interrupt in LP GPIO IP, and the poly must be same as AON GPIO setting.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>aon_tim_isr_evt</name>
              <description>AON timer interrupt event occurs.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bor_isr_evt</name>
              <description>bor interrupt event occurs.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>chipen_lp_isr_evt</name>
              <description>Chipen long press interrupt event occurs.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>chipen_sp_isr_evt</name>
              <description>Chipen short press interrupt event occurs.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TIM_CNT</name>
          <addressOffset>0x00000030</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>aon_tim_cnt_cur</name>
              <description>Aon timer current count value.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TIM_SET</name>
          <addressOffset>0x00000034</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>aon_tim_cnt_set</name>
              <description>Set aon time a countdown value, when timer count down, it will trigger a aon_tim event.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TIM_IER</name>
          <addressOffset>0x00000038</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>AON_TIM_IE</name>
              <description>Timer interrupt enable
0:disable
1:enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TIM_ISR</name>
          <addressOffset>0x0000003C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>AON_TIM_ISR</name>
              <description>Timer interrupt status
0:no interrupt
1:interrupt occurs</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_GPIO_CTRL</name>
          <addressOffset>0x00000040</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00010000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>GPIO_WAKDET_POLY</name>
              <description>Wake pin polarity
0: low active
1: high active
bit1: wake pin1 polarity
bit0: wake pin0 polarity
Note: once a wake pin is set, the pads PU/PD will be force by this poly value, and soft config have no use.</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO_DBNC_CYC</name>
              <description>The GPIO signal will be filtered by the number of debounce cycles of specified in this register. (100k/128k)</description>
              <bitRange>[22:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO_DBNC_FEN</name>
              <description>1: Enable gpio debouncer function
0: Disable
Default disable for simualtion issue</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO_WAKE_FEN</name>
              <description>1: Enable wake pin function
0: Disable
Every GPIO has its own enable. 
When aon pmc is not in DSLP, wake pins will not effect PMC state althrougth this bit is set.</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_GPIO_WAKE_ISR</name>
          <addressOffset>0x00000044</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>GPIO_PIN1_WAKE_ISR</name>
              <description>Wake pin1 interrupt status
0:no interrupt
1:interrupt occurs</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>GPIO_PIN0_WAKE_ISR</name>
              <description>Wake pin0 interrupt status
0:no interrupt
1:interrupt occurs</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CHIPEN_CTRL</name>
          <addressOffset>0x00000050</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>chipen_st</name>
              <description>CHIP_EN pin status
0: logic '0' on CHIP_EN pin
1: logic '1' on CHIP_EN pin</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>chipen_intr_mode</name>
              <description>Chipen operation mode.
00: reset mode. When chipen pad low, hw will reset all chip
01: interrup mode. It will enable short/long press function.
1X: pulse reset mode. The transation from other value to 2'd2 will gen a posedge to set RST_PULSE_EN in HV domain.
Once in pulse reset mode , this field can't be modified again , and always read out 2'b11</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>chipen_tack</name>
              <description>00: 50ms
01: 100ms
10: 200ms
11: 400ms</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>chipen_tlp</name>
              <description>000: 1000ms
001: 1500ms
010: 2000ms
011: 2500ms
100: 3000ms
101: 3500ms
110: 4000ms
111: 4500ms</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>chipen_tsp</name>
              <description>000: 0ms
001: 50ms
010: 100ms
011: 150ms
100: 200ms
101: 250ms
110: 300ms
111: 350ms</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>chipen_tdbc</name>
              <description>000: 0us
001: 100us
010: 500us
011: 1000us
100: 2000us
101: 4000us
110: 8000us
111: 16000us</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CHIPEN_ISR</name>
          <addressOffset>0x00000054</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CHIPEN_LP_ISR</name>
              <description>chipen long press interrupt status
0:no interrupt
1:interrupt occurs</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CHIPEN_SP_ISR</name>
              <description>chipen short press interrupt status
0:no interrupt
1:interrupt occurs</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BOR_CTRL</name>
          <addressOffset>0x00000058</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bor_intr_mode</name>
              <description>BOR operation mode.
0: reset mode. When analog detect bor, hw will trigger a bor reset.
1: interrup mode. It will raise an interrup first. If this bit set to 0, then trigger a bor reset.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bor_tdbc</name>
              <description>000: 0us
001: 100us
010: 500us
011: 1000us
100: 2000us
101: 4000us
110: 8000us
111: 16000us</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BOR_ISR</name>
          <addressOffset>0x0000005C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BOR_ISR</name>
              <description>BOR interrupt status
0:no interrupt
1:interrupt occurs</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PMC_CTRL</name>
          <addressOffset>0x00000060</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000028</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PAD_PUPD_SLP_MODE</name>
              <description>Pad pu/pd param selection
1: HW select pu/pd slp param for PAD
0: HW select pu/pd active param for PAD
HW will auto-set this bit when enter or exit DSLP , SW can set for debug also .</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PMC_STL_CLDO</name>
              <description>wait time for core LDO stable
0: 8*T  (T = 10us)
1: 16*T
2: 32*T
3: 64*T</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PMC_STL_SWR</name>
              <description>wait time for SWR stable
0: 64*T  (T = 10us)
1: 128*T
2: 256*T
3: 512*T</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PMC_OPT</name>
          <addressOffset>0x00000064</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000030</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>snooze_pdck</name>
              <description>Select xtal auto pdck function for sdm calibration use xtal lps mode
1:Enable
0:Disable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rtc_xtal_mode</name>
              <description>Select xtal mode when xtal used for sdm calibration.
1: Normal
0: LPS</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PST_WAIT_XTAL</name>
              <description>1: When POF , polling xtal invalid signal and then run forward
0: not polling xtal invalid</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PST_DSLP_ERCK</name>
              <description>1: Enable 100K clock for AON register access when PMC enter deep-sleep mode 
0: Disable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PST_DSLP_LDHM</name>
              <description>0: Enable AON LDO enter into sleep mode when  PMC enter deep-sleep mode
1: Disable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BOOT_CFG</name>
          <addressOffset>0x00000080</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DSLP_RETENTION_RAM_PATCH</name>
              <description>Deepsleep retention RAM patch</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RSVD_FOR_SW1</name>
          <addressOffset>0x00000084</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PMC_PATCH_GRP0_1</name>
          <addressOffset>0x00000090</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>INSTR1_G0_5_0</name>
              <description>Instruction1 of AON PMC patch group0</description>
              <bitRange>[31:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INSTR0_G0</name>
              <description>Instruction0 of AON PMC patch group0</description>
              <bitRange>[25:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SADDR_G0</name>
              <description>Start address of the first instruction of AON PMC patch group0</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PMC_PATCH_GRP0_2</name>
          <addressOffset>0x00000094</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>INSTR2_G0_17_0</name>
              <description>Instruction2 of AON PMC patch group0</description>
              <bitRange>[29:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INSTR1_G0_17_6</name>
              <description>Instruction1 of AON PMC patch group0</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PMC_PATCH_GRP1_1</name>
          <addressOffset>0x00000098</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>INSTR1_G1_5_0</name>
              <description>Instruction1 of AON PMC patch group1</description>
              <bitRange>[31:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INSTR0_G1</name>
              <description>Instruction0 of AON PMC patch group1</description>
              <bitRange>[25:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SADDR_G1</name>
              <description>Start address of the first instruction of AON PMC patch group1</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PMC_PATCH_GRP1_2</name>
          <addressOffset>0x0000009C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>INSTR2_G1_17_0</name>
              <description>Instruction2 of AON PMC patch group1</description>
              <bitRange>[29:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INSTR1_G1_17_6</name>
              <description>Instruction1 of AON PMC patch group1</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PMC_PATCH_GRP2_1</name>
          <addressOffset>0x000000A0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>INSTR1_G2_5_0</name>
              <description>Instruction1 of AON PMC patch group2</description>
              <bitRange>[31:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INSTR0_G2</name>
              <description>Instruction0 of AON PMC patch group2</description>
              <bitRange>[25:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SADDR_G2</name>
              <description>Start address of the first instruction of AON PMC patch group2</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PMC_PATCH_GRP2_2</name>
          <addressOffset>0x000000A4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>INSTR2_G2_17_0</name>
              <description>Instruction2 of AON PMC patch group2</description>
              <bitRange>[29:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INSTR1_G2_17_6</name>
              <description>Instruction1 of AON PMC patch group2</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PMC_ADDR01</name>
          <addressOffset>0x000000B0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00040141</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pmc_patch_addr0</name>
              <description>Have used for LPON patch</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pmc_patch_addr1</name>
              <description>Have used for LPON patch</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PMC_ADDR23</name>
          <addressOffset>0x000000B4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0000000A</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pmc_patch_addr2</name>
              <description>Have used for LPON patch</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pmc_patch_addr3</name>
              <description>HW used only , these are for pmc patch</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PMC_ADDR45</name>
          <addressOffset>0x000000B8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pmc_patch_addr4</name>
              <description>HW used only , these are for pmc patch</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pmc_patch_addr5</name>
              <description>HW used only , these are for pmc patch</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PMC_ADDR67</name>
          <addressOffset>0x000000BC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pmc_patch_addr6</name>
              <description>HW used only , these are for pmc patch</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pmc_patch_addr7</name>
              <description>HW used only , these are for pmc patch</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SYSRST_MSK</name>
          <addressOffset>0x000000D0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00010018</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>sysrst_msk_lpon</name>
              <description>LS global reset
1: mask LS reset when sys reset happen 
0: reset by sys reset</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_otp</name>
              <description>1: mask OTP reset when sys reset happen 
0: reset by sys reset</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_sdm32k</name>
              <description>1: mask 32.768K SDM reset when sys reset happen 
0: reset by sys reset</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_rtc</name>
              <description>1: mask RTC reset when sys reset happen 
0: reset by sys reset</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_atim</name>
              <description>1: mask AON timer
0: reset by sys reset OR warm reset
Note: AON timer starts to run only when event happens.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_iwdg</name>
              <description>1: mask AON IWDG reset
0: reset by sys reset OR warm reset</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AON_BACKUP0</name>
          <addressOffset>0x000000E0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AON_BACKUP1</name>
          <addressOffset>0x000000E4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AON_BACKUP2</name>
          <addressOffset>0x000000E8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AON_BACKUP3</name>
          <addressOffset>0x000000EC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BOUNDARY_CHK</name>
          <addressOffset>0x000000F0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xBDC00512</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>HW used only .
Used for access boundary check, AON is 256B which is 000-FF</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_POWER_INFO</name>
          <addressOffset>0x000000F4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>iso_soc</name>
              <description>iso control of HSOC power domain</description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>pow_wlafe_adc_ldo</name>
              <description>1:Power on WLAFE adc ldo
0:Power off WLAFE adc ldo</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>pow_wlafe_dac_ldo</name>
              <description>1:Power on WLAFE dac ldo
0:Power off WLAFE dac ldo</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>pow_wlafe_pll_ldo</name>
              <description>1:Power on WLAFE power cut and pll ldo
0:Power off WLAFE power cut and pll ldo</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>pow_aux_mbias</name>
              <description>1:power on AUX BG mbias
0:power off AUX BG mbias</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>pow_aux_bg_i</name>
              <description>1:power on AUX BG current
0:power off AUX BG current</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>pow_aux_bg</name>
              <description>1:power on AUX BG
0:power off AUX BG</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>pow_xtal_lps</name>
              <description>1: Enable XTAL LPS
0: Disable XTAL LPS</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>pow_xtal</name>
              <description>1: Enable XTAL
0: Disable XTAL</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>pow_xtal_bg</name>
              <description>1: Enable XTAL Bandgap
0: Disable XTAL Bandgap</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>pow_wlrfc</name>
              <description>1: Enable WLRFC power cut
0: Disable WLRFC power cut</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>pow_4mosc</name>
              <description>1: Enable OSC4M
0: Disable OSC4M</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>pow_bt</name>
              <description>1: Enable BT power cut
0: Disable BT power cut</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>pow_soc</name>
              <description>1: Enable HSOC power cut
0: Disable HSOC power cut</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>pow_18v_ldo</name>
              <description>0: enable 1.8V LDO
1: disable 1.8V LDO</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>pow_core_ldo</name>
              <description>0: enable core LDO
1: disable core LDO</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>swr_pwm</name>
              <description>1: SWR PWM mode
0: SWR PFM mode</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>pow_swr</name>
              <description>1: enable SWR
0: disable SWR</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>pow_aon_otp</name>
              <description>1: Enable AON OTP power cut
0: Disable AON OTP power cut</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>aon_ldo_sleep</name>
              <description>1: AON LDO sleep mode
0: AON LDO active mode</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DUMMY_AIP_CTRL0</name>
          <addressOffset>0x000000F8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0000FFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>aip_ctrl_rsvd0</name>
              <description>reserved for aip control
bit16 is used to turn on/off the path from GPIOC8 to REGU, which is used for vol_config trap, 0 indicate on, 1indicate off</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DUMMY_AIP_INFO0</name>
          <addressOffset>0x000000FC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>aip_info_rsvd0</name>
              <description>reserved for aip info indication</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>lp_sys</name>
      <baseAddress>0x4100C200</baseAddress>
      <size>0x00000100</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00000100</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>REG_PWC</name>
          <addressOffset>0x00000000</addressOffset>
          <size>16</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>pwc_bt</name>
              <description>This is BT function total power cut control 
1: Enable BT power cut
0: Disable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pow_on_soc</name>
              <description>1:SYS PMC request to enable HP SOC power cut and diable ISO
0: SYS PMC request to disable HP SOC power cut and enable ISO</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ISO</name>
          <addressOffset>0x00000002</addressOffset>
          <size>16</size>
          <description></description>
          <resetValue>0x00000002</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>iso_bt</name>
              <description>1: isolate signals from PD_LP_BT to other power domain
0: release iso</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>iso_hp_soc</name>
              <description>isolate signals from PD_HP_SOC to other power domain</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FEN_GRP0</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00001000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>fen_tim14</name>
              <description>1: enable TIMER 14 function
0: disable</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_tim13</name>
              <description>1: enable TIMER 13 function
0: disable</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_tim12</name>
              <description>1: enable TIMER 12 function
0: disable</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_tim11</name>
              <description>1: enable TIMER 11 function
0: disable</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_tim10</name>
              <description>1: enable TIMER 10 function
0: disable</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_tim_pwm</name>
              <description>1: enable PWM TIMER function
0: disable</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_tim_pulse</name>
              <description>1: enable PULSE TIMER function
0: disable</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_ac_aip</name>
              <description>1: enable audio codec analog ip active function, need level shift to 3.3V for audio aip
0: disable</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_sport1</name>
              <description>1: enable SPORT1 function
0: disable</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_sport0</name>
              <description>1: enable SPORT0 function
0: disable</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_ac</name>
              <description>1: enable audio codec digital ip active function
0: disable</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_trng</name>
              <description>1: enable TRNG function
0: disable</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_ecdsa</name>
              <description>1: enable ecdsa function
0: disable</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_ledc</name>
              <description>1: enable LEDC function
0: disable</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_spi1</name>
              <description>1: enable SPI1 function
0: disable</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_spi0</name>
              <description>1: enable SPI0 function
0: disable</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_psram</name>
              <description>1: enable PSRAM function
0: disable</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_aip</name>
              <description>AIP control function enable
1: enable
0: disable</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_sce</name>
              <description>Flash sce function enable
1: enable sce
0: disable</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_spic</name>
              <description>Flash spic function enable
1: enable flash
0: disable flash</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_sha</name>
              <description>1: enable IPSEC SHA  function
0: disable</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_aes</name>
              <description>1: enable IPSEC AES  function
0: disable</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_lx</name>
              <description>1: enable LX1 system function
0: disable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_gdma</name>
              <description>1: enable GDMA function
0: disable</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_ipc</name>
              <description>1: enable IPC function
0: reset</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_km4</name>
              <description>1: enable KM4
0: reset</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_kr4</name>
              <description>1: enable KR4
0: reset</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_plfm</name>
              <description>1: enable platform
0: reset</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_hsoc</name>
              <description>1: enable hs soc sytem
0: reset all hs soc sytem , include km4/km0/plfm/hifi</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FEN_GRP1</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x02100000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>fen_zgb</name>
              <description>zigbee function enable
1: enable 
0: disable</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_thm</name>
              <description>thermal function enable
1: enable 
0: disable</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_ctc</name>
              <description>captouch  function enable
1: enable
0: disable</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_adc</name>
              <description>lp adc  function enable
1: enable
0: disable</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_hifi</name>
              <description>HIFI core function enable
1: enable
0: disable</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_dtim</name>
              <description>Debug timer function enable
1: enable
0: disable</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_tim0</name>
              <description>Basic Timer0-7 function enable
1: enable
0: disable</description>
              <bitRange>[19:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_i2c1</name>
              <description>I2C1  function enable
1: enable
0: disable</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_i2c0</name>
              <description>I2C0  function enable
1: enable
0: disable</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_uart</name>
              <description>Uart function enable (Note uart3 if for BT)
1: enable
0: disable</description>
              <bitRange>[9:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_loguart</name>
              <description>Uartlog function enable
1: enable
0: disable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_gpio</name>
              <description>SGPIO  function enable
1: enable
0: disable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_wlafe_ctrl</name>
              <description>WL RFAFE control function enable
1: enable
0: disable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_bton</name>
              <description>BTON function enable
1: enable
0: disable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fen_wlon</name>
              <description>WLON  function enable
1: enable
0: disable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CKE_GRP0</name>
          <addressOffset>0x0000000C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>cke_tim14</name>
              <description>1: Enable TIMER 14 clock
0: Disable</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_tim13</name>
              <description>1: Enable TIMER 13 clock
0: Disable</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_tim12</name>
              <description>1: Enable TIMER 12 clock
0: Disable</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_tim11</name>
              <description>1: Enable TIMER 11 clock
0: Disable</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_tim10</name>
              <description>1: Enable TIMER 10 clock
0: Disable</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_tim_pwm</name>
              <description>1: Enable PWM TIMER clock
0: Disable</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_tim_pulse</name>
              <description>1: Enable PULSE TIMER clock
0: Disable</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_sport1</name>
              <description>1: Enable sport1 clock
0: Disable</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_sport0</name>
              <description>1: Enable sport0 clock
0: Disable</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_ac</name>
              <description>1: Enable audio codec clock
0: Disable</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_trng</name>
              <description>1: Enable trng bus clock
0: Disable</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_ecdsa</name>
              <description>1: Enable ecdsa engine clock
0: Disable</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_ledc</name>
              <description>1: Enable ledc bus clock
0: Disable</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_spi1</name>
              <description>1: Enable SPI1 clock
0: Disable</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_spi0</name>
              <description>1: Enable SPI0 clock
0: Disable</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_psram</name>
              <description>1: Enable PSRAM bus clock
0: Disable</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_spic</name>
              <description>1: Enable SPIC source clock</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_sha</name>
              <description>1: Enable ipsec SHA clock
0: Disable</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_aes</name>
              <description>1: Enable ipsec AES clock
0: Disable</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_lx</name>
              <description>1: Enable lx1 bus clock
0: Disable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_gdma</name>
              <description>1: Enable GDMA0 clock
0: Disable</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_ipc</name>
              <description>1: Enable IPC clock
0: Disable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_km4</name>
              <description>1: Enable KM4 clock
0: Disable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_kr4</name>
              <description>1: Enable KR4 clock
0: Disable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_plfm</name>
              <description>1: Enable platform clock
0: Disable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_lpon</name>
              <description>1.Enable lpon clk
0: Disable
Note: this bit is controlled HW PMC, SW shall not modify</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CKE_GRP1</name>
          <addressOffset>0x00000010</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x02300000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>cke_wmac</name>
              <description>1: Enable WMAC AXI and AHB bus clock
0: Disable</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_thm</name>
              <description>1: Enable LS thm clock
0: Disable</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_ctc</name>
              <description>1: Enable Captouch clock
0: Disable</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_adc</name>
              <description>1: Enable LS ADC clock
0: Disable</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_hifi</name>
              <description>1: Enable HIFI core clock
0: Disable</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_pll</name>
              <description>1: Enable PLL dividor for KM4/KR4/SRAM
0: Disable
when modify KM4/KR4/SRAM dividor param, need set this bit 0 and 1 before switch KM4/KR4/SRAM to PLL  from XTAL/OSC4M</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_dtim</name>
              <description>1: Enable LS dtim clk
0: Disable</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_tim0</name>
              <description>LS basic Timer0-7 clk enable
0: Disable</description>
              <bitRange>[19:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_i2c1</name>
              <description>1: Enable HS I2C0 clock
0: Disable</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_i2c0</name>
              <description>1: Enable LS I2C clock
0: Disable</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_uart</name>
              <description>1: Enable Uart clock 
0: Disable</description>
              <bitRange>[9:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_loguart</name>
              <description>1: Enable Uartlog clock
0: Disable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_gpio</name>
              <description>1: Enable GPIO clock
0: Disable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_zgb</name>
              <description>1: enable zigbee clock
0: Disable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_bton</name>
              <description>1: Enable BTON clock
0: Disable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_wlon</name>
              <description>1: Enable WLON clock
0: Disable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CKE_GRP2</name>
          <addressOffset>0x00000014</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000700</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>cke_xtal_grp</name>
              <description>XTAL 40M clock used for different use , when neither func used 
[0]: LP system
[1]: 40M peri
[2]: 2M peri
Note : This field is SW used, HW won't modify</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cke_osc4m_grp</name>
              <description>OSC4M used for different use , when neither func used , osc4m can be disabled .
0: LP system 4M 
1: OSC2M peri
2: WL/BT common
3: WL ana clock
4: BT ana clock
5: RSVD
Note : This field is SW used, HW won't modify</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CKSL_GRP0</name>
          <addressOffset>0x00000018</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00060400</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>cksl_loguart</name>
              <description>Select loguart trx clock 
0: clock is xtal(source is dicided by cksl_loguart_xtal)
1: clock is osc2M</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cksl_uart</name>
              <description>Select uart rx clock for every uart . cksl_uart[n](n=0,1,2,3)
0: rx clock is xtal(source is dicided by cksl_uart_xtal)
1: rx clock is osc2M</description>
              <bitRange>[28:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cksl_loguart_xtal</name>
              <description>loguart_xtal clk select
0:clk_xtal_digi  
1:clk_xtal_digi_div2</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cksl_uart_xtal</name>
              <description>uart xtal clk select, cksl_uart_xtal[n](n=0,1,2,3)
0: clk_xtal_digi  
1:clk_xtal_digi_div2</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cksl_sport</name>
              <description>sport clock selection 
0: equal to audio codec main clock (40M)
1: from cpu/dsp pll , after  pll selection(cksl_i2s_pll)</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cksl_ac</name>
              <description>audio codec main clock selection 
0: cpupll divided 40M
1: xtal 40M</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cksl_i2s_pll</name>
              <description>source pll slection for sport clk
0: from cpu pll divider output 
1: from dsp pll divider output</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cksl_vadm</name>
              <description>vad share memory clock select . Note, it must first change this bit to 1,and then shutdown hs plfm . When wakeup , it must first enable hs plfm , finally set this bit to 0 .
0: used by hs plfm clock
1: used by vad buffer ctrol</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cksl_ctc_core</name>
              <description>CTC core clock selection
0: 131k
1: xtal2m divider Clock</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cksl_adc2m</name>
              <description>lp adc 2m clk selection
0:  divider from osc4m
1:  divider from xtal</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cksl_ctc</name>
              <description>CTC REG clock selection
0: 131k
1: lbus clock</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cksl_adc</name>
              <description>ADC INT clock selection
0: lbus clock
1: OSC2M</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cksl_gpio</name>
              <description>GPIO INT clock selecton:
0: lbus clock
1: 32.768K clock from SDM</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cksl_psram</name>
              <description>psram phy clock seleck 
cksl_psram[0]: 0--source clk is from cpu pll, 1--source clk is from dsp pll
cksl_psram[1]: 0--final clk is from cpu/dsp pll divider  1: lbus clk
10/11: from lbus clock
00: from cpu pll divider output 
01: from dsp pll divider output</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cksl_spic</name>
              <description>SPIC clock seleck 
10/11: from lbus clock
00: from dsp pll divider output 
01: from cpu pll divider output</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cksl_hifi</name>
              <description>HIFI core/bus clock seletion
1'b1: lbus clk
1'b0:  from dsp pll divider</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cksl_plfm</name>
              <description>KM4/KR4/HBUS/SRAM clock seletion, they are sync except HBUS
00/01: from lbus clock
10: from cpu pll divider output 
11: from dsp pll divider output</description>
              <bitRange>[2:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cksl_lbus</name>
              <description>lbus clk select
0: osc4m  1:xtal</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CKSL_GRP1</name>
          <addressOffset>0x0000001C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>cksl_xtal</name>
              <description>xtal selection, Default=40MHz
0000: 40MHz
0001: 25MHz
0010: 13MHz
0011: 19.2MHz
0100: 20MHz
0101: 26MHz
0110: 38.4MHz
0111: 17.664MHz
1000: 16MHz
1001: 14.138MHz
1010: 12MHz
1011: 52MHz
1100: 48MHz
1101: 27MHz
1110: 24MHz
1111: none</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CKD_GRP0</name>
          <addressOffset>0x00000020</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x51531033</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ckd_gdma_axi</name>
              <description>gdma_axi clock divider, it is based on cpu/dsp pll
0~1: not valid
2: div3
3: div4
4: div5
5: div6
other: divider by this value + 1</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ckd_psram</name>
              <description>psram clock divider, it is based on cpu/dsp pll
0: div1
1: div2
2: div3
3/other: divider by this value + 1</description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ckd_hbus</name>
              <description>hbus clock divider, it is based on cpu/dsp pll
0~1: not valid
2: div3
3: div4
4: div5
other: divider by this value + 1</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ckd_sram</name>
              <description>sram clock divider, it is based on sys pll
0 : not valid
1: div2
2: div3
3/other: divider by this value + 1</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ckd_hifi_bus</name>
              <description>HIFI bus  clock divider, it is based on ckd_hifi_core
0: div1
1: div2
2: div3
3/other: divider by this value + 1</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ckd_hifi_core</name>
              <description>HIFI core clock divider, it is based on cpu/dsp pll
0: div1
1: div2
2: div3
3/other: divider by this value + 1</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ckd_kr4</name>
              <description>KR4 clock divider, it is based on cpu/dsp pll
0: div1
1: div2
2: div3
3/other: divider by this value + 1</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ckd_km4</name>
              <description>KM4 clock divider, it is based on cpu/dsp pll
0: div1
1: div2
2: div3
3/other: divider by this value + 1</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CKD_GRP1</name>
          <addressOffset>0x00000024</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0FA0F55E</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ckd_xtal_2m</name>
              <description>Output divided clock frequency for UART:
BIT_LSYS_UART_XTAL_DIV_FREQ/1000  (MHz)</description>
              <bitRange>[31:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ckd_xtal_2m_en</name>
              <description>1: enable XTAL division circuit for UART</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ckd_xtal2m_ctc</name>
              <description>xtal 2m divider for captouch core 
0: no valid
1: div2
2: div3
3/other: divider by this value + 1</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ckd_i2s_pll</name>
              <description>is2 pll  divider,  it is based on cpu/dsp pll output
0~2 : not valid
3: div4
4: div5
other: divider by this value + 1</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ckd_ecdsa</name>
              <description>ECDSA clock divider,  it is based on cpu pll output
0~1: not valid
2: div3
3/other: divider by this value + 1</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ckd_ac</name>
              <description>audio main clock divider, it is based on cpu pll output
0~6 : not valid
7: div8
8: div9
other: divider by this value + 1</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SYSTEM_CFG0</name>
          <addressOffset>0x00000028</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_mode</name>
              <description>Indicate PKG_ENG_SEL pad value
0: normal package; 1: engineering mode</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>eng_mode_aon</name>
              <description>Wrtie 1 to set aon enter eng_mode</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bd_opt1</name>
              <description>Bonding option-ext_clk</description>
              <bitRange>[29:29]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bd_opt0</name>
              <description>Bonding option-ext_rstb</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ptrp_uartdl</name>
              <description>Power on trapped uart download value
0: Normal boot
1: uartdownload boot
TODO: it may be overwrited by efuse autoload</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ptrp_tmode</name>
              <description>0: normal mode
1: test mode</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ptrp_otpbyp</name>
              <description>1: force efuse autoload fail</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>hw_chip_type</name>
              <description>Chip type
00: ASIC
01: FPGA
10: PALADIUM
11: RTL_SIM</description>
              <bitRange>[9:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>hw_cpu_id</name>
              <description>Different CPU reading this register will return different value.
If read by KR4: return 0
If read by KM4: return 1
if read by HIFI5: return 2</description>
              <bitRange>[7:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>hw_ver_id</name>
              <description>Vendor ID
Download FW version
00: UMC
01: SMIC
10: TSMC</description>
              <bitRange>[5:4]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SYSTEM_CFG1</name>
          <addressOffset>0x0000002C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00002002</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ptrp_icfg</name>
              <description>Trapped ICFG data value
0: normall mode
XXXX: the other mode (Test Mode)</description>
              <bitRange>[31:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>icfg_sw</name>
              <description>icfg configured by SIC/SW</description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>icfg_sel</name>
              <description>If 1, using icfg_sw to replace trapped icfg value.</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dummy</name>
              <description></description>
              <bitRange>[19:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>plic_timer_cken</name>
              <description>clock enable of kr4 plic timer</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>syspll_clkrdy</name>
              <description>System pll ready flag
1: ready</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>osc32k_clkrdy</name>
              <description>OSC 128k ready flag
1: ready</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>xtal32k_clkrdy</name>
              <description>XTAL 32k ready flag
1: ready</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>xtal_clkrdy</name>
              <description>XTAL clock stable
1: Clock Stable</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>kr4_is_np</name>
              <description>1: kr4 is Network Processor, and is the LPS controller
0: km4 is Network Processor, and is the LPS controller</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PLAT_CTRL</name>
          <addressOffset>0x00000030</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00100248</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>KM4_SEV_IN</name>
              <description>write the bit to 1 will trig sev to km4</description>
              <bitRange>[28:28]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>SPI1_MST</name>
              <description>1: SPI1 used as master
0: SPI1 used as slaver</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI0_MST</name>
              <description>1: SPI0 used as master
0: SPI0 used as slaver</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPIC_SPDUP_SIM</name>
              <description>1: SPIC will wait 256 spic_clk cycles before ready
0: SPIC will wait 2^16 spic_clk  cycles before ready</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>psram_spdupsim</name>
              <description>psramc simulatin speedup enable</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>psram_spic_big_endian</name>
              <description>1: big endian
0: little endian</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>gdma0_ccm</name>
              <description>GDMA0 clock control mode</description>
              <bitRange>[22:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLFM_MST0_SEL</name>
              <description>platfrom m0 select
0: KR4
1: OTPC</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SHARE_BT_MEM</name>
              <description>1: Enable KM4 to share BT memory</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SHARE_WL_MEM</name>
              <description>1: Enable KM4 to share WL memory</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>KR4_RETENTION_MODE</name>
              <description>1: Enable, when KR4 reset, cache will not be cleared 
0: Disable, when KR4 reset, cache will be cleared by HW</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>KM4_RETENTION_MODE</name>
              <description>1: Enable, when KM4 reset, cache will not be cleared 
0: Disable, when KM4 reset, cache will be cleared by HW</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>KR4_L2MEM_EN</name>
              <description>reset value of  l2mem enable</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>hs_sram2_rd_weight</name>
              <description>Excuted read command number continuously if both read and write command reached</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>hs_sram1_rd_weight</name>
              <description>Excuted read command number continuously if both read and write command reached</description>
              <bitRange>[7:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>hs_sram0_rd_weight</name>
              <description>Excuted read command number continuously if both read and write command reached</description>
              <bitRange>[4:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HUK_PROT</name>
              <description>0: only cpu can read HUK key
1: no one can read HUK key
This bit will be latch to high when it was write to 1 until reset again .</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PLAT_STATUS</name>
          <addressOffset>0x00000034</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>init_xo_range_en</name>
              <description></description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>kr4_dbg_mode</name>
              <description>KR4 debug status</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>kr4_slp_mode</name>
              <description>KR4 sleep status</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>km4_dbgrestarted_m</name>
              <description>KM4 debug restart status</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>km4_dbg_mode</name>
              <description>KM4 halt status</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>km4_lockup_m</name>
              <description>KM4 lockup status</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>km4_slp_mode</name>
              <description>KM4 sleep status</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PLAT_INFO</name>
          <addressOffset>0x00000038</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>syson_ioerr_info</name>
              <description>indicate information of platform master non-secure access the masked syson reg
bit2~0: master id, bit12~3: low bit11~2 address of syson reg</description>
              <bitRange>[13:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>isr_syson_ioerr</name>
              <description>indicate error that platform master non-secure access the masked syson reg</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KM4_XO_CTRL0</name>
          <addressOffset>0x00000040</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>init_xo_base</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KM4_XO_CTRL1</name>
          <addressOffset>0x00000044</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>init_xo_top</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_HIFI_CTRL0</name>
          <addressOffset>0x00000048</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>hifi_warmrst_req</name>
              <description>hifi warm reset request, high active</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>hifi_nmi_intr</name>
              <description>hifi edge-triggered non-maskable interrupt, one pulse</description>
              <bitRange>[14:14]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>hifi_share_mem</name>
              <description>0:D ram don't share memory to DTCM
1:D ram share 128K memory to DTCM
2:D ram share 256K memory to DTCM, 
3 is rsvd</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>hifi_pdebug_en</name>
              <description>traceport debug enable, high active</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>hifi_ocd_halt_on_reset</name>
              <description>on-chip debug mode(OCD) enable, high active</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>hifi_run_stall</name>
              <description>When asserted,  stall the processor and shut off much of the clock tree</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>hifi_stat_vector_sel</name>
              <description>When asserted,  select External Reset Vector allows the position of the reset</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>hifi_presetn</name>
              <description>APB reset, low active</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>hifi_dresetn</name>
              <description>debug reset,low active</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>hifi_bresetn</name>
              <description>core reset, low active</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_HIFI_CTRL1</name>
          <addressOffset>0x0000004C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>hifi_alt_reset_vec</name>
              <description>External Reset Vector</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_HIFI_STATUS</name>
          <addressOffset>0x00000050</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>hifi_dbg_status</name>
              <description>trace port debug status</description>
              <bitRange>[21:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>hifi_dbg_data</name>
              <description>trace port debug data</description>
              <bitRange>[12:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>hifi_dbg_mode</name>
              <description>core is on ocd mode but not maskable by SW</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>hifi_ocd_mode</name>
              <description>core is on ocd mode</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>hifi_wait_mode</name>
              <description>core is on wait for interrupt mode</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_HIFI_DBG_PC</name>
          <addressOffset>0x00000054</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>hifi_dbg_pc</name>
              <description>trace program counter</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_HIFI_DBG_INST</name>
          <addressOffset>0x00000058</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>hifi_dbg_inst</name>
              <description>Instruction information</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SPIC_CTRL</name>
          <addressOffset>0x0000005C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000100</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DPHY_RD_DELAY_CNT</name>
              <description>spic_dphy output dealy cnt,
when set &lt; 3, output data will occur at fourth or fifth axi clock from the rising edge of spi_rx_data_en; when set &gt;= 3, data  will occur after  DPHY_RD_DELAY_CNT + 2 axi clock from the rising edge of spi_rx_data_en</description>
              <bitRange>[20:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DPHY_EN</name>
              <description>when set, enable spic_dphy function to read data from flash</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FLASH_CAL_EN</name>
              <description>Flash calibration enable
1: delay flash sout for calibration
0: bypass flash sout to spic</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FLASH_DIV_EN</name>
              <description>1: enable to generate flash clock (no phase shift) divided by 600M pll clock, HW detect this signal's rising edge to start the no phase shift division circuit.</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FLASH_PS_DIV_EN</name>
              <description>1: enable to generate flash clock (with phase shift) divided by 600M pll clock, HW detect this signal's rising edge to start the phase shift clock division circuit.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FLASH_DIV_INT</name>
              <description>Flash clock division ratio, integrate part
0: not support
1: divided by 2
2: divided by 3
3: divided by 4
..
7: divided by 8
8: divided by 9
9: divided by 10
Note: SPI clock frequency is this divided clock/2</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FLASH_PS_PHASE</name>
              <description>Flash clock phase shift in units of cpu/dsp pll clock cycles.
If selected pll is 500MHz, the step is 2ns.
0: shift 0 step
1: shift 1 step
...
19: shift 19 step.
Note, this value cannot be set more than FLASH_DIV_INT</description>
              <bitRange>[6:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FLASH_PS_DIV_RDY</name>
              <description>Ready flag of Flash clock with phase shift, Read only (input signal)</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FLASH_DIV_RDY</name>
              <description>Ready flag of Flash clock, Read only (input signal)</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SW_RST_CTRL</name>
          <addressOffset>0x00000060</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>km4_sys_rst</name>
              <description>Only when REG_SW_RST_TRIG is 0x96969696 , this reg can be write</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>kr4_sys_rst</name>
              <description>Only when REG_SW_RST_TRIG is 0x96969696 , this reg can be write</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>hifi_sys_rst</name>
              <description>Only when REG_SW_RST_TRIG is 0x96969696 , this reg can be write</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>periall_rst_en</name>
              <description>1. warm reset request by one cpu will reset all peri and local cpu
0. warm reset request by one cpu will only reset local cpu
Note : peri rst will use sysrst mst also</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>othercpu_rst_en</name>
              <description>1. warm reset request by one cpu will reset other cpu's core and local cpu
0. warm reset request by one cpu will only reset local cpu</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SW_RST_TRIG</name>
          <addressOffset>0x00000064</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>trig_rst</name>
              <description>System reset trigger register
Write 0x96969696 to enable the write of reset control
Write 0x69696969 will trigger the system if REG_SW_RST_CTRL set .</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BOOT_REASON_SW</name>
          <addressOffset>0x00000068</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>GDMA_CHANNELS</name>
              <description>Indicate the usage status of every GDMA channel.</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dummy</name>
              <description></description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BOOT_CFG</name>
          <addressOffset>0x0000006C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BOOT_WAKE_FROM_PS_HS</name>
              <description></description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BOOT_PATCH_FUNC0</name>
              <description></description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BOOT_PATCH_FUNC1</name>
              <description></description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BOOT_KR4_RUN</name>
              <description></description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BOOT_WAKE_FROM_PS_LS</name>
              <description></description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BOOT_IMG3_EXIST</name>
              <description></description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ROM_VERSION_SW</name>
              <description></description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SW_PATCH</name>
          <addressOffset>0x00000070</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x20020000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>sw_patch_saddr</name>
              <description>SW patch code start addr.
OTP physical addr 0x500-0x6FF will autoload to this addr .</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CHIP_INFO</name>
          <addressOffset>0x00000074</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00006842</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>chip_info_en</name>
              <description>Enable Internal Chip Information display.
0xA: enable.
Others: disable.
Note: CHIP_INFO can be read only if CHIP_INFO_EN[3:0]=0xA, otherwise the read result will return 0x0.</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rl_ver</name>
              <description>CHIP cut verison :
0:  A-cut
1:  B-cut
...</description>
              <bitRange>[19:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>rl_no</name>
              <description>CHIP RL NUMBER :  0x6842</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BT_CTRL0</name>
          <addressOffset>0x00000080</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0010C008</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>HW used only , these are for reserved.</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WL_MP_STATUS</name>
              <description>Wi-Fi MP status</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BT_USE_EXT_BT</name>
              <description>1: select external BT
0: select internal BT</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WL_USE_REQ</name>
              <description>who uses loguart  trx pad depends on the xor of WL_USE_REQ and BT_USE_REQ, wifi can send use request by change the value of WL_USE_REQ</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BTWL_USE_LOGUART_PAD_ST</name>
              <description>The state of xor of WL_USE_REQ and BT_USE_REQ.
0: loguart use loguart trx pad
1: bt hci use loguart trx pad</description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FORCE_LOGUART_USE_LOGUART_PAD_B</name>
              <description>Force wifi soc to use loguart pad mandatory if necessary
0: loguart use loguart trx pad
1: who uses loguart trx pad depends on BTWL_USE_LOGUART_PAD_ST</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BT_EN_TST_SI_CTRL_RFC</name>
              <description>进入Test Mode 8,9 , 且同時 BT_EN_TST_SI_CTRL_RFC=1 , 才將RFC 端的SI  3 wire交由專線BT_SI_*_TST 控制;
若I2C 想要access RFC,设置BT_EN_TST_SI_CTRL_RFC=0 或者 將BT_SI_ENB_TST pull high(如果BT_SI_ENB_TST 有出 PIN)</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BT_USE_EXT_UART</name>
              <description>1: BT use external uart
0: BT use internal uart</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BT_GPIO_FUN_SEL</name>
              <description>BT GPIO function select, 5:I2C mode</description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BT_WAKE_HOST_POL</name>
              <description>1:BT_WAKE_HOST to CPU and pinmux 0:pinmux to CPU for external trig</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HOST_WAKE_BT_POL</name>
              <description>1:HOST_WAKE_BT to BT and pinmux 0:pinmux to BT for external trig</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HOST_WAKE_BT</name>
              <description>CPU set this bit to 1 to wake BT</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BT_AHB_ACCESS_GNT</name>
              <description>access grant for system master access BT reg through AHB bus</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BT_AHB_ACCESS_REQ</name>
              <description>system master set this bit to 1 and wait  BT_AHB_ACCESS_GNT=1 before access BT reg through AHB bus, when access finish, shall set this bit to 0</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BT_OFF_PC_WT</name>
              <description>云</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DSWR_REF_BT</name>
              <description>core swr parameter refer BT status</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BT_CTRL1</name>
          <addressOffset>0x00000084</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>HW used only , these are for reserved.</description>
              <bitRange>[16:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BT_PMC_STATE</name>
              <description>indicate bt_misc PMC current state, for debug</description>
              <bitRange>[14:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AIP_CTRL0</name>
          <addressOffset>0x00000088</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ck_cal_start</name>
              <description>Start clk calibration . This bit will auto-set to 0 when cal done .</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ck_cal_sel</name>
              <description>Calibration clock selection . The refrence clock is xtal clock.
0: OSC4M
1: AON100K
2: AON128K for SDM</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ck_cal_rpt</name>
              <description>Clock calibration result</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AIP_CTRL1</name>
          <addressOffset>0x0000008C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x000F1F1F</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>XTAL_LPS_EN_DIGI_CK</name>
              <description>0: disable XTAL clock for digital when XTAL enter LPS mode
1: enable XTAL clock for digital when XTAL enter LPS mode</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ANAIP_CTL_TUTIME</name>
              <description>Timeunit of  SWR/XTAL arbitration circuit, in unit of ANA4M,
Default time unit: 4us</description>
              <bitRange>[21:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_BG2HPMOD_CYC</name>
              <description>The time interval between BG enable to XTAL switch to HP Mode,  the timeunit is control by 0x13C[21:16]: BIT_LSYS_ANAIP_CTL_TUTIME</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_DBNC_CYC</name>
              <description>De-bounce time of XTAL enable request from WIFI &amp; SYSON PMC,   the timeunit is control by 0x13C[21:16]: BIT_LSYS_ANAIP_CTL_TUTIME</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_I2C_CTRL</name>
          <addressOffset>0x000000A0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>i2c1_rx_swap</name>
              <description>I2C1 RX swap control</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>i2c1_tx_swap</name>
              <description>I2C1 TX swap control</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>i2c0_rx_swap</name>
              <description>I2C0 RX swap control</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>i2c0_tx_swap</name>
              <description>I2C0 TX swap control</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DW_GPIO_CTRL</name>
          <addressOffset>0x000000A4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>gpio_divcnt_pb</name>
              <description>divider for dw gpiob debounce clk</description>
              <bitRange>[14:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>gpio_divcnt_pa</name>
              <description>divider for dw gpioa debounce clk</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_LXBUS_DBG0</name>
          <addressOffset>0x000000A8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>timeout_addr_mst</name>
              <description>lx sys bus addr debug out</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_LXBUS_DBG1</name>
          <addressOffset>0x000000AC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>timeout_addr_slv</name>
              <description>lx sys bus addr debug out</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_LXBUS_DBG_CTRL</name>
          <addressOffset>0x000000B0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>lx1_lock_ok</name>
              <description>lock lx1 bus lock ok</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>lx1_lock_bus</name>
              <description>lock lx1 bus for debug</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bustimeout</name>
              <description>lx sys bus arb timeout thresh</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>enbustimeout</name>
              <description>lx sys bus arb timeout enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FPGA_CLK_INFO</name>
          <addressOffset>0x000000B4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FPGA_KR4_CLK</name>
              <description>FPGA KR4 clock</description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FPGA_KM4_CLK</name>
              <description>FPGA KM4 clock</description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FPGA_PSRAM_CLK</name>
              <description>FPGA PSRAM clock</description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FPGA_HIFI_CLK</name>
              <description>FPGA HIFI clock</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FLASH_PARA_ADDR</name>
          <addressOffset>0x000000B8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCAN_CTRL</name>
          <addressOffset>0x000000BC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>HW used only , these are for reserved.</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WDG_GLBRST</name>
          <addressOffset>0x000000C0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>en_hifi_rst_glb</name>
              <description>1: if wdg of hifi assert wdg_reset, will trigger global reset directly. Follow the smart.
0: the  wdg_reset of hifi wdg reset itself firstly, the global reset occurs only caused by timeout</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>en_kr4_rst_glb</name>
              <description>1: if wdg of hifi assert wdg_reset, will trigger global reset directly. Follow the smart.
0: the  wdg_reset of hifi wdg reset itself firstly, if the kr4 is np, the global reset occurs only caused by timeout</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>en_km4_rst_glb</name>
              <description>1: if wdg of hifi assert wdg_reset, will trigger global reset directly. Follow the smart.
0: the  wdg_reset of hifi wdg reset itself firstly, if the km4 is np, the global reset occurs only caused by timeout</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>clr_wdg1_rst</name>
              <description>write 1 to clear the km4_s_wdg_rst, glb_wdg_rst is not included</description>
              <bitRange>[11:11]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>clr_wdg2_rst</name>
              <description>write 1 to clear the km4_ns_wdg_rst, glb_wdg_rst is not included</description>
              <bitRange>[10:10]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>clr_wdg3_rst</name>
              <description>write 1 to clear the kr4_wdg_rst, glb_wdg_rst is not included</description>
              <bitRange>[9:9]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>clr_wdg4_rst</name>
              <description>write 1 to clear the dsp_wdg_rst, glb_wdg_rst is not included</description>
              <bitRange>[8:8]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>wdg_timeout</name>
              <description>threshold of wdg timer, if wdg_timer &gt;= wdg_timeout, will trigger global reset. Unit is 10us
0 means not support</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PRS_CTRL</name>
          <addressOffset>0x000000C4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>prs_src_sel</name>
              <description>PRS trigger source select:
000: none
001: gpio trigger
010: comparator output
011: audio zcd_0
100: audio zcd_1
101: audio zcd_2</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>prs_out_pwm_trig</name>
              <description>enable for output trigger to pwm</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>prs_out_tim_en</name>
              <description>enable for output en signal to basic timer</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>prs_in_tim_of</name>
              <description>enable for basic timer overflow input</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>prs_rvs_en</name>
              <description>invert polarity for PRS input, 
0: posedge polarity
1: negedge polarity</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>prs_dbc_cnt</name>
              <description>debounce count for PRS funciton</description>
              <bitRange>[17:2]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DUMMY_089</name>
          <addressOffset>0x000000CC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>HW used only , these are for reserved.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SYSRST_MSK0</name>
          <addressOffset>0x000000D0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>sysrst_msk_tim14</name>
              <description>1: mask HP TIMER14 reset when sys reset happen 
0: disable</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_tim13</name>
              <description>1: mask HP TIMER13 reset when sys reset happen 
0: disable</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_tim12</name>
              <description>1: mask HP TIMER12 reset when sys reset happen 
0: disable</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_tim11</name>
              <description>1: mask HP TIMER11 reset when sys reset happen 
0: disable</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_tim10</name>
              <description>1: mask HP TIMER10 reset when sys reset happen 
0: disable</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_tim_pwm</name>
              <description>1: mask HP TIMER_PWM reset when sys reset happen 
0: disable</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_tim_pulse</name>
              <description>1: mask HP TIMER_PULSE reset when sys reset happen 
0: disable</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_ledc</name>
              <description>1: mask LEDC reset when sys reset happen 
0: disable</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_sport1</name>
              <description>1: mask SPORT1 reset when sys reset happen 
0: disable</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_sport0</name>
              <description>1: mask SPORT0 reset when sys reset happen 
0: disable</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_ac</name>
              <description>1: mask audio codec active reset when sys reset happen 
0: disable</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_trng</name>
              <description>1: mask TRNG reset when sys reset happen 
0: disable</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_ecdsa</name>
              <description>1: mask ecdsa reset when sys reset happen 
0: disable</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_spi1</name>
              <description>1: mask SPI1 reset when sys reset happen 
0: disable</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_spi0</name>
              <description>1: mask SPI0 reset when sys reset happen 
0: disable</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_spic</name>
              <description>mask Flash spic reset when sys reset happen  mask
1: mask flash
0: disable flash</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_sha</name>
              <description>1: mask IPSEC SHA reset when sys reset happen 
0: disable</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_aes</name>
              <description>1: mask IPSEC AES reset when sys reset happen 
0: disable</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_lx</name>
              <description>1: mask LX reset when sys reset happen 
0: disable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_gdma</name>
              <description>1: mask GDMA reset when sys reset happen 
0: disable</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_hifi</name>
              <description>1: mask  DSP (HIFI5) reset when sys reset happen
0: reset</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_km4</name>
              <description>1: mask KM4 reset when sys reset happen
0: reset</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_kr4</name>
              <description>1: mask KR4 reset when sys reset happen
0: reset</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_plfm</name>
              <description>1: mask platform
0: reset</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_hsoc</name>
              <description>1: mask HP_SOC system reset when sys reset happen 
0: reset</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SYSRST_MSK1</name>
          <addressOffset>0x000000D4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000018</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>sysrst_msk_zgb</name>
              <description>1: mask zgb reset when sys reset happen 
0: disable
Note: for zgb is in wlan off domain , after turn wlan off , it need an 0-&gt;1 transiton</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_psram</name>
              <description>1: mask PSRAM reset when sys reset happen 
0: disable</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_thm</name>
              <description>mask thml reset when sys reset happen  mask</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_ctc</name>
              <description>1: mask Captouch ADC reset when sys reset happen 
0: reset</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_adc</name>
              <description>1: mask LS ADC reset when sys reset happen 
0: reset</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_ipc</name>
              <description>1: mask IPC reset when sys reset happen 
0: reset</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_wdg</name>
              <description>1: mask LS WDG 1~4 reset when sys reset happen 
0: reset</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_dtim</name>
              <description>1: mask LP dtim reset when sys reset happen  mask
0: reset</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_tim_basic</name>
              <description>1: mask LP basic TIMER0-7 reset when sys reset happen 
0: disable</description>
              <bitRange>[19:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_i2c1</name>
              <description>1: mask HS I2C1 reset when sys reset happen 
0: reset</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_i2c0</name>
              <description>1: mask LS I2C0 reset when sys reset happen 
0: reset</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_uart</name>
              <description>1: mask UART reset when sys reset happen 
0: disable</description>
              <bitRange>[9:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_loguart</name>
              <description>1: mask LOGUART reset when sys reset happen 
0: disable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_gpio</name>
              <description>1: mask LS GPIO reset when sys reset happen 
0: reset</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_aip</name>
              <description>1: mask aip reset when sys reset happen  mask
0: reset</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_wlafe_ctrl</name>
              <description>1: mask WL RFAFE control circuit, shall be 1 when mask WL or BT use WL RFAFE
0: reset</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_bton</name>
              <description>mask BTON reset when sys reset happen
1: mask
0: disable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sysrst_msk_wlon</name>
              <description>mask WLON reset when sys reset happen  mask
1: mask
0: disable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BOUNDARY_CHK</name>
          <addressOffset>0x000000F0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xBDC10512</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>HW used only ,
Used for access boundary check, SYSON is 512B which is 000-1FF.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DUMMY_090</name>
          <addressOffset>0x000000F4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>HW used only , these are for reserved.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DUMMY_AIP_CTRL1</name>
          <addressOffset>0x000000F8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0000FFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>aip_ctrl_rsvd1</name>
              <description>reserved for aip control</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DUMMY_AIP_INFO1</name>
          <addressOffset>0x000000FC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>aip_info_rsvd1</name>
              <description>reserved for aip info indication</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>adc</name>
      <baseAddress>0x4101C000</baseAddress>
      <size>0x000000B4</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x000000B4</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>REG_ADC_CONF</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description>ADC Configuration Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_enable</name>
              <description>This bit is for ADC enable control</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_cvlist_len</name>
              <description>This field defines the number of items in the ADC conversion channel list.</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_op_mod</name>
              <description>These bits selects ADC operation mode.
0: software trigger mode
1: automatic mode
2: timer-trigger mode
3: comparator-assist mode</description>
              <bitRange>[3:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_ref_in_sel</name>
              <description>This bit selects ADC reference voltage input.
0: ADC's reference voltage is from internal source.
1: ADC's reference voltage is from external pin.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_IN_TYPE</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description>ADC Input Type Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_in_type_ch9</name>
              <description>This bit reflects which kind of input type channel 9 is. Since channel 9 is a fixed internal channel.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_in_type_ch8</name>
              <description>This bit reflects which kind of input type channel 8 is. Since channel 8 is a fixed internal channel.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_in_type_ch7</name>
              <description>This bit reflects which kind of input type channel 7 is. Since channel 7 is a fixed internal channel.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_in_type_ch6</name>
              <description>This bit reflects which kind of input type channel 6 is. Since channel 6 is a fixed internal channel.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_in_type_ch5</name>
              <description>This bit controls channel 5 input type. If it's set to differential type(value of this bit is 1), channel 4 should also be set to differential type since they are hardware-fixed differential pair.
0: ADC channel 5 is single-end input.
1: ADC channel 5 is differential input which is paired with channel 4.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_in_type_ch4</name>
              <description>This bit controls channel 4 input type. If it's set to differential type(value of this bit is 1), channel 5 should also be set to differential type since they are hardware-fixed differential pair.
0: ADC channel 4 is single-end input.
1: ADC channel 4 is differential input which is paired with channel 5.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_in_type_ch3</name>
              <description>This bit controls channel 3 input type. If it's set to differential type(value of this bit is 1), channel 2 should also be set to differential type since they are hardware-fixed differential pair.
0: ADC channel 3 is single-end input.
1: ADC channel 3 is differential input which is paired with channel 2.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_in_type_ch2</name>
              <description>This bit controls channel 2 input type. If it's set to differential type(value of this bit is 1), channel 3 should also be set to differential type since they are hardware-fixed differential pair.
0: ADC channel 2 is single-end input.
1: ADC channel 2 is differential input which is paired with channel 3.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_in_type_ch1</name>
              <description>This bit controls channel 1 input type. If it's set to differential type(value of this bit is 1), channel 0 should also be set to differential type since they are hardware-fixed differential pair.
0: ADC channel 1 is single-end input.
1: ADC channel 1 is differential input which is paired with channel 0.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_in_type_ch0</name>
              <description>This bit controls channel 0 input type. If it's set to differential type(value of this bit is 1), channel 1 should also be set to differential type since they are hardware-fixed differential pair.
0: ADC channel 0 is single-end input.
1: ADC channel 0 is differential input which is paired with channel 1.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_COMP_TH_CH0</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description>ADC Channel 0 Comparison Threshold Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_comp_th_h_ch0</name>
              <description>This field defines the higher threshold of channel 0 for ADC automatic comparison.</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_comp_th_l_ch0</name>
              <description>This field defines the lower threshold of channel 0 for ADC automatic comparison.</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_COMP_TH_CH1</name>
          <addressOffset>0x0000000C</addressOffset>
          <size>32</size>
          <description>ADC Channel 1 Comparison Threshold Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_comp_th_h_ch1</name>
              <description>This field defines the higher threshold of channel 1 for ADC automatic comparison.</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_comp_th_l_ch1</name>
              <description>This field defines the lower threshold of channel 1 for ADC automatic comparison.</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_COMP_TH_CH2</name>
          <addressOffset>0x00000010</addressOffset>
          <size>32</size>
          <description>ADC Channel 2 Comparison Threshold Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_comp_th_h_ch2</name>
              <description>This field defines the higher threshold of channel 2 for ADC automatic comparison.</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_comp_th_l_ch2</name>
              <description>This field defines the lower threshold of channel 2 for ADC automatic comparison.</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_COMP_TH_CH3</name>
          <addressOffset>0x00000014</addressOffset>
          <size>32</size>
          <description>ADC Channel 3 Comparison Threshold Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_comp_th_h_ch3</name>
              <description>This field defines the higher threshold of channel 3 for ADC automatic comparison.</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_comp_th_l_ch3</name>
              <description>This field defines the lower threshold of channel 3 for ADC automatic comparison.</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_COMP_TH_CH4</name>
          <addressOffset>0x00000018</addressOffset>
          <size>32</size>
          <description>ADC Channel 4 Comparison Threshold Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_comp_th_h_ch4</name>
              <description>This field defines the higher threshold of channel 4 for ADC automatic comparison.</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_comp_th_l_ch4</name>
              <description>This field defines the lower threshold of channel 4 for ADC automatic comparison.</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_COMP_TH_CH5</name>
          <addressOffset>0x0000001C</addressOffset>
          <size>32</size>
          <description>ADC Channel 5 Comparison Threshold Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_comp_th_h_ch5</name>
              <description>This field defines the higher threshold of channel 5 for ADC automatic comparison.</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_comp_th_l_ch5</name>
              <description>This field defines the lower threshold of channel 5 for ADC automatic comparison.</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_COMP_TH_CH6</name>
          <addressOffset>0x00000020</addressOffset>
          <size>32</size>
          <description>ADC Channel 6 Comparison Threshold Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_comp_th_h_ch6</name>
              <description>This field defines the higher threshold of channel 6 for ADC automatic comparison.</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_comp_th_l_ch6</name>
              <description>This field defines the lower threshold of channel 6 for ADC automatic comparison.</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_COMP_TH_CH7</name>
          <addressOffset>0x00000024</addressOffset>
          <size>32</size>
          <description>ADC Channel 7 Comparison Threshold Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_comp_th_h_ch7</name>
              <description>This field defines the higher threshold of channel 7 for ADC automatic comparison.</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_comp_th_l_ch7</name>
              <description>This field defines the lower threshold of channel 7 for ADC automatic comparison.</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_COMP_TH_CH8</name>
          <addressOffset>0x00000028</addressOffset>
          <size>32</size>
          <description>ADC Channel 8 Comparison Threshold Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_comp_th_h_ch8</name>
              <description>This field defines the higher threshold of channel 8 for ADC automatic comparison.</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_comp_th_l_ch8</name>
              <description>This field defines the lower threshold of channel 8 for ADC automatic comparison.</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_COMP_TH_CH9</name>
          <addressOffset>0x0000002C</addressOffset>
          <size>32</size>
          <description>ADC Channel 9 Comparison Threshold Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_comp_th_h_ch9</name>
              <description>This field defines the higher threshold of channel 9 for ADC automatic comparison.</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_comp_th_l_ch9</name>
              <description>This field defines the lower threshold of channel 9 for ADC automatic comparison.</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_COMP_CTRL</name>
          <addressOffset>0x00000030</addressOffset>
          <size>32</size>
          <description>ADC Comparison Control Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_comp_ctrl_ch9</name>
              <description>This field defines ADC channel comparison criteria which would notify system by interrupt when the criterion matches. Once a criterion matches, ADC should send an interrupt signal to system if the related interrupt mask is unmask. ADC also updates comparison results in reg_adc_comp_sts.
0: When Vin &lt; bit_adc_comp_th_l_chx, comparison criterion matches.
1: When Vin &gt; bit_adc_comp_th_h_chx, comparison criterion matches.
2: When Vin &gt;= bit_adc_comp_th_l_chx and Vin &lt;= bit_adc_comp_th_h_chx, comparison criterion matches.
3: When Vin &lt; bit_adc_comp_th_l_chx or Vin &gt; bit_adc_comp_th_h_chx, comparison criterion matches.</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_comp_ctrl_ch8</name>
              <description>This field defines ADC channel comparison criteria which would notify system by interrupt when the criterion matches. Once a criterion matches, ADC should send an interrupt signal to system if the related interrupt mask is unmask. ADC also updates comparison results in reg_adc_comp_sts.
0: When Vin &lt; bit_adc_comp_th_l_chx, comparison criterion matches.
1: When Vin &gt; bit_adc_comp_th_h_chx, comparison criterion matches.
2: When Vin &gt;= bit_adc_comp_th_l_chx and Vin &lt;= bit_adc_comp_th_h_chx, comparison criterion matches.
3: When Vin &lt; bit_adc_comp_th_l_chx or Vin &gt; bit_adc_comp_th_h_chx, comparison criterion matches.</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_comp_ctrl_ch7</name>
              <description>This field defines ADC channel comparison criteria which would notify system by interrupt when the criterion matches. Once a criterion matches, ADC should send an interrupt signal to system if the related interrupt mask is unmask. ADC also updates comparison results in reg_adc_comp_sts.
0: When Vin &lt; bit_adc_comp_th_l_chx, comparison criterion matches.
1: When Vin &gt; bit_adc_comp_th_h_chx, comparison criterion matches.
2: When Vin &gt;= bit_adc_comp_th_l_chx and Vin &lt;= bit_adc_comp_th_h_chx, comparison criterion matches.
3: When Vin &lt; bit_adc_comp_th_l_chx or Vin &gt; bit_adc_comp_th_h_chx, comparison criterion matches.</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_comp_ctrl_ch6</name>
              <description>This field defines ADC channel comparison criteria which would notify system by interrupt when the criterion matches. Once a criterion matches, ADC should send an interrupt signal to system if the related interrupt mask is unmask. ADC also updates comparison results in reg_adc_comp_sts.
0: When Vin &lt; bit_adc_comp_th_l_chx, comparison criterion matches.
1: When Vin &gt; bit_adc_comp_th_h_chx, comparison criterion matches.
2: When Vin &gt;= bit_adc_comp_th_l_chx and Vin &lt;= bit_adc_comp_th_h_chx, comparison criterion matches.
3: When Vin &lt; bit_adc_comp_th_l_chx or Vin &gt; bit_adc_comp_th_h_chx, comparison criterion matches.</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_comp_ctrl_ch5</name>
              <description>This field defines ADC channel comparison criteria which would notify system by interrupt when the criterion matches. Once a criterion matches, ADC should send an interrupt signal to system if the related interrupt mask is unmask. ADC also updates comparison results in reg_adc_comp_sts.
0: When Vin &lt; bit_adc_comp_th_l_chx, comparison criterion matches.
1: When Vin &gt; bit_adc_comp_th_h_chx, comparison criterion matches.
2: When Vin &gt;= bit_adc_comp_th_l_chx and Vin &lt;= bit_adc_comp_th_h_chx, comparison criterion matches.
3: When Vin &lt; bit_adc_comp_th_l_chx or Vin &gt; bit_adc_comp_th_h_chx, comparison criterion matches.</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_comp_ctrl_ch4</name>
              <description>This field defines ADC channel comparison criteria which would notify system by interrupt when the criterion matches. Once a criterion matches, ADC should send an interrupt signal to system if the related interrupt mask is unmask. ADC also updates comparison results in reg_adc_comp_sts.
0: When Vin &lt; bit_adc_comp_th_l_chx, comparison criterion matches.
1: When Vin &gt; bit_adc_comp_th_h_chx, comparison criterion matches.
2: When Vin &gt;= bit_adc_comp_th_l_chx and Vin &lt;= bit_adc_comp_th_h_chx, comparison criterion matches.
3: When Vin &lt; bit_adc_comp_th_l_chx or Vin &gt; bit_adc_comp_th_h_chx, comparison criterion matches.</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_comp_ctrl_ch3</name>
              <description>This field defines ADC channel comparison criteria which would notify system by interrupt when the criterion matches. Once a criterion matches, ADC should send an interrupt signal to system if the related interrupt mask is unmask. ADC also updates comparison results in reg_adc_comp_sts.
0: When Vin &lt; bit_adc_comp_th_l_chx, comparison criterion matches.
1: When Vin &gt; bit_adc_comp_th_h_chx, comparison criterion matches.
2: When Vin &gt;= bit_adc_comp_th_l_chx and Vin &lt;= bit_adc_comp_th_h_chx, comparison criterion matches.
3: When Vin &lt; bit_adc_comp_th_l_chx or Vin &gt; bit_adc_comp_th_h_chx, comparison criterion matches.</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_comp_ctrl_ch2</name>
              <description>This field defines ADC channel comparison criteria which would notify system by interrupt when the criterion matches. Once a criterion matches, ADC should send an interrupt signal to system if the related interrupt mask is unmask. ADC also updates comparison results in reg_adc_comp_sts.
0: When Vin &lt; bit_adc_comp_th_l_chx, comparison criterion matches.
1: When Vin &gt; bit_adc_comp_th_h_chx, comparison criterion matches.
2: When Vin &gt;= bit_adc_comp_th_l_chx and Vin &lt;= bit_adc_comp_th_h_chx, comparison criterion matches.
3: When Vin &lt; bit_adc_comp_th_l_chx or Vin &gt; bit_adc_comp_th_h_chx, comparison criterion matches.</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_comp_ctrl_ch1</name>
              <description>This field defines ADC channel comparison criteria which would notify system by interrupt when the criterion matches. Once a criterion matches, ADC should send an interrupt signal to system if the related interrupt mask is unmask. ADC also updates comparison results in reg_adc_comp_sts.
0: When Vin &lt; bit_adc_comp_th_l_chx, comparison criterion matches.
1: When Vin &gt; bit_adc_comp_th_h_chx, comparison criterion matches.
2: When Vin &gt;= bit_adc_comp_th_l_chx and Vin &lt;= bit_adc_comp_th_h_chx, comparison criterion matches.
3: When Vin &lt; bit_adc_comp_th_l_chx or Vin &gt; bit_adc_comp_th_h_chx, comparison criterion matches.</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_comp_ctrl_ch0</name>
              <description>This field defines ADC channel comparison criteria which would notify system by interrupt when the criterion matches. Once a criterion matches, ADC should send an interrupt signal to system if the related interrupt mask is unmask. ADC also updates comparison results in reg_adc_comp_sts.
0: When Vin &lt; bit_adc_comp_th_l_chx, comparison criterion matches.
1: When Vin &gt; bit_adc_comp_th_h_chx, comparison criterion matches.
2: When Vin &gt;= bit_adc_comp_th_l_chx and Vin &lt;= bit_adc_comp_th_h_chx, comparison criterion matches.
3: When Vin &lt; bit_adc_comp_th_l_chx or Vin &gt; bit_adc_comp_th_h_chx, comparison criterion matches.</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_COMP_STS</name>
          <addressOffset>0x00000034</addressOffset>
          <size>32</size>
          <description>ADC Comparison Status Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_comp_sts_ch9</name>
              <description>This field reflects the comparison result of channel 9 immediately.</description>
              <bitRange>[19:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_comp_sts_ch8</name>
              <description>This field reflects the comparison result of channel 8 immediately.</description>
              <bitRange>[17:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_comp_sts_ch7</name>
              <description>This field reflects the comparison result of channel 7 immediately.</description>
              <bitRange>[15:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_comp_sts_ch6</name>
              <description>This field reflects the comparison result of channel 6 immediately.</description>
              <bitRange>[13:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_comp_sts_ch5</name>
              <description>This field reflects the comparison result of channel 5 immediately.</description>
              <bitRange>[11:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_comp_sts_ch4</name>
              <description>This field reflects the comparison result of channel 4 immediately.</description>
              <bitRange>[9:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_comp_sts_ch3</name>
              <description>This field reflects the comparison result of channel 3 immediately.</description>
              <bitRange>[7:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_comp_sts_ch2</name>
              <description>This field reflects the comparison result of channel 2 immediately.</description>
              <bitRange>[5:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_comp_sts_ch1</name>
              <description>This field reflects the comparison result of channel 1 immediately.</description>
              <bitRange>[3:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_comp_sts_ch0</name>
              <description>This field reflects the comparison result of channel 0 immediately.</description>
              <bitRange>[1:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_CHSW_LIST_0</name>
          <addressOffset>0x00000038</addressOffset>
          <size>32</size>
          <description>ADC Channel Switch List 0 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_chsw_7</name>
              <description>This field defines the number 7 channel to do a conversion when a conversion event takes place.</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_chsw_6</name>
              <description>This field defines the number 6 channel to do a conversion when a conversion event takes place.</description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_chsw_5</name>
              <description>This field defines the number 5 channel to do a conversion when a conversion event takes place.</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_chsw_4</name>
              <description>This field defines the number 4 channel to do a conversion when a conversion event takes place.</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_chsw_3</name>
              <description>This field defines the number 3 channel to do a conversion when a conversion event takes place.</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_chsw_2</name>
              <description>This field defines the number 2 channel to do a conversion when a conversion event takes place.</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_chsw_1</name>
              <description>This field defines the number 1 channel to do a conversion when a conversion event takes place.</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_chsw_0</name>
              <description>This field defines the number 0 channel to do a conversion when a conversion event takes place.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_CHSW_LIST_1</name>
          <addressOffset>0x0000003C</addressOffset>
          <size>32</size>
          <description>ADC Channel Switch List 1 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_chsw_15</name>
              <description>This field defines the number 15 channel to do a conversion when a conversion event takes place.</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_chsw_14</name>
              <description>This field defines the number 14 channel to do a conversion when a conversion event takes place.</description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_chsw_13</name>
              <description>This field defines the number 13 channel to do a conversion when a conversion event takes place.</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_chsw_12</name>
              <description>This field defines the number 12 channel to do a conversion when a conversion event takes place.</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_chsw_11</name>
              <description>This field defines the number 11 channel to do a conversion when a conversion event takes place.</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_chsw_10</name>
              <description>This field defines the number 10 channel to do a conversion when a conversion event takes place.</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_chsw_9</name>
              <description>This field defines the number 9 channel to do a conversion when a conversion event takes place.</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_chsw_8</name>
              <description>This field defines the number 8 channel to do a conversion when a conversion event takes place.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_RST_LIST</name>
          <addressOffset>0x00000040</addressOffset>
          <size>32</size>
          <description>ADC Reset Channel List Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_rst_list</name>
              <description>This bit controls to reset the channel switch to default state or not. Once this bit is set, the auto/manual channel switch goes to the first channel as a default state.
0: Do Not reset conversion list to default state.
1: Reset conversion list to default state.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_AUTO_CSW_CTRL</name>
          <addressOffset>0x00000044</addressOffset>
          <size>32</size>
          <description>ADC Automatic Channel Switch Control Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_auto_csw_en</name>
              <description>This bit controls the automatic channel switch enabled or disabled.
0: Disable the automatic channel switch.If an automatic channel switch is in process, writing 0 will terminate the automatic channel switch. 
1: Enable the automatic channel switch. When setting this bit, an automatic channel switch starts from the first channel in the channel switch list.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_SW_TRIG</name>
          <addressOffset>0x00000048</addressOffset>
          <size>32</size>
          <description>ADC Software Trigger Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_sw_trig</name>
              <description>This bit controls the ADC module to do a conversion.
Every time this bit is set to 1, ADC module would switch to a new channel and do one conversion. Therefore, this bit could be used as a start-convert event which is controlled by software. Every time a conversion is done, software MUST clear this bit manually.
0: disable the analog module and analog mux.
1: enable the analog module and analog mux. And then start a new channel conversion.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_LAST_CH</name>
          <addressOffset>0x0000004C</addressOffset>
          <size>32</size>
          <description>ADC Last Channel Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_last_ch</name>
              <description>This field reflects the last used channel</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_BUSY_STS</name>
          <addressOffset>0x00000050</addressOffset>
          <size>32</size>
          <description>ADC Busy Status Register</description>
          <resetValue>0x00000004</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_fifo_empty</name>
              <description>0: FIFO in ADC not empty
1: FIFO in ADC empty</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_fifo_full_real</name>
              <description>0: FIFO in ADC not full real
1: FIFO in ADC full real</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_busy_sts</name>
              <description>This bit reflects the ADC is busy or not. If the ADC is processing a conversion of a channel, this bit remains 1 which indicates it's busy. Once a conversion is done, this bit becomes 0 which indicates it's ready to do another conversion.
0: The ADC is ready.
1: The ADC is busy.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_INTR_CTRL</name>
          <addressOffset>0x00000054</addressOffset>
          <size>32</size>
          <description>ADC Interrupt Control Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_it_compre_ch9_en</name>
              <description>This bit controls the interrupt is enabled or not when channel 9 comparison criterion matching is rising edge.
0: This interrupt is disabled.
1: This interrupt is enabled.</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_it_compre_ch8_en</name>
              <description>This bit controls the interrupt is enabled or not when channel 8 comparison criterion matching is rising edge.
0: This interrupt is disabled.
1: This interrupt is enabled.</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_it_compre_ch7_en</name>
              <description>This bit controls the interrupt is enabled or not when channel 7 comparison criterion matching is rising edge.
0: This interrupt is disabled.
1: This interrupt is enabled.</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_it_compre_ch6_en</name>
              <description>This bit controls the interrupt is enabled or not when channel 6 comparison criterion matching is rising edge.
0: This interrupt is disabled.
1: This interrupt is enabled.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_it_compre_ch5_en</name>
              <description>This bit controls the interrupt is enabled or not when channel 5 comparison criterion matching is rising edge.
0: This interrupt is disabled.
1: This interrupt is enabled.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_it_compre_ch4_en</name>
              <description>This bit controls the interrupt is enabled or not when channel 4 comparison criterion matching is rising edge.
0: This interrupt is disabled.
1: This interrupt is enabled.</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_it_compre_ch3_en</name>
              <description>This bit controls the interrupt is enabled or not when channel 3 comparison criterion matching is rising edge.
0: This interrupt is disabled.
1: This interrupt is enabled.</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_it_compre_ch2_en</name>
              <description>This bit controls the interrupt is enabled or not when channel 2 comparison criterion matching is rising edge.
0: This interrupt is disabled.
1: This interrupt is enabled.</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_it_compre_ch1_en</name>
              <description>This bit controls the interrupt is enabled or not when channel 1 comparison criterion matching is rising edge.
0: This interrupt is disabled.
1: This interrupt is enabled.</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_it_compre_ch0_en</name>
              <description>This bit controls the interrupt is enabled or not when channel 0 comparison criterion matching is rising edge.
0: This interrupt is disabled.
1: This interrupt is enabled.</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_it_comp_ch9_en</name>
              <description>This bit controls the interrupt is enabled or not when channel 9 comparison criterion matches.
0: This interrupt is disabled.
1: This interrupt is enabled.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_it_comp_ch8_en</name>
              <description>This bit controls the interrupt is enabled or not when channel 8 comparison criterion matches.
0: This interrupt is disabled.
1: This interrupt is enabled.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_it_comp_ch7_en</name>
              <description>This bit controls the interrupt is enabled or not when channel 7 comparison criterion matches.
0: This interrupt is disabled.
1:  This interrupt is enabled.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_it_comp_ch6_en</name>
              <description>This bit controls the interrupt is enabled or not when channel 6 comparison criterion matches.
0: This interrupt is disabled.
1: This interrupt is enabled.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_it_comp_ch5_en</name>
              <description>This bit controls the interrupt is enabled or not when channel 5 comparison criterion matches.
0: This interrupt is disabled.
1: This interrupt is enabled.</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_it_comp_ch4_en</name>
              <description>This bit controls the interrupt is enabled or not when channel 4 comparison criterion matches.
0: This interrupt is disabled.
1: This interrupt is enabled.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_it_comp_ch3_en</name>
              <description>This bit controls the interrupt is enabled or not when channel 3 comparison criterion matches.
0: This interrupt is disabled.
1: This interrupt is enabled.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_it_comp_ch2_en</name>
              <description>This bit controls the interrupt is enabled or not when channel 2 comparison criterion matches.
0: This interrupt is disabled.
1: This interrupt is enabled.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_it_comp_ch1_en</name>
              <description>This bit controls the interrupt is enabled or not when channel 1 comparison criterion matches.
0: This interrupt is disabled.
1: This interrupt is enabled.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_it_comp_ch0_en</name>
              <description>This bit controls the interrupt is enabled or not when channel 0 comparison criterion matches.
0: This interrupt is disabled.
1: This interrupt is enabled.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_it_err_en</name>
              <description>This bit controls the interrupt is enabled or not when an error state takes place.
0: This interrupt is disabled.
1: This interrupt is enabled.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_it_dat_ovw_en</name>
              <description>This bit controls the interrupt is enabled or not when a data overwritten situation takes place.
0: This interrupt is disabled.
1: This interrupt is enabled.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_it_fifo_empty_en</name>
              <description>This bit controls the interrupt is enabled or not when a FIFO empty state takes place.
0: This interrupt is disabled.
1: This interrupt is enabled.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_it_fifo_over_en</name>
              <description>This bit controls the interrupt is enabled or not when a FIFO overflow state takes place.
0: This interrupt is disabled.
1: This interrupt is enabled.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_it_fifo_full_en</name>
              <description>This bit controls the interrupt is enabled or not when a FIFO full state takes place.
0: This interrupt is disabled.
1: This interrupt is enabled.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_it_chcv_end_en</name>
              <description>This bit controls the interrupt is enabled or not when a particular channel conversion is done.
Please refer to reg_adc_it_chno_con
0: This interrupt is disabled.
1: This interrupt is enabled.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_it_cv_end_en</name>
              <description>This bit controls the interrupt is enabled or not every time a conversion is done.
No matter ADC module is in what kind of operation mode. Every time a conversion is executed, ADC module would notify system if This bit is set.
0: This interrupt is disabled.
1: This interrupt is enabled.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_it_cvlist_end_en</name>
              <description>This bit controls the interrupt is enabled or not when a conversion of the last channel in the list is done.
For example, in automatic mode conversions would be executed continuously.
Every time the last channel conversion is done, which means all channel conversions in the list is done, ADC could notify system if This bit is set.
0: This interrupt is disabled.
1: This interrupt is enabled.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_INTR_RAW_STS</name>
          <addressOffset>0x00000058</addressOffset>
          <size>32</size>
          <description>ADC Interrupt Raw Status Register</description>
          <resetValue>0x00000020</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_it_compre_ch9_raw_sts</name>
              <description></description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_compre_ch8_raw_sts</name>
              <description>merged</description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_compre_ch7_raw_sts</name>
              <description>merged</description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_compre_ch6_raw_sts</name>
              <description>merged</description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_compre_ch5_raw_sts</name>
              <description>merged</description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_compre_ch4_raw_sts</name>
              <description>merged</description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_compre_ch3_raw_sts</name>
              <description>merged</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_compre_ch2_raw_sts</name>
              <description>merged</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_compre_ch1_raw_sts</name>
              <description>merged</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_compre_ch0_raw_sts</name>
              <description>merged</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_comp_ch9_raw_sts</name>
              <description>merged</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_comp_ch8_raw_sts</name>
              <description>merged</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_comp_ch7_raw_sts</name>
              <description>merged</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_comp_ch6_raw_sts</name>
              <description>merged</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_comp_ch5_raw_sts</name>
              <description>merged</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_comp_ch4_raw_sts</name>
              <description>merged</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_comp_ch3_raw_sts</name>
              <description>merged</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_comp_ch2_raw_sts</name>
              <description>merged</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_comp_ch1_raw_sts</name>
              <description>merged</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_comp_ch0_raw_sts</name>
              <description>merged</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_err_raw_sts</name>
              <description>merged</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_dat_ovw_raw_sts</name>
              <description>merged</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_fifo_empty_raw_sts</name>
              <description>merged</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_fifo_over_raw_sts</name>
              <description>merged</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_fifo_full_raw_sts</name>
              <description>merged</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_chcv_end_raw_sts</name>
              <description>merged</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_cv_end_raw_sts</name>
              <description>merged</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_cvlist_end_raw_sts</name>
              <description>merged</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_INTR_STS</name>
          <addressOffset>0x0000005C</addressOffset>
          <size>32</size>
          <description>ADC Interrupt Status Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_it_compre_ch9_sts</name>
              <description></description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_compre_ch8_sts</name>
              <description>merged</description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_compre_ch7_sts</name>
              <description>merged</description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_compre_ch6_sts</name>
              <description>merged</description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_compre_ch5_sts</name>
              <description>merged</description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_compre_ch4_sts</name>
              <description>merged</description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_compre_ch3_sts</name>
              <description>merged</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_compre_ch2_sts</name>
              <description>merged</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_compre_ch1_sts</name>
              <description>merged</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_compre_ch0_sts</name>
              <description>merged</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_comp_ch9_sts</name>
              <description>merged</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_comp_ch8_sts</name>
              <description>merged</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_comp_ch7_sts</name>
              <description>merged</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_comp_ch6_sts</name>
              <description>merged</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_comp_ch5_sts</name>
              <description>merged</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_comp_ch4_sts</name>
              <description>merged</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_comp_ch3_sts</name>
              <description>merged</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_comp_ch2_sts</name>
              <description>merged</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_comp_ch1_sts</name>
              <description>merged</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_comp_ch0_sts</name>
              <description>merged</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_err_sts</name>
              <description>merged</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_dat_ovw_sts</name>
              <description>merged</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_it_fifo_empty_sts</name>
              <description>merged</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_fifo_over_sts</name>
              <description>merged</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_fifo_full_sts</name>
              <description>merged</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_chcv_end_sts</name>
              <description>merged</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_cv_end_sts</name>
              <description>merged</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_cvlist_end_sts</name>
              <description>merged</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_IT_CHNO_CON</name>
          <addressOffset>0x00000060</addressOffset>
          <size>32</size>
          <description>ADC Interrupt Channel Number Configuration Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_it_chno_con</name>
              <description>This field defines that ADC module should send interrupt signal to system when a conversion which of channel number is the same as this field. This register is only valid when bit_adc_it_chcv_end_en is set.
bit_adc_it_chno_con: channel number</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_FULL_LVL</name>
          <addressOffset>0x00000064</addressOffset>
          <size>32</size>
          <description>ADC FIFO Full Threshold Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_full_lvl</name>
              <description>This field defines the FIFO full entry thredshold level and it's used for FIFO full interrupt. It should be set according to ADC FIFO depth.
A value of 0 sets the threshold for 1 entry, and a value of 15 sets the threshold for 16 entries.</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_EXT_TRIG_TIMER_SEL</name>
          <addressOffset>0x00000068</addressOffset>
          <size>32</size>
          <description>ADC External Trigger Timer Select Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_ext_trig_timer_sel</name>
              <description>These three bits defines which timer channel would be used to make ADC module do a conversion.
0: Timer module 0 is used as the comparator external trigger source.
1: Timer module 1 is used as the comparator external trigger source.
..
7: Timer module 7 is used as the comparator external trigger source.</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_DATA_CH0</name>
          <addressOffset>0x0000006C</addressOffset>
          <size>32</size>
          <description>ADC Channel 0 Data Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_dat_rdy_ch0</name>
              <description>This bit indicates that a conversion is done. Every time a conversion is done, this bit should be set to 1 and it would be cleared to 0 when a read operation of reg_adc_data_ch0.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_dat_ovw_ch0</name>
              <description>This bit indicates that there is a data overwritten situation in bit_adc_data_ch0 taking place. A data overwritten situation is that a former conversion data is NOT read before a new conversion is written to data field. It would be cleared to 0 when a read operation of reg_adc_data_ch0.
0: There is no data overwritten case.
1: There is a data overwritten case.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_num_ch0</name>
              <description>This field contains the newest conversion data of channel 0
[15:12]: which channel in channel list the data belongs to, only valid when bit_adc_ch_unmask=1</description>
              <bitRange>[15:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_data_ch0</name>
              <description>This field contains the newest conversion data of channel 0
[11:0]: newest data</description>
              <bitRange>[11:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_DATA_CH1</name>
          <addressOffset>0x00000070</addressOffset>
          <size>32</size>
          <description>ADC Channel 1 Data Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_dat_rdy_ch1</name>
              <description>This bit indicates that a conversion is done. Every time a conversion is done, this bit should be set to 1 and it would be cleared to 0 when a read operation of reg_adc_data_ch1.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_dat_ovw_ch1</name>
              <description>This bit indicates that there is a data overwritten situation in bit_adc_data_ch1 taking place. A data overwritten situation is that a former conversion data is NOT read before a new conversion is written to data field. It would be cleared to 0 when a read operation of reg_adc_data_ch1.
0: There is no data overwritten case.
1: There is a data overwritten case.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_num_ch1</name>
              <description>This field contains the newest conversion data of channel 1
[15:12]: which channel in channel list the data belongs to, only valid when bit_adc_ch_unmask=1</description>
              <bitRange>[15:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_data_ch1</name>
              <description>This field contains the newest conversion data of channel 1
[11:0]: newest data</description>
              <bitRange>[11:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_DATA_CH2</name>
          <addressOffset>0x00000074</addressOffset>
          <size>32</size>
          <description>ADC Channel 2 Data Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_dat_rdy_ch2</name>
              <description>This bit indicates that a conversion is done. Every time a conversion is done, this bit should be set to 1 and it would be cleared to 0 when a read operation of reg_adc_data_ch2.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_dat_ovw_ch2</name>
              <description>This bit indicates that there is a data overwritten situation in bit_adc_data_ch2 taking place. A data overwritten situation is that a former conversion data is NOT read before a new conversion is written to data field. It would be cleared to 0 when a read operation of reg_adc_data_ch2.
0: There is no data overwritten case.
1: There is a data overwritten case.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_num_ch2</name>
              <description>This field contains the newest conversion data of channel 2
[15:12]: which channel in channel list the data belongs to, only valid when bit_adc_ch_unmask=1</description>
              <bitRange>[15:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_data_ch2</name>
              <description>This field contains the newest conversion data of channel 2
[11:0]: newest data</description>
              <bitRange>[11:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_DATA_CH3</name>
          <addressOffset>0x00000078</addressOffset>
          <size>32</size>
          <description>ADC Channel 3 Data Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_dat_rdy_ch3</name>
              <description>This bit indicates that a conversion is done. Every time a conversion is done, this bit should be set to 1 and it would be cleared to 0 when a read operation of reg_adc_data_ch3.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_dat_ovw_ch3</name>
              <description>This bit indicates that there is a data overwritten situation in bit_adc_data_ch3 taking place. A data overwritten situation is that a former conversion data is NOT read before a new conversion is written to data field. It would be cleared to 0 when a read operation of reg_adc_data_ch3.
0: There is no data overwritten case.
1: There is a data overwritten case.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_num_ch3</name>
              <description>This field contains the newest conversion data of channel 3
[15:12]: which channel in channel list the data belongs to, only valid when bit_adc_ch_unmask=1</description>
              <bitRange>[15:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_data_ch3</name>
              <description>This field contains the newest conversion data of channel 3
[11:0]: newest data</description>
              <bitRange>[11:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_DATA_CH4</name>
          <addressOffset>0x0000007C</addressOffset>
          <size>32</size>
          <description>ADC Channel 4 Data Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_dat_rdy_ch4</name>
              <description>This bit indicates that a conversion is done. Every time a conversion is done, this bit should be set to 1 and it would be cleared to 0 when a read operation of reg_adc_data_ch4.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_dat_ovw_ch4</name>
              <description>This bit indicates that there is a data overwritten situation in bit_adc_data_ch4 taking place. A data overwritten situation is that a former conversion data is NOT read before a new conversion is written to data field. It would be cleared to 0 when a read operation of reg_adc_data_ch4.
0: There is no data overwritten case.
1: There is a data overwritten case.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_num_ch4</name>
              <description>This field contains the newest conversion data of channel 4
[15:12]: which channel in channel list the data belongs to, only valid when bit_adc_ch_unmask=1</description>
              <bitRange>[15:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_data_ch4</name>
              <description>This field contains the newest conversion data of channel 4
[11:0]: newest data</description>
              <bitRange>[11:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_DATA_CH5</name>
          <addressOffset>0x00000080</addressOffset>
          <size>32</size>
          <description>ADC Channel 5 Data Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_dat_rdy_ch5</name>
              <description>This bit indicates that a conversion is done. Every time a conversion is done, this bit should be set to 1 and it would be cleared to 0 when a read operation of reg_adc_data_ch5.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_dat_ovw_ch5</name>
              <description>This bit indicates that there is a data overwritten situation in bit_adc_data_ch5 taking place. A data overwritten situation is that a former conversion data is NOT read before a new conversion is written to data field. It would be cleared to 0 when a read operation of reg_adc_data_ch5.
0: There is no data overwritten case.
1: There is a data overwritten case.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_num_ch5</name>
              <description>This field contains the newest conversion data of channel 5
[15:12]: which channel in channel list the data belongs to, only valid when bit_adc_ch_unmask=1</description>
              <bitRange>[15:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_data_ch5</name>
              <description>This field contains the newest conversion data of channel 5
[11:0]: newest data</description>
              <bitRange>[11:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_DATA_CH6</name>
          <addressOffset>0x00000084</addressOffset>
          <size>32</size>
          <description>ADC Channel 6 Data Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_dat_rdy_ch6</name>
              <description>This bit indicates that a conversion is done. Every time a conversion is done, this bit should be set to 1 and it would be cleared to 0 when a read operation of reg_adc_data_ch6.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_dat_ovw_ch6</name>
              <description>This bit indicates that there is a data overwritten situation in bit_adc_data_ch6 taking place. A data overwritten situation is that a former conversion data is NOT read before a new conversion is written to data field. It would be cleared to 0 when a read operation of reg_adc_data_ch6.
0: There is no data overwritten case.
1: There is a data overwritten case.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_num_ch6</name>
              <description>This field contains the newest conversion data of channel 6
[15:12]: which channel in channel list the data belongs to, only valid when bit_adc_ch_unmask=1</description>
              <bitRange>[15:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_data_ch6</name>
              <description>This field contains the newest conversion data of channel 6
[11:0]: newest data</description>
              <bitRange>[11:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_DATA_CH7</name>
          <addressOffset>0x00000088</addressOffset>
          <size>32</size>
          <description>ADC Channel 7 Data Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_dat_rdy_ch7</name>
              <description>This bit indicates that a conversion is done. Every time a conversion is done, this bit should be set to 1 and it would be cleared to 0 when a read operation of reg_adc_data_ch7.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_dat_ovw_ch7</name>
              <description>This bit indicates that there is a data overwritten situation in bit_adc_data_ch7 taking place. A data overwritten situation is that a former conversion data is NOT read before a new conversion is written to data field. It would be cleared to 0 when a read operation of reg_adc_data_ch7.
0: There is no data overwritten case.
1: There is a data overwritten case.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_num_ch7</name>
              <description>This field contains the newest conversion data of channel 7
[15:12]: which channel in channel list the data belongs to, only valid when bit_adc_ch_unmask=1</description>
              <bitRange>[15:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_data_ch7</name>
              <description>This field contains the newest conversion data of channel 7
[11:0]: newest data</description>
              <bitRange>[11:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_DATA_CH8</name>
          <addressOffset>0x0000008C</addressOffset>
          <size>32</size>
          <description>ADC Channel 8 Data Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_dat_rdy_ch8</name>
              <description>This bit indicates that a conversion is done. Every time a conversion is done, this bit should be set to 1 and it would be cleared to 0 when a read operation of reg_adc_data_ch8.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_dat_ovw_ch8</name>
              <description>This bit indicates that there is a data overwritten situation in bit_adc_data_ch8 taking place. A data overwritten situation is that a former conversion data is NOT read before a new conversion is written to data field. It would be cleared to 0 when a read operation of reg_adc_data_ch8.
0: There is no data overwritten case.
1: There is a data overwritten case.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_num_ch8</name>
              <description>This field contains the newest conversion data of channel 8
[15:12]: which channel in channel list the data belongs to, only valid when bit_adc_ch_unmask=1</description>
              <bitRange>[15:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_data_ch8</name>
              <description>This field contains the newest conversion data of channel 8
[11:0]: newest data</description>
              <bitRange>[11:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_DATA_CH9</name>
          <addressOffset>0x00000090</addressOffset>
          <size>32</size>
          <description>ADC Channel 9 Data Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_dat_rdy_ch9</name>
              <description>This bit indicates that a conversion is done. Every time a conversion is done, this bit should be set to 1 and it would be cleared to 0 when a read operation of reg_adc_data_ch9.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_dat_ovw_ch9</name>
              <description>This bit indicates that there is a data overwritten situation in bit_adc_data_ch9 taking place. A data overwritten situation is that a former conversion data is NOT read before a new conversion is written to data field. It would be cleared to 0 when a read operation of reg_adc_data_ch9.
0: There is no data overwritten case.
1: There is a data overwritten case.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_num_ch9</name>
              <description>This field contains the newest conversion data of channel 9
[15:12]: which channel in channel list the data belongs to, only valid when bit_adc_ch_unmask=1</description>
              <bitRange>[15:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_data_ch9</name>
              <description>This field contains the newest conversion data of channel 9
[11:0]: newest data</description>
              <bitRange>[11:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_DATA_GLOBAL</name>
          <addressOffset>0x00000094</addressOffset>
          <size>32</size>
          <description>ADC Global Data Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_dat_ch</name>
              <description>This field indicates which channel data is procedd right now</description>
              <bitRange>[21:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_dat_rdy_global</name>
              <description>This bit indicates that a conversion is done. Every time a conversion is done, this bit should be set to 1 and it would be cleared to 0 when a read operation of reg_adc_data_global</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_dat_ovw_global</name>
              <description>This bit indicates that there is a data overwritten situation in bit_adc_data_global taking place. A data overwritten situation is that a former conversion data is NOT read before a new conversion is written to data field.
0: there is no data overwritten case.
1: there is a data overwritten case.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_ch_num_global</name>
              <description>This field contains the newest conversion data of channel in the list.
[15:12]: which channel in channel list the data belongs to, only valid when bit_adc_ch_unmask=1</description>
              <bitRange>[15:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_adc_data_global</name>
              <description>This field contains the newest conversion data of channel in the list.
[11:0]: newest data</description>
              <bitRange>[11:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_FLR</name>
          <addressOffset>0x00000098</addressOffset>
          <size>32</size>
          <description>ADC FIFO Level Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_flr</name>
              <description>This field records the current ADC FIFO entry number.</description>
              <bitRange>[4:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_CLR_FIFO</name>
          <addressOffset>0x0000009C</addressOffset>
          <size>32</size>
          <description>ADC Clear FIFO Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_clr_fifo</name>
              <description>This bit is used to clear FIFO contents and makes it to the default status. Every time this bit is set to 1. FIFO would be cleared to the default status. Software should set this bit to 0 after FIFO is cleared.
0: No effect
1: Clear FIFO</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_CLK_DIV</name>
          <addressOffset>0x000000A0</addressOffset>
          <size>32</size>
          <description>ADC Clock Divider Register</description>
          <resetValue>0x00000003</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_clk_div</name>
              <description>This field defines clock driver level of ADC module.
A value of 0 is for clock divided by 2.
A value of 1 is for clock divided by 4.
A value of 2 is for clock divided by 8.
A value of 3 is for clock divided by 12.
A value of 4 is for clock divided by 16.
A value of 5 is for clock divided by 32.
A value of 6 is for clock divided by 64.</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_DELAY_CNT</name>
          <addressOffset>0x000000A4</addressOffset>
          <size>32</size>
          <description>ADC Delay Count Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_ch_unmask</name>
              <description>Enable BIT_ADC_DAT_CHID</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_clk_sel</name>
              <description>Just config to 00</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_delay</name>
              <description>This field defines channel switch data delay count.
A value of 0 is for using default count of hardware.</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_ctrl_delay</name>
              <description>This field defines channel switch ctrl delay count.
A value of 0 is for using default count of hardware.</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_PWR_CTRL</name>
          <addressOffset>0x000000A8</addressOffset>
          <size>32</size>
          <description>ADC Power Control Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_dbg_en</name>
              <description>Debug port enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_dbg_sel</name>
              <description>Debug port select</description>
              <bitRange>[2:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_adc_pwr_ctrl</name>
              <description>This field is used to power control</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_SW_TMODE</name>
          <addressOffset>0x000000AC</addressOffset>
          <size>32</size>
          <description>ADC Software Test Mode</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_adc_sw_tmode</name>
              <description>This bit is used to change the high 4 bits in FIFO.
0: normal mode, the high 4 bits will be null or the channel number
1: software test mode, the high 4 bits will be the counter number of sample points. (loop from 0 to 15)</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ADC_DUMMY</name>
          <addressOffset>0x000000B0</addressOffset>
          <size>32</size>
          <description>ADC Dummy Register</description>
          <resetValue>0x0000FFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>Dummy register</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>comp</name>
      <baseAddress>0x4101C800</baseAddress>
      <size>0x00000058</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00000058</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>REG_COMP_REF_CH0</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description>Comparator Channel 0 Reference Voltage Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_comp_ref1_ch0</name>
              <description>This field controls the comparator channel 0 internal reference voltage 1. Vref1 is equal to (the value of bit_comp_ref1)*0.1V. Therefore, when bit_comp_ref1 is 5, Vref1 is 0.5V. Vref1 is used as high level thredshold, so user must keep Vref1 &gt;= Vref0.</description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_ref0_ch0</name>
              <description>This field controls the comparator channel 0 internal reference voltage 0. Vref0 is equal to (the value of bit_comp_ref0)*0.1V. Therefore, when bit_comp_ref0 is 5, Vref0 is 0.5V. Vref0 is used as low level thredshold, so user must keep Vref1 &gt;= Vref0.</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_COMP_REF_CH1</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description>Comparator Channel 1 Reference Voltage Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_comp_ref1_ch1</name>
              <description>This field controls the comparator channel 1 internal reference voltage 1. Vref1 is equal to (the value of bit_comp_ref1)*0.1V. Therefore, when bit_comp_ref1 is 5, Vref1 is 0.5V. Vref1 is used as high level thredshold, so user must keep Vref1 &gt;= Vref0.</description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_ref0_ch1</name>
              <description>This field controls the comparator channel 1 internal reference voltage 0. Vref0 is equal to (the value of bit_comp_ref0)*0.1V. Therefore, when bit_comp_ref0 is 5, Vref0 is 0.5V. Vref0 is used as low level thredshold, so user must keep Vref1 &gt;= Vref0.</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_COMP_REF_CH2</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description>Comparator Channel 2 Reference Voltage Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_comp_ref1_ch2</name>
              <description>This field controls the comparator channel 2 internal reference voltage 1. Vref1 is equal to (the value of bit_comp_ref1)*0.1V. Therefore, when bit_comp_ref1 is 5, Vref1 is 0.5V. Vref1 is used as high level thredshold, so user must keep Vref1 &gt;= Vref0.</description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_ref0_ch2</name>
              <description>This field controls the comparator channel 2 internal reference voltage 0. Vref0 is equal to (the value of bit_comp_ref0)*0.1V. Therefore, when bit_comp_ref0 is 5, Vref0 is 0.5V. Vref0 is used as low level thredshold, so user must keep Vref1 &gt;= Vref0.</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_COMP_REF_CH3</name>
          <addressOffset>0x0000000C</addressOffset>
          <size>32</size>
          <description>Comparator Channel 3 Reference Voltage Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_comp_ref1_ch3</name>
              <description>This field controls the comparator channel 3 internal reference voltage 1. Vref1 is equal to (the value of bit_comp_ref1)*0.1V. Therefore, when bit_comp_ref1 is 5, Vref1 is 0.5V. Vref1 is used as high level thredshold, so user must keep Vref1 &gt;= Vref0.</description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_ref0_ch3</name>
              <description>This field controls the comparator channel 3 internal reference voltage 0. Vref0 is equal to (the value of bit_comp_ref0)*0.1V. Therefore, when bit_comp_ref0 is 5, Vref0 is 0.5V. Vref0 is used as low level thredshold, so user must keep Vref1 &gt;= Vref0.</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_COMP_INTR_CTRL</name>
          <addressOffset>0x00000010</addressOffset>
          <size>32</size>
          <description>Comparator Interrupt Control Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_comp_conti_vs_en</name>
              <description>At continuous mode, channel Vref hysteresis level rising interrupt. 0:disable;  1:enable</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_conti_vh_en</name>
              <description>At continuous mode, channel Vref high level rising interrupt. 0:disable;  1:enable</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_conti_vl_en</name>
              <description>At continuous mode, channel Vref low level rising interrupt. 0:disable;  1:enable</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_wk_sys_ctrl_3</name>
              <description>This field defines the criterion of when comparator channel 3 should wake up system. The comparator should send wakeup signal only when bit_comp_wk_sys_en is 1, if the criterion matches. 
0: When Vin &lt; Vref0, the comparator wakes up system. 
1: When Vin &gt;= Vref1, the comparator wakes up system. 
2: When Vin &gt; Vref0 and Vin &lt; Vref1, the comparator wakes up system.</description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_wk_sys_en_3</name>
              <description>This bit controls whether the comparator channel 3 sends wakeup signal or not when the criterion of bit_comp_wk_sys_ctrl matches. 
0: Disable comparator wakes up system. 
1: Enable comparator wakes up system.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_wk_sys_ctrl_2</name>
              <description>This field defines the criterion of when comparator channel 2 should wake up system. The comparator should send wakeup signal only when bit_comp_wk_sys_en is 1, if the criterion matches. 
0: When Vin &lt; Vref0, the comparator wakes up system. 
1: When Vin &gt;= Vref1, the comparator wakes up system. 
2: When Vin &gt; Vref0 and Vin &lt; Vref1, the comparator wakes up system.</description>
              <bitRange>[24:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_wk_sys_en_2</name>
              <description>This bit controls whether the comparator channel 2 sends wakeup signal or not when the criterion of bit_comp_wk_sys_ctrl matches. 
0: Disable comparator wakes up system. 
1: Enable comparator wakes up system.</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_wk_sys_ctrl_1</name>
              <description>This field defines the criterion of when comparator channel 1 should wake up system. The comparator should send wakeup signal only when bit_comp_wk_sys_en is 1, if the criterion matches. 
0: When Vin &lt; Vref0, the comparator wakes up system. 
1: When Vin &gt;= Vref1, the comparator wakes up system. 
2: When Vin &gt; Vref0 and Vin &lt; Vref1, the comparator wakes up system.</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_wk_sys_en_1</name>
              <description>This bit controls whether the comparator channel 1 sends wakeup signal or not when the criterion of bit_comp_wk_sys_ctrl matches. 
0: Disable comparator wakes up system. 
1: Enable comparator wakes up system.</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_wk_sys_ctrl_0</name>
              <description>This field defines the criterion of when comparator channel 0 should wake up system. The comparator should send wakeup signal only when bit_comp_wk_sys_en is 1, if the criterion matches. 
0: When Vin &lt; Vref0, the comparator wakes up system. 
1: When Vin &gt;= Vref1, the comparator wakes up system. 
2: When Vin &gt; Vref0 and Vin &lt; Vref1, the comparator wakes up system.</description>
              <bitRange>[18:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_wk_sys_en_0</name>
              <description>This bit controls whether the comparator channel 0 sends wakeup signal or not when the criterion of bit_comp_wk_sys_ctrl matches. 
0: Disable comparator wakes up system. 
1: Enable comparator wakes up system.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_wk_adc_ctrl_3</name>
              <description>This field defines the criterion of when comparator channel 3 should wake up ADC. The comparator should send wakeup signal only when bit_comp_wk_adc_en is 1, if the criterion matches. 
0: When Vin &lt; Vref0, the comparator wakes up ADC. 
1: When Vin &gt;= Vref1, the comparator wakes up ADC. 
2: When Vin &gt; Vref0 and Vin &lt; Vref1, the comparator wakes up ADC.</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_wk_adc_en_3</name>
              <description>This bit controls whether the comparator channel 3 sends wakeup signal or not when the criterion of bit_comp_wk_adc_ctrl matches. 
0: Disable comparator wakes up ADC. 
1: Enable comparator wakes up ADC.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_wk_adc_ctrl_2</name>
              <description>This field defines the criterion of when comparator channel 2 should wake up ADC. The comparator should send wakeup signal only when bit_comp_wk_adc_en is 1, if the criterion matches. 
0: When Vin &lt; Vref0, the comparator wakes up ADC. 
1: When Vin &gt;= Vref1, the comparator wakes up ADC. 
2: When Vin &gt; Vref0 and Vin &lt; Vref1, the comparator wakes up ADC.</description>
              <bitRange>[8:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_wk_adc_en_2</name>
              <description>This bit controls whether the comparator channel 2 sends wakeup signal or not when the criterion of bit_comp_wk_adc_ctrl matches. 
0: Disable comparator wakes up ADC. 
1: Enable comparator wakes up ADC.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_wk_adc_ctrl_1</name>
              <description>This field defines the criterion of when comparator channel 1 should wake up ADC. The comparator should send wakeup signal only when bit_comp_wk_adc_en is 1, if the criterion matches. 
0: When Vin &lt; Vref0, the comparator wakes up ADC. 
1: When Vin &gt;= Vref1, the comparator wakes up ADC. 
2: When Vin &gt; Vref0 and Vin &lt; Vref1, the comparator wakes up ADC.</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_wk_adc_en_1</name>
              <description>This bit controls whether the comparator channel 1 sends wakeup signal or not when the criterion of bit_comp_wk_adc_ctrl matches. 
0: Disable comparator wakes up ADC. 
1: Enable comparator wakes up ADC.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_wk_adc_ctrl_0</name>
              <description>This field defines the criterion of when comparator channel 0 should wake up ADC. The comparator should send wakeup signal only when bit_comp_wk_adc_en is 1, if the criterion matches. 
0: When Vin &lt; Vref0, the comparator wakes up ADC. 
1: When Vin &gt;= Vref1, the comparator wakes up ADC. 
2: When Vin &gt; Vref0 and Vin &lt; Vref1, the comparator wakes up ADC.</description>
              <bitRange>[2:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_wk_adc_en_0</name>
              <description>This bit controls whether the comparator channel 0 sends wakeup signal or not when the criterion of bit_comp_wk_adc_ctrl matches. 
0: Disable comparator wakes up ADC. 
1: Enable comparator wakes up ADC.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_COMP_WK_STS</name>
          <addressOffset>0x00000014</addressOffset>
          <size>32</size>
          <description>Comparator Wakeup ADC/SYS Status Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_comp_conti_vs_sts</name>
              <description>At continuous mode, channel Vref hysteresis level rising interrupt status</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_comp_conti_vh_sts</name>
              <description>At continuous mode, channel Vref high level rising interrupt status</description>
              <bitRange>[29:29]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_comp_conti_vl_sts</name>
              <description>At continuous mode, channel Vref low level rising interrupt status</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_comp_wk_sys_sts_3</name>
              <description>Channel 3 system wakeup status</description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_comp_wk_sys_sts_2</name>
              <description>Channel 2 system wakeup status</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_comp_wk_sys_sts_1</name>
              <description>Channel 1 system wakeup status</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_comp_wk_sys_sts_0</name>
              <description>Channel 0 system wakeup status</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_comp_wk_adc_sts_3</name>
              <description>Channel 3 ADC wakeup status</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_comp_wk_adc_sts_2</name>
              <description>Channel 2 ADC wakeup status</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_comp_wk_adc_sts_1</name>
              <description>Channel 1 ADC wakeup status</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_comp_wk_adc_sts_0</name>
              <description>Channel 0 ADC wakeup status</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_COMP_WK_STS_RAW</name>
          <addressOffset>0x00000018</addressOffset>
          <size>32</size>
          <description>Comparator Wakeup Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_comp_conti_vs_raw</name>
              <description>At continuous mode, channel Vref hysteresis level rising interrupt status raw</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_comp_conti_vh_raw</name>
              <description>At continuous mode, channel Vref high level rising interrupt status raw</description>
              <bitRange>[29:29]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_comp_conti_vl_raw</name>
              <description>At continuous mode, channel Vref low level rising interrupt status raw</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>sys_wake_3</name>
              <description>Channle 3 system wakeup status raw</description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>sys_wake_2</name>
              <description>Channel 2 system wakeup status raw</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>sys_wake_1</name>
              <description>Channle 1 system wakeup status raw</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>sys_wake_0</name>
              <description>Channle 0 system wakeup status raw</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>adc_wake_3_raw</name>
              <description>Channle 3 ADC wakeup status raw</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>adc_wake_2_raw</name>
              <description>Channel 2 ADC wakeup status raw</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>adc_wake_1_raw</name>
              <description>Channle 1 ADC wakeup status raw</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>adc_wake_0_raw</name>
              <description>Channle 0 ADC wakeup status raw</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_COMP_CHSW_LIST</name>
          <addressOffset>0x0000001C</addressOffset>
          <size>32</size>
          <description>Comparator Channel Switch List Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_comp_chsw_3</name>
              <description>This field defines the channel 3 to do a comparison when the start-compare event takes place.</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_chsw_2</name>
              <description>This field defines the channel 2 to do a comparison when the start-compare event takes place.</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_chsw_1</name>
              <description>This field defines the channel 1 to do a comparison when the start-compare event takes place.</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_chsw_0</name>
              <description>This field defines the channel 0 to do a comparison when the start-compare event takes place.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_COMP_LAST_CH</name>
          <addressOffset>0x00000020</addressOffset>
          <size>32</size>
          <description>Comparator Last Channel Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_comp_last_ch</name>
              <description>Last channel used</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_COMP_BUSY_STS</name>
          <addressOffset>0x00000024</addressOffset>
          <size>32</size>
          <description>Comparator Busy Status Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_comp_busy_sts</name>
              <description>This bit reflects whether the comparatos is busy or not. 
0: The comparatos is ready. 
1: The comparator is busy.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_COMP_CH_STS</name>
          <addressOffset>0x00000028</addressOffset>
          <size>32</size>
          <description>Comparator Channel Status Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_comp_ch_sts_3</name>
              <description>This field reflects the channel 3 comparison result.
0: When Vin &lt; Vref0. 
1: When Vin &gt;= Vref1. 
2: When Vin &gt; Vref0 and Vin &lt; Vref1.</description>
              <bitRange>[7:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_comp_ch_sts_2</name>
              <description>This field reflects the channel 2 comparison result.
0: When Vin &lt; Vref0. 
1: When Vin &gt;= Vref1. 
2: When Vin &gt; Vref0 and Vin &lt; Vref1.</description>
              <bitRange>[5:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_comp_ch_sts_1</name>
              <description>This field reflects the channel 1 comparison result.
0: When Vin &lt; Vref0. 
1: When Vin &gt;= Vref1. 
2: When Vin &gt; Vref0 and Vin &lt; Vref1.</description>
              <bitRange>[3:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_comp_ch_sts_0</name>
              <description>This field reflects the channel 0 comparison result.
0: When Vin &lt; Vref0. 
1: When Vin &gt;= Vref1. 
2: When Vin &gt; Vref0 and Vin &lt; Vref1.</description>
              <bitRange>[1:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_COMP_AUTO_SHUT</name>
          <addressOffset>0x0000002C</addressOffset>
          <size>32</size>
          <description>Comparator Automatic Shut Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_comp_auto_shut</name>
              <description>This bit controls the comparator to disable the analog module and mux automatically or not after the analog conversion is done. 
0: The analog module and mux will NOT be disabled. 
1: The analog module and mux will be disabled automatically after the analog conversion is done.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_COMP_EXT_TRIG_CTRL</name>
          <addressOffset>0x00000030</addressOffset>
          <size>32</size>
          <description>Comparator External Trigger Control Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_comp_ext_wk_timer</name>
              <description>This bit controls the external trigger source of general timer enabled or not. If it's enabled, the comparator would execute comparison process when the timer event sends to comparator module. 
0: Disable external timer trigger. 
1: Enable external timer trigger.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_COMP_EXT_TRIG_TIMER_SEL</name>
          <addressOffset>0x00000034</addressOffset>
          <size>32</size>
          <description>Comparator External Trigger Timer Select Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_comp_ext_wk_timer_sel</name>
              <description>This field defines which timer channel would be used to wake up the comparator. 
0: timer module 0 is used as the comparator external trigger source. 
1:timer module 1 is used as the comparator external trigger source. ...so on... 
7:timer module 7 is used as the comparator external trigger source.</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_COMP_RST_LIST</name>
          <addressOffset>0x00000038</addressOffset>
          <size>32</size>
          <description>Comparator Reset Channel List Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_comp_rst_list</name>
              <description>This bit controls to reset the channel switch to default state or not. Once this bit is set, the auto/manual channel switch goes to the first channel as a default state. 0: Do Not reset conversion list to default state. 1:Reset conversion list to default state.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_COMP_AUTOSW_EN</name>
          <addressOffset>0x0000003C</addressOffset>
          <size>32</size>
          <description>Comparator Automatic Channel Switch Enable Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_comp_autosw_en</name>
              <description>This bit controls the automatic channel switch enabled or disabled. 
0: Disable the automatic channel switch. If an automatic channel switch is in process, writing 0 will terminate the automatic channel switch. 
1: Enable the automatic channel switch. When setting this bit, an automatic channel switch starts from the first channel in the channel switch list.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_COMP_EN_TRIG</name>
          <addressOffset>0x00000040</addressOffset>
          <size>32</size>
          <description>Comparator Enable Trigger Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>comp_dbg_en</name>
              <description>The comparator IP debug port enable.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_en_trig</name>
              <description>This bit controls the analog module and the analog mux of comparator to be enabled or not. Every time this bit is written, the comparator switches to a new channel and does one comparison. After this, it shuts down the analog module according to REG_COMP_AUTO_SHUT. Therefore, this bit can be used as a start-compare event which is controlled by software. Every time a comparison is done, software must clear this bit manually.
0: Disable the analog module and analog mux.
1: Enable the analog module and analog mux, then start a new channel comparison.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_enable</name>
              <description>The comparator IP internal enable.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_COMP_CTRL_CNT</name>
          <addressOffset>0x00000044</addressOffset>
          <size>32</size>
          <description>Comparator External Wake Shut Count Register</description>
          <resetValue>0xA06E6E96</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_comp_powon_cnt</name>
              <description>This field defines how long the comparator analog module can work after the comparator is enabled, the value will be multipled 2 in hardware circuit. Therefore, this is about 160us.</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_data_valid_cnt</name>
              <description>This field defines how long the comparator analog module data is valid for digital module after analog module works. It's about 55us.</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_chsw_cnt</name>
              <description>This field defines how long the channel switch can jump to next channel at automatic channel switch mode. It's about 55us.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_ext_wk_shut_cnt</name>
              <description>This field defines how long to disable comparator analog module when an external trigger event is sent to the comparator. The count must include the comparator response time to get a correct compare result.It's about 75us.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_COMP_LPSD</name>
          <addressOffset>0x00000048</addressOffset>
          <size>32</size>
          <description>Comparator Analog Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_comp_bg</name>
              <description>comparator's POW_BG, power on BG</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>bit_comp_lpsd_dummy</name>
              <description>reserved</description>
              <bitRange>[30:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_en_vref0l</name>
              <description></description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_en_vref0h</name>
              <description></description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_lpsd_11_2_fw</name>
              <description>comp_lpsd[11:2], for every bit:
[11:7]: SEL_VREFL, Vref low voltage
    0000: 25mV, 25mV/step
[6:2]: SEL_VREFH, Vref high voltage
    0000: 25mV, 25 mV/step</description>
              <bitRange>[11:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_lpsd_1</name>
              <description>SD_POSEDGE, 1: Vin &gt; Vref output high</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_lpsd_0_fw</name>
              <description>POW SD, power on SD</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_COMP_CONTINUOUS_CTRL_0</name>
          <addressOffset>0x0000004C</addressOffset>
          <size>32</size>
          <description>Comparator Continuous Control Register 0</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_comp_hyst_en</name>
              <description>enable comparator hysteresis circuit function.
hysteresis circuit function can only take effect in continuous function.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_continuous_en</name>
              <description>enable comparator continuous sample function.
continuous sample function can only take effect in autoswitch mode with autoshut is disabled, and 4 channels in list are must configured into same channel</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_zcd_sel</name>
              <description>select output ZCD signals source:
00: none ; 01: comp out Vref1; 10: comp out Vref0; 11: comp hysteresis</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_vs_dbc_cnt</name>
              <description>hysteresis debounce counter for ZCD</description>
              <bitRange>[14:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_COMP_CONTINUOUS_CTRL_1</name>
          <addressOffset>0x00000050</addressOffset>
          <size>32</size>
          <description>Comparator Continuous Control Register 1</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_comp_vh_dbc_cnt</name>
              <description>Vref high level debounce counter for ZCD</description>
              <bitRange>[30:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_comp_vl_dbc_cnt</name>
              <description>Vref low level debounce counter for ZCD</description>
              <bitRange>[14:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_COMP_DUMMY</name>
          <addressOffset>0x00000054</addressOffset>
          <size>32</size>
          <description>Comparator Dummy Register</description>
          <resetValue>0x0000FFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>dummy register</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>captouch</name>
      <baseAddress>0x4101E000</baseAddress>
      <size>0x00000418</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00000418</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>CTC_CTRL</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description>Captouch Control Register</description>
          <resetValue>0x00000100</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>baseline_ini</name>
              <description>1: Baseline initial function enable, HW will clear this bit to "0" after baseline initial</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>debounce_time</name>
              <description>2'b00: 2 times
2'b01: 3 times
2'b10: 4 times
2'b11: 5 times</description>
              <bitRange>[6:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>debounce_en</name>
              <description>0: Disable
1: Enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ct_enable</name>
              <description>0: CTC disable
1: CTC enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCAN_PERIOD</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description>Scan Parameters Register</description>
          <resetValue>0x0006003C</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>sample_ave_ctrl</name>
              <description>ADC sampled number for average function
average number=2^(sample_ave_ctrl+2)</description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>scan_interval</name>
              <description>Code: 0~4095 (0~0xFFF), unit is 1.024KHz cycle (1/32 32.768KHz).
When this register is set to 0 or 1, HW will scan continuously and have no sleep time. Recommend value: 60~480ms</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ETC_CTRL</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description>Environment Tracking Control Register</description>
          <resetValue>0x00001204</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>baseline_upd_step</name>
              <description>Baseline update step for all channel</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>baseline_wt_factor</name>
              <description>Baseline update weight factor (ETC_factor_th) for all channel
ETC_factor_th=2^baseline_wt_factor</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>etc_scan_interval</name>
              <description>ETC update interval between scan period (sleep time) for all channel
Interval=(etc_scan_interval+1)*scan_period</description>
              <bitRange>[7:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>etc_func_ctrl</name>
              <description>Environmental cap tracking calibration function
0: Disable
1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SNR_INF</name>
          <addressOffset>0x0000000C</addressOffset>
          <size>32</size>
          <description>Signal Noise Ratio Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>snr_upd_always</name>
              <description>1: Update SNR info no matter touch or not (used only in debug function)</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>snr_noise_data</name>
              <description>Noise peak to peak signal raw data for SNR monitor</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>snr_touch_data</name>
              <description>Raw data of touch(signal-baseline)for SNR monitor</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DEBUG_MODE_CTRL</name>
          <addressOffset>0x00000010</addressOffset>
          <size>32</size>
          <description>Debug and Channel Swith Mode Register</description>
          <resetValue>0x00000010</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ch_ctrl</name>
              <description>Scan channel control
0000: channel 0
0001: channel 1
0010: channel 2
0011: channel 3
0100: channel 4
0101: channel 5
0110: channel 6
0111: channel 7
1000: channel 8 (guard sensor)</description>
              <bitRange>[8:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch_switch_ctrl</name>
              <description>Scan channel switch control
0: Auto switch function disable (manual switch by ch_ctrl)
1: Auto switch to next channel (channel 0 --&gt; channel 3 --&gt; channel 0)</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>continue_sample_en</name>
              <description>continue sample one channel mode enable, only take effect in debug mode
1: enable
0: disable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>debug_en</name>
              <description>Debug mode enable
0: Disable
1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RAW_CODE_FIFO_STATUS</name>
          <addressOffset>0x00000014</addressOffset>
          <size>32</size>
          <description>FIFO Status Register</description>
          <resetValue>0x00000002</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>afifo_clear</name>
              <description>clear the FIFO data</description>
              <bitRange>[16:16]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>afifo_full_lvl</name>
              <description>user define the full level for afifo, the valid value is from 0 to 63</description>
              <bitRange>[15:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>afifo_valid_cnt</name>
              <description>Raw code FIFO valid cnt(push unit number which can be read)</description>
              <bitRange>[9:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>afifo_over_lvl</name>
              <description>0: Raw code FIFO not over level
1: Raw code FIFO over level</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>afifo_empty</name>
              <description>0: Raw code FIFO not empty
1: Raw code FIFO empty</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>afifo_full</name>
              <description>0: Raw code FIFO not oveflow (not full)
1: Raw code FIFO overflow(full)</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RAW_CODE_FIFO_READ</name>
          <addressOffset>0x00000018</addressOffset>
          <size>32</size>
          <description>FIFO Read Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>afifo_rd_data_vld</name>
              <description>Read data from raw code FIFO valid</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>afifo_rd_ch_num</name>
              <description>Read data from raw code FIFO
channel number</description>
              <bitRange>[15:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>afifo_rd_data</name>
              <description>Read data from raw code FIFO
data</description>
              <bitRange>[11:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INTERRUPT_ENABLE</name>
          <addressOffset>0x00000020</addressOffset>
          <size>32</size>
          <description>Interrupt Enable Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>afifo_overlvl_intr_en</name>
              <description>Raw code FIFO over level enable</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>guard_release_intr_en</name>
              <description>Guard sensor release enable</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>guard_press_intr_en</name>
              <description>Guard sensor press enable</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>over_n_noise_th_intr_en</name>
              <description>Negative noise threshold overflow enable</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>afifo_overflow_intr_en</name>
              <description>Raw code FIFO overflow enable</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>over_p_noise_th_intr_en</name>
              <description>Positive noise threshold overflow enable</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>touch_release_intr_en</name>
              <description>Channelx single touch release enable, x is 0~7</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>touch_press_intr_en</name>
              <description>Channelx single touch press enable, x is 0~7</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INTERRUPT_STATUS</name>
          <addressOffset>0x00000024</addressOffset>
          <size>32</size>
          <description>interrupt status register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>afifo_overlvl_intr</name>
              <description>Raw code FIFO over level interrupt</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>guard_release_intr</name>
              <description>Guard sensor release interrupt</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>guard_press_intr</name>
              <description>Guard sensor press interrupt</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>over_n_noise_th_intr</name>
              <description>Negative noise threshold overflow interrupt</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>afifo_overflow_intr</name>
              <description>Raw code FIFO overflow interrupt</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>over_p_noise_th_intr</name>
              <description>Positive noise threshold overflow interrupt</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>touch_release_intr</name>
              <description>Channelx single touch release interrupt, x is 0~7</description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>touch_press_intr</name>
              <description>Channelx single touch press interrupt, x is 0~7</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RAW_INTERRUPT_STATUS</name>
          <addressOffset>0x00000028</addressOffset>
          <size>32</size>
          <description>Raw Interrupt Status Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>afifo_overlvl</name>
              <description>Raw code FIFO over level raw interrupt</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>guard_release</name>
              <description>Guard sensor release raw interrupt</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>guard_press</name>
              <description>Guard sensor press raw interrupt</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>over_n_noise_th</name>
              <description>Negative noise threshold overflow raw interrupt</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>afifo_overflow</name>
              <description>Raw code FIFO overflow raw interrupt</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>over_p_noise_th</name>
              <description>Positive noise threshold overflow raw interrupt</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>touch_release</name>
              <description>Channelx single touch release raw interrupt, x is 0~7</description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>touch_press</name>
              <description>Channelx single touch press raw interrupt, x is 0~7</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INTERRUPT_ALL_CLR</name>
          <addressOffset>0x00000030</addressOffset>
          <size>32</size>
          <description>Interrupt All Clear Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>intr_all_clr</name>
              <description>Write "1" to this register to clear the combined interrupts, all individual interrupts, interrupt status register and raw interrupt status register.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INTERRUPT_STATUS_CLR</name>
          <addressOffset>0x00000034</addressOffset>
          <size>32</size>
          <description>Interrupt Clear Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>afifo_overlvl_clr</name>
              <description>Clear raw code FIFO over level raw interrupt and related register</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>guard_release_clr</name>
              <description>Clear guard sensor release interrupt and related register</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>guard_press_clr</name>
              <description>Clear guard sensor press interrupt and related register</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>over_n_noise_th_clr</name>
              <description>Clear negative noise threshold overflow interrupt and related register</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>afifo_overflow_clr</name>
              <description>Clear raw code FIFO overflow interrupt and related register</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>over_p_noise_th_clr</name>
              <description>Clear positive noise threshold overflow interrupt and related register</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>touch_release_clr</name>
              <description>Clear channelx single touch release interrupt and related register</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>touch_press_clr</name>
              <description>Clear channelx single touch press interrupt and related register</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DEBUG_SEL</name>
          <addressOffset>0x00000040</addressOffset>
          <size>32</size>
          <description>Debug Select Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dbg_sel</name>
              <description>Debug information selection
0: dbg_clkrst
1: dbg_apbslv
2: dbg_ctrl
3: dbg_decision
4: dbg_adc_arb
Others: dbg_clkrst</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DEBUG_PORT</name>
          <addressOffset>0x00000044</addressOffset>
          <size>32</size>
          <description>Debug Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dbg_port</name>
              <description>Debug port output value,depend on dbg_sel value</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ECO_USE0</name>
          <addressOffset>0x00000048</addressOffset>
          <size>32</size>
          <description>ECO USE0 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eco_use0</name>
              <description>For ECO use</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ECO_USE1</name>
          <addressOffset>0x0000004C</addressOffset>
          <size>32</size>
          <description>ECO USE1 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eco_use1</name>
              <description>For ECO use</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CTC_COMP_VERSION</name>
          <addressOffset>0x00000050</addressOffset>
          <size>32</size>
          <description>Version Register</description>
          <resetValue>0x20180123</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>comp_version</name>
              <description>CTC version number</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CH0_CTRL</name>
          <addressOffset>0x00000100</addressOffset>
          <size>32</size>
          <description>Channel 0 Control Register</description>
          <resetValue>0x00640000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ch0_d_touch_th</name>
              <description>Difference threshold data of touch judgement for channel 0.
It needs to be configured during development, (0x0~0xFFF) (0~4095). 
Init number=0x1E
Recommend data=80%*(signal-baseline)</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch0_baseline</name>
              <description>Digital baseline data of channel 0.
Init number=0x0
It can be initialed by HW when baseline initial function enabled, and can be updated automatically by HW when ETC function enabled.
It could be configured by manual tuning.</description>
              <bitRange>[15:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch0_en</name>
              <description>Cap sensor activity control of channel 0
0: Disable
1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CH0_NOISE_TH</name>
          <addressOffset>0x00000104</addressOffset>
          <size>32</size>
          <description>Channel 0 Noise Threshold Register</description>
          <resetValue>0x00280028</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ch0_n_ent</name>
              <description>The environmental negative noise threshold: the negative maximum capacitance change of raw data that is still considered an environment change.</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch0_p_ent</name>
              <description>The environmental positive noise threshold: the positive maximum capacitance change of raw data that is still considered an environment change.</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CH0_MBIAS_ATH</name>
          <addressOffset>0x00000108</addressOffset>
          <size>32</size>
          <description>Channel 0 Mbias</description>
          <resetValue>0x00000020</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ch0_a_touch_th</name>
              <description>Absolute threshold data of touch judgement for channel 0.
It can be updated by HW when baseline initial function or ETC function enabled, a_touch_th=baseline-d_touch_th, manual tuning when ETC disabled, (0x0~0xFFF).
Recommended data=80%*signal</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch0_mbias</name>
              <description>Touch mbias current [5:0] 8u/4u/2u/1u/0.5u/0.25u for channel 0</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CH0_DATA_INF</name>
          <addressOffset>0x0000010C</addressOffset>
          <size>32</size>
          <description>Channel 0 Dtouch Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ch0_diff_data_polarity</name>
              <description>Polarity of ch0_diff_data
0: ch0_data_ave&lt;baseline
1: ch0_data_ave&gt;=baseline</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch0_diff_data</name>
              <description>Difference digital data of channel0 between ch0_data_ave and baseline</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch0_data_ave</name>
              <description>Average of channel 0 raw code</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CH1_CTRL</name>
          <addressOffset>0x00000110</addressOffset>
          <size>32</size>
          <description>Channel 0 Control Register</description>
          <resetValue>0x00640000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ch1_d_touch_th</name>
              <description>Difference threshold data of touch judgement for channel 1.
It needs to be configured during development, (0x0~0xFFF) (0~4095). 
Init number=0x1E
Recommend data=80%*(signal-baseline)</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch1_baseline</name>
              <description>Digital baseline data of channel 1.
Init number=0x0
It can be initialed by HW when baseline initial function enabled, and can be updated automatically by HW when ETC function enabled.
It could be configured by manual tuning.</description>
              <bitRange>[15:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch1_en</name>
              <description>Cap sensor activity control of channel 1
0: Disable
1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CH1_NOISE_TH</name>
          <addressOffset>0x00000114</addressOffset>
          <size>32</size>
          <description>Channel 1 Noise Threshold Register</description>
          <resetValue>0x00280028</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ch1_n_ent</name>
              <description>The environmental negative noise threshold: the negative maximum capacitance change of raw data that is still considered an environment change.</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch1_p_ent</name>
              <description>The environmental positive noise threshold: the positive maximum capacitance change of raw data that is still considered an environment change.</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CH1_MBIAS_ATH</name>
          <addressOffset>0x00000118</addressOffset>
          <size>32</size>
          <description>Channel 1 Mbias</description>
          <resetValue>0x00000020</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ch1_a_touch_th</name>
              <description>Absolute threshold data of touch judgement for channel 1.
It can be updated by HW when baseline initial function or ETC function enabled, a_touch_th=baseline-d_touch_th, manual tuning when ETC disabled, (0x0~0xFFF).
Recommended data=80%*signal</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch1_mbias</name>
              <description>Touch mbias current [5:0] 8u/4u/2u/1u/0.5u/0.25u for channel 1</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CH1_DATA_INF</name>
          <addressOffset>0x0000011C</addressOffset>
          <size>32</size>
          <description>Channel 1 Dtouch Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ch1_diff_data_polarity</name>
              <description>Polarity of ch1_diff_data
0: ch1_data_ave&lt;baseline
1: ch1_data_ave&gt;=baseline</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch1_diff_data</name>
              <description>Difference digital data of channel1 between ch1_data_ave and baseline</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch1_data_ave</name>
              <description>Average of channel 1 raw code</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CH2_CTRL</name>
          <addressOffset>0x00000120</addressOffset>
          <size>32</size>
          <description>Channel 2 Control Register</description>
          <resetValue>0x00640000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ch2_d_touch_th</name>
              <description>Difference threshold data of touch judgement for channel 2.
It needs to be configured during development, (0x0~0xFFF) (0~4095). 
Init number=0x1E
Recommend data=80%*(signal-baseline)</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch2_baseline</name>
              <description>Digital baseline data of channel 2.
Init number=0x0
It can be initialed by HW when baseline initial function enabled, and can be updated automatically by HW when ETC function enabled.
It could be configured by manual tuning.</description>
              <bitRange>[15:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch2_en</name>
              <description>Cap sensor activity control of channel 2
0: Disable
1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CH2_NOISE_TH</name>
          <addressOffset>0x00000124</addressOffset>
          <size>32</size>
          <description>Channel 2 Noise Threshold Register</description>
          <resetValue>0x00280028</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ch2_n_ent</name>
              <description>The environmental negative noise threshold: the negative maximum capacitance change of raw data that is still considered an environment change.</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch2_p_ent</name>
              <description>The environmental positive noise threshold: the positive maximum capacitance change of raw data that is still considered an environment change.</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CH2_MBIAS_ATH</name>
          <addressOffset>0x00000128</addressOffset>
          <size>32</size>
          <description>Channel 2 Mbias</description>
          <resetValue>0x00000020</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ch2_a_touch_th</name>
              <description>Absolute threshold data of touch judgement for channel 2.
It can be updated by HW when baseline initial function or ETC function enabled, a_touch_th=baseline-d_touch_th, manual tuning when ETC disabled, (0x0~0xFFF).
Recommended data=80%*signal</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch2_mbias</name>
              <description>Touch mbias current [5:0] 8u/4u/2u/1u/0.5u/0.25u for channel 2</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CH2_DATA_INF</name>
          <addressOffset>0x0000012C</addressOffset>
          <size>32</size>
          <description>Channel 2 Dtouch Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ch2_diff_data_polarity</name>
              <description>Polarity of ch2_diff_data
0: ch2_data_ave&lt;baseline
1: ch2_data_ave&gt;=baseline</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch2_diff_data</name>
              <description>Difference digital data of channel2 between ch2_data_ave and baseline</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch2_data_ave</name>
              <description>Average of channel 2 raw code</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CH3_CTRL</name>
          <addressOffset>0x00000130</addressOffset>
          <size>32</size>
          <description>Channel 3 Control Register</description>
          <resetValue>0x00640000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ch3_d_touch_th</name>
              <description>Difference threshold data of touch judgement for channel 3.
It needs to be configured during development, (0x0~0xFFF) (0~4095). 
Init number=0x1E
Recommend data=80%*(signal-baseline)</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch3_baseline</name>
              <description>Digital baseline data of channel 3.
Init number=0x0
It can be initialed by HW when baseline initial function enabled, and can be updated automatically by HW when ETC function enabled.
It could be configured by manual tuning.</description>
              <bitRange>[15:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch3_en</name>
              <description>Cap sensor activity control of channel 3
0: Disable
1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CH3_NOISE_TH</name>
          <addressOffset>0x00000134</addressOffset>
          <size>32</size>
          <description>Channel 3 Noise Threshold Register</description>
          <resetValue>0x00280028</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ch3_n_ent</name>
              <description>The environmental negative noise threshold: the negative maximum capacitance change of raw data that is still considered an environment change.</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch3_p_ent</name>
              <description>The environmental positive noise threshold: the positive maximum capacitance change of raw data that is still considered an environment change.</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CH3_MBIAS_ATH</name>
          <addressOffset>0x00000138</addressOffset>
          <size>32</size>
          <description>Channel 3 Mbias</description>
          <resetValue>0x00000020</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ch3_a_touch_th</name>
              <description>Absolute threshold data of touch judgement for channel 3.
It can be updated by HW when baseline initial function or ETC function enabled, a_touch_th=baseline-d_touch_th, manual tuning when ETC disabled, (0x0~0xFFF).
Recommended data=80%*signal</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch3_mbias</name>
              <description>Touch mbias current [5:0] 8u/4u/2u/1u/0.5u/0.25u for channel 3</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CH3_DATA_INF</name>
          <addressOffset>0x0000013C</addressOffset>
          <size>32</size>
          <description>Channel 3 Dtouch Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ch3_diff_data_polarity</name>
              <description>Polarity of ch3_diff_data
0: ch3_data_ave&lt;baseline
1: ch3_data_ave&gt;=baseline</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch3_diff_data</name>
              <description>Difference digital data of channel3 between ch3_data_ave and baseline</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch3_data_ave</name>
              <description>Average of channel 3 raw code</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CH4_CTRL</name>
          <addressOffset>0x00000140</addressOffset>
          <size>32</size>
          <description>Channel 4 Control Register</description>
          <resetValue>0x00640000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ch4_d_touch_th</name>
              <description>Difference threshold data of touch judgement for channel 4.
It needs to be configured during development, (0x0~0xFFF) (0~4095). 
Init number=0x1E
Recommend data=80%*(signal-baseline)</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch4_baseline</name>
              <description>Digital baseline data of channel 4.
Init number=0x0
It can be initialed by HW when baseline initial function enabled, and can be updated automatically by HW when ETC function enabled.
It could be configured by manual tuning.</description>
              <bitRange>[15:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch4_en</name>
              <description>Cap sensor activity control of channel 4
0: Disable
1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CH4_NOISE_TH</name>
          <addressOffset>0x00000144</addressOffset>
          <size>32</size>
          <description>Channel 4 Noise Threshold Register</description>
          <resetValue>0x00280028</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ch4_n_ent</name>
              <description>The environmental negative noise threshold: the negative maximum capacitance change of raw data that is still considered an environment change.</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch4_p_ent</name>
              <description>The environmental positive noise threshold: the positive maximum capacitance change of raw data that is still considered an environment change.</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CH4_MBIAS_ATH</name>
          <addressOffset>0x00000148</addressOffset>
          <size>32</size>
          <description>Channel 4 Mbias</description>
          <resetValue>0x00000020</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ch4_a_touch_th</name>
              <description>Absolute threshold data of touch judgement for channel 4.
It can be updated by HW when baseline initial function or ETC function enabled, a_touch_th=baseline-d_touch_th, manual tuning when ETC disabled, (0x0~0xFFF).
Recommended data=80%*signal</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch4_mbias</name>
              <description>Touch mbias current [5:0] 8u/4u/2u/1u/0.5u/0.25u for channel 4</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CH4_DATA_INF</name>
          <addressOffset>0x0000014C</addressOffset>
          <size>32</size>
          <description>Channel 4 Dtouch Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ch4_diff_data_polarity</name>
              <description>Polarity of ch4_diff_data
0: ch4_data_ave&lt;baseline
1: ch4_data_ave&gt;=baseline</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch4_diff_data</name>
              <description>Difference digital data of channel4 between ch4_data_ave and baseline</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch4_data_ave</name>
              <description>Average of channel 4 raw code</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CH5_CTRL</name>
          <addressOffset>0x00000150</addressOffset>
          <size>32</size>
          <description>Channel 5 Control Register</description>
          <resetValue>0x00640000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ch5_d_touch_th</name>
              <description>Difference threshold data of touch judgement for channel 5.
It needs to be configured during development, (0x0~0xFFF) (0~4095). 
Init number=0x1E
Recommend data=80%*(signal-baseline)</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch5_baseline</name>
              <description>Digital baseline data of channel 5.
Init number=0x0
It can be initialed by HW when baseline initial function enabled, and can be updated automatically by HW when ETC function enabled.
It could be configured by manual tuning.</description>
              <bitRange>[15:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch5_en</name>
              <description>Cap sensor activity control of channel 5
0: Disable
1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CH5_NOISE_TH</name>
          <addressOffset>0x00000154</addressOffset>
          <size>32</size>
          <description>Channel 5 Noise Threshold Register</description>
          <resetValue>0x00280028</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ch5_n_ent</name>
              <description>The environmental negative noise threshold: the negative maximum capacitance change of raw data that is still considered an environment change.</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch5_p_ent</name>
              <description>The environmental positive noise threshold: the positive maximum capacitance change of raw data that is still considered an environment change.</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CH5_MBIAS_ATH</name>
          <addressOffset>0x00000158</addressOffset>
          <size>32</size>
          <description>Channel 5 Mbias</description>
          <resetValue>0x00000020</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ch5_a_touch_th</name>
              <description>Absolute threshold data of touch judgement for channel 5.
It can be updated by HW when baseline initial function or ETC function enabled, a_touch_th=baseline-d_touch_th, manual tuning when ETC disabled, (0x0~0xFFF).
Recommended data=80%*signal</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch5_mbias</name>
              <description>Touch mbias current [5:0] 8u/4u/2u/1u/0.5u/0.25u for channel 5</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CH5_DATA_INF</name>
          <addressOffset>0x0000015C</addressOffset>
          <size>32</size>
          <description>Channel 5 Dtouch Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ch5_diff_data_polarity</name>
              <description>Polarity of ch5_diff_data
0: ch5_data_ave&lt;baseline
1: ch5_data_ave&gt;=baseline</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch5_diff_data</name>
              <description>Difference digital data of channel5 between ch5_data_ave and baseline</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch5_data_ave</name>
              <description>Average of channel 5 raw code</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CH6_CTRL</name>
          <addressOffset>0x00000160</addressOffset>
          <size>32</size>
          <description>Channel 6 Control Register</description>
          <resetValue>0x00640000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ch6_d_touch_th</name>
              <description>Difference threshold data of touch judgement for channel 6.
It needs to be configured during development, (0x0~0xFFF) (0~4095). 
Init number=0x1E
Recommend data=80%*(signal-baseline)</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch6_baseline</name>
              <description>Digital baseline data of channel 6.
Init number=0x0
It can be initialed by HW when baseline initial function enabled, and can be updated automatically by HW when ETC function enabled.
It could be configured by manual tuning.</description>
              <bitRange>[15:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch6_en</name>
              <description>Cap sensor activity control of channel 6
0: Disable
1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CH6_NOISE_TH</name>
          <addressOffset>0x00000164</addressOffset>
          <size>32</size>
          <description>Channel 6 Noise Threshold Register</description>
          <resetValue>0x00280028</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ch6_n_ent</name>
              <description>The environmental negative noise threshold: the negative maximum capacitance change of raw data that is still considered an environment change.</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch6_p_ent</name>
              <description>The environmental positive noise threshold: the positive maximum capacitance change of raw data that is still considered an environment change.</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CH6_MBIAS_ATH</name>
          <addressOffset>0x00000168</addressOffset>
          <size>32</size>
          <description>Channel 6 Mbias</description>
          <resetValue>0x00000020</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ch6_a_touch_th</name>
              <description>Absolute threshold data of touch judgement for channel 6.
It can be updated by HW when baseline initial function or ETC function enabled, a_touch_th=baseline-d_touch_th, manual tuning when ETC disabled, (0x0~0xFFF).
Recommended data=80%*signal</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch6_mbias</name>
              <description>Touch mbias current [5:0] 8u/4u/2u/1u/0.5u/0.25u for channel 6</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CH6_DATA_INF</name>
          <addressOffset>0x0000016C</addressOffset>
          <size>32</size>
          <description>Channel 6 Dtouch Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ch6_diff_data_polarity</name>
              <description>Polarity of ch6_diff_data
0: ch6_data_ave&lt;baseline
1: ch6_data_ave&gt;=baseline</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch6_diff_data</name>
              <description>Difference digital data of channel6 between ch6_data_ave and baseline</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch6_data_ave</name>
              <description>Average of channel 6 raw code</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CH7_CTRL</name>
          <addressOffset>0x00000170</addressOffset>
          <size>32</size>
          <description>Channel 7 Control Register</description>
          <resetValue>0x00640000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ch7_d_touch_th</name>
              <description>Difference threshold data of touch judgement for channel 7.
It needs to be configured during development, (0x0~0xFFF) (0~4095). 
Init number=0x1E
Recommend data=80%*(signal-baseline)</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch7_baseline</name>
              <description>Digital baseline data of channel 7.
Init number=0x0
It can be initialed by HW when baseline initial function enabled, and can be updated automatically by HW when ETC function enabled.
It could be configured by manual tuning.</description>
              <bitRange>[15:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch7_en</name>
              <description>Cap sensor activity control of channel 7
0: Disable
1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CH7_NOISE_TH</name>
          <addressOffset>0x00000174</addressOffset>
          <size>32</size>
          <description>Channel 7 Noise Threshold Register</description>
          <resetValue>0x00280028</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ch7_n_ent</name>
              <description>The environmental negative noise threshold: the negative maximum capacitance change of raw data that is still considered an environment change.</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch7_p_ent</name>
              <description>The environmental positive noise threshold: the positive maximum capacitance change of raw data that is still considered an environment change.</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CH7_MBIAS_ATH</name>
          <addressOffset>0x00000178</addressOffset>
          <size>32</size>
          <description>Channel 7 Mbias</description>
          <resetValue>0x00000020</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ch7_a_touch_th</name>
              <description>Absolute threshold data of touch judgement for channel 7.
It can be updated by HW when baseline initial function or ETC function enabled, a_touch_th=baseline-d_touch_th, manual tuning when ETC disabled, (0x0~0xFFF).
Recommended data=80%*signal</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch7_mbias</name>
              <description>Touch mbias current [5:0] 8u/4u/2u/1u/0.5u/0.25u for channel 7</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CH7_DATA_INF</name>
          <addressOffset>0x0000017C</addressOffset>
          <size>32</size>
          <description>Channel 7 Dtouch Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ch7_diff_data_polarity</name>
              <description>Polarity of ch7_diff_data
0: ch7_data_ave&lt;baseline
1: ch7_data_ave&gt;=baseline</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch7_diff_data</name>
              <description>Difference digital data of channel7 between ch7_data_ave and baseline</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch7_data_ave</name>
              <description>Average of channel 7 raw code</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CH8_CTRL</name>
          <addressOffset>0x00000180</addressOffset>
          <size>32</size>
          <description>Channel 8 Control Register</description>
          <resetValue>0x00640000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ch8_d_touch_th</name>
              <description>Difference threshold data of touch judgement for channel 8.
It needs to be configured during development, (0x0~0xFFF) (0~4095). 
Init number=0x1E
Recommend data=80%*(signal-baseline)</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch8_baseline</name>
              <description>Digital baseline data of channel 8.
Init number=0x0
It can be initialed by HW when baseline initial function enabled, and can be updated automatically by HW when ETC function enabled.
It could be configured by manual tuning.</description>
              <bitRange>[15:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch8_en</name>
              <description>Cap sensor activity control of channel 8
0: Disable
1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CH8_NOISE_TH</name>
          <addressOffset>0x00000184</addressOffset>
          <size>32</size>
          <description>Channel 8 Noise Threshold Register</description>
          <resetValue>0x00280028</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ch8_n_ent</name>
              <description>The environmental negative noise threshold: the negative maximum capacitance change of raw data that is still considered an environment change.</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch8_p_ent</name>
              <description>The environmental positive noise threshold: the positive maximum capacitance change of raw data that is still considered an environment change.</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CH8_MBIAS_ATH</name>
          <addressOffset>0x00000188</addressOffset>
          <size>32</size>
          <description>Channel 8 Mbias</description>
          <resetValue>0x00000020</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ch8_a_touch_th</name>
              <description>Absolute threshold data of touch judgement for channel 8.
It can be updated by HW when baseline initial function or ETC function enabled, a_touch_th=baseline-d_touch_th, manual tuning when ETC disabled, (0x0~0xFFF).
Recommended data=80%*signal</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch8_mbias</name>
              <description>Touch mbias current [5:0] 8u/4u/2u/1u/0.5u/0.25u for channel 8</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CH8_DATA_INF</name>
          <addressOffset>0x0000018C</addressOffset>
          <size>32</size>
          <description>Channel 8 Dtouch Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ch8_diff_data_polarity</name>
              <description>Polarity of ch8_diff_data
0: ch8_data_ave&lt;baseline
1: ch8_data_ave&gt;=baseline</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch8_diff_data</name>
              <description>Difference digital data of channel8 between ch8_data_ave and baseline</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ch8_data_ave</name>
              <description>Average of channel 8 raw code</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ANA_ADC_REG0X_LPAD</name>
          <addressOffset>0x00000400</addressOffset>
          <size>32</size>
          <description>Analog ADC REG0X_LPAD Register</description>
          <resetValue>0xB00012A0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_reg0x_lpad31_3</name>
              <description>Bit[31:3] of analog ADC port REG0X_LPAD. For every bit: 
[31:30]: VSET[1: 0]
    11: 1.89V
    10: 1.80V
    01: 1.71V
    00: 1.62V
[29]: sel_ln
    1: Comparator low noise for LSB 6 bits
[28]: sel_lna
    1: Comparator low noise for ALL bits
[27:23]: dummy
[22]: reg_enTG
    1: Enable transmission gate
[21:16]: bypassen[5:0], input bypass resistor
    1: 1V mode
    0: 3.3V mode
[15]: reg_diode
    1: Enable diode protect
[14]: reg_meta
    1: Enable meta detect
[13: 12]: reg_mpdec&lt;1: 0&gt;, meta detect time
    00: short
[11]: reg_revckda
    1: Rever ckdata
[10:8]: reg_vref_sel[2: 0]
    000: 0.70V
    001: 0.75V
    010: 0.80V
    011: 0.85V
    100: 0.90V
    101: 0.95V
    110: 1.00V
    111: 1.05V
[7:5]: reg_ldo_sel[2: 0]
    000: 0.70V
    001: 0.75V
    010: 0.80V
    011: 0.85V
    100: 0.90V
    101: 0.95V
    110: 1.00V
    111: 1.05V
[4]: reg_delay, clk delay
    0: short
[3]: reg_ck
    1: Clock from external</description>
              <bitRange>[31:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_reg0x_lpad2</name>
              <description>Bit[2] of analog ADC port REG0X_LPAD, pow_ref, pow ADC refgen</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>adc_reg0x_lpad1</name>
              <description>Bit[1] of analog ADC port REG0X_LPAD, pow, pow adc</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>adc_reg0x_lpad0</name>
              <description>Bit[0] of analog ADC port REG0X_LPAD, power LDO/mbias/res ladder, enable power cut/ldo</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ANA_ADC_REG1X_LPAD</name>
          <addressOffset>0x00000404</addressOffset>
          <size>32</size>
          <description>Analog ADC REG1X_LPAD Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_reg1x_lpad31_6</name>
              <description>[31:8]: Reserved
[7:6]: reg_vcmin[1: 0], vcmin voltage set
    00: 0.45V
    01: 0.44V
    10: 0.43V
    11: 0.42V</description>
              <bitRange>[31:6]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ANA_ADC_REG0X_LPSD</name>
          <addressOffset>0x00000408</addressOffset>
          <size>32</size>
          <description>Analog ADC REG0X_LPSD Register</description>
          <resetValue>0x01240000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_reg0x_lpsd31_14</name>
              <description>dummy</description>
              <bitRange>[31:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_reg0x_lpsd13</name>
              <description>POW_I, power on BG current</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>adc_reg0x_lpsd12</name>
              <description>POW_BG, power on BG</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>adc_reg0x_lpsd11_0</name>
              <description>dummy</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ANA_ADC_TIME_SET</name>
          <addressOffset>0x0000040C</addressOffset>
          <size>32</size>
          <description>Analog ADC Time Register</description>
          <resetValue>0x00801606</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_dummy_ctrl</name>
              <description>1: REG0X_LPAD[2] is sync with REG0X_LPAD[0]. At this time, adc_reg0x_lpad2 can't take effect.
0:  the delay of REG0X_LPAD[2] is controlled by adc_dummy_set. At this time, adc_reg0x_lpad2 can take effect.</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_dummy_set</name>
              <description>Time between REG0X_LPAD[0] and REG0X_LPAD[2] , unit is ctc clock cycle. This time is valid only when adc_dummy_ctrl is 0. time = (adc_dummy_set+1)*cycle</description>
              <bitRange>[22:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_pc_set</name>
              <description>Time between REG0X_LPSD12 and REG0X_LPAD[0] power LDO/mbias/res ladder, unit is ctc clock cycle. time = (adc_pc_set+2)*cycle</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_ref_set</name>
              <description>Time between REG0X_LPAD[2] power_ref and REG0X_LPAD[1] pow_adc, unit is ctc clock cycle.
time = (adc_ref_set+2)*cycle</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CTC_HW_TestMode</name>
          <addressOffset>0x00000410</addressOffset>
          <size>32</size>
          <description>Captouch_Hardware_Test_Mode  Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>hw_clock_tie_value</name>
              <description>this value is the clock tied value in captouch hardware test mode</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>hw_tmode_en</name>
              <description>0: hardware test mode disabled
1: hardware test mode enabled, the clock sent to AUX Analog from captouch is tie to fixed value, which is depent on hw_clock_tie_value( 410h[1] )</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CTC_DUMMY</name>
          <addressOffset>0x00000414</addressOffset>
          <size>32</size>
          <description>Captouch Dummy Register</description>
          <resetValue>0x0000FFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy1</name>
              <description>dummy register</description>
              <bitRange>[31:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bg_pow_i_cnt</name>
              <description>ECO: counter for BG_POW_I , unit is ctc clock cycle.</description>
              <bitRange>[17:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dummy</name>
              <description>dummy register</description>
              <bitRange>[13:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>gpio</name>
      <baseAddress>0x4101A000</baseAddress>
      <size>0x00000100</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00000100</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>GPIO_DR</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description>PortA/B data register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PORT_DATA</name>
              <description>Values written to this register are output on the I/O signals for Portx if the corresponding data direction bits for Portx are set to Output mode and the corresponding control bit for Portx is set to software mode. The value read back is equal to the last value written to this register.
Valid bits is: PortA[31:0] and PortB[19:0].</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_DDR</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description>PortA/B data direction register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PORT_DATA_DIRECTION</name>
              <description>Values written to this register independently control the direction of the corresponding data bit in Portx. The default direction can be configured as input or output after system reset through the GPIO_DFLT_DIR_x parameter.
0: Input (default)
1: Output
Valid bits is: PortA[31:0] and PortB[19:0].</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_INT_EN</name>
          <addressOffset>0x00000030</addressOffset>
          <size>32</size>
          <description>PortA/B interrupt enable register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>GPIO_INT_EN</name>
              <description>Allows each bit of Portx to be configured for interrupts. By default, the generation of interrupts is disabled. Whenever a 1 is written to a bit of this register, it configures the corresponding bit on Portx to become an interrupt; otherwise, Portx operates as a normal GPIO signal. Interrupts are disabled on the corresponding bits of Portx if the corresponding data direction register is set to Output or if
Portx mode is set to Hardware.
0: Configure Portx bit as normal GPIO signal (default)
1: Configure Portx bit as interrupt</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_INT_MASK</name>
          <addressOffset>0x00000034</addressOffset>
          <size>32</size>
          <description>PortA/B interrupt mask register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>GPIO_INT_MASK</name>
              <description>Controls whether an interrupt on Portx can create an interrupt for the interrupt controller by not masking it. By default, all interrupts bits are unmasked. Whenever a 1 is written to a bit in this register, it masks the interrupt generation capability for this signal; otherwise interrupts are allowed through. The unmasked status can be read as well as the resultant status after masking.
0: Interrupt bits are unmasked (default)
1: Mask interrupt</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_INT_TYPE</name>
          <addressOffset>0x00000038</addressOffset>
          <size>32</size>
          <description>PortA interrupt trigger type register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>GPIO_INT_TYPE</name>
              <description>Controls the type of interrupt that can occur on Portx.
Whenever a 0 is written to a bit of this register, it configures the interrupt type to be level-sensitive; otherwise, it is edge-sensitive.
0: Level-sensitive (default)
1: Edge-sensitive</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_INT_POLARITY</name>
          <addressOffset>0x0000003C</addressOffset>
          <size>32</size>
          <description>PortA interrupt polarity register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>GPIO_INT_POLARITY</name>
              <description>Controls the polarity of edge or level sensitivity that can occur on input of Portx. Whenever a 0 is written to a bit of this register, it configures the interrupt type to falling-edge or active-low sensitive; otherwise, it is rising-edge or active-high sensitive.
0: Active-low (default)
1: Active-high</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_INT_STATUS</name>
          <addressOffset>0x00000040</addressOffset>
          <size>32</size>
          <description>PortA/B interrupt status register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>GPIO_INT_STATUS</name>
              <description>Interrupt status of Portx.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_INT_STATUS_RAW</name>
          <addressOffset>0x00000044</addressOffset>
          <size>32</size>
          <description>PortA/B raw interrupt status register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>GPIO_RAW_INT_STATUS</name>
              <description>Raw interrupt status of Portx (premasking bits).</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_DEBOUNCE</name>
          <addressOffset>0x00000048</addressOffset>
          <size>32</size>
          <description>PortA/B interrupt debounce register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>GPIO_DEBOUNCE_EN</name>
              <description>Controls whether an external signal that is the source of an interrupt needs to be debounced to remove any spurious glitches. Writing a 1 to a bit in this register enables the debouncing circuitry. A signal must be valid for two periods of an external clock before it is internally
processed.
0: No debounce (default)
1: Enable debounce 
This register is available only if Portx is configured to generate interrupts (GPIO_PORTA_INTR = Include (1)) and when the debounce logic is included (GPIO_DEBOUNCE = Include (1)).</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_INT_EOI</name>
          <addressOffset>0x0000004C</addressOffset>
          <size>32</size>
          <description>PortA/B edge type interrupt clear register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>GPIO_INT_EOI</name>
              <description>Controls the clearing of edge type interrupts from Portx.
When a 1 is written into a corresponding bit of this register, the interrupt is cleared. All interrupts are cleared when Portx is not configured for interrupts.
0: No interrupt clear (default)
1: Clear interrupt</description>
              <bitRange>[31:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_EXT_PORT</name>
          <addressOffset>0x00000050</addressOffset>
          <size>32</size>
          <description>External PortA/B data register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>GPIO_EXT_PORTA</name>
              <description>When Portx is configured as Input, then reading this location reads the values on the signal. When the data direction of Portx is set as Output, reading this location reads the data register for Portx.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_ITN_LS_SYNC</name>
          <addressOffset>0x00000060</addressOffset>
          <size>32</size>
          <description>PortA/B level interrupt synchronization</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>GPIO_Level_SYNC</name>
              <description>Writing a 1 to this register results in all level-sensitive interrupts being synchronized to pclk_intr.
0: No synchronization to pclk_intr (default)
1: Synchronize to pclk_intr</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_ID_CODE</name>
          <addressOffset>0x00000064</addressOffset>
          <size>32</size>
          <description>PortA/B GPIO ID code register</description>
          <resetValue>0x00000001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>GPIO_ID_CODE</name>
              <description>This register is available only if PortxA/B is configured to generate interrupts (GPIO_PORTx_INTR = Include (1)) and interrupt detection is configured to generate on both rising and falling edges of external input signal (GPIO_INT_BOTH_EDGE=Include (1)).</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_INT_BOTHEDGE</name>
          <addressOffset>0x00000068</addressOffset>
          <size>32</size>
          <description>PortA/B both edge interrupt register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>GPIO_INT_BOTHEDGE</name>
              <description>Controls the edge types of interrupt that can occur on Portx.
Whenever a particular bit is programmed to 1, it enables the generation of interrupt on both the rising edge and falling edge of an external input signal corresponding to that bit on PortA.
The values programmed in the registers gpio_intype_level and gpio_int_polarity for this particular bit are not considered when the corresponding bit of this register is set to 1.
Whenever a particular bit is programmed to 0, the interrupt type depends on the value of the corresponding bits in the gpio_inttype_level and gpio_int_polarity registers.
0: Disabled. Single edge sensitive
1: Enabled. Both edge sensitive</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_VER_ID_CODE</name>
          <addressOffset>0x0000006C</addressOffset>
          <size>32</size>
          <description>PortA/B GPIO component version register</description>
          <resetValue>0x3231302A</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>GPIO_VER_ID_CODE</name>
              <description>ASCII value for each number in the version, followed by *. For example 32_30_31_2A represents the version 2.01*.
Reset Value: See the releases table in the Release Notes.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_DUMMY</name>
          <addressOffset>0x000000FC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFF0000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DUMMY</name>
              <description>No real reg, only for run_espec.py</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DUMMY</name>
              <description>No real reg, only for run_espec.py</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>i2c</name>
      <baseAddress>0x4011A000</baseAddress>
      <size>0x00000100</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00000100</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>IC_CON</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description>I2C Control Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IC_SLAVE_DISABLE_1</name>
              <description>This bit controls whether I2C has its slave2 (7-bit address) disabled.
*0: slave2 is enabled
*1: slave2 is disabled</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IC_SLAVE_DISABLE_0</name>
              <description>This bit controls whether I2C has its slave1 (7-bit or 10-bit address) disabled. 
*0: slave1 is enabled
*1: slave1 is disabled</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IC_RESTATRT_EN</name>
              <description>Determine whether RESTART conditions may be sent when acting as a master. 
*0: disable
*1: enable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IC_10BITADDR_SLAVE</name>
              <description>When acting as a slave, this bit controls whether the I2C responds to 7- or 10-bit addresses. 
*0: 7-bit addressing
*1: 10-bit addressing</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPEED</name>
              <description>These bits control at which speed the I2C operates; its setting is relevant only if one is operating the I2C in master mode. 
*1: standard mode (0 to 100kbit/s)
*2: fast mode (&lt;=400kbit/s)
*3: high speed mode (&lt;=3.4Mbit/s)</description>
              <bitRange>[2:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MASTER_MODE</name>
              <description>This bit controls whether the I2C master is enabled. 
*0: master is disabled
*1: master is enabled</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_TAR</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description>I2C Target Address Register</description>
          <resetValue>0x00000010</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IC_10BITADDR_MASTER</name>
              <description>Control whether I2C starts its transfers in 7- or 10-bit addressing mode when acting as a master.
*0: 7-bit addressing
*1: 10-bit addressing</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPECIAL</name>
              <description>This bit indicates whether software performs a General Call or START BYTE command.
*0: ignore bit 10 GC_OR_START and use IC_TAR normally
*1: perform special I2C command as specified in GC_OR_START bit</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GC_OR_START</name>
              <description>If SPECIAL is set to 1, then this bit indicates whether a General Call or START BYTE command is to be performed by I2C. (ic_clk domain)
*0: General Call - after issuing a General Call, only write may be performed
*1: START BYTE</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IC_TAR</name>
              <description>This is the target address for any master transaction. When transmitting a General Call, these bits are ignored. To generate a START BYTE, the CPU needs to write only once into these bits.</description>
              <bitRange>[9:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_SAR</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description>I2C Slave Address Register</description>
          <resetValue>0x00000011</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IC_SAR</name>
              <description>The IC_SAR holds the slave address when the I2C is operating as slave1. For 7-bit addressing, only IC_SAR[6:0] is used.
The register can be written only when the I2C interface is disabled, which corresponds to the IC_ENABLE register being set to 0. Writing at other times has no effect.</description>
              <bitRange>[9:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_HS_MAR</name>
          <addressOffset>0x0000000C</addressOffset>
          <size>32</size>
          <description>I2C High Speed Master Mode Code Address Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IC_HS_MAR</name>
              <description>This bit field holds the value of the I2C HS mode master code. HS-mode master codes are reserved 8-bit codes (00001xxx) that are not used for slave addressing or other purposes. 
This register can be written only when the I2C interface is disabled, which corresponds to the IC_ENABLE register being set to 0. Writing at other times has no effect.</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_DATA_CMD</name>
          <addressOffset>0x00000010</addressOffset>
          <size>32</size>
          <description>I2C Rx/Tx Data Buffer and Command Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>NULL_DATA</name>
              <description>*1: null data transfer</description>
              <bitRange>[11:11]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>CMD_RESTART</name>
              <description>This bit controls whether a RESTART is issued after the byte is sent or received. 
*1: a RESTART is issued after the data is sent/received (according to the value of CMD_RW), regardless of whether or not the transfer direction is changing from the previous command.</description>
              <bitRange>[10:10]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>CMD_STOP</name>
              <description>This bit controls whether a STOP is issued after the byte is sent or received.
*1: STOP is issued after this byte, regardless of whether or not the Tx FIFO is empty. If the Tx FIFO is not empty, the master immediately tries to start a new transfer by issuing a START and arbitrating for the bus.
*0: STOP is not issued after this byte.</description>
              <bitRange>[9:9]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>CMD_RW</name>
              <description>This bit controls whether a read or write is performed. This bit does not control the direction when the I2C acts as a slave. It controls only the direction when it acts as a master.
*1: Read
*0: Write</description>
              <bitRange>[8:8]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>IC_DATA</name>
              <description>This register contains the data to be transmitted or received on the I2C bus. If you are writing to this register and want to perform a read, these bits are ignored by the I2C. However, when you read this register, these bits return the value of data received on the I2C interface.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_SS_SCL_HCNT</name>
          <addressOffset>0x00000014</addressOffset>
          <size>32</size>
          <description>Standard Speed I2C Clock SCL High Count Register</description>
          <resetValue>0x00000190</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IC_SS_SCL_HCNT</name>
              <description>This register sets the SCL clock high-period count for standard speed. 
This register must be set before any I2C bus transaction can take place to ensure proper I/O timing. 
This register can be written only when the I2C interface is disabled which corresponds to the IC_ENABLE register being set to 0. Writing at other times has no effect.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_SS_SCL_LCNT</name>
          <addressOffset>0x00000018</addressOffset>
          <size>32</size>
          <description>Standard Speed I2C Clock SCL Low Count Register</description>
          <resetValue>0x000001D6</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IC_SS_SCL_LCNT</name>
              <description>This register sets the SCL clock low-period count for standard speed. 
This register must be set before any I2C bus transaction can take place to ensure proper I/O timing. 
This register can be written only when the I2C interface is disabled which corresponds to the IC_ENABLE register being set to 0. Writing at other times has no effect.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_FS_SCL_HCNT</name>
          <addressOffset>0x0000001C</addressOffset>
          <size>32</size>
          <description>Fast Speed I2C Clock SCL High Count Register</description>
          <resetValue>0x0000003C</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IC_FS_SCL_HCNT</name>
              <description>This register sets the SCL clock high-period count for fast speed. 
This register must be set before any I2C bus transaction can take place to ensure proper I/O timing. 
This register can be written only when the I2C interface is disabled which corresponds to the IC_ENABLE register being set to 0. Writing at other times has no effect.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_FS_SCL_LCNT</name>
          <addressOffset>0x00000020</addressOffset>
          <size>32</size>
          <description>Fast Speed I2C Clock SCL Low Count Register</description>
          <resetValue>0x00000082</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IC_FS_SCL_LCNT</name>
              <description>This register sets the SCL clock low-period count for fast speed. 
This register must be set before any I2C bus transaction can take place to ensure proper I/O timing. 
This register can be written only when the I2C interface is disabled which corresponds to the IC_ENABLE register being set to 0. Writing at other times has no effect.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_HS_SCL_HCNT</name>
          <addressOffset>0x00000024</addressOffset>
          <size>32</size>
          <description>High Speed I2C Clock SCL High Count Register</description>
          <resetValue>0x00000006</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IC_HS_SCL_HCNT</name>
              <description>This register sets the SCL clock high-period count for high speed. 
This register must be set before any I2C bus transaction can take place to ensure proper I/O timing. 
This register can be written only when the I2C interface is disabled which corresponds to the IC_ENABLE register being set to 0. Writing at other times has no effect. 
The SCL High time depends on the loading of the bus. For 100pF loading, the SCL High time is 60ns; for 400pF loading, the SCL High time is 120ns.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_HS_SCL_LCNT</name>
          <addressOffset>0x00000028</addressOffset>
          <size>32</size>
          <description>High Speed I2C Clock SCL Low Count Register</description>
          <resetValue>0x00000010</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IC_HS_SCL_LCNT</name>
              <description>This register sets the SCL clock low-period count for high speed. 
This register must be set before any I2C bus transaction can take place to ensure proper I/O timing. 
This register can be written only when the I2C interface is disabled which corresponds to the IC_ENABLE register being set to 0. Writing at other times has no effect. 
The SCL Low time depends on the loading of the bus. For 100pF loading, the SCL High time is 160ns; for 400pF loading, the SCL High time is 320ns.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_INTR_STAT</name>
          <addressOffset>0x0000002C</addressOffset>
          <size>32</size>
          <description>I2C Interrupt Status Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>R_LP_WAKE_2</name>
              <description></description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>R_LP_WAKE_1</name>
              <description></description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>R_GEN_CALL</name>
              <description></description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>R_START_DET</name>
              <description></description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>R_STOP_DET</name>
              <description></description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>R_ACTIVITY</name>
              <description></description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>R_RX_DONE</name>
              <description></description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>R_TX_ABRT</name>
              <description></description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>R_RD_REQ</name>
              <description></description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>R_TX_EMPTY</name>
              <description></description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>R_TX_OVER</name>
              <description></description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>R_RX_FULL</name>
              <description></description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>R_RX_OVER</name>
              <description></description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>R_RX_UNDER</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_INTR_MASK</name>
          <addressOffset>0x00000030</addressOffset>
          <size>32</size>
          <description>I2C Interrupt Mask Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>M_LP_WAKE_2</name>
              <description></description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_LP_WAKE_1</name>
              <description></description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_GEN_CALL</name>
              <description></description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_START_DET</name>
              <description></description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_STOP_DET</name>
              <description></description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_ACTIVITY</name>
              <description></description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_RX_DONE</name>
              <description></description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_TX_ABRT</name>
              <description></description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_RD_REQ</name>
              <description></description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_TX_EMPTY</name>
              <description></description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_TX_OVER</name>
              <description></description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_RX_FULL</name>
              <description></description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_RX_OVER</name>
              <description></description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_RX_UNDER</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_RAW_INTR_STAT</name>
          <addressOffset>0x00000034</addressOffset>
          <size>32</size>
          <description>I2C Raw Interrupt Status Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>LP_WAKE_2</name>
              <description>Set when address SAR_2 match with address sending on I2C BUS.</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LP_WAKE_1</name>
              <description>Set when address SAR match with address sending on I2C BUS.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>GEN_CALL</name>
              <description>Set only when a General Call address is received and it is acknowledged.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>START_DET</name>
              <description>Indicates whether a START or RESTART condition has occurred on the I2C interface regardless of whether I2C is operating in slave or master mode.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>STOP_DET</name>
              <description>Indicates whether a STOP condition has occurred on the I2C interface regardless of whether I2C is operating in slave or master mode.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ACTIVITY</name>
              <description>This bit captures I2C activity.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RX_DONE</name>
              <description>When the I2C is acting as a slave-transmitter, this bit is set to 1 if the master does not acknowledge a transmitted byte. This occurs on the last byte of the transmission, indicating that the transmission is done.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TX_ABRT</name>
              <description>This bit indicates if I2C as a transmitter, is unable to complete the intended actions on the contents of the transmit FIFO. This situation can occur both as an I2C master or an I2C slave, and is referred to as a 'transmit abort'.
*1: the IC_TX_ABRT_SOURCE register indicates the reason why the transmit abort take places.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RD_REQ</name>
              <description>This bit is set to 1 when I2C is acting as a slave and another I2C master is attempting to read data from I2C. The I2C holds the I2C bus in a wait state (SCL=0) until this interrupt is serviced, which means that the slave has been addressed by a remote master that is asking for data to be transferred. The processor must respond to this interrupt and then write the requested data to the IC_DATA_CMD register.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TX_EMPTY</name>
              <description>This bit is set to 1 when the transmit buffer is at or below the threshold value set in the IC_TX_TL register. It is automatically cleared by hardware when the buffer level goes above the threshold.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TX_OVER</name>
              <description>Set during transmit if the transmit buffer is filled to IC_TX_BUFFER_DEPTH and the processor attempts to issue another I2C command by writing to the IC_DATA_CMD register.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RX_FULL</name>
              <description>Set when the receive buffer reaches or goes above the RX_TL threshold in the IC_RX_TL register. It is automatically cleared by hardware when buffer level goes below the threshold.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RX_OVER</name>
              <description>Not used. Set if the receive buffer is completely filled to IC_RX_BUFFER_DEPTH and an additional byte is received from an external I2C device.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RX_UNDER</name>
              <description>Set if the processor attempts to read the receive buffer when it is empty by reading from the IC_DATA_CMD register.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_RX_TL</name>
          <addressOffset>0x00000038</addressOffset>
          <size>32</size>
          <description>I2C Receive FIFO Threshold Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IC_RX_0_TL</name>
              <description>Receive FIFO Threshold Level.
Control the level of entries (or above) that triggers the RX_FULL interrupt (bit[2] in IC_RAW_INTR_STAT register).</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_TX_TL</name>
          <addressOffset>0x0000003C</addressOffset>
          <size>32</size>
          <description>I2C Transmit FIFO Threshold Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IC_TX_0_TL</name>
              <description>Transmit FIFO Threshold Level.
Control the level of entries (or below) that triggers the TX_EMPTY interrupt (bit[4] in IC_RAW_INTR_STAT register).</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_CLR_INTR</name>
          <addressOffset>0x00000040</addressOffset>
          <size>32</size>
          <description>Clear Combined and Individual Interrupt Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CLR_INRT</name>
              <description>Read this register to clear the combined interrupt, all individual interrupts, and the IC_TX_ABRT_SOURCE register. This bit does not clear hardware clearable interrupts but software clearable interrupts.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_CLR_RX_UNDER</name>
          <addressOffset>0x00000044</addressOffset>
          <size>32</size>
          <description>Clear RX_UNDER Interrupt Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CLR_RX_UNDER</name>
              <description>Read this register to clear the RX_UNDER interrupt (bit[0]) of IC_RAW_INTR_STAT register.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_CLR_RX_OVER</name>
          <addressOffset>0x00000048</addressOffset>
          <size>32</size>
          <description>Clear RX_OVER Interrupt Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CLR_RX_OVER</name>
              <description>Read this register to clear the RX_OVER interrupt (bit[1]) of IC_RAW_INTR_STAT register.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_CLR_TX_OVER</name>
          <addressOffset>0x0000004C</addressOffset>
          <size>32</size>
          <description>Clear TX_OVER Interrupt Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CLR_TX_OVER</name>
              <description>Read this register to clear the TX_OVER interrupt (bit[3]) of IC_RAW_INTR_STAT register.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_CLR_RD_REQ</name>
          <addressOffset>0x00000050</addressOffset>
          <size>32</size>
          <description>Clear RD_REQ Interrupt Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CLR_RD_REQ</name>
              <description>Read this register to clear the RD_REQ interrupt (bit[5]) of IC_RAW_INTR_STAT register.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_CLR_TX_ABRT</name>
          <addressOffset>0x00000054</addressOffset>
          <size>32</size>
          <description>Clear TX_ABRT Interrupt Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CLR_TX_ABRT</name>
              <description>Read this register to clear the TX_ABRT interrupt (bit[6]) of IC_RAW_INTR_STAT register, and the IC_TX_ABRT_SOURCE register. This is also releases the TX FIFO from the flushed/reset state, allowing more writes to the TX FIFO.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_CLR_RX_DONE</name>
          <addressOffset>0x00000058</addressOffset>
          <size>32</size>
          <description>Clear RX_DONE Interrupt Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CLR_RX_DONE</name>
              <description>Read this register to clear the RX_DONE interrupt (bit[7]) of IC_RAW_INTR_STAT register.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_CLR_ACTIVITY</name>
          <addressOffset>0x0000005C</addressOffset>
          <size>32</size>
          <description>Clear ACTIVITY Interrupt Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CLR_ACTIVITY</name>
              <description>Read this register to clear the ACTIVITY interrupt if the I2C is not active anymore. If the I2C module is still active on the bus, the ACTIVITY interrupt bit continues to be set. It is automatically cleared by hardware if the module is disabled and if there is no further activity on the bus. The value read from this register to get status of the ACTIVITY interrupt (bit[8]) of the IC_RAW_INTR_STAT register.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_CLR_STOP_DET</name>
          <addressOffset>0x00000060</addressOffset>
          <size>32</size>
          <description>Clear STOP_DET Interrupt Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CLR_STOP_DET</name>
              <description>Read this register to clear the STOP_DET interrupt (bit[9]) of IC_RAW_INTR_STAT register.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_CLR_START_DET</name>
          <addressOffset>0x00000064</addressOffset>
          <size>32</size>
          <description>Clear START_DET Interrupt Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CLR_START_DET</name>
              <description>Read this register to clear the START_DET interrupt (bit[10]) of IC_RAW_INTR_STAT register.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_CLR_GEN_CALL</name>
          <addressOffset>0x00000068</addressOffset>
          <size>32</size>
          <description>Clear GEN_ALL Interrupt Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CLR_GEN_CALL</name>
              <description>Read this register to clear the GEN_CALL interrupt (bit[11]) of IC_RAW_INTR_STAT register.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_ENABLE</name>
          <addressOffset>0x0000006C</addressOffset>
          <size>32</size>
          <description>I2C Enable Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FORCE</name>
              <description>Force master I2C stop transfer immediately after IC_ENABLE set 0.
*1: when IC_ENABLE is set 0 during transfer, force master FSM go to IDLE immediately.
*0: when IC_ENABLE is set 0 during transfer, master FSM while finish current transition (including RESTART) before go to IDLE.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ENABLE</name>
              <description>Control whether the I2C is enabled.
*0: Disable I2C (TX and RX FIFOs are held in an erased state)
*1: Enable I2C</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_STATUS</name>
          <addressOffset>0x00000070</addressOffset>
          <size>32</size>
          <description>I2C Status Register</description>
          <resetValue>0x00000006</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SLV_ACTIVITY</name>
              <description>Slave FSM Activity Status. When the Slave FSM is not in the IDLE state, this bit is set.
*0: Slave FSM is in the IDLE state so the slave part of I2C is not active
*1: Slave FSM is not he IDLE state so the slave part of I2C is active</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>MST_ACTIVITY</name>
              <description>Master FSM Activity Status. When the Master FSM is not in the IDLE state, this bit is set.
*0: Master FSM is in the IDLE state so the master part of I2C is not active
*1: Master FSM is not he IDLE state so the master part of I2C is active</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RFF</name>
              <description>Receive FIFO Completely Full. When the receive FIFO is completely full, this bit is set. When the receive FIFO contains one or more empty location, this bit is cleared.
*0: Receive FIFO is not full
*1: Receive FIFO is full</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RFNE</name>
              <description>Receive FIFO Not Empty. This bit is set when the receive FIFO contains one or more entries; it is cleared when the receive FIFO is empty.
*0: Receive FIFO is empty
*1: Receive FIFO is not empty</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TFE</name>
              <description>Transmit FIFO Completely Empty. When the transmit FIFO is completely empty, this bit is set. When it contains one or more valid entries, this bit is cleared. This bit field does not request an interrupt.
*0: Transmit FIFO is not empty
*1: Transmit FIFO is empty</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TFNF</name>
              <description>Transmit FIFO Not Full. Set when the transmit FIFO contains one or more empty locations, and is cleared when the FIFO is full.
*0: Transmit FIFO is full
*1: Transmit FIFO is not full</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>IC_ACTIVITY</name>
              <description>I2C activity status</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_TXFLR</name>
          <addressOffset>0x00000074</addressOffset>
          <size>32</size>
          <description>I2C Transmit FIFO Level Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TXFLR</name>
              <description>Transmit FIFO Level. Contains the number of valid data entries in the transmit FIFO.</description>
              <bitRange>[5:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_RXFLR</name>
          <addressOffset>0x00000078</addressOffset>
          <size>32</size>
          <description>I2C Receive FIFO Level Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RXFLR</name>
              <description>Receive FIFO Level. Contains the number of valid data entries in the receive FIFO.</description>
              <bitRange>[5:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_SDA_HOLD</name>
          <addressOffset>0x0000007C</addressOffset>
          <size>32</size>
          <description>I2C SDA Hold Time Length Register</description>
          <resetValue>0x00000001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IC_SDA_HOLD</name>
              <description>Set the required SDA hold time in units of ic_clk period.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_TX_ABRT_SOURCE</name>
          <addressOffset>0x00000080</addressOffset>
          <size>32</size>
          <description>I2C Transmit Abort Source Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ABRT_SLV_ARBLOST</name>
              <description>*1: Slave lost the bus while transmitting data to a remote master. IC_TX_ABRT_SOURCE[12] is set at the same time.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ABRT_SLVFLUSH_TXFIFO</name>
              <description>*1: Slave has received a read command and some data exists in the TXFIFO so the slave issues a TX_ABRT interrupt to flush old data in TXFIFO.</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ARBT_LOST</name>
              <description>*1: Master has lost arbitration, or if IC_TX_ABRT_SOURCE[14] is also set, then the slave transmitter has lost arbitration.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ABRT_MASTER_DIS</name>
              <description>*1: User tries to initiate a Master operation with the Master mode disabled.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ABRT_10B_RD_NORSTRT</name>
              <description>*1: The restart is disabled and the master sends a read command in 10-bit addressing mode.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ABRT_SBYTE_NORSTRT</name>
              <description>*1: The restart is disabled and the user is trying to send a START Byte.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ABRT_HS_NORSTRT</name>
              <description>*1: The restart is disabled and the user is trying to use the master to transfer data in High Speed mode.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ABRT_SBYTE_ACKDET</name>
              <description>*1: Master has sent a START Byte and the START Byte was acknowledged (wrong behavior).</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ABRT_HS_ACKDET</name>
              <description>*1: Master is in High Speed mode and the High Speed Master code was acknowledged (wrong behavior).</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ABRT_GCALL_READ</name>
              <description>*1: I2C in master mode sent a General Call but the user programmed the byte following the General Call to be a read from the bus.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ABRT_GCALL_NOACK</name>
              <description>*1: I2C in master mode sent a General Call and no slave on the bus acknowledged the General Call.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ABRT_TXDATA_NOACK</name>
              <description>*1: This is a master-mode only bit. Master has received an acknowledgement for the address, but when it sent data byte(s) following the address, it did not receive an acknowledge from the remote slave(s).</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ABRT_10ADDR2_NOACK</name>
              <description>*1: Master is in 10-bit address mode and the second byte of the 10-bit address was not acknowledged by any slave.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ABRT_10ADDR1_NOACK</name>
              <description>*1: Master is in 10-bit address mode and the first 10-bit address byte was not acknowledged by any slave.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ABRT_7B_ADDR_NOACK</name>
              <description>*1: Master is in 7-bit addressing mode and the address sent was not acknowledged by any slave</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_SLV_DATA_NACK_ONLY</name>
          <addressOffset>0x00000084</addressOffset>
          <size>32</size>
          <description>Generate Slave Data NACK Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>NACK</name>
              <description>Generate NACK. This NACK generation only occurs when I2C is a slave-receiver. If this register is set to a value of 1, it can only generate a NACK after a data byte is received; hence, the data transfer is aborted and the data received is not pushed to the receive buffer.
When the register is set to a value of 0, it generates NACK/ACK, depending on normal criteria.
*1: generate NACK after data byte received
*0: generate NACK/ACK normally</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_SDA_SETUP</name>
          <addressOffset>0x00000094</addressOffset>
          <size>32</size>
          <description>I2C SDA Setup Register</description>
          <resetValue>0x00000005</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IC_SDA_SETUP</name>
              <description>Set the required SDA setup time in units of ic_clk period.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_ACK_GENERAL_CALL</name>
          <addressOffset>0x00000098</addressOffset>
          <size>32</size>
          <description>I2C ACK General Call Register</description>
          <resetValue>0x00000001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ACK_GEN_CALL</name>
              <description>*1: I2C responds with a ACK when it receives a General Call.
*0: I2C does not generate General Call interrupts.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_ENABLE_STATUS</name>
          <addressOffset>0x0000009C</addressOffset>
          <size>32</size>
          <description>I2C Enable Status Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SLV_DISABLE_WHILE_BUSY</name>
              <description>Slave Disabled While Busy (Transmit, Receive). This bit indicates if a potential or active Slave operation has been aborted due to the setting of the IC_SLAVE_DISBALE register from 1 to 0.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>IC_EN</name>
              <description>ic_en Status. This bit always reflects the value driven on the output port ic_en.
*1: I2C is deemed to be in an enabled state.
*0: I2C is deemed completely inactive.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_DEBUG_SEL</name>
          <addressOffset>0x000000B0</addressOffset>
          <size>32</size>
          <description>I2C Debug SEL Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IC_DEBUG_SEL</name>
              <description>*0: Debug clock
*1: Debug APB
*2: RSVD
*3: Debug FIFO
*4: Debug Timing
*5: Debug Slave Mode Address Match
*6: Debug Interrupt</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_OUT_SMP_DLY</name>
          <addressOffset>0x000000B4</addressOffset>
          <size>32</size>
          <description>I2C Sample Delay Register</description>
          <resetValue>0x00000002</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IC_OUT_SMP_DLY</name>
              <description>Delay cycles for sample of master drived SCL value. The sample of master drived SCL is used for slave stretch. 
Slave stretch is valid when master drive SCL High, but slave drives SCL low.
Valid value of IC_OUT_SMP_DLY is 0-7. Indicate a delay of 1-8 cycles.</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_CLR_ADDR_MATCH</name>
          <addressOffset>0x000000E4</addressOffset>
          <size>32</size>
          <description>Clear Slave Mode Address Match Interrupt Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IC_CLR_ADDR_MATCH</name>
              <description>Read this register to clear the slave mode address match interrupt (bit[12:13]) of IC_RAW_INTR_STAT register.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_FILTER</name>
          <addressOffset>0x000000EC</addressOffset>
          <size>32</size>
          <description>I2C Filter Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IC_DIG_FLTR_SEL</name>
              <description>1: Enable filter</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IC_DIG_FLTR_DEG</name>
              <description>DIG_FLTR_DEG is to define frequency range of filter. A greater value of DIG_FLTR_DEG results in a slower transfer speed and hardware would be able to filter a lower frequency.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_SAR2</name>
          <addressOffset>0x000000F4</addressOffset>
          <size>32</size>
          <description>I2C Slave2 Address Register</description>
          <resetValue>0x00000012</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IC_SAR2</name>
              <description>The IC_SAR2 holds the slave address when the I2C is operating as slave2. Slave2 only supports 7 bit address.
The register can be written only when the I2C interface is disabled, which corresponds to the IC_ENABLE register being set to 0. Writing at other times has no effect.</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_COMP_VERSION</name>
          <addressOffset>0x000000FC</addressOffset>
          <size>32</size>
          <description>I2C Component Version Register</description>
          <resetValue>0x20200911</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IC_COMP_VERSION</name>
              <description>I2C version number</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>ipc</name>
      <baseAddress>0x41020000</baseAddress>
      <size>0x00000028</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00000028</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>IPC_TX_DATA</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description>Tx Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>tx0_data</name>
              <description>After preparing descriptor, data and corresponding memory,
1: Writing 1 to the Tx data register (TX0_DATA) channel x bit, and the data will be mapped to the CPU0's RX data register (RX0_DATA) channel x bit. And the corresponding Rx full status bit in REG_ISR_CPU0 will be set.
0: Writing 0 has no effect.
If the corresponding Rx full status bit in REG_ISR_CPU0 (eg. ISR_RX0_FULL_STATUS6) is cleared, the corresponding bit in tx0_data will be cleaned automatically.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tx1_data</name>
              <description>After preparing descriptor, data and corresponding memory,
1: Writing 1 to the Tx data register (TX1_DATA) channel x bit, and the data will be mapped to the CPU1's Rx data register (RX1_DATA) channel x bit. And the corresponding Rx full status bit in REG_ISR_CPU1 will be set.
0: Writing 0 has no effect.
If the corresponding Rx full status bit in REG_ISR_CPU1 (eg. ISR_RX1_FULL_STATUS6) is cleared, the corresponding bit in tx_data_ln will be cleaned automatically.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IPC_RX_DATA</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description>Rx Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>rx0_data</name>
              <description>Rx data automatically maps data from TX0_DATA of CPU0</description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>rx1_data</name>
              <description>Rx data automatically maps data from TX1_DATA of CPU1</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IPC_ISR</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description>Interrupt Status Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>isr_rx0_full_status7</name>
              <description>Rx channel 7 full interrupt status of CPU3. The corresponding Rx full status bit will be set by CPU0's Tx data register (tx0_data) channel 7. It will be cleared by software writing 1.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>isr_rx0_full_status6</name>
              <description>Refer to the description of the ISR_RX0_FULL_STATUS7.</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>isr_rx0_full_status5</name>
              <description>Refer to the description of the ISR_RX0_FULL_STATUS7.</description>
              <bitRange>[29:29]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>isr_rx0_full_status4</name>
              <description>Refer to the description of the ISR_RX0_FULL_STATUS7.</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>isr_rx0_full_status3</name>
              <description>Refer to the description of the ISR_RX0_FULL_STATUS7.</description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>isr_rx0_full_status2</name>
              <description>Refer to the description of the ISR_RX0_FULL_STATUS7.</description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>isr_rx0_full_status1</name>
              <description>Refer to the description of the ISR_RX0_FULL_STATUS7.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>isr_rx0_full_status0</name>
              <description>Refer to the description of the ISR_RX0_FULL_STATUS7.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>isr_rx1_full_status7</name>
              <description>Rx channel 7 full interrupt status of CPU3. The corresponding Rx full status bit will be set by CPU1's Tx data register (tx1_data) channel 7. It will be cleared by software writing 1.</description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>isr_rx1_full_status6</name>
              <description>Refer to the description of the ISR_RX1_FULL_STATUS7.</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>isr_rx1_full_status5</name>
              <description>Refer to the description of the ISR_RX1_FULL_STATUS7.</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>isr_rx1_full_status4</name>
              <description>Refer to the description of the ISR_RX1_FULL_STATUS7.</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>isr_rx1_full_status3</name>
              <description>Refer to the description of the ISR_RX1_FULL_STATUS7.</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>isr_rx1_full_status2</name>
              <description>Refer to the description of the ISR_RX1_FULL_STATUS7.</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>isr_rx1_full_status1</name>
              <description>Refer to the description of the ISR_RX1_FULL_STATUS7.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>isr_rx1_full_status0</name>
              <description>Refer to the description of the ISR_RX1_FULL_STATUS7.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>isr_tx0_empty_status7</name>
              <description>Tx channel 7 empty interrupt status of CPU3 transmit to CPU0. If the corresponding Rx full status bit in REG_ISR_CPU0 (eg. ISR_RX0_FULL_STATUS7) is cleared, the corresponding Tx empty status bit will be set automatically. It will be cleared by software writing 1.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>isr_tx0_empty_status6</name>
              <description>Refer to the description of the ISR_TX0_EMPTY_STATUS7.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>isr_tx0_empty_status5</name>
              <description>Refer to the description of the ISR_TX0_EMPTY_STATUS7.</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>isr_tx0_empty_status4</name>
              <description>Refer to the description of the ISR_TX0_EMPTY_STATUS7.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>isr_tx0_empty_status3</name>
              <description>Refer to the description of the ISR_TX0_EMPTY_STATUS7.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>isr_tx0_empty_status2</name>
              <description>Refer to the description of the ISR_TX0_EMPTY_STATUS7.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>isr_tx0_empty_status1</name>
              <description>Refer to the description of the ISR_TX0_EMPTY_STATUS7.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>isr_tx0_empty_status0</name>
              <description>Refer to the description of the ISR_TX0_EMPTY_STATUS7.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>isr_tx1_empty_status7</name>
              <description>Tx channel 7 empty interrupt status of CPU3 transmit to CPU1. If the corresponding Rx full status bit in REG_ISR_CPU1 (eg. ISR_RX1_FULL_STATUS7) is cleared, the corresponding Tx empty status bit will be set automatically. It will be cleared by software writing 1.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>isr_tx1_empty_status6</name>
              <description>Refer to the description of the ISR_TX1_EMPTY_STATUS7.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>isr_tx1_empty_status5</name>
              <description>Refer to the description of the ISR_TX1_EMPTY_STATUS7.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>isr_tx1_empty_status4</name>
              <description>Refer to the description of the ISR_TX1_EMPTY_STATUS7.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>isr_tx1_empty_status3</name>
              <description>Refer to the description of the ISR_TX1_EMPTY_STATUS7.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>isr_tx1_empty_status2</name>
              <description>Refer to the description of the ISR_TX1_EMPTY_STATUS7.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>isr_tx1_empty_status1</name>
              <description>Refer to the description of the ISR_TX1_EMPTY_STATUS7.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>isr_tx1_empty_status0</name>
              <description>Refer to the description of the ISR_TX1_EMPTY_STATUS7.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IPC_IMR</name>
          <addressOffset>0x0000000C</addressOffset>
          <size>32</size>
          <description>Interrupt Mask Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>imr_rx0_full_mask</name>
              <description>0: Mask Rx Channel x full interrupt of CPU3 received from CPU0
1: Unmask Rx Channel x full interrupt of CPU3 received from CPU0</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>imr_rx1_full_mask</name>
              <description>0: Mask Rx Channel x full interrupt of CPU3 received from CPU1
1: Unmask Rx Channel x full interrupt of CPU3 received from CPU1</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>imr_tx0_empty_mask</name>
              <description>0: Mask Tx Channel x empty interrupt of CPU3 transmit to CPU0
1: Unmask Tx Channel x empty interrupt of CPU3 transmit to CPU0</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>imr_tx1_empty_mask</name>
              <description>0: Mask Tx Channel x empty interrupt of CPU3 transmit to CPU1
1: Unmask Tx Channel x empty interrupt of CPU3 transmit to CPU1</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IPC_ICR</name>
          <addressOffset>0x00000010</addressOffset>
          <size>32</size>
          <description>Clear Tx Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>icr_tx0_data_clear7</name>
              <description>0: Writing 0 has no effect.
1: Clear the Tx data register (TX0_DATA) channel 7 bit.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>icr_tx0_data_clear6</name>
              <description>Refer to the description of the ICR_TX0_DATA_CLEAR7.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>icr_tx0_data_clear5</name>
              <description>Refer to the description of the ICR_TX0_DATA_CLEAR7.</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>icr_tx0_data_clear4</name>
              <description>Refer to the description of the ICR_TX0_DATA_CLEAR7.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>icr_tx0_data_clear3</name>
              <description>Refer to the description of the ICR_TX0_DATA_CLEAR7.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>icr_tx0_data_clear2</name>
              <description>Refer to the description of the ICR_TX0_DATA_CLEAR7.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>icr_tx0_data_clear1</name>
              <description>Refer to the description of the ICR_TX0_DATA_CLEAR7.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>icr_tx0_data_clear0</name>
              <description>Refer to the description of the ICR_TX0_DATA_CLEAR7.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>icr_tx1_data_clear7</name>
              <description>0: Writing 0 has no effect.
1: Clear the Tx data register (TX1_DATA) channel 7 bit.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>icr_tx1_data_clear6</name>
              <description>Refer to the description of the ICR_TX1_DATA_CLEAR7.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>icr_tx1_data_clear5</name>
              <description>Refer to the description of the ICR_TX1_DATA_CLEAR7.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>icr_tx1_data_clear4</name>
              <description>Refer to the description of the ICR_TX1_DATA_CLEAR7.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>icr_tx1_data_clear3</name>
              <description>Refer to the description of the ICR_TX1_DATA_CLEAR7.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>icr_tx1_data_clear2</name>
              <description>Refer to the description of the ICR_TX1_DATA_CLEAR7.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>icr_tx1_data_clear1</name>
              <description>Refer to the description of the ICR_TX1_DATA_CLEAR7.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>icr_tx1_data_clear0</name>
              <description>Refer to the description of the ICR_TX1_DATA_CLEAR7.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IPC_SEM_0</name>
          <addressOffset>0x00000014</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>sem0_clr</name>
              <description>The bit can clear 'CPUID ' &amp; 'PXID' when owner CPU writes 1.</description>
              <bitRange>[11:11]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>sem0_set_cpuid</name>
              <description>The bit can set CPUID, It must be written at the same time as SEM0_PXID.</description>
              <bitRange>[10:10]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>sem0_cpuid</name>
              <description>'CPUID' bit is a read-only bit.
00: Currently semaphore can be occupied by CPU. When writing PXID, hardware sets CPUID.
01: Currently semaphore is occupied by KR4.
10: Currently semaphore is occupied by KM4.
11: Currently semaphore is occupied by HiFI5.</description>
              <bitRange>[9:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>sem0_pxid</name>
              <description>CPUID_PXID, which is used to indicate who owns this semaphore when the CPUID is the same.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IPC_SEM_1</name>
          <addressOffset>0x00000018</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>sem1_clr</name>
              <description>The bit can clear 'CPUID ' &amp; 'PXID' when owner CPU writes 1.</description>
              <bitRange>[11:11]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>sem1_set_cpuid</name>
              <description>The bit can set CPUID, It must be written at the same time as SEM1_PXID.</description>
              <bitRange>[10:10]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>sem1_cpuid</name>
              <description>'CPUID' bit is a read-only bit.
00: Currently semaphore can be occupied by CPU. When writing PXID, hardware sets CPUID.
01: Currently semaphore is occupied by KR4.
10: Currently semaphore is occupied by KM4.
11: Currently semaphore is occupied by HiFI5.</description>
              <bitRange>[9:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>sem1_pxid</name>
              <description>CPUID_PXID, which is used to indicate who owns this semaphore when the CPUID is the same.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IPC_SEM_2</name>
          <addressOffset>0x0000001C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>sem2_clr</name>
              <description>The bit can clear 'CPUID ' &amp; 'PXID' when owner CPU writes 1.</description>
              <bitRange>[11:11]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>sem2_set_cpuid</name>
              <description>The bit can set CPUID, It must be written at the same time as SEM2_PXID.</description>
              <bitRange>[10:10]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>sem2_cpuid</name>
              <description>'CPUID' bit is a read-only bit.
00: Currently semaphore can be occupied by CPU. When writing PXID, hardware sets CPUID.
01: Currently semaphore is occupied by KR4.
10: Currently semaphore is occupied by KM4.
11: Currently semaphore is occupied by HiFI5.</description>
              <bitRange>[9:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>sem2_pxid</name>
              <description>CPUID_PXID, which is used to indicate who owns this semaphore when the CPUID is the same.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IPC_SEM_3</name>
          <addressOffset>0x00000020</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>sem3_clr</name>
              <description>The bit can clear 'CPUID ' &amp; 'PXID' when owner CPU writes 1.</description>
              <bitRange>[11:11]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>sem3_set_cpuid</name>
              <description>The bit can set CPUID, It must be written at the same time as SEM3_PXID.</description>
              <bitRange>[10:10]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>sem3_cpuid</name>
              <description>'CPUID' bit is a read-only bit.
00: Currently semaphore can be occupied by CPU. When writing PXID, hardware sets CPUID.
01: Currently semaphore is occupied by KR4.
10: Currently semaphore is occupied by KM4.
11: Currently semaphore is occupied by HiFI5.</description>
              <bitRange>[9:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>sem3_pxid</name>
              <description>CPUID_PXID, which is used to indicate who owns this semaphore when the CPUID is the same.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IPC_DUMMY</name>
          <addressOffset>0x00000024</addressOffset>
          <size>32</size>
          <description>Dummy Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>Dummy register</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>ledc</name>
      <baseAddress>0x41015000</baseAddress>
      <size>0x000000F8</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x000000F8</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>LEDC_CTRL_REG</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description>LEDC Control Register</description>
          <resetValue>0x0000003C</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TOTAL_DATA_LENGTH</name>
              <description>Total length of transfer data, range from 1 to 8K (unit: 32 bits, only low 24-bit is valid).
Actual transfer package is TOTAL_DATA_LENGTH+1.
The field is recommended to an integer multiple of (LED_NUM+1).
Note: If TOTAL_DATA_LENGTH is greater than (LED_NUM+1) but not integer multiple, the last frame of data will be transferred less than (LED_NUM+1).</description>
              <bitRange>[28:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RESET_LED_EN</name>
              <description>Write operation:
When software writes 1 to this bit, LEDC FSM turns to CPU_RESET_LED state, and CPU triggers LEDC to transfer a reset to LED. 
Note: Only when LEDC is in  IDLE state, can FSM turn to CPU_RESET_LED state. 
* When LEDC finishes to send RESET to LED, LEDC FSM returns to the IDLE state, and hardware clears RESET_LED_EN.
* Or when software sets SOFT_RESET, LEDC FSM returns to IDLE state, and hardware clears RESET_LED_EN.
Read operation:
0: LEDC completes the transmission of LED reset operation.
1: LEDC does not complete the transmission of LED reset operation.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LED_POLARITY</name>
              <description>LED DI level when free.
0: Low level
1: High level</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LED_RGB_MODE</name>
              <description>LEDC inputs 24 bits data package in order of {byte2, byte1, byte0}.
000: Output 24 bits data package in order of {byte2, byte1, byte0}
001: Output 24 bits data package in order of {byte2, byte0, byte1}
010: Output 24 bits data package in order of {byte1, byte2, byte0}
011: Output 24 bits data package in order of {byte0, byte2, byte1}
100: Output 24 bits data package in order of {byte1, byte0, byte2}
101: Output 24 bits data package in order of {byte0, byte1, byte2}</description>
              <bitRange>[8:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LED_MSB_TOP</name>
              <description>Source RGB data format.
0: LSB
1: MSB</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LED_MSB_BYTE2</name>
              <description>LEDC outputs 24 bits data package in order of {byte2, byte1, byte0};
1: Output data byte2 MSB first
0: Output data byte2 LSB first</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LED_MSB_BYTE1</name>
              <description>LEDC outputs 24 bits data package in order of {byte2, byte1, byte0};
1: Output data byte1 MSB first
0: Output data byte1 LSB first</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LED_MSB_BYTE0</name>
              <description>LEDC outputs 24 bits data package in order of {byte2, byte1, byte0};
1: Output data byte0 MSB first
0: Output data byte0 LSB first</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LEDC_SOFT_RESET</name>
              <description>LEDC software reset.
If software writes 1 to this bit, the next cycle hardware will clear LEDC_SOFT_RESET to 0, which will generate a pulse.
LEDC soft reset includes all interrupt status register, the control state machine returns to the IDLE state, LEDC FIFO read and write point is cleared to 0, LEDC interrupt is cleared.
The related registers are as below:
* LEDC_CTRL_REG (LEDC_EN is cleared to 0)
* LEDC_DATA_FINISH_CNT_REG (LEDC_DATA_FINISH_CNT is cleared to 0)
* LEDC_INT_STS_REG (all interrupt are cleared)
Other registers remain unchanged.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LEDC_EN</name>
              <description>LEDC enable bit.
0: Disable
1: Enable
This bit enable indicates that LEDC can be started when LEDC data has finished transmission, or this bit is cleared to 0 by hardware when software sets LEDC_SOFT_RESET.
Software clearing LEDC_EN when LEDC FSM is not IDLE don't affect data transfer.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LED_T01_Timing_CTRL_REG</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description>LED Timing Control Register</description>
          <resetValue>0x200C0C20</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>T1H_CNT</name>
              <description>LED modulate logical "1" high level time (T1H_TIME). 
Unit: cycle (40MHz), T1H_TIME = 25ns * T1H_CNT, where T1H_CNT&gt;0
 T1H_TIME default value is 800ns.</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>T1L_CNT</name>
              <description>LED modulate logical "1" low level time.
Unit: cycle (40MHz), T1L_TIME = 25ns *T1L_CNT, where T1L_CNT&gt;0
T1L_TIME default value is 300ns.</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>T0H_CNT</name>
              <description>LED modulate logical "0" high level time.
Unit: cycle (40MHz), T0H_TIME = 25ns * T0H_CNT, where T0H_CNT&gt;0
T0H_TIME default value is 300ns.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>T0L_CNT</name>
              <description>LED modulate logical "0" low level time.
Unit: cycle (40MHz), T0L_TIME = 25ns *T0L_CNT, where T0L_CNT&gt;0
T0L_TIME default value is 800ns.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LEDC_DATA_FINISH_CNT_REG</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description>LEDC Data Finish Register</description>
          <resetValue>0x2EDF0000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>LED_WAIT_DATA_TIME</name>
              <description>The time that internal FIFO of LEDC is waiting for data.
The default value is 300us by default. 
To avoid to insert LED RESET between two-pixel data, hardware will send WAITDATA_TIMEOUT_INT when wait_time&gt;= min (RESET_TIME, LED_WAIT_DATA_TIME).
The adjust range is from 25ns ~ 819us, LED_WAIT_DATA_TIME = 25ns *(N+1) where N is from 0 to 0x7FFF.
When the setting time is exceeded, LEDC will send WAITDATA_TIMEOUT_INT interrupt. Under this abnormal situation, software should reset LEDC.</description>
              <bitRange>[30:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LED_DATA_FINISH_CNT</name>
              <description>The total LED data have been sent. (range: 0 ~ 8K).
When LEDC transfer finishes normally, this register is cleared by hardware when generating trans_finish_int. Software knows LED_DATA_FINISH_CNT equal to TOTAL_DATA_LENGTH.
When LEDC transfers interrupt abnormally, this register will be cleared to 0 by software by setting LEDC_SOFT_RESET.</description>
              <bitRange>[12:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LED_RESET_TIMING_CTRL_REG</name>
          <addressOffset>0x0000000C</addressOffset>
          <size>32</size>
          <description>LED Reset Timing Control Register</description>
          <resetValue>0x2EDF0000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RESET_TIME</name>
              <description>Reset time control of LED lamp.
The default reset time is 300us.
The adjust range is from 25ns to 409.6us. RESET_TIME = 25ns *(N+1) where N is from 0 to 0x3FFF.</description>
              <bitRange>[29:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LED_NUM</name>
              <description>The number of external LED lamp. Maximum up to 1024.
The default value is 0, which indicate that 1 LED lamp is connected.
The range is from 0 to 1023.</description>
              <bitRange>[9:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LEDC_WAIT_TIME0_CTRL_REG</name>
          <addressOffset>0x00000010</addressOffset>
          <size>32</size>
          <description>LED Wait Time 0 Control Register</description>
          <resetValue>0x000001FF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>WAIT_TIME0_EN</name>
              <description>Wait time0 enable. 
When set this bit, the controller automatically inserts waiting time before next LED package data.
0: Disable
1: Enable</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TOTAL_WAIT_TIME0</name>
              <description>Waiting time between 2 LED data, and LEDC outputs Low level during waiting time0.
The adjust range is from 25ns to 12.5us, WAIT_TIME0 = 25ns *(N+1) where N is from 0 to 0x1FF.</description>
              <bitRange>[8:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LEDC_WAIT_TIME1_CTRL_REG</name>
          <addressOffset>0x00000014</addressOffset>
          <size>32</size>
          <description>LED Wait Time 1 Control Register</description>
          <resetValue>0x01FFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>WAIT_TIME1_EN</name>
              <description>Wait time1 enable. 
When set this bit, the controller automatically inserts waiting time before next LED frame data.
0: Disable
1: Enable</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TOTAL_WAIT_TIME1</name>
              <description>Waiting time between 2 frame data, and LEDC outputs Low level during waiting time1.
The adjust range is from 25ns to 53s, WAIT_TIME0 = 25ns *(N+1) where N is from 0 to 0x7FFFFFFF.</description>
              <bitRange>[30:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LEDC_DATA_REG</name>
          <addressOffset>0x00000018</addressOffset>
          <size>32</size>
          <description>LED Data Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>LEDC_DATA</name>
              <description>LEDC display data, the lower 24-bit is valid.
Writ this register means push data to LEDC FIFO.
Register LEDC_EN toggles from 0 to 1 will clear LEDC FIFO. Thus, only data pushed when LEDC_EN=1 will be send to LED.</description>
              <bitRange>[23:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LEDC_DMA_CTRL_REG</name>
          <addressOffset>0x0000001C</addressOffset>
          <size>32</size>
          <description>LED DMA Control Register</description>
          <resetValue>0x0000002F</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>LEDC_DMA_EN</name>
              <description>LEDC DMA request enable. 
0: Disable request of DMA transfer data
1: Enable request of DMA transfer data</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LEDC_FIFO_TRIG_LEVEL</name>
              <description>The remaining space of internal FIFO in LEDC.
When the remain space of internal LEDC FIFO is larger than LEDC_FIFO_TRIG_LEVEL, a DMA request or cpu_req_int will generate.
Note: The default value is 15. The adjust range is from 0 to 31, and the recommended configuration is 7 or 15.</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LED_INTERRUPT_CTRL_REG</name>
          <addressOffset>0x00000020</addressOffset>
          <size>32</size>
          <description>LED Interrupt Control Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>GLOBAL_INT_EN</name>
              <description>Global interrupt enable.
0: Disable
1: Enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FIFO_OVERFLOW_INT_EN</name>
              <description>FIFO overflow interrupt enable.
When the data written by software is more than internal FIFO level of LEDC, LEDC is in data loss state.
0: Disable
1: Enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WAITDATA_TIMEOUT_INT_EN</name>
              <description>The internal FIFO in LEDC can't get data after the LED_WAIT_DATA_TIME, the interrupt will be enable.
0: Disable
1: Enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FIFO_CPUREQ_INT_EN</name>
              <description>FIFO request CPU data interrupt enable.
0: Disable
1: Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LED_TRANS_FINISH_INT_EN</name>
              <description>Data transmission complete interrupt enable.
0: Disable
1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LED_INT_STS_REG</name>
          <addressOffset>0x00000024</addressOffset>
          <size>32</size>
          <description>LED Interrupt Status Register</description>
          <resetValue>0x00020000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIFO_EMPTY</name>
              <description>FIFO empty status flag. 
When LEDC_EN is 0, FIFO_EMPTY equal 1. This flush residual data when LED_NUM is not integer multiples of burst length.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FIFO_FULL</name>
              <description>FIFO full status flag.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FIFO_OVERFLOW_INT</name>
              <description>FIFO overflow interrupt
Clear 0 when software set LEDC_SOFT_RESET.
The data written by external is more than the maximum storage space of LEDC FIFO. At this time, software needs to deal with the abnormal situation. LEDC performs soft_reset operation to refresh all data.
0: FIFO not overflow
1: FIFO overflow</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>WAITDATA_TIMEOUT_INT</name>
              <description>Before transfer a frame: When the internal FIFO in LEDC can't get data after the LED_WAIT_DATA_TIME, this bit is set.
During transfer of a frame (between two pixel of data): to avoid insert LED RESET between two pixel data, hardware will send WAITDATA_TIMEOUT_INT when wait_time&gt;= min(RESET_TIME,LED_WAIT_DATA_TIME).
Clear 0 when software sets LEDC_SOFT_RESET.
When new data arrives at WAIT_DATA state, LEDC will continue sending data. 
Note: Software should note that if the waiting time exceeds the operation of reset time, LEDC may enter refresh state, new data has not been sent.
0: LEDC not timeout
1: LEDC timeout</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FIFO_CPUREQ_INT</name>
              <description>When FIFO data available is less than the threshold left, the interrupt is reported to CPU.
Clear 0 when software sets LEDC_SOFT_RESET.
0: FIFO doesn't request CPU for data
1: FIFO request CPU to transfer data
Note: When getting FIFO_CPUREQ_INT, CPU writes 1 data to LEDC Buffer. It is inefficiently compared to DMA mode.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LED_TRANS_FINISH_INT</name>
              <description>When the data configured as TOTAL_DATA_LENGTH has been transferred complete, this bit is set.
Clear 0 when software sets LEDC_SOFT_RESET.
0: Data transfer has not complete
1: Data transfer complete</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LEDC_DEBUG_SEL_REG</name>
          <addressOffset>0x00000030</addressOffset>
          <size>32</size>
          <description>LED Debug Selection Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>LEDC_DEBUG_SEL_DRIVE</name>
              <description>Drive module debug out selection.</description>
              <bitRange>[8:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LEDC_DEBUG_SEL_FIFO</name>
              <description>FIFO module debug out select.
[6:5]: select debug_data of ledc_txfifo, valid range is 0 or 1
[4:3]: select output data byte when [6:5] is 0.
2'b00: byte0
2'b01: byte1
2'b1x: byte2</description>
              <bitRange>[6:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LEDC_DEBUG_SEL_TOP</name>
              <description>LEDC top module debug out select.</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DUMMY_F0</name>
          <addressOffset>0x000000F0</addressOffset>
          <size>32</size>
          <description>Dummy Register</description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DUMMY_F4</name>
          <addressOffset>0x000000F4</addressOffset>
          <size>32</size>
          <description>Dummy Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>loguart</name>
      <baseAddress>0x41014000</baseAddress>
      <size>0x00000078</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00000078</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>UART_DLL</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description>UART divisor length register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>baud</name>
              <description>The low 8 bits of divisor coefficient (not used)</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_IER</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description>UART interrupt enable register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>etpfei</name>
              <description>Tx Path FIFO Empty interrupt (ETPFEI) (Tx Path FIFO empty) enable control
*000: All Tx Path FIFO empty interrupt disabled
*001: Tx Path1 FIFO Empty interrupt enabled
*010: Tx Path2 FIFO Empty interrupt enabled
*011: Tx Path3 FIFO Empty interrupt enabled
*100: Tx Path4 FIFO Empty interrupt enabled
*Others: Reserved</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>etoi</name>
              <description>Rx timeout interrupt (ETOI) enable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>emdi</name>
              <description>Rx path monitor done interrupt (EMDI) enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>edssi</name>
              <description>Modem Status Interrupt (EDSSI) (modem status transition) enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>elsi</name>
              <description>Receiver Line Status Interrupt (ELSI) (receiver line status) enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>erbi</name>
              <description>Received Data Available Interrupt (ERBFI) (Rx trigger) enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_IIR</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description>UART interrupt identification register</description>
          <resetValue>0x00000001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>int_pend</name>
              <description>Indicate if the interrupt is pending.
*0: Pending, and the IIR contents may be used as a pointer to the appropriate interrupt service routine.
*1: No interrupt is pending.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_LCR</name>
          <addressOffset>0x0000000C</addressOffset>
          <size>32</size>
          <description>UART line control register</description>
          <resetValue>0x00FF0001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>dummy</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dlab</name>
              <description>Divisor Latch Access bit, and control the accessibility of the DLL, DLM and IER registers
* 0: The divisor latches not accessible; IER accessible
* 1: The divisor latches accessible; DLL and DLM accessible
Note: THR/RBR don't care the value of dlab bit</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>brctl</name>
              <description>Break Control bit
* 0: break signal disable
* 1: break signal enable (logic '0')</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>stkp</name>
              <description>Stick Parity bit
* 0: Not stick parity, the parity type is ODD or EVEN (depending on eps)
* 1: Stick parity, eps=1: low parity (1'b0); eps=0: high parity (1'b1)</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>eps</name>
              <description>Even Parity select
* 0: Odd parity, the number of Logic "1" is odd.
* 1: Even parity, the number of Logic "1" is even.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pen</name>
              <description>Parity Enable
* 0: No parity bit
* 1: Parity bit is generated on each outgoing character and is checked on each incoming one</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>stb</name>
              <description>Stop bits length selection
* 0: 1 stop bit
* 1: 2 stop bits
Note: The receiver always checks the first stop bit only.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>wls0</name>
              <description>Word length selection
* 0: 7 bits data
* 1: 8 bits data</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_MCR</name>
          <addressOffset>0x00000010</addressOffset>
          <size>32</size>
          <description>UART modem control register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>afe</name>
              <description>Auto flow control enable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>loop_en</name>
              <description>LoopBack mode
* 0: Normal operation mode
* 1: Loopback mode</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>out2</name>
              <description>Auxiliary output 2
Bit[3] affects the OUT2_ output in a manner identical to that described above set to 0
In loopback mode, connected to Data Carrier Detect (DCD)</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>out1</name>
              <description>Auxiliary output 1
Bit3 affects the OUT1_ output in a manner identical to that described above set to 0
In loopback mode, connected to Ring Indicator (RI)</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rts</name>
              <description>Request to Send (RTS) signal control
* 0: RTS is logic 1.
* 1: RTS is logic 0.
This bit controls the RTS_ output, Bit 1 affects the RTS_ output in a manner identical to that described above set to 0.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dtr</name>
              <description>Data Terminal Ready (DTR) signal control
* 0: DTR is logic 1.
* 1: DTR is logic 0.
This bit controls the DTR output.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_LSR</name>
          <addressOffset>0x00000014</addressOffset>
          <size>32</size>
          <description>UART line status register</description>
          <resetValue>0x00000200</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>rx_fifo_ptr</name>
              <description>Data bytes count in the receive FIFO: the value of rx_fifo_ptr[7:0] indicates the data bytes number received in the FIFO.</description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>tp4f_not_full</name>
              <description>Tx Path4 FIFO not full indicator</description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>tp3f_not_full</name>
              <description>Tx Path3 FIFO not full indicator</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>tp2f_not_full</name>
              <description>Tx Path2 FIFO not full indicator</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>tp1f_not_full</name>
              <description>Tx Path1 FIFO not full indicator</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>tp4f_empty</name>
              <description>Tx Path4 FIFO empty indicator</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>tp3f_empty</name>
              <description>Tx Path3 FIFO empty indicator</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>tp2f_empty</name>
              <description>Tx Path2 FIFO empty indicator</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>tp1f_empty</name>
              <description>Tx Path1 FIFO empty indicator</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>rp_rxfifo_err</name>
              <description>Relay Path rx_error,only valid when the FCR[12] set to 1
* 0: Clear when the CPU reads the LSR, if there are no subsequent errors in the relay path FIFO
* 1: Parity error, framing error or break indication in the relay path FIFO</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TIMEOUT_INT</name>
              <description>This bit is only set when Rx Timeout interrupt is enabled(ETOI is set)
1: at least one character in the FIFO but no character has been input to the FIFO or reading from it for the time duration, which depends on the value in register REG_RX_PATH_CTRL[31:16]</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RXFIFO_INT</name>
              <description>This bit is only set when Received Data Available Interrupt interrupt is enabled(ERBI is set)
1: FIFO Trigger level reached or Rx FIFO full</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>rp_frm_err</name>
              <description>Relay Path Framing Error (FE) indicator
* 0: No framing error in the current character
* 1: The received character does not have a valid stop bit</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>rp_par_err</name>
              <description>Relay Path Parity Error (PE) indicator
* 0: No parity error in current character
* 1: The received character does not have the correct parity bit</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>rpf_ovr_err</name>
              <description>Relay Path FIFO Overrun Error (OE) indicator
* 0: No Overrun state
* 1: The transmission is continue although the Relay FIFO is full</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>rpf_not_full</name>
              <description>Relay Path FIFO Not FULL (NF) indicator
* 0: Relay path FIFO is full
* 1: Relay path FIFO is not full</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>rpf_drdy</name>
              <description>Relay Path FIFO Data Ready (DR) indicator
* 0: No characters in the Relay Receiver FIFO
* 1: At least one character has been received and transferred into the Relay path FIFO</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>rxfifo_err</name>
              <description>Uart_rx_error, only valid when the FCR bit [0] set to 1
* 0: Clear when the CPU reads the LSR, if there are no subsequent errors in the FIFO
* 1: Parity error, overrun error,framing error or break indication in the FIFO</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>tx_empty</name>
              <description>TX fifo empty indicator</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>monitor_done_int</name>
              <description>This bit is only set when Rx Path Monitor Done interrupt is enabled(EMDI is set)
1: Rx path monitor done</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>break_int</name>
              <description>Break Interrupt (BI) indicator
* 0: No break condition in the current character
* 1: The received data input held in the Spacing ( logic 0) state is longer than a full word transmission time</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>frm_err</name>
              <description>Framing Error (FE) indicator
* 0: No framing error in the current character
* 1: The received character does not have a valid stop bit</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>par_err</name>
              <description>Parity Error (PE) indicator
* 0: No parity error in current character
* 1: The received character does not have the correct parity bit</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ovr_err</name>
              <description>Overrun Error (OE) indicator
* 0: No Overrun state
* 1: The transmission is continue although the Rx FIFO is full</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>drdy</name>
              <description>Data Ready (DR) indicator
* 0: No characters in the Receiver FIFO
* 1: At least one character has been received and transferred into the FIFO</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_MSR</name>
          <addressOffset>0x00000018</addressOffset>
          <size>32</size>
          <description>UART modem status register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_dcd</name>
              <description>Complement of the DCD input or equals to Out2 in loopback mode.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>r_ri</name>
              <description>Complement of the RI input or equals to Out1 in loopback mode.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>r_dsr</name>
              <description>Complement of the DSR input or equals to DTR in loopback mode.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>r_cts</name>
              <description>Complement of the CTS input or equals to RTS in loopback mode.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>d_dcd</name>
              <description>Delta Data Carrier Detect (DDCD) indicator
* 0: Otherwise
* 1: The DCD line has changed its state</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>teri</name>
              <description>Trailing Edge of Ring Indicator (TERI) detector
* 0: Otherwise
* 1: The RI line has changed its state from low to high state</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>d_dsr</name>
              <description>Delta Data Set Ready (DDSR) indicator
* 0: Otherwise
* 1: The DSR line has changed its state</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>d_cts</name>
              <description>Delta Clear to Send (DCTS) indicator
* 0: Otherwise
* 1: The CTS line has changed its state</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_SCR</name>
          <addressOffset>0x0000001C</addressOffset>
          <size>32</size>
          <description>UART scratch pad register</description>
          <resetValue>0x00000030</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>xfactor_adj</name>
              <description>One factor of Baud rate calculation for Tx path</description>
              <bitRange>[26:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dbg_sel</name>
              <description>Debug port selection</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>scratch_7</name>
              <description>clear Rx break signal interrupt status</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>scratch_6_0</name>
              <description>*Bit[6]: Rx break signal interrupt enable
*Bit[5]: fl_set_bi_err
*Bit[4]: fl_frame_err
*Bit[3]: pin_lb_test
*Bit[2:0]: reserved</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_STSR</name>
          <addressOffset>0x00000020</addressOffset>
          <size>32</size>
          <description>UART STS register</description>
          <resetValue>0x00010470</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>xfactor</name>
              <description>Factor of Baud rate calculation for Tx path</description>
              <bitRange>[23:4]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_RBR</name>
          <addressOffset>0x00000024</addressOffset>
          <size>32</size>
          <description>UART receiver buffer register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>rxdatabit</name>
              <description>Tx data bit 0~7
Note: Bit[0] is the least significant bit. It is the first bit serially received/transmitted.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_MISCR</name>
          <addressOffset>0x00000028</addressOffset>
          <size>32</size>
          <description>UART MISC control register</description>
          <resetValue>0x00000420</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>clr_dummy_flag</name>
              <description>Indicate the clearing of dummy data</description>
              <bitRange>[24:24]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>dummy_data</name>
              <description>Store dummy data, when UART is DMA flow controller, dummy data is padded for last RXDMA burst request</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rxdma_owner</name>
              <description>Indicate the DMA flow controller for UART Rx DMA1
* 0: GDMA
* 1: UART, interrupt enable signal other than erpd should be masked</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>irda_rx_inv</name>
              <description>irda_rx_i reverse input enable</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>irda_tx_inv</name>
              <description>irda_tx_o reverse output enable</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rxdma_burstsize</name>
              <description>RXDMA burstsize, maximum value is 16</description>
              <bitRange>[12:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>txdma_burstsize</name>
              <description>TXDMA burstsize, maximum value is 16</description>
              <bitRange>[7:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rxdma_en</name>
              <description>RXDMA enable, valid when dma_mode in FCR is 1'b1</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>txdma_en</name>
              <description>TXDMA enable, valid when dma_mode in FCR is 1'b1</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>irda_enable</name>
              <description>IrDA SIR mode enable
* 0: UART mode only
* 1: UART is co-work with IRDA SIR mode</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_REG_SIR_TX_PWC0</name>
          <addressOffset>0x0000002C</addressOffset>
          <size>32</size>
          <description>UART IRDA SIR Tx pulse width control 0 register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>upperbound_shiftright</name>
              <description>Indicate the shift type of SIR Tx pulse's right edge
* 0: Shift left, minus offset value of upperbound_shiftval
* 1: Shift right, plus offset value of upperbound_shiftval</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>upperbound_shiftval</name>
              <description>The shift value of SIR Tx pulse's right edge</description>
              <bitRange>[30:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>lowbound_shiftright</name>
              <description>Indicate the shift type of SIR Tx pulse's left edge
* 0: Shift left, minus offset value of lowbound_shiftval
* 1: Shift right, plus offset value of lowbound_shiftval</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>lowbound_shiftval</name>
              <description>The shift value of SIR Tx pulse's left edge</description>
              <bitRange>[14:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_REG_SIR_RX_PFC</name>
          <addressOffset>0x00000030</addressOffset>
          <size>32</size>
          <description>UART IRDA SIR Rx pulse filter control register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_sir_rx_filter_thrs</name>
              <description>The threshold of SIR Rx filter. Rx pulse is valid only when Rx pulse width is larger than the threshold.</description>
              <bitRange>[15:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_sir_rx_filter_en</name>
              <description>IrDA SIR Rx filter enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_REG_BAUD_MON</name>
          <addressOffset>0x00000034</addressOffset>
          <size>32</size>
          <description>UART baud monitor register</description>
          <resetValue>0x07000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>toggle_mon_en</name>
              <description>Toggle monitor enable</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>mon_data_vld</name>
              <description>Indicate valid monitoring data</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>falling_thresh</name>
              <description>Indicate the threshold of Rx data rising edge</description>
              <bitRange>[29:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>min_low_period</name>
              <description>Minimum space of consecutive logic "0" of Rx data</description>
              <bitRange>[23:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>min_fall_space</name>
              <description>Minimum space of adjacent falling edge of Rx data</description>
              <bitRange>[11:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_REG_DBG</name>
          <addressOffset>0x0000003C</addressOffset>
          <size>32</size>
          <description>UART debug register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dbg_uart</name>
              <description>The output value of debug port, depend on dbg_sel value in SCR[2:0]</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_REG_RX_PATH_CTRL</name>
          <addressOffset>0x00000040</addressOffset>
          <size>32</size>
          <description>UART Rx path control register</description>
          <resetValue>0x00400000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_rxto_thrs</name>
              <description>Indicate the timeout threshold of Rx path, unit in one-bit time</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rxbaud_adj_10_0</name>
              <description>One factor of Baud rate calculation for Rx path, similar with xfactor_adj</description>
              <bitRange>[13:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_rst_newrx_n</name>
              <description>Reset new Rx path, low active</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_REG_MON_BAUD_CTRL</name>
          <addressOffset>0x00000044</addressOffset>
          <size>32</size>
          <description>UART monitor baud rate control register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_upd_osc_in_xtal</name>
              <description>Update parameter r_cycnum_perbit_osc(during the update of parameter r_cycnum_perbit_xtal) enable</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cycnum_perbit_osc</name>
              <description>Indicate the average OSC clock cycle number of one bit, for Rx path OSC clock
Note: Sortware sets the initial value; hardware updates it depending on the monitor result.</description>
              <bitRange>[28:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_bit_num_thres</name>
              <description>Indicate the bit number threshold of one monitor period, max value is 127.</description>
              <bitRange>[8:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_mon_baud_en</name>
              <description>Monitor Rx baud enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_REG_MON_BAUD_STS</name>
          <addressOffset>0x00000048</addressOffset>
          <size>32</size>
          <description>UART monitor baud rate status register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ro_mon_total_bit</name>
              <description>Indicate the number of bits actually monitored</description>
              <bitRange>[28:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ro_mon_rdy</name>
              <description>Indicate the finish of calculation of actual cycle number per bit. It's cleared when r_mon_baud_en is 0.</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>r_cycnum_perbit_xtal</name>
              <description>Indicate the fractional xtal clock cycle number of one bit, for Rx path xtal clk
Note: Sortware sets the initial value; hardware updates it depending on the monitor result.</description>
              <bitRange>[19:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_REG_MON_CYC_NUM</name>
          <addressOffset>0x0000004C</addressOffset>
          <size>32</size>
          <description>UART monitored cycle number register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ro_mon_total_cycle</name>
              <description>Indicate the number of clock cycle actually monitored</description>
              <bitRange>[27:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_REG_Rx_BYTE_CNT</name>
          <addressOffset>0x00000050</addressOffset>
          <size>32</size>
          <description>UART Rx data byte count register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>clr_rx_byte_cnt</name>
              <description>Write 1 to clear ro_rx_byte_cnt</description>
              <bitRange>[16:16]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>ro_rx_byte_cnt</name>
              <description>Count the byte number of data read from rxfifo</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_FCR</name>
          <addressOffset>0x00000054</addressOffset>
          <size>32</size>
          <description>UART FIFO control register</description>
          <resetValue>0x000010C1</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>rp_recv_clr</name>
              <description>Clear Relay Path receiving</description>
              <bitRange>[13:13]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>rp_fifo_en</name>
              <description>Error report of Relay Path RCVR FIFO field enable,</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>recvtrg</name>
              <description>Define the 16-entry Receiver FIFO Interrupt trigger level (0~15 bytes)
* 00: 1 byte
* 01: FIFO_DEPTH/4
* 10: FIFO_DEPTH/2
* 11: FIFO_DEPTH-2</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dma_mode</name>
              <description>Support DMA mode (cooperating with DW DDMA in the data path)</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>recv_clr</name>
              <description>Clear receiving</description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>fifo_en</name>
              <description>Error report of RCVR FIFO field enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_AGGC</name>
          <addressOffset>0x00000058</addressOffset>
          <size>32</size>
          <description>UART AGG control register</description>
          <resetValue>0x00BB87FF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>rp_en</name>
              <description>Relay Rx Path enable
*0: Disable
*1: Enable</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tp4_en</name>
              <description>Tx Path4 enable
*0: Disable
*1: Enable</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tp3_en</name>
              <description>Tx Path3 enable
*0: Disable
*1: Enable</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tp2_en</name>
              <description>Tx Path2 enable
*0: Disable
*1: Enable</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tp1_en</name>
              <description>Tx Path1 enable
*0: Disable
*1: Enable</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>agg_en</name>
              <description>Tx AGG function enable</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>agg_to</name>
              <description>AGG timeout
Unit is one baudrate period of loguart Tx, default is 1ms if Tx baudrate is 3Mbps.
Data should be sent from log FIFO to tx_fifo if idle time &gt; AGG timeout, even if there is just only one byte in log FIFO of the path.</description>
              <bitRange>[25:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>agg_th</name>
              <description>AGG threshold 
4'0000: 1
4'0111: 8
Numbers above 4'0111 are reserved.</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>agg_sync_pat</name>
              <description>AGG packet Start</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_THR0</name>
          <addressOffset>0x0000005C</addressOffset>
          <size>32</size>
          <description>UART transmitter holding register 0</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>tx0databit</name>
              <description>Tx data bit 0~7
Note: Bit 0 is the least significant bit. It is the first bit serially received/transmitted</description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_THR1</name>
          <addressOffset>0x00000060</addressOffset>
          <size>32</size>
          <description>UART transmitter holding register 1</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>tx1databit</name>
              <description>Tx data bit 0~7
Note: Bit 0 is the least significant bit. It is the first bit serially received/transmitted</description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_THR2</name>
          <addressOffset>0x00000064</addressOffset>
          <size>32</size>
          <description>UART transmitter holding register 2</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>tx2databit</name>
              <description>Tx data bit 0~7
Note: Bit 0 is the least significant bit. It is the first bit serially received/transmitted</description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_THR3</name>
          <addressOffset>0x00000068</addressOffset>
          <size>32</size>
          <description>UART transmitter holding register 3</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>tx3databit</name>
              <description>Tx data bit 0~7
Note: Bit 0 is the least significant bit. It is the first bit serially received/transmitted</description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_RP_LCR</name>
          <addressOffset>0x0000006C</addressOffset>
          <size>32</size>
          <description>UART Relay Rx Path line control register</description>
          <resetValue>0x00000001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>rp_rxbaud_19_0</name>
              <description>Factor of Baud rate calculation for Relay path</description>
              <bitRange>[31:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rp_dlab</name>
              <description>Divisor Latch Access bit, and control the accessibility of the DLL, DLM and IER registers
* 0: The divisor latches not accessible; IER accessible
* 1: The divisor latches accessible; DLL and DLM accessible
Note: THR/RBR don not care the value of dlab bit.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rp_stkp</name>
              <description>Stick Parity bit
* 0: Not stick parity, the parity type is ODD or EVEN (depend on eps)
* 1: Stick parity, eps=1: low parity (1'b0); eps=0: high parity (1'b1)</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rp_eps</name>
              <description>Even Parity select
* 0: Odd parity, the number of Logic "1" is odd.
* 1: Even parity, the number of Logic "1" is even.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rp_pen</name>
              <description>Parity Enable
* 0: No parity bit
* 1: Parity bit is generated on each outgoing character and is checked on each incoming one.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rp_stb</name>
              <description>Stop bits length selection
* 0: 1 stop bit
* 1: 2 stop bits
Note: the receiver always checks the first stop bit only.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rp_wls0</name>
              <description>Word length selection
* 0: 7 bits data
* 1: 8 bits data</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_RP_RX_PATH_CTRL</name>
          <addressOffset>0x00000070</addressOffset>
          <size>32</size>
          <description>UART Relay Rx path control register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>rp_rxbaud_adj_10_0</name>
              <description>One factor of Baud rate calculation for Relay path, similar with xfactor_adj</description>
              <bitRange>[13:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_rst_rp_rx_n</name>
              <description>Reset Relay Rx path, low active</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_ICR</name>
          <addressOffset>0x00000074</addressOffset>
          <size>32</size>
          <description>UART interrupt clear register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RPRLSICF</name>
              <description>Relay Path Receiver Line Statue Interrupt Clear Flag
Writing 1 to this bit clears relay path's PARITY_ERR, OVERRUN_ERR, FRAMING_ERR and RXFIFO_ERR  in the USART_LSR register.</description>
              <bitRange>[3:3]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>MDICF</name>
              <description>Monitor done clear flag</description>
              <bitRange>[2:2]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>TOICF</name>
              <description>Timeout Interrupt Clear Flag</description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>RLSICF</name>
              <description>Receiver Line Statue Interrupt Clear Flag
Writing 1 to this bit clears PARITY_ERR, OVERRUN_ERR, FRAMING_ERR, BREAK_ERR_INT and RXFIFO_ERR  in the USART_LSR register.</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>otpc</name>
      <baseAddress>0x41000000</baseAddress>
      <size>0x00000044</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00000044</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>OTP_ALD</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>load_fail</name>
              <description>Autoload fail flag</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>load_done</name>
              <description>Autoload done flag</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>srst</name>
              <description>Soft reset data path except register</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OTP_SCAN</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ef_scan_saddr</name>
              <description>EFuse Scan start Address (unit in byte)</description>
              <bitRange>[25:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ef_scan_eaddr</name>
              <description>EFuse Scan End address</description>
              <bitRange>[16:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ef_scan_fail</name>
              <description>Test Scan Report
1: Fail
0: Ok</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ef_scan_thd</name>
              <description>Write this field will trig a scan operation</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OTP_AS</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ef_rd_wr_ns</name>
              <description>Write this bit will trig an indirect read or write.
Write 1: trigger write
write 0: trigger read
After this operation done, this bit will toggle.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ef_mode_sel_ns</name>
              <description>OTP Mode Selection
000: User Mode
001: Initial Margin Read Mode(room temp)
010: Program Margin Read Mode(room temp)
011: Initial Margin Read Mode(high temp)
100: Program Margin Read Mode(high temp)</description>
              <bitRange>[21:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ef_addr_ns</name>
              <description>OTP indirect read or write address</description>
              <bitRange>[18:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ef_data_ns</name>
              <description>OTP indirect read or write data</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OTP_AS_SEC</name>
          <addressOffset>0x0000000C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ef_rd_wr_s</name>
              <description>Write this bit will trig an indirect read or write.
Write 1: trigger write
write 0: trigger read
After this operation done, this bit will toggle.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ef_mode_sel_s</name>
              <description>OTP Mode Selection
000: User Mode
001: Initial Margin Read Mode(room temp)
010: Program Margin Read Mode(room temp)
011: Initial Margin Read Mode(high temp)
100: Program Margin Read Mode(high temp)</description>
              <bitRange>[21:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ef_addr_s</name>
              <description>OTP indirect read or write address</description>
              <bitRange>[18:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ef_data_s</name>
              <description>OTP indirect read or write data</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OTP_TEST_MODE</name>
          <addressOffset>0x00000010</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ef_mode</name>
              <description>OTP Test Mode Selection
0000: User Read Mode
0001: Initial Margin Read Mode(room temp)
0010: Program Margin Read Mode(room temp)
0011: Initial Margin Read Mode(high temp)
0100: Program Margin Read Mode(high temp)
0101: User Write Mode
1001: Repair Margin Read Mode
1010: Repair Check Mode
1011: Repair Program Mode
Bit[3]=0: User mode and Test mode
Bit[3]=1: Use Repair mode</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OTP_CTRL</name>
          <addressOffset>0x00000014</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00061A7F</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ef_pg_pwd</name>
              <description>OTP program password.
OTP can be programed only when this value is 8'h69.</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ef_dslp_tim</name>
              <description>OTP auto return back to dslp if no operation during ef_dslp_tim (40Mhz)</description>
              <bitRange>[18:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OTP_TEST</name>
          <addressOffset>0x00000018</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ef_rp_chk</name>
              <description>Check result
2'b00: Good sample
2'b01: Repairable sample
2'b11: Failure sample</description>
              <bitRange>[4:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ef_trow_en</name>
              <description>Test row enable
2'b01: test row enable
2'b10: test column enable</description>
              <bitRange>[2:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ef_pgrd_imr</name>
              <description>When using mode selection under OTP_Test , this signal needs to be raised to mask mode selection in OTP_AS_SEC/OTP_AS to avoid mode conflict
0: Unmask Program Margin Read Mode and Initial Margin Read Mode of OTP_AS_SEC/OTP_AS register
1: Mask Program Margin Read Mode and Initial Margin Read Mode of OTP_AS_SEC/OTP_AS register</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OTP_TIME</name>
          <addressOffset>0x0000001C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00012492</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ef_pph</name>
              <description>OTP Program Hold time. In the unit of cycle time (5us&lt; Tpph &lt;20us)
For input clock 20 MHz/26 MHz
0: 4us
1: 6us
2: 8us (default)
3: 10us
4: 12us
5: 14us
6: 18us
7: 21us</description>
              <bitRange>[17:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ef_pps</name>
              <description>OTP Program Setup time  time. In the unit of cycle time (5us&lt; Tpps&lt;20us)
For input clock 20 MHz/26 MHz
0: 4us
1: 6us
2: 8us (default)
3: 10us
4: 12us
5: 14us
6: 18us
7: 21us</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ef_ppsr</name>
              <description>OTP Program  Recovery time. In the unit of cycle time (5us&lt; Tppr&lt;100us)
For input clock 20 MHz/26 MHz
0: 4us
1: 15us
2: 30us (default)
3: 45us
4: 60us
5: 75us
6: 90us
7: 101us</description>
              <bitRange>[11:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ef_tpwi</name>
              <description>Program Pulse Interval Time (1us&lt;ef_tpwi&lt;5us)
For input clock 20 MHz/26 MHz
0: 0.5us
1: 1.5us
2: 2us (default)
3: 2.5us
4: 3us
5: 3.5us
6: 4us
7: 5.5us</description>
              <bitRange>[8:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ef_tpw</name>
              <description>Program pulse width time.OTP Program Pulse width Time (20us&lt;ef_tpw&lt;25us)
For input clock 20 MHz/26 MHz
0: 19.5us
1: 23us
2: 23.5us (default)
3: 24us
4: 24.5us
5: 25.5us</description>
              <bitRange>[5:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ef_csp</name>
              <description>IP enable time in program (10us&lt;ef_csp&lt;100us)
For input clock 20 MHz/26 MHz
0: 5us
1: 15us
2: 30us (default)
3: 45us
4: 60us
5: 75us
6: 90us
7: 101us</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OTP_ALD_EN</name>
          <addressOffset>0x00000020</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>user_err_flag</name>
              <description>When the autoload format in the user zone is incorrectly written, the signal will be raised.</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>load_lzon_err</name>
              <description>When the actual autoload data in the logical region is larger than the planned physical interval, this error signal will be high</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>load_en</name>
              <description>Soft load enable, write one auto clear</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>load_lzon</name>
              <description>Logic load zone select (currently only supports software to trigger autoload in rom area)
0bit: 11'h0 - 11'h7 system data
1bit: 11'h8 - 11'h1F AON hareware data
2bit: 11'h140 - 11'h1AF LS hareware data
3bit: 11'h300 - 11'h32F AON pmc patch
4bit: 11'h340 - 11'h36F LS pmc patch
5bit: 11'h380 - 11'h3FF AON register patch
6bit: 11'h400 - 11'h47F LS register patch 
7bit: It's invalid to write 1 or 0.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>load_pzon</name>
              <description>physical load zone select</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OTP_DEBUG</name>
          <addressOffset>0x00000024</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ef_debug_en</name>
              <description>Debug enable</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ef_debug_state</name>
              <description>State machine operating state
[8:5]: autoload state.
[4:3]: rd/wr ctrl state.
[2:0]: wav state.Working status of different modes.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OTP_CRC_DATA</name>
          <addressOffset>0x00000030</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>crc_data_act</name>
              <description>Actual crc data by hw calurate .
Note : even CRC disabled by crc entry , this value will also get by hw.</description>
              <bitRange>[31:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>crc_data_exp</name>
              <description>Expect crc data from physical zone</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OTP_CRC_RESULT</name>
          <addressOffset>0x00000034</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>crc_fail</name>
              <description>CRC compare fail flag .
If CRC is disable by CRC_ENTRY , this bit will be 0</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>crc_trigger_en</name>
              <description>The software enables calculation of the CRC in the secure zone and returns the calculated value(200-36f)</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>crc_entry_en</name>
              <description>one-hot bit for CRC_entry enable flag . 
If this value is 0 , it means CRC is disabled</description>
              <bitRange>[19:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>crc_magic</name>
              <description>magic data read from valid CRC entry</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OTP_REPAIR_TIME</name>
          <addressOffset>0x00000038</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x71F00200</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ef_rep_wcnt</name>
              <description>Configure the maximum address  in  Repair Program Mode.The default values are usually used. Please do not change them arbitrarily</description>
              <bitRange>[31:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ef_rep_rcnt</name>
              <description>Configure the maximum address to read in both read modes of REPAIR (Repair Margin Read Mode, Repair Check Mode )
1. for Repair Margin Read Mode, ef_rep_rcnt is 12'd513
2.for Repair Check Mode, er _rep_rcnt is 12'd0</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OTP_PARAM</name>
          <addressOffset>0x00000040</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>TO DO</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>otpc_sec</name>
      <baseAddress>0x41000000</baseAddress>
      <size>0x00000744</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00000744</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>REG_OTP_SYSCFG0</name>
          <addressOffset>0x00000100</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>sw_rsvd_1</name>
              <description>RSVD for SW usage</description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BOOT_RAND_DELAY_EN</name>
              <description>Enable random boot delay
0: disable
1: enable</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LOGIC_RDP_EN</name>
              <description>RDP enable</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LOGIC_RSIP_EN</name>
              <description>RSIP enable</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LOGIC_SECURE_BOOT_EN</name>
              <description>Secure boot enable</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LOW_BAUD_LOG_EN</name>
              <description>Loguart Baudrate selection
1: 115200bps
0: 1.5Mbps</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DIS_BOOT_LOG_EN</name>
              <description>Boot log disable</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sw_rsvd_0</name>
              <description>RSVD for SW usage</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BOOT_FLASH_BAUD_SEL</name>
              <description>Boot Flash clock selection. Baudrate = 40/(2*(1+x))
0: 20M
1: 10M</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPIC_BOOT_SPEEDUP_DIS</name>
              <description>SPIC boot speed up disable</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPIC_ADDR_4BYTE_EN</name>
              <description>SPIC address 4-byte enable</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FLASH_DEEP_SLEEP_EN</name>
              <description>Flash deepsleep enable</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OTP_CHIPID1</name>
              <description>OTP autuload data reserved for SW</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OTP_CHIPID0</name>
              <description>OTP autuload data reserved for SW</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_OTP_SYSCFG1</name>
          <addressOffset>0x00000104</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SW_RSVD3</name>
              <description>RSVD for SW usage</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SW_RSVD2</name>
              <description>RSVD for SW usage</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SW_RSVD1</name>
              <description>RSVD for SW usage</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SW_RSVD0</name>
              <description>RSVD for SW usage</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_OTP_SYSCFG2</name>
          <addressOffset>0x00000108</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SW_RSVD4</name>
              <description>RSVD for SW usage</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_OTP_SYSCFG3</name>
          <addressOffset>0x0000010C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SW_RSVD5</name>
              <description>RSVD for SW usage</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_S_IPSEC1_0</name>
          <addressOffset>0x00000200</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_S_IPSEC1_0</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_S_IPSEC1_1</name>
          <addressOffset>0x00000204</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_S_IPSEC1_1</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_S_IPSEC1_2</name>
          <addressOffset>0x00000208</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_S_IPSEC1_2</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_S_IPSEC1_3</name>
          <addressOffset>0x0000020C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_S_IPSEC1_3</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_S_IPSEC1_4</name>
          <addressOffset>0x00000210</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_S_IPSEC1_4</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_S_IPSEC1_5</name>
          <addressOffset>0x00000214</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_S_IPSEC1_5</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_S_IPSEC1_6</name>
          <addressOffset>0x00000218</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_S_IPSEC1_6</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_S_IPSEC1_7</name>
          <addressOffset>0x0000021C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_S_IPSEC1_7</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_S_IPSEC2_0</name>
          <addressOffset>0x00000220</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_S_IPSEC2_0</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_S_IPSEC2_1</name>
          <addressOffset>0x00000224</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_S_IPSEC2_1</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_S_IPSEC2_2</name>
          <addressOffset>0x00000228</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_S_IPSEC2_2</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_S_IPSEC2_3</name>
          <addressOffset>0x0000022C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_S_IPSEC2_3</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_S_IPSEC2_4</name>
          <addressOffset>0x00000230</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_S_IPSEC2_4</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_S_IPSEC2_5</name>
          <addressOffset>0x00000234</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_S_IPSEC2_5</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_S_IPSEC2_6</name>
          <addressOffset>0x00000238</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_S_IPSEC2_6</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_S_IPSEC2_7</name>
          <addressOffset>0x0000023C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_S_IPSEC2_7</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_NS_IPSEC1_0</name>
          <addressOffset>0x00000240</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_NS_IPSEC1_0</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_NS_IPSEC1_1</name>
          <addressOffset>0x00000244</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_NS_IPSEC1_1</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_NS_IPSEC1_2</name>
          <addressOffset>0x00000248</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_NS_IPSEC1_2</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_NS_IPSEC1_3</name>
          <addressOffset>0x0000024C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_NS_IPSEC1_3</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_NS_IPSEC1_4</name>
          <addressOffset>0x00000250</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_NS_IPSEC1_4</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_NS_IPSEC1_5</name>
          <addressOffset>0x00000254</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_NS_IPSEC1_5</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_NS_IPSEC1_6</name>
          <addressOffset>0x00000258</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_NS_IPSEC1_6</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_NS_IPSEC1_7</name>
          <addressOffset>0x0000025C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_NS_IPSEC1_7</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_NS_IPSEC2_0</name>
          <addressOffset>0x00000260</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_NS_IPSEC2_0</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_NS_IPSEC2_1</name>
          <addressOffset>0x00000264</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_NS_IPSEC2_1</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_NS_IPSEC2_2</name>
          <addressOffset>0x00000268</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_NS_IPSEC2_2</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_NS_IPSEC2_3</name>
          <addressOffset>0x0000026C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_NS_IPSEC2_3</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_NS_IPSEC2_4</name>
          <addressOffset>0x00000270</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_NS_IPSEC2_4</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_NS_IPSEC2_5</name>
          <addressOffset>0x00000274</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_NS_IPSEC2_5</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_NS_IPSEC2_6</name>
          <addressOffset>0x00000278</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_NS_IPSEC2_6</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_NS_IPSEC2_7</name>
          <addressOffset>0x0000027C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_NS_IPSEC2_7</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_ECDSA_PRI1_0</name>
          <addressOffset>0x00000280</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_ECDSA_PRI1_0</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_ECDSA_PRI1_1</name>
          <addressOffset>0x00000284</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_ECDSA_PRI1_1</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_ECDSA_PRI1_2</name>
          <addressOffset>0x00000288</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_ECDSA_PRI1_2</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_ECDSA_PRI1_3</name>
          <addressOffset>0x0000028C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_ECDSA_PRI1_3</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_ECDSA_PRI1_4</name>
          <addressOffset>0x00000290</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_ECDSA_PRI1_4</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_ECDSA_PRI1_5</name>
          <addressOffset>0x00000294</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_ECDSA_PRI1_5</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_ECDSA_PRI1_6</name>
          <addressOffset>0x00000298</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_ECDSA_PRI1_6</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_ECDSA_PRI1_7</name>
          <addressOffset>0x0000029C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_ECDSA_PRI1_7</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_ECDSA_PRI2_0</name>
          <addressOffset>0x000002A0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_ECDSA_PRI2_0</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_ECDSA_PRI2_1</name>
          <addressOffset>0x000002A4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_ECDSA_PRI2_1</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_ECDSA_PRI2_2</name>
          <addressOffset>0x000002A8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_ECDSA_PRI2_2</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_ECDSA_PRI2_3</name>
          <addressOffset>0x000002AC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_ECDSA_PRI2_3</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_ECDSA_PRI2_4</name>
          <addressOffset>0x000002B0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_ECDSA_PRI2_4</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_ECDSA_PRI2_5</name>
          <addressOffset>0x000002B4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_ECDSA_PRI2_5</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_ECDSA_PRI2_6</name>
          <addressOffset>0x000002B8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_ECDSA_PRI2_6</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_ECDSA_PRI2_7</name>
          <addressOffset>0x000002BC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_ECDSA_PRI2_7</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_RSIP_ECB_0</name>
          <addressOffset>0x000002C0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_RSIP_ECB_0</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_RSIP_ECB_1</name>
          <addressOffset>0x000002C4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_RSIP_ECB_1</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_RSIP_ECB_2</name>
          <addressOffset>0x000002C8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_RSIP_ECB_2</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_RSIP_ECB_3</name>
          <addressOffset>0x000002CC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_RSIP_ECB_3</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_RSIP_ECB_4</name>
          <addressOffset>0x000002D0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_RSIP_ECB_4</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_RSIP_ECB_5</name>
          <addressOffset>0x000002D4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_RSIP_ECB_5</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_RSIP_ECB_6</name>
          <addressOffset>0x000002D8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_RSIP_ECB_6</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_RSIP_ECB_7</name>
          <addressOffset>0x000002DC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_RSIP_ECB_7</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_RSIP_CTR_0</name>
          <addressOffset>0x000002E0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_RSIP_CTR_0</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_RSIP_CTR_1</name>
          <addressOffset>0x000002E4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_RSIP_CTR_1</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_RSIP_CTR_2</name>
          <addressOffset>0x000002E8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_RSIP_CTR_2</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_RSIP_CTR_3</name>
          <addressOffset>0x000002EC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_RSIP_CTR_3</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_RSIP_CTR_4</name>
          <addressOffset>0x000002F0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_RSIP_CTR_4</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_RSIP_CTR_5</name>
          <addressOffset>0x000002F4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_RSIP_CTR_5</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_RSIP_CTR_6</name>
          <addressOffset>0x000002F8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_RSIP_CTR_6</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_RSIP_CTR_7</name>
          <addressOffset>0x000002FC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_RSIP_CTR_7</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_SWD_PWD_0</name>
          <addressOffset>0x00000300</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_SWD_PWD_0</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_SWD_PWD_1</name>
          <addressOffset>0x00000304</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_SWD_PWD_1</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_SWD_PWD_2</name>
          <addressOffset>0x00000308</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_SWD_PWD_2</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEY_SWD_PWD_3</name>
          <addressOffset>0x0000030C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_SWD_PWD_3</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_NEWKEY_HUK_0</name>
          <addressOffset>0x00000310</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>HUK_0_3</name>
              <description></description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>HUK_0_2</name>
              <description></description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>HUK_0_1</name>
              <description></description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>HUK_0_0</name>
              <description></description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_NEWKEY_HUK_1</name>
          <addressOffset>0x00000314</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>HUK_1_3</name>
              <description></description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>HUK_1_2</name>
              <description></description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>HUK_1_1</name>
              <description></description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>HUK_1_0</name>
              <description></description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_NEWKEY_HUK_2</name>
          <addressOffset>0x00000318</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>HUK_2_3</name>
              <description></description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>HUK_2_2</name>
              <description></description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>HUK_2_1</name>
              <description></description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>HUK_2_0</name>
              <description></description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_NEWKEY_HUK_3</name>
          <addressOffset>0x0000031C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>HUK_3_3</name>
              <description></description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>HUK_3_2</name>
              <description></description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>HUK_3_1</name>
              <description></description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>HUK_3_0</name>
              <description></description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PKKEY_PK1_0</name>
          <addressOffset>0x00000320</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_PK1_0</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PKKEY_PK1_1</name>
          <addressOffset>0x00000324</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_PK1_1</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PKKEY_PK1_2</name>
          <addressOffset>0x00000328</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_PK1_2</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PKKEY_PK1_3</name>
          <addressOffset>0x0000032C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_PK1_3</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PKKEY_PK1_4</name>
          <addressOffset>0x00000330</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_PK1_4</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PKKEY_PK1_5</name>
          <addressOffset>0x00000334</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_PK1_5</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PKKEY_PK1_6</name>
          <addressOffset>0x00000338</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_PK1_6</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PKKEY_PK1_7</name>
          <addressOffset>0x0000033C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_PK1_7</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PKKEY_PK2_0</name>
          <addressOffset>0x00000340</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_PK2_0</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PKKEY_PK2_1</name>
          <addressOffset>0x00000344</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_PK2_1</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PKKEY_PK2_2</name>
          <addressOffset>0x00000348</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_PK2_2</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PKKEY_PK2_3</name>
          <addressOffset>0x0000034C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_PK2_3</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PKKEY_PK2_4</name>
          <addressOffset>0x00000350</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_PK2_4</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PKKEY_PK2_5</name>
          <addressOffset>0x00000354</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_PK2_5</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PKKEY_PK2_6</name>
          <addressOffset>0x00000358</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_PK2_6</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PKKEY_PK2_7</name>
          <addressOffset>0x0000035C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_PK2_7</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SEC_CFG0</name>
          <addressOffset>0x00000360</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>swd_id</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SEC_CFG1</name>
          <addressOffset>0x00000364</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFEFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SWD_PWD_EN</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SWD_DBGEN</name>
              <description></description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SWD_NIDEN</name>
              <description></description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SWD_SPIDEN</name>
              <description></description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SWD_SPNIDEN</name>
              <description></description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SWD_PWD_R_Protection_EN</name>
              <description></description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SWD_PWD_W_Forbidden_EN</name>
              <description></description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>HUK_W_Forbidden_EN</name>
              <description></description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PK1_W_Forbidden_EN</name>
              <description></description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PK2_W_Forbidden_EN</name>
              <description></description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>S_IPSEC_Key1_R_Protection_EN</name>
              <description></description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>S_IPSEC_Key1_W_Forbidden_EN</name>
              <description></description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>S_IPSEC_Key2_R_Protection_EN</name>
              <description></description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>S_IPSEC_Key2_W_Forbidden_EN</name>
              <description></description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>NS_IPSEC_Key1_R_Protection_EN</name>
              <description></description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>NS_IPSEC_Key1_W_Forbidden_EN</name>
              <description></description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>NS_IPSEC_Key2_R_Protection_EN</name>
              <description></description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>NS_IPSEC_Key2_W_Forbidden_EN</name>
              <description></description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ECDSA_PRI_KEY1_R_Protection_EN</name>
              <description></description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ECDSA_PRI_KEY1_W_Forbidden_EN</name>
              <description></description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ECDSA_PRI_KEY2_R_Protection_EN</name>
              <description></description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ECDSA_PRI_KEY2_W_Forbidden_EN</name>
              <description></description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSIP_KEY1_R_Protection_EN</name>
              <description></description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSIP_KEY1_W_Forbidden_EN</name>
              <description></description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSIP_KEY2_R_Protection_EN</name>
              <description></description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSIP_KEY2_W_Forbidden_EN</name>
              <description></description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSIP_MODE_W_Forbidden_EN</name>
              <description></description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SIC_SECURE_EN</name>
              <description></description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CPU_PC_DBG_EN</name>
              <description></description>
              <bitRange>[29:29]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>udf1_Trustzone_EN</name>
              <description></description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>udf2_Trustzone_EN</name>
              <description></description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SEC_CFG2</name>
          <addressOffset>0x00000368</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFD</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>UART_DOWNLOAD_DISABLE</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSIP_EN</name>
              <description></description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SECURE_BOOT_EN</name>
              <description></description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SECURE_BOOT_HW_DIS</name>
              <description></description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RDP_EN</name>
              <description></description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>Anti_Rollback_EN</name>
              <description></description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FAULT_LOG_PRINT_DIS</name>
              <description></description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSIP_MODE</name>
              <description></description>
              <bitRange>[9:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>HUK_DERIV_EN</name>
              <description></description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>cfg_rsvd1</name>
              <description></description>
              <bitRange>[15:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>rsvd_sw</name>
              <description></description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SECURE_BOOT_AUTH_ALG</name>
              <description></description>
              <bitRange>[27:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SECURE_BOOT_HASH_ALG</name>
              <description></description>
              <bitRange>[31:28]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_OTA_ADDR</name>
          <addressOffset>0x0000036C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ota_addr</name>
              <description></description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BOOTLOADER_VERSION</name>
              <description></description>
              <bitRange>[31:16]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CRC0</name>
          <addressOffset>0x00000370</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>crc_entry0</name>
              <description>[15:0] : magic data
[31:16]: valid crc
Note : this field will be autoload twice time, and stick to L</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CRC1</name>
          <addressOffset>0x00000374</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>crc_entry1</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CRC2</name>
          <addressOffset>0x00000378</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>crc_entry2</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CRC3</name>
          <addressOffset>0x0000037C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>crc_entry3</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RMA</name>
          <addressOffset>0x00000700</addressOffset>
          <size>8</size>
          <description></description>
          <resetValue>0x000000FF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RMA_DATA</name>
              <description>If the number of 1 is odd, it will goto RMA state.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ROM_PATCH</name>
          <addressOffset>0x00000701</addressOffset>
          <size>8</size>
          <description></description>
          <resetValue>0x000000FF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ROM_PATCH_PG</name>
              <description>ROM patch enable.This Bit will programed by FT if ROM patch do not needed</description>
              <bitRange>[1:0]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ROM_PATCH_LWE</name>
              <description>ROM patch write protection (protect Low 2Kbits)</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ROM_PATCH_HWE</name>
              <description>ROM patch write protection (protect High 2Kbits)</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>otp_rsvd</name>
              <description>RSVD for further use</description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SEC_CFG3</name>
          <addressOffset>0x00000702</addressOffset>
          <size>16</size>
          <description></description>
          <resetValue>0x000000FF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RMA_SWD_PWD_R_Protection_EN</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RMA_SWD_PWD_W_Forbidden_EN</name>
              <description></description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RMA_PK_W_Forbidden_EN</name>
              <description></description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>otp_rsvd0</name>
              <description></description>
              <bitRange>[7:3]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SWD_RMA_PWD_0</name>
          <addressOffset>0x00000710</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_RMA_PWD_0</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SWD_RMA_PWD_1</name>
          <addressOffset>0x00000714</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_RMA_PWD_1</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SWD_RMA_PWD_2</name>
          <addressOffset>0x00000718</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_RMA_PWD_2</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SWD_RMA_PWD_3</name>
          <addressOffset>0x0000071C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_RMA_PWD_3</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PKKEY_RMA_PK_0</name>
          <addressOffset>0x00000720</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_RMA_PK_0</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PKKEY_RMA_PK_1</name>
          <addressOffset>0x00000724</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_RMA_PK_1</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PKKEY_RMA_PK_2</name>
          <addressOffset>0x00000728</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_RMA_PK_2</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PKKEY_RMA_PK_3</name>
          <addressOffset>0x0000072C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_RMA_PK_3</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PKKEY_RMA_PK_4</name>
          <addressOffset>0x00000730</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_RMA_PK_4</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PKKEY_RMA_PK_5</name>
          <addressOffset>0x00000734</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_RMA_PK_5</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PKKEY_RMA_PK_6</name>
          <addressOffset>0x00000738</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_RMA_PK_6</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PKKEY_RMA_PK_7</name>
          <addressOffset>0x0000073C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>key_RMA_PK_7</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OTP_DUMMY</name>
          <addressOffset>0x00000740</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>dummy reg  for hw</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>rtc</name>
      <baseAddress>0x4101B000</baseAddress>
      <size>0x0000002C</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x0000002C</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>RTC_TR</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description>RTC Time Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DAY</name>
              <description>DAY in binary format</description>
              <bitRange>[31:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PM</name>
              <description>PM:AM/PM notation
* 0: AM or 24-hour format
* 1: PM</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HT</name>
              <description>Hour tens in BCD format</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HU</name>
              <description>Hour units in BCD format</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MNT</name>
              <description>Minute tens in BCD format</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MNU</name>
              <description>Minute units in BCD format</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ST</name>
              <description>Second tens in BCD format</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SU</name>
              <description>Second units in BCD format</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_CR</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description>RTC Ctrl Register</description>
          <resetValue>0xFF800000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DAY_THRES</name>
              <description>Day threshold in binary format</description>
              <bitRange>[31:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DOVTHIE</name>
              <description>Day over threshold interrupt enable
* 0: Day over threshold interrupt is disabled.
* 1: Day over threshold interrupt is enabled.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WUTIE</name>
              <description>Wakeup timer interrupt enable
* 0: Wakeup timer interrupt is disabled.
* 1: Wakeup timer interrupt is enabled.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ALMIE</name>
              <description>Alarm interrupt enable
* 0: Alarm interrupt is disabled.
* 1: Alarm interrupt is enabled.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WUTE</name>
              <description>Wakeup timer enable
* 0: Wakeup timer is disabled.
* 1: Wakeup timer is enabled.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ALME</name>
              <description>Alarm enable
* 0: Alarm is disabled.
* 1: Alarm is enabled.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FMT</name>
              <description>Hour format
* 0: 24 hour/day format
* 1: AM/PM hour format</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OSEL</name>
              <description>Output selection. These bits are used to select the flag to be routed to RTC_OUT output.
* 00: Output is disabled.
* 01: Alarm output is enabled.
* 10: Clock output is clk_spre (default: 1Hz)
* 11: Clock output is clk_apre (default: 256Hz)</description>
              <bitRange>[6:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BYPSHAD</name>
              <description>Bypass the shadow registers
* 0: Calendar values (when reading from RTC_TR) are taken from the shadow register, which are updated once every two RTCCLK cycles.
* 1: Calendar values (when reading from RTC_TR) are taken directly from the calendar counters.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BKP</name>
              <description>Backup
This bit can be written by the user to memorize whether the daylight saving time change has been performed or not.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SUB1H</name>
              <description>Subtract one hour (winter time change) when this bit is set outside initialization mode, 1 hour is subtracted to the calendar time if the current hour is not 0, this bit is always read as 0.
* 0: No effect
* 1: Subtract one hour to the current time</description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>ADD1H</name>
              <description>Add one hour (summer time change) when this bit is set outside initialization mode, 1 hour is add to the calendar time, this bit is always read as 0.
*0: No effect
*1: Add one hour to the current time</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_ISR</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description>RTC initialization and Status Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RECALPF</name>
              <description>Recalibration pending flag
The RECALPF status flag is automatically set to '1' when software writes to the RTC_CALIBR register, indicating that the RTCCALIBR register is blocked. When the new calibration settings are taken into account, this bit returns to '0'. Refer to Re-calibration on-the-fly.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DOVTHF</name>
              <description>Day over threshold flag
This flag is set by hardware when the Day in RTC_TR over the DAY_THRES set in RTC_CR register.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>WUTF</name>
              <description>Wakeup timer flag
This flag is set by hardware when the wakeup auto-reload counter reaches to.
This flag must be cleared by software at least 2 RTCCLK periods before WUTF is set to '1' again.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ALMF</name>
              <description>Alarm flag
This flag is set by hardware when the time register (RTC_TR) matches the Alarm registers (RTC_ALMR1L and RTC_ALMR1H).</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>INIT</name>
              <description>Initialization mode
* 0: Free running mode.
* 1: Initialization mode used to program time and date register (RTC_TR), and prescaler register (RTC_PRER). Counters are stopped and start counting from the new value when INIT is set.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INITF</name>
              <description>Initialization flag
When this bit is set to '1', the RTC is in initialization state, and the time, date, and prescaler registers can be updated.
* 0: Calendar registers update is not allowed.
* 1: Calendar registers update is allowed.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSF</name>
              <description>Registers synchronization flag
This bit is set by hardware each time the calendar registers are copied into the shadow registers (RTC_TR). This bit is cleared by hardware in initialization mode or when in bypass shadow register mode (BYPSHAD=1). This bit can also be cleared by software.
It is cleared either by software or by hardware in initialization mode.
* 0: Calendar shadow registers are not yet synchronized.
* 1: Calendar shadow registers are synchronized.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>INITS</name>
              <description>This bit is set by hardware when the calendar day field is different from 0 (RTC domain reset state).
* 0: Calendar has not been initialized.
* 1: Calendar has been initialized.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>WUTWF</name>
              <description>Wakeup timer write flag
This flag is set by hardware when WUT value can be changed, after the WUTE bit has been set to '0' in RTC_CR.
* 0: Wakeup timer configuration update not allowd except in initialization mode
* 1: Wakeup timer configuration update allowed</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>WUTRSF</name>
              <description>This bit is set by hardware each time the WUTE bit is copied into the shadow register. This bit is cleared by hardware in initialization mode. This bit can also be cleared by software.
It is cleared either by software or by hardware in initialization mode.
* 0: WUTE is not yet synchronized.
* 1: WUTE is synchronized.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ALMWF</name>
              <description>Alarm write flag
This bit is set by hardware when Alarm values can be changed, after the ALME bit has been set to '0' in RTC_CR.
It is cleared by hardware when ALME bit has been set to '1' in RTC_CR.
* 0: Alarm update not allowed
* 1: Alarm update allowed</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_PRER</name>
          <addressOffset>0x0000000C</addressOffset>
          <size>32</size>
          <description>RTC Prescaler Register</description>
          <resetValue>0x007F00FF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PREDIV_A</name>
              <description>Asynchronous prescaler factor
This is the asynchronous division factor: clk_apre freq = RTCCLK freq/(PREDIV_A + 1)</description>
              <bitRange>[24:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PREDIV_S</name>
              <description>Synchronous prescaler factor
This is the synchronous division factor: clk_spre freq = clk_apre freq/(PREDIV_S + 1)</description>
              <bitRange>[8:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_CALIBR</name>
          <addressOffset>0x00000010</addressOffset>
          <size>32</size>
          <description>RTC Calibration Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CALP</name>
              <description>Calibration period</description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCE</name>
              <description>Digital calibration enable
* 0: Digital calibration is disabled.
* 1: Digital calibration is enabled.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCS</name>
              <description>Digital calibration signal
* 0: Positive calibration, time update frequency is increased.
* 1: Negative calibration, time update frequency is decreased.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DC</name>
              <description>Digital calibration</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_ALMR1L</name>
          <addressOffset>0x00000014</addressOffset>
          <size>32</size>
          <description>RTC Alarm 1 Register Low</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>MSK2</name>
              <description>Alarm hour mask
* 0: Alarm set if the hours match
* 1: Hours don't care in Alarm comparison</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ALR_PM</name>
              <description>AM/PM notation
* 0: AM or 24-hour format
* 1: PM</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ALR_HT</name>
              <description>Hour tens in BCD format</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ALR_HU</name>
              <description>Hour units in BCD format</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MSK1</name>
              <description>Alarm minutes mask.
* 0: Alarm set if the minutes match
* 1: Minutes don't care in Alarm comparison</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ALR_MNT</name>
              <description>Minute tens in BCD format</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ALR_MNU</name>
              <description>Minute units in BCD format</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MSK0</name>
              <description>Alarm seconds mask
* 0: Alarm set if the seconds match
* 1: Seconds don't care in Alarm comparison</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ALR_ST</name>
              <description>Second tens in BCD format</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ALR_SU</name>
              <description>Second units in BCD format</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_ALMR1H</name>
          <addressOffset>0x00000018</addressOffset>
          <size>32</size>
          <description>RTC Alarm 1 Register High</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>MSK3</name>
              <description>Alarm day mask
* 0: Alarm set if the days match
* 1: Days don't care in Alarm comparison</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ALR_DAY</name>
              <description>DAY in binary format</description>
              <bitRange>[8:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_WPR</name>
          <addressOffset>0x0000001C</addressOffset>
          <size>32</size>
          <description>RTC Write Protect Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>KEY</name>
              <description>Write protection key
This byte is written by software. Refer to RTC register write protection for a description of how to unlock RTC register write protection.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_YEAR</name>
          <addressOffset>0x00000020</addressOffset>
          <size>32</size>
          <description>RTC Year Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RESTORE</name>
              <description>Reset Flag. Indicates whether any reset conditions have occurred (except POR/PDR/BOD), so that the bit is set to '1' before reset, and then the global variable that determines whether the recovery time information is needed depending on whether the bit is '1'.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>YEAR</name>
              <description>Year in binary format</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_WUTR</name>
          <addressOffset>0x00000024</addressOffset>
          <size>32</size>
          <description>RTC Wakeup Timer Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>WUT</name>
              <description>Wakeup auto-reload value bits
When the wakeup timer is enabled (WUTE is set to '1'), the WUTF flag is set every (WUT[16:0]+1) cycles. The first assertion of WUTF occurs between WUT and (WUT+1) cycles after WUTE is set.</description>
              <bitRange>[16:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RTC_DUMMY</name>
          <addressOffset>0x00000028</addressOffset>
          <size>32</size>
          <description>RTC Dummy Register</description>
          <resetValue>0x0000FFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>Dummy register</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>spi</name>
      <baseAddress>0x40118000</baseAddress>
      <size>0x00000B0C</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00000B0C</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>CTRLR0</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description>Control Register 0</description>
          <resetValue>0x00000009</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SS_T</name>
              <description>When SCPH is 0 (Relevant only when the SPI is configured as a serial-master device)
0: ss_n_out doesn't toggle between successive frames
1: ss_n_out does toggle between successive frames</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXBITSWAP</name>
              <description>0: Order of receive bit doesn't swap
1: Order of receive bit does swap</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXBYTESWAP</name>
              <description>0: Order of receive byte doesn't swap
1: Order of receive byte does swap</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXBITSWAP</name>
              <description>0: Order of transmit bit doesn't swap
1: Order of transmit bit does swap</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXBYTESWAP</name>
              <description>0: Order of transmit byte doesn't swap
1: Order of transmit byte does swap</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SLV_OE</name>
              <description>Slave Output Enable. Relevant only when the SPI is configured as a serial-slave device. When configured as a serial master, this bit field has no functionality. This bit enables or disables the setting of the ssi_oe_n output from the SPI serial slave. 
When SLV_OE = 1, the ssi_oe_n output can never be active. When the ssi_oe_n output controls the tri-state buffer on the txd output from the slave, a high impedance state is always present on the slave txd output when SLV_OE = 1.
This is useful when the master transmits in broadcast mode (master transmits data to all slave devices). Only one slave may respond with data on the master rxd line. This bit is enabled after reset and must be disabled by software (when broadcast mode is used), if you do not want this device to respond with data.
0: Slave txd is enabled
1: Slave txd is disabled</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TMOD</name>
              <description>Transfer Mode. Relevant only when the SPI is configured as a serial-master device. Selects the mode of transfer for serial communication. This field does not affect the transfer duplicity. Only indicates whether the receive or transmit data are valid. 
In transmit-only mode, data received from the external device is not valid and is not stored in the receive FIFO memory; it is overwritten on the next transfer.
In receive-only mode, transmitted data are not valid. After the first write to the transmit FIFO, the same word is retransmitted for the duration of the transfer.
In transmit-and-receive mode, both transmit and receive data are valid. The transfer continues until the transmit FIFO is empty. Data received from the external device are stored into the receive FIFO memory, where it can be accessed by the host processor.
00: Transmit &amp; Receive
01: Transmit Only
10: Receive Only</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCPOL</name>
              <description>Serial Clock Polarity. Valid when the frame format (FRF) is set to Motorola SPI. Used to select the polarity of the inactive serial clock, which is held inactive when the SPI master is not actively transferring data on the serial bus.
0: Inactive state of serial clock is low
1: Inactive state of serial clock is high</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCPH</name>
              <description>Serial Clock Phase. Valid when the frame format (FRF) is set to Motorola SPI. The serial clock phase selects the relationship of the serial clock with the slave select signal.
When SCPH = 0, data are captured on the first edge of the serial clock. When SCPH = 1, the serial clock starts toggling one cycle after the slave select line is activated, and data are captured on the second edge of the serial clock.
0: Serial clock toggles in middle of the first data bit
1: Serial clock toggles at start of the first data bit</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FRF</name>
              <description>Frame Format. Selects which serial protocol transfers the data.
00: Motorola SPI
Other: Reserved</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DFS</name>
              <description>Data Frame Size. Selects the data frame length. When the data frame size is programmed to be less than 16 bits, the receive data are automatically right-justified by the receive logic, with the upper bits of the receive FIFO zero-padded.
You must right-justify transmit data before writing into the transmit FIFO. The transmit logic ignores the upper unused bits when transmitting the data. For the DFS decode, refer to the following description:
0000/0001/0010: Reserved (undefined operation)
0011: 4-bit serial data transfer
0100: 5-bit serial data transfer
0101: 6-bit serial data transfer
0110: 7-bit serial data transfer
0111: 8-bit serial data transfer
1000: 9-bit serial data transfer
1001: 10-bit serial data transfer
1010: 11-bit serial data transfer
1011: 12-bit serial data transfer
1100: 13-bit serial data transfer
1101: 14-bit serial data transfer
1110: 15-bit serial data transfer
1111: 16-bit serial data transfer</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CTRLR1</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description>Control Register 1</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>NDF</name>
              <description>Number of Data Frames. When TMOD = 10 or TMOD = 11, this register field sets the number of data frames to be continuously received by the SPI. The SPI continues to receive serial data until the number of data frames received is equal to this register value plus 1, which enables you to receive up to 64 KB of data in a continuous transfer.
When the SPI is configured as a serial slave, the transfer continues for as long as the slave is selected. Therefore, this register serves no purpose and is not present when the SPI is configured as a serial slave.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SSIENR</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description>SSI Enable Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SSI_EN</name>
              <description>SPI Enable. Enables and disables all SPI operations. When disabled, all serial transfers are halted immediately. Transmit and receive FIFO buffers are cleared when the device is disabled. It is impossible to program some of the SPI control registers when enabled. When disabled, the ssi_sleep output is set (after delay) to inform the system that it is safe to remove the ssi_clk, thus saving power consumption in the system.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SER</name>
          <addressOffset>0x00000010</addressOffset>
          <size>32</size>
          <description>Slave Enable Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SER</name>
              <description>Slave Select Enable Flag. When this bit is set (1), the corresponding slave select line from the master is activated when a serial transfer begins. It should be noted that setting or clearing bits in this register have no effect on the corresponding slave select outputs until a transfer is started. Before beginning a transfer, you should enable the bit in this register that corresponds to the slave device with which the master wants to communicate.
1: Selected
0: Not selected</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BAUDR</name>
          <addressOffset>0x00000014</addressOffset>
          <size>32</size>
          <description>Baud Rate Select</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SCKDV</name>
              <description>SPI Clock Divider. The LSB for this field is always set to 0 and is unaffected by a write operation, which ensures an even value is held in this register. If the value is 0, the serial output clock (sclk_out) is disabled. The frequency of the sclk_out is derived from the  equation: Fsclk_out =Fssi_clk/SCKDV, where SCKDV is any even value between 2 and 65534.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TXFTLR</name>
          <addressOffset>0x00000018</addressOffset>
          <size>32</size>
          <description>Transmit FIFO Threshold Level</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TFT</name>
              <description>Transmit FIFO Threshold. Controls the level of entries (or below) at which the transmit FIFO controller triggers an interrupt. The FIFO depth is 64; this register is sized to the number of address bits needed to access the FIFO.
If you attempt to set this value greater than or equal to the depth of the FIFO, this field is not written and retains its current value. When the number of transmit FIFO entries is less than or equal to this value, the transmit FIFO empty interrupt is triggered. For TFT decode, refer to the following description:
000000: ssi_txe_intr is asserted when 0 data entry is present in transmit FIFO.
000001: ssi_txe_intr is asserted when 1 data entry is present in transmit FIFO.
000010: ssi_txe_intr is asserted when 2 data entries are present in transmit FIFO.
000011: ssi_txe_intr is asserted when 3 data entries are present in transmit FIFO.
...
111100: ssi_txe_intr is asserted when 60 data entries are present in transmit FIFO.
111101: ssi_txe_intr is asserted when 61 data entries are present in transmit FIFO.
111110: ssi_txe_intr is asserted when 62 data entries are present in transmit FIFO.
111111: ssi_txe_intr is asserted when 63 data entries are present in transmit FIFO.</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RXFTLR</name>
          <addressOffset>0x0000001C</addressOffset>
          <size>32</size>
          <description>Receive FIFO Threshold Level</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RFT</name>
              <description>Receive FIFO Threshold. Controls the level of entries (or above) at which the receive FIFO controller triggers an interrupt. The FIFO depth is configurable in the range 2~64. This register is sized to the number of address bits needed to access the FIFO. If you attempt to set this value greater than the depth of the FIFO, this field is not written and retains its current value.
When the number of receive FIFO entries is greater than or equal to this value + 1, the receive FIFO full interrupt is triggered. For RFT decode, refer to the following description:
000000: ssi_rxf_intr is asserted when 1 or more data entries are present in receive FIFO.
000001: ssi_rxf_intr is asserted when 2 or more data entries are present in receive FIFO.
000010: ssi_rxf_intr is asserted when 3 or more data entries are present in receive FIFO.
000011: ssi_rxf_intr is asserted when 4 or more data entries are present in receive FIFO.
...
111110: ssi_rxf_intr is asserted when 61 or more data entries are present in receive FIFO.
111101: ssi_rxf_intr is asserted when 62 or more data entries are present in receive FIFO.
111110: ssi_rxf_intr is asserted when 63 or more data entries are present in receive FIFO.
111111: ssi_rxf_intr is asserted when 64 or more data entries are present in receive FIFO.</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TXFLR</name>
          <addressOffset>0x00000020</addressOffset>
          <size>32</size>
          <description>Transmit FIFO Level Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TXTFL</name>
              <description>Transmit FIFO Level. Contains the number of valid data entries in the transmit FIFO.</description>
              <bitRange>[6:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RXFLR</name>
          <addressOffset>0x00000024</addressOffset>
          <size>32</size>
          <description>Receive FIFO Level Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RXTFL</name>
              <description>Receive FIFO Level. Contains the number of valid data entries in the receive FIFO.</description>
              <bitRange>[6:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SR</name>
          <addressOffset>0x00000028</addressOffset>
          <size>32</size>
          <description>Status Register</description>
          <resetValue>0x00000006</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DCOL</name>
              <description>Data Collision Error. Relevant only when the SPI is configured as a master device. This bit is set if the SPI master is actively transmitting when another master selects this device as a slave. This informs the processor that the last data transfer was halted before completion. This bit is cleared when read.
0: No error
1: Transmit data collision error</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TXE</name>
              <description>Transmission Error. Set if the transmit FIFO is empty when a transfer is started. This bit can be set only when the SPI is configured as a slave device. Data from the previous transmission is resent on the txd line. This bit is cleared when read.
0: No error
1: Transmission error</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RFF</name>
              <description>Receive FIFO Full. When the receive FIFO is completely full, this bit is set. When the receive FIFO contains one or more empty location, this bit is cleared.
0: Receive FIFO is not full
1: Receive FIFO is full</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RFNE</name>
              <description>Receive FIFO Not Empty. Set when the receive FIFO contains one or more entries and is cleared when the receive FIFO is empty. This bit can be polled by software to completely empty the receive FIFO.
0: Receive FIFO is empty
1: Receive FIFO is not empty</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TFE</name>
              <description>Transmit FIFO Empty. When the transmit FIFO is completely empty, this bit is set. When the transmit FIFO contains one or more valid entries, this bit is cleared. This bit field does not request an interrupt.
0: Transmit FIFO is not empty
1: Transmit FIFO is empty</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TFNF</name>
              <description>Transmit FIFO Not Full. Set when the transmit FIFO contains one or more empty locations, and is cleared when the FIFO is full.
0: Transmit FIFO is full
1: Transmit FIFO is not full</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BUSY</name>
              <description>SSI Busy Flag. When set, indicates that a serial transfer is in progress; when cleared indicates that the SPI is idle or disabled.
0: SPI is idle or disabled
1: SPI is actively transferring data</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IMR</name>
          <addressOffset>0x0000002C</addressOffset>
          <size>32</size>
          <description>Interrupt Mask Register</description>
          <resetValue>0x000000FF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SSRIM</name>
              <description>SS_N Rising Edge Detect Interrupt Mask. This bit field is present only if the SPI is configured as a serial-slave device.
0: ssi_ssr_intr is masked
1: ssi_ssr_intr is not masked</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXUIM</name>
              <description>Transmit FIFO Underflow Interrupt Mask. This bit field is present only if the SPI is configured as a serial-slave device.
0: ssi_txu_intr is masked
1: ssi_txu_intr is not masked</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MSTIM_FAEIM</name>
              <description>When SPI is configured as serial-master, this bit field is present as Multi-Master Contention Interrupt Mask.
0: ssi_mst_intr interrupt is masked
1: ssi_mst_intr interrupt is not masked
When SPI is configured as serial-slave, this bit field is present as Frame Alignment Interrupt Mask. 
0: ssi_fae_intr interrupt is masked
1: ssi_fae_intr interrupt is not masked</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXFIM</name>
              <description>Receive FIFO Full Interrupt Mask.
0: ssi_rxf_intr interrupt is masked
1: ssi_rxf_intr interrupt is not masked</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXOIM</name>
              <description>Receive FIFO Overflow Interrupt Mask.
0: ssi_rxo_intr interrupt is masked
1: ssi_rxo_intr interrupt is not masked</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXUIM</name>
              <description>Receive FIFO Underflow Interrupt Mask.
0: ssi_rxu_intr interrupt is masked
1: ssi_rxu_intr interrupt is not masked</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXOIM</name>
              <description>Transmit FIFO Overflow Interrupt Mask.
0: ssi_txo_intr interrupt is masked
1: ssi_txo_intr interrupt is not masked</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXEIM</name>
              <description>Transmit FIFO Empty Interrupt Mask.
0: ssi_txe_intr interrupt is masked
1: ssi_txe_intr interrupt is not masked</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ISR</name>
          <addressOffset>0x00000030</addressOffset>
          <size>32</size>
          <description>Interrupt Status Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SSRIS</name>
              <description>SS_N Rising Edge Detect Interrupt Status. This bit field is present only if the SPI is configured as a serial-slave device.
0: ssi_ssr_intr interrupt is not active after masking
1: ssi_ssr_intr interrupt is active after masking</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TXUIS</name>
              <description>Transmit FIFO Under Flow Interrupt Status. This bit field is present only if the SPI is configured as a serial-slave device.
0: ssi_txu_intr interrupt is not active after masking
1: ssi_txu_intr interrupt is active after masking</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>MSTIS_FAEIS</name>
              <description>When SPI is configured as serial-master, this bit field is present as Multi-Master Contention Interrupt Status.
0: ssi_mst_intr interrupt is not active after masking
1: ssi_mst_intr interrupt is active after masking
When SPI is configured as serial-slave, this bit field is present as Frame Alignment Interrupt Status. 
0: ssi_fae_intr interrupt not active after masking
1: ssi_fae_intr interrupt is active after masking</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RXFIS</name>
              <description>Receive FIFO Full Interrupt Status.
0: ssi_rxf_intr interrupt is not active after masking
1: ssi_rxf_intr interrupt is full after masking</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RXOIS</name>
              <description>Receive FIFO Overflow Interrupt Status.
0: ssi_rxo_intr interrupt is not active after masking
1: ssi_rxo_intr interrupt is active after masking</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RXUIS</name>
              <description>Receive FIFO Underflow Interrupt Status.
0: ssi_rxu_intr interrupt is not active after masking
1: ssi_rxu_intr interrupt is active after masking</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TXOIS</name>
              <description>Transmit FIFO Overflow Interrupt Status.
0: ssi_txo_intr interrupt is not active after masking
1: ssi_txo_intr interrupt is active after masking</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TXEIS</name>
              <description>Transmit FIFO Empty Interrupt Status.
0: ssi_txe_intr interrupt is not active after masking
1: ssi_txe_intr interrupt is active after masking</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RISR</name>
          <addressOffset>0x00000034</addressOffset>
          <size>32</size>
          <description>Raw Interrupt Status Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SSRIR</name>
              <description>SS_N Rising Edge Detect Raw Interrupt Status. This bit field is present only if the SPI is configured as a serial-slave device.
0: ssi_ssr_intr interrupt is not active prior to masking
1: ssi_ssr_intr interrupt is active prior to masking</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TXUIR</name>
              <description>Transmit FIFO Under Flow Raw Interrupt Status. This bit field is present only if the SPI is configured as a serial-slave device.
0: ssi_txu_intr interrupt is not active prior to masking
1: ssi_txu_intr interrupt is active prior to masking</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>MSTIR_FAEIR</name>
              <description>When SPI is configured as serial-master, this bit field is present as Multi-Master Contention Raw Interrupt Status.
0: ssi_mst_intr interrupt is not active prior to masking
1: ssi_mst_intr interrupt is active prior to masking
When SPI is configured as serial-slave, this bit field is present as Frame Alignment Error Raw Interrupt Status.
0: ssi_fae_intr interrupt not active prior to masking
1: ssi_fae_intr interrupt is active prior to masking</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RXFIR</name>
              <description>Receive FIFO Full Raw Interrupt Status.
0: ssi_rxf_intr interrupt is not active prior to masking
1: ssi_rxf_intr interrupt is active prior to masking</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RXOIR</name>
              <description>Receive FIFO Overflow Raw Interrupt Status.
0: ssi_rxo_intr interrupt is not active prior to masking
1: ssi_rxo_intr interrupt is active prior to masking</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RXUIR</name>
              <description>Receive FIFO Underflow Raw Interrupt Status.
0: ssi_rxu_intr interrupt is not active prior to masking
1: ssi_rxu_intr interrupt is active prior to masking</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TXOIR</name>
              <description>Transmit FIFO Overflow Raw Interrupt Status.
0: ssi_txo_intr interrupt is not active prior to masking
1: ssi_txo_intr interrupt is active prior to masking</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TXEIR</name>
              <description>Transmit FIFO Empty Raw Interrupt Status.
0: ssi_txe_intr interrupt is not active prior to masking
1: ssi_txe_intr interrupt is active prior to masking</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TXOICR</name>
          <addressOffset>0x00000038</addressOffset>
          <size>32</size>
          <description>Transmit FIFO Overflow Interrupt Clear Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TXOICR</name>
              <description>Clear Transmit FIFO Overflow Interrupt. This register reflects the status of the interrupt. A read from this register clears the ssi_txo_intr interrupt; writing has no effect.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RXOICR</name>
          <addressOffset>0x0000003C</addressOffset>
          <size>32</size>
          <description>Receive FIFO Overflow Interrupt Clear Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RXOICR</name>
              <description>Clear Receive FIFO Overflow Interrupt. This register reflects the status of the interrupt. A read from this register clears the ssi_rxo_intr interrupt; writing has no effect.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RXUICR</name>
          <addressOffset>0x00000040</addressOffset>
          <size>32</size>
          <description>Receive FIFO Underflow Interrupt Clear Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RXUICR</name>
              <description>Clear Receive FIFO Underflow Interrupt. This register reflects the status of the interrupt. A read from this register clears the ssi_rxu_intr interrupt; writing has no effect.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MSTICR_FAEICR</name>
          <addressOffset>0x00000044</addressOffset>
          <size>32</size>
          <description>Multi-Master &amp; Frame Alignment Error Interrupt Clear Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>MSTICR_FAEICR</name>
              <description>Multi-Master Interrupt Clear Register/Frame Alignment Error Interrupt Clear Register.
When SPI is configured as serial-master, this bit field is used to Clear Multi-Master Contention Interrupt. A read from this register clears the ssi_mst_intr interrupt; writing has no effect.
When SPI is configured as serial-slave, this bit field is used to Clear Frame Alignment Interrupt. A read from this register clears the ssi_fae_intr interrupt; writing has no effect.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ICR</name>
          <addressOffset>0x00000048</addressOffset>
          <size>32</size>
          <description>Interrupt Clear Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ICR</name>
              <description>Clear Interrupt. This register is set if any of the interrupts below are active. A read clears the ssi_txo_intr, ssi_rxu_intr, ssi_rxo_intr, and the ssi_mst_intr/ssi_fae_intr interrupts. Writing to this register has no effect.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMACR</name>
          <addressOffset>0x0000004C</addressOffset>
          <size>32</size>
          <description>DMA Control Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TDMAE</name>
              <description>Transmit DMA Enable. This bit enables/disables the transmit FIFO DMA channel.
0: Transmit DMA disabled
1: Transmit DMA enabled</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RDMAE</name>
              <description>Receive DMA Enable. This bit enables/disables the receive FIFO DMA channel
0: Receive DMA disabled
1: Receive DMA enabled</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMATDLR</name>
          <addressOffset>0x00000050</addressOffset>
          <size>32</size>
          <description>DMA Transmit Data Level</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DMATDL</name>
              <description>Transmit Data Level. This bit field controls the level at which a DMA request is made by the transmit logic. It is equal to the watermark level; that is, the dma_tx_req signal is generated when the number of valid data entries in the transmit FIFO is equal to or below this field value, and TDMAE = 1. For DMATDL decode, refer to the following description:
000000: dma_tx_req is asserted when 0 data entry is present in transmit FIFO.
000001: dma_tx_req is asserted when 1 data entry is present in transmit FIFO.
000010: dma_tx_req is asserted when 2 data entries are present in transmit FIFO.
000011: dma_tx_req is asserted when 3 data entries are present in transmit FIFO.
...
111100: dma_tx_req is asserted when 60 data entries are present in transmit FIFO.
111101: dma_tx_req is asserted when 61 data entries are present in transmit FIFO.
111110: dma_tx_req is asserted when 62 data entries are present in transmit FIFO.
111111: dma_tx_req is asserted when 63 data entries are present in transmit FIFO.</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMARDLR</name>
          <addressOffset>0x00000054</addressOffset>
          <size>32</size>
          <description>DMA Receive Data Level</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DMARDL</name>
              <description>Receive Data Level. This bit field controls the level at which a DMA request is made by the receive logic. The watermark level = DMARDL+1; that is, dma_rx_req is generated when the number of valid data entries in the receive FIFO is equal to or above this field value + 1, and RDMAE=1. For DMARDL decode, refer to the following description:
000000: dma_rx_req is asserted when 1 or more data entries are present in transmit FIFO.
000001: dma_rx_req is asserted when 2 or more data entries are present in transmit FIFO.
000010: dma_rx_req is asserted when 3 or more data entries are present in transmit FIFO.
000011: dma_rx_req is asserted when 4 or more data entries are present in transmit FIFO.
...
111100: dma_rx_req is asserted when 61 or more data entries are present in transmit FIFO.
111101: dma_rx_req is asserted when 62 or more data entries are present in transmit FIFO.
111110: dma_rx_req is asserted when 63 or more data entries are present in transmit FIFO.
111111: dma_rx_req is asserted when 64 data entries are present in transmit FIFO.</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TXUICR</name>
          <addressOffset>0x00000058</addressOffset>
          <size>32</size>
          <description>Transmit FIFO Underflow Interrupt Clear Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TXUICR</name>
              <description>When SPI is configured as serial-slave, this register is used to Clear Transmit FIFO Underflow Interrupt. This register reflects the status of the interrupt. A read from this register clears the ssi_txu_intr interrupt; writing has no effect.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SSRICR</name>
          <addressOffset>0x0000005C</addressOffset>
          <size>32</size>
          <description>SS_N Rising Edge Detect Interrupt Clear Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SSRICR</name>
              <description>When SPI is configured as serial-slave, this register is used to Clear SS_N Rinsing Edge Detect Interrupt. This register reflects the status of the interrupt. A read from this register clears the ssi_ssr_intr interrupt; writing has no effect.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR0</name>
          <addressOffset>0x00000060</addressOffset>
          <size>32</size>
          <description>Data Register 0</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR0</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR1</name>
          <addressOffset>0x00000064</addressOffset>
          <size>32</size>
          <description>Data Register 1</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR1</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR2</name>
          <addressOffset>0x00000068</addressOffset>
          <size>32</size>
          <description>Data Register 2</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR2</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR3</name>
          <addressOffset>0x0000006C</addressOffset>
          <size>32</size>
          <description>Data Register 3</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR3</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR4</name>
          <addressOffset>0x00000070</addressOffset>
          <size>32</size>
          <description>Data Register 4</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR4</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR5</name>
          <addressOffset>0x00000074</addressOffset>
          <size>32</size>
          <description>Data Register 5</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR5</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR6</name>
          <addressOffset>0x00000078</addressOffset>
          <size>32</size>
          <description>Data Register 6</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR6</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR7</name>
          <addressOffset>0x0000007C</addressOffset>
          <size>32</size>
          <description>Data Register 7</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR7</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR8</name>
          <addressOffset>0x00000080</addressOffset>
          <size>32</size>
          <description>Data Register 8</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR8</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR9</name>
          <addressOffset>0x00000084</addressOffset>
          <size>32</size>
          <description>Data Register 9</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR9</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR10</name>
          <addressOffset>0x00000088</addressOffset>
          <size>32</size>
          <description>Data Register 10</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR10</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR11</name>
          <addressOffset>0x0000008C</addressOffset>
          <size>32</size>
          <description>Data Register 11</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR11</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR12</name>
          <addressOffset>0x00000090</addressOffset>
          <size>32</size>
          <description>Data Register 12</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR12</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR13</name>
          <addressOffset>0x00000094</addressOffset>
          <size>32</size>
          <description>Data Register 13</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR13</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR14</name>
          <addressOffset>0x00000098</addressOffset>
          <size>32</size>
          <description>Data Register 14</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR14</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR15</name>
          <addressOffset>0x0000009C</addressOffset>
          <size>32</size>
          <description>Data Register 15</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR15</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR16</name>
          <addressOffset>0x000000A0</addressOffset>
          <size>32</size>
          <description>Data Register 16</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR16</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR17</name>
          <addressOffset>0x000000A4</addressOffset>
          <size>32</size>
          <description>Data Register 17</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR17</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR18</name>
          <addressOffset>0x000000A8</addressOffset>
          <size>32</size>
          <description>Data Register 18</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR18</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR19</name>
          <addressOffset>0x000000AC</addressOffset>
          <size>32</size>
          <description>Data Register 19</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR19</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR20</name>
          <addressOffset>0x000000B0</addressOffset>
          <size>32</size>
          <description>Data Register 20</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR20</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR21</name>
          <addressOffset>0x000000B4</addressOffset>
          <size>32</size>
          <description>Data Register 21</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR21</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR23</name>
          <addressOffset>0x000000BC</addressOffset>
          <size>32</size>
          <description>Data Register 23</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR23</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR24</name>
          <addressOffset>0x000000C0</addressOffset>
          <size>32</size>
          <description>Data Register 24</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR24</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR25</name>
          <addressOffset>0x000000C4</addressOffset>
          <size>32</size>
          <description>Data Register 25</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR25</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR26</name>
          <addressOffset>0x000000C8</addressOffset>
          <size>32</size>
          <description>Data Register 26</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR26</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR27</name>
          <addressOffset>0x000000CC</addressOffset>
          <size>32</size>
          <description>Data Register 27</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR27</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR28</name>
          <addressOffset>0x000000D0</addressOffset>
          <size>32</size>
          <description>Data Register 28</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR28</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR29</name>
          <addressOffset>0x000000D4</addressOffset>
          <size>32</size>
          <description>Data Register 29</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR29</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR30</name>
          <addressOffset>0x000000D8</addressOffset>
          <size>32</size>
          <description>Data Register 30</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR30</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR31</name>
          <addressOffset>0x000000DC</addressOffset>
          <size>32</size>
          <description>Data Register 31</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR31</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR32</name>
          <addressOffset>0x000000E0</addressOffset>
          <size>32</size>
          <description>Data Register 32</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR32</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR33</name>
          <addressOffset>0x000000E4</addressOffset>
          <size>32</size>
          <description>Data Register 33</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR33</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR34</name>
          <addressOffset>0x000000E8</addressOffset>
          <size>32</size>
          <description>Data Register 34</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR34</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DR35</name>
          <addressOffset>0x000000EC</addressOffset>
          <size>32</size>
          <description>Data Register 35</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DR35</name>
              <description>Data Register. When writing to this register, you must right-justify the data. Read data are automatically right-justified.
Read: Receive FIFO buffer
Write: Transmit FIFO buffer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RX_SAMPLE_DLY</name>
          <addressOffset>0x000000F0</addressOffset>
          <size>32</size>
          <description>rxd Sample Delay Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSD</name>
              <description>Receive Data (rxd) Sample Delay. This register is used to delay the sample of the rxd input signal. Each value represents a single ssi_clk delay on the sample of the rxd signal.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>dummy</name>
          <addressOffset>0x000000FC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFF0000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>Reserved</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>thermal</name>
      <baseAddress>0x4101D000</baseAddress>
      <size>0x00000034</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00000034</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>TM_GAIN</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description>Thermal Meter Gain Register</description>
          <resetValue>0x08284000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>tm_a</name>
              <description>This bit defines thermal meter gain.
* Bit[28:14]: Integer part
* Bit[13:0]: Decimal part</description>
              <bitRange>[28:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TM_OFFSET</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description>Thermal Meter Offset Register</description>
          <resetValue>0x00371700</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>tm_b</name>
              <description>This bit defines thermal meter offset. 
* Bit21: Signed bit
* Bit[20:11]: Integer part
* Bit[10:0]: Decimal part</description>
              <bitRange>[21:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TM_CTRL</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description>Thermal Meter Control Register</description>
          <resetValue>0x693441D9</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>tm_pwr</name>
              <description>thm protect password.
 tm_pow,tm_powcut,tm_rstb,tm_highcmp_pt_en,tm_high_pt_thr, iso_thm can be programed only when this value is 8'h69.</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tm_pow</name>
              <description>thermal poweron signal
* 0:power down
* 1:power on</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tm_powcut</name>
              <description>Power cut
* 0: disable power cut
* 1: enable power cut</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tm_clk_inv_sel</name>
              <description>Clock phase invert select when read temperature.
* 0: not invert (sample data in rising edge)
* 1: invert (sample data in falling edge)</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tm_rstb</name>
              <description>Thermal reset signal.
* 0: disable thermal
* 1: enable thermal</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tm_chopfreqsel</name>
              <description>Chop frequecy select
* 0: fs/64
* 1: fs/128
* 3: fs/256
* 7: fs/512
* 15: fs/1024</description>
              <bitRange>[17:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tm_osr</name>
              <description>Deci filter DSR select
* 0: 128
* 1: 256
* 2: 512
* 3: 1024</description>
              <bitRange>[13:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tm_hold_en</name>
              <description>Hold output</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tm_hold_dly</name>
              <description>Hold delay, adjust TM_CLK_OUT width</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tm_chop_en</name>
              <description>Chop enable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tm_en_latch</name>
              <description>Latch thermal sensor output immediately after power on for more accurate test</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tm_bias_sel</name>
              <description>Select ADC bias current
* 0: 8uA
* 1: 10uA
* 2: 12uA
* 3: 14uA</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tm_biasdem_en</name>
              <description>Bias DEM enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tm_adccksel</name>
              <description>Selelct ADC fs
* 0: clk_src/256
* 1: clk_src/128</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TM_TH_CTRL</name>
          <addressOffset>0x0000000C</addressOffset>
          <size>32</size>
          <description>Thermal Meter Threshold Control Register</description>
          <resetValue>0x07D1A5D8</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>iso_thm</name>
              <description>1: ISO signals from thermal power domain
0: Release</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tm_highcmp_pt_en</name>
              <description>To enable compare tm_out with over temperature protect threshold:
When  tm_out[18:10] &gt; tm_high_pt_thr, it will set aon reset.
* 1: Enable the compare;
* 0: Disable the compare.</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tm_high_pt_thr</name>
              <description>Set over temperature protection threshold for comparison with TEMP_OUT.
Only between 0x046 (70centigrade) and 0x08C (140centigrade) are valid.
* Bit28: Signed bit
* Bit[27:20]: Integer part</description>
              <bitRange>[28:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tm_highcmp_wt_en</name>
              <description>To enable compare tm_out with over temperature warning threshold:
When tm_high_thr &lt;= tm_out[18:10] &lt; tm_high_pt_thr, it will set Interrupt pending flag ISR_TM_HIGH.
* 1: Enable the compare;
* 0: Disable the compare.</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tm_high_wt_thr</name>
              <description>Set the over temperature warning threshold for comparison with TEMP_OUT.Only values greater than 0 are supported
* Bit18: Signed bit
* Bit[17:10]: Integer part</description>
              <bitRange>[18:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tm_lowcmp_wt_en</name>
              <description>To enable compare TM_OUT with set Low threshold:
When tm_out[18:10] &lt;= tm_low_thr, it will set Interrupt pending flag ISR_TM_LOW.
* 1: Enable the compare
* 0: Disable the compare</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tm_low_wt_thr</name>
              <description>Set the Low threshold for comparison with TEMP_OUT.
* Bit8: Signed bit
* Bit[7:0]: Integer part</description>
              <bitRange>[8:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TM_RESULT</name>
          <addressOffset>0x00000010</addressOffset>
          <size>32</size>
          <description>Thermal Meter Temperature Result Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>tm_out</name>
              <description>This bit defines real temperature. The result refreshes in real time.
* Bit18: Signed bit
* Bit[17:10]: Integer part
* Bit[9:0]: Decimal part</description>
              <bitRange>[18:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TM_ADC_RESULT</name>
          <addressOffset>0x00000014</addressOffset>
          <size>32</size>
          <description>Thermal Meter ADC Result Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>tm_adc_out</name>
              <description>This bit defines thermal meter ADC output. The result refreshes in real time.
* ADC output is a positive decimal number, real output=tm_out/2^22</description>
              <bitRange>[21:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TM_MAX_CTRL</name>
          <addressOffset>0x00000018</addressOffset>
          <size>32</size>
          <description>Thermal Meter Max Temperature Control Register</description>
          <resetValue>0x00040000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>tm_max_clr</name>
              <description>This bit defines clear max temperature
* 0: not clear
* 1: clear tm_max value</description>
              <bitRange>[19:19]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>tm_max</name>
              <description>These bits define max temperature.</description>
              <bitRange>[18:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TM_MIN_CTRL</name>
          <addressOffset>0x0000001C</addressOffset>
          <size>32</size>
          <description>Thermal Meter Min Temperature Control Register</description>
          <resetValue>0x0003FFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>tm_min_clr</name>
              <description>This bit defines clear min temperature
* 0: not clear
* 1: clear tm_min value</description>
              <bitRange>[19:19]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>tm_min</name>
              <description>These bits define min temperature.</description>
              <bitRange>[18:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TM_OUT_PWR_ON</name>
          <addressOffset>0x00000020</addressOffset>
          <size>32</size>
          <description>Thermal Meter Power On Temperature Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>temp_out_poweron</name>
              <description>This bit defines output temperature when power on reset.
* Bit18: Signed bit
* Bit[17:10]: Integer part
* Bit[9:0]: Decimal part</description>
              <bitRange>[18:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TM_INTR_CTRL</name>
          <addressOffset>0x00000024</addressOffset>
          <size>32</size>
          <description>Thermal Meter Interrupt Control Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>imr_tm_low_wt</name>
              <description>Interrupt control for thermal meter detect low temperature.
* 0: Disable low temperature detect interrupt
* 1: Enable low temperature detect interrupt</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>imr_tm_high_wt</name>
              <description>Interrupt control for thermal meter detect over temperature warning.
* 0: Disable over temperature warning detect interrupt
* 1: Enable over temperature warning detect interrupt</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TM_INTR_STS</name>
          <addressOffset>0x00000028</addressOffset>
          <size>32</size>
          <description>Thermal Meter Interrupt Status Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>isr_tm_low_wt</name>
              <description>Interrupt pending flag for thermal meter detect low temperature.
* 0: normal
* 1: interrupt pending</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>isr_tm_high_wt</name>
              <description>Interrupt pending flag for thermal meter detect over temperature warning.
* 0: normal
* 1: interrupt pending</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TM_TIMER</name>
          <addressOffset>0x0000002C</addressOffset>
          <size>32</size>
          <description>Thermal Meter Timer Register</description>
          <resetValue>0x0000000F</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>time_period</name>
              <description>Time period of auto power on</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TM_DUMMY</name>
          <addressOffset>0x00000030</addressOffset>
          <size>32</size>
          <description>Thermal Dummy Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>rsvd for hw</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>debugtimer</name>
      <baseAddress>0x4011E000</baseAddress>
      <size>0x00000018</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00000018</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>DBGT_CTRL</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description>debugtimer control register</description>
          <resetValue>0x00000281</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>div</name>
              <description>The default value can used to divide 40M XTAL to 1M</description>
              <bitRange>[15:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>clksel</name>
              <description>Clock source selection
2~7: Reserved
1: Select 32K as clock source.
0: Select Xtal as clock source.</description>
              <bitRange>[3:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>enable</name>
              <description>Debug timer enable
1: The counter is enabled.
0: The counter is disabled.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DBGT_CRV</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description>debugtimer count register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dbgt_crv</name>
              <description>Continue to count from 0 once it's reached 32'hFFFFFFFF</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DBGT_ATOM_INC</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description>debugtimer atom read increase register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dbgt_atom_inc</name>
              <description>Each read will increase 1 and return to the increased value to bus.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DBGT_ATOM</name>
          <addressOffset>0x0000000C</addressOffset>
          <size>32</size>
          <description>debugtimer atom register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dbgt_atom</name>
              <description>Return the last increased value of atom counter</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DBGT_SCRATCH</name>
          <addressOffset>0x00000010</addressOffset>
          <size>32</size>
          <description>debugtimer scratch register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dbgt_scratch</name>
              <description>Reserved for users</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DBGTIM_DUMMY</name>
          <addressOffset>0x00000014</addressOffset>
          <size>32</size>
          <description>Debug Timer Dummy Register</description>
          <resetValue>0x0000FFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>Dummy register</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>timerpwm</name>
      <baseAddress>0x41019000</baseAddress>
      <size>0x00000088</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00000088</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>TIM_EN</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description>TIM enable register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>cnt_en</name>
              <description>Counter working status
* 0: Counter is stoppped.
* 1: Counter is working.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CEN</name>
              <description>Counter run status
* 0: Counter is disabled.
* 1: Counter is enabled.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>cnt_stop</name>
              <description>Disable the counter. Poll CNT_RUN to see the counter status. If CNT_RUN is 0, it means that the counter has been disabled internally.</description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>cnt_start</name>
              <description>Enable the counter. Poll CNT_RUN to see the counter status. If CNT_RUN is 1, it means that the counter has been enabled internally.</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_CR</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description>TIM control register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ETP</name>
              <description>External trigger polarity (TRGI)
* 0: Positive edge is active.
* 1: Negative edge is active.
* 2 or 3: Both edge is active.
Note: These bits are only valid in one-pulse mode.</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ARPE</name>
              <description>Enable auto-reload preloading
* 0: TIM_ARR register is not buffered.
* 1: TIM_ARR register is buffered.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OPM</name>
              <description>One-pulse mode
* 0: Counter is not stopped at UEV.
* 1: Counter stops counting at next UEV.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>URS</name>
              <description>Update request source
* 0: Counter overflow and setting the UG bit
* 1: Counter overflow</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>UDIS</name>
              <description>Disable UEV
Shadow registers keep their values. Otherwise, buffered registers are then loaded with their preload values when UEV happens.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_DIER</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description>TIM interupt enable register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>UIE7</name>
              <description>Enable channel 7 update interrupt</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>UIE6</name>
              <description>Enable channel 6 update interrupt</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>UIE5</name>
              <description>Enable channel 5 update interrupt</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>UIE4</name>
              <description>Enable channel 4 update interrupt</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>UIE3</name>
              <description>Enable channel 3 update interrupt</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>UIE2</name>
              <description>Enable channel 2 update interrupt</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>UIE1</name>
              <description>Enable channel 1 update interrupt</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>UIE0</name>
              <description>Enable channel 0 update interrupt</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC7IE</name>
              <description>Enable Capture/Compare 7 interrupt</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC6IE</name>
              <description>Enable Capture/Compare 6 interrupt</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC5IE</name>
              <description>Enable Capture/Compare 5 interrupt</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC4IE</name>
              <description>Enable Capture/Compare 4 interrupt</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC3IE</name>
              <description>Enable Capture/Compare 3 interrupt</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC2IE</name>
              <description>Enable Capture/Compare 2 interrupt</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC1IE</name>
              <description>Enable Capture/Compare 1 interrupt</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC0IE</name>
              <description>Enable Capture/Compare 0 interrupt</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>UIE</name>
              <description>Enable counter update interrupt</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_SR</name>
          <addressOffset>0x0000000C</addressOffset>
          <size>32</size>
          <description>TIM status register</description>
          <resetValue>0x80000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>UG_DONE</name>
              <description>UG operation status
This bit is cleared by hardware when the UG bit in the TIMx_EGR register is set. When the UG operation is done, hardware sets this bit to '1'. So, software can poll this bit to see the UG operation status.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>UIF7</name>
              <description>Refer to UIF0 description</description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>UIF6</name>
              <description>Refer to UIF0 description</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>UIF5</name>
              <description>Refer to UIF0 description</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>UIF4</name>
              <description>Refer to UIF0 description</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>UIF3</name>
              <description>Refer to UIF0 description</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>UIF2</name>
              <description>Refer to UIF0 description</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>UIF1</name>
              <description>Refer to UIF0 description</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>UIF0</name>
              <description>Update interrupt flag of channel0
This flag is set by hardware when the UIE0 bit in the TIMx_EGR register is set, and update interrupt of channel0 happens.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CC7IF</name>
              <description>Refer to CC0IF description</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CC6IF</name>
              <description>Refer to CC0IF description</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CC5IF</name>
              <description>Refer to CC0IF description</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CC4IF</name>
              <description>Refer to CC0IF description</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CC3IF</name>
              <description>Refer to CC0IF description</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CC2IF</name>
              <description>Refer to CC0IF description</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CC1IF</name>
              <description>Refer to CC0IF description</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CC0IF</name>
              <description>Capture/Compare 0 interrupt flag
* Channel CC0 configured as output: This flag is set by hardware when the counter TIM_CNT value matches the value of TIM_CCR0 register. It is cleared by software.
* Channel CC0 configured as input: This flag is set by hardware and the counter value has been captured in CCR0 field of TIM_CCR0 register when an active edge has been detected. It is cleared by software.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>UIF</name>
              <description>Update interrupt flag</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_EGR</name>
          <addressOffset>0x00000010</addressOffset>
          <size>32</size>
          <description>TIM event generation register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CC7G</name>
              <description>Refer to CC0G description</description>
              <bitRange>[8:8]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>CC6G</name>
              <description>Refer to CC0G description</description>
              <bitRange>[7:7]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>CC5G</name>
              <description>Refer to CC0G description</description>
              <bitRange>[6:6]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>CC4G</name>
              <description>Refer to CC0G description</description>
              <bitRange>[5:5]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>CC3G</name>
              <description>Refer to CC0G description</description>
              <bitRange>[4:4]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>CC2G</name>
              <description>Refer to CC0G description</description>
              <bitRange>[3:3]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>CC1G</name>
              <description>Refer to CC0G description</description>
              <bitRange>[2:2]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>CC0G</name>
              <description>Capture/Compare 0 generation
This bit is set by software and is automatically cleared by hardware.
* Channel CC0 configured as output: The CC0IF flag is set, the corresponding interrupt or request is sent if enabled. 
* Channel CC0 configured as input: The current value of counter is capture in CCR0 field of TIM_CCR0 register. The CC0IF flag is set, the corresponding interrupt or request is sent if enabled.</description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>UG</name>
              <description>Update generation. Re-initialize the counter and generate an Update of registers. Note that the prescaler counter is cleared too. (Anyway the prescaler ratio is not affected)</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_CNT</name>
          <addressOffset>0x00000014</addressOffset>
          <size>32</size>
          <description>TIM counter register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CNT</name>
              <description>Counter value</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_PSC</name>
          <addressOffset>0x00000018</addressOffset>
          <size>32</size>
          <description>TIM prescaler register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PSC</name>
              <description>Prescaler value. PSC contains the value to be loaded in the actual prescaler register at each UEV (including when the counter is cleared through UG bit of TIM_EGR register).</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_ARR</name>
          <addressOffset>0x0000001C</addressOffset>
          <size>32</size>
          <description>TIM auto-reload register</description>
          <resetValue>0x0000FFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ARR</name>
              <description>The value to be loaded in the actual auto-reload register. It can be preloaded by setting ARPE bit in TIM_CR.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_CCR0</name>
          <addressOffset>0x00000024</addressOffset>
          <size>32</size>
          <description>TIM Capture/Compare register 0</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>OPM_DL0</name>
              <description>One-pulse mode default level
* 0: Default level is 0
* 1: Default level is 1
This bit takes effect only in PWM output one-pulse mode.</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC0M</name>
              <description>CC0 working mode
* 0: PWM mode
* 1: Input capture mode</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC0P</name>
              <description>CC0 channel configured as output:
* 0: OC0 active high
* 1: OC0 active low
CC0 channel configured as input:
* 0: Positive edge of TRGI is active for capture.
* 1: Negative edge of TRGI is active for capture.</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OC0PE</name>
              <description>Enable output capture 0 preload
* 0: Disable preload register on CCR0. CCR0 can be written at any time, the new value is taken into account immediately.
* 1: Enable preload register on CCR0. Read/Write operations access the preload register. CCR0 preload value is loaded in the active register at each UEV.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC0E</name>
              <description>Enable CC0</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CCR0</name>
              <description>Capture/Compare 0 value
* CC0 channel configured as output: CCR0 is the value to be loaded in the actual capture/compare 0 register (preload value). It is loaded permanently if the preload feature is not selected in the OC0PE bit.Else the preload value is copied in the active capture/compare 0 register when an UEV occurs.The active capture/compare 0 register contains the value to be compared to the counter TIM_CNT and signalled on OC0 output.
* CC0 channel configured as pulse mode 1: CCR0 is the counter value transferred by the last input capture event (TRGI).</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_CCR1</name>
          <addressOffset>0x00000028</addressOffset>
          <size>32</size>
          <description>TIM Capture/Compare register 1</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>OPM_DL1</name>
              <description>One-pulse mode default level
* 0: Default level is 0
* 1: Default level is 1
This bit takes effect only in PWM output one-pulse mode.</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC1M</name>
              <description>CC1 working mode
* 0: PWM mode
* 1: Input capture mode</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC1P</name>
              <description>CC1 channel configured as output:
* 0: OC1 active high
* 1: OC1 active low
CC1 channel configured as input:
* 0: Positive edge of TRGI is active for capture.
* 1: Negative edge of TRGI is active for capture.</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OC1PE</name>
              <description>Enable output capture 1 preload
* 0: Disable preload register on CCR1. CCR1 can be written at any time, the new value is taken into account immediately.
* 1: Enable preload register on CCR1. Read/Write operations access the preload register. CCR1 preload value is loaded in the active register at each UEV.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC1E</name>
              <description>Enable CC1</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CCR1</name>
              <description>Capture/Compare 1 value
* CC1 channel configured as output: CCR1 is the value to be loaded in the actual capture/compare 1 register (preload value). It is loaded permanently if the preload feature is not selected in the OC1PE bit.Else the preload value is copied in the active capture/compare 1 register when an UEV occurs.The active capture/compare 1 register contains the value to be compared to the counter TIM_CNT and signalled on OC1 output.
* CC1 channel configured as pulse mode 1: CCR1 is the counter value transferred by the last input capture event (TRGI).</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_CCR2</name>
          <addressOffset>0x0000002C</addressOffset>
          <size>32</size>
          <description>TIM Capture/Compare register 2</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>OPM_DL2</name>
              <description>One-pulse mode default level
* 0: Default level is 0
* 1: Default level is 1
This bit takes effect only in PWM output one-pulse mode.</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC2M</name>
              <description>CC2 working mode
* 0: PWM mode
* 1: Input capture mode</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC2P</name>
              <description>CC2 channel configured as output:
* 0: OC2 active high
* 1: OC2 active low
CC2 channel configured as input:
* 0: Positive edge of TRGI is active for capture.
* 1: Negative edge of TRGI is active for capture.</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OC2PE</name>
              <description>Enable output capture 2 preload
* 0: Disable preload register on CCR2. CCR2 can be written at any time, the new value is taken into account immediately.
* 1: Enable preload register on CCR2. Read/Write operations access the preload register. CCR2 preload value is loaded in the active register at each UEV.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC2E</name>
              <description>Enable CC2</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CCR2</name>
              <description>Capture/Compare 2 value
* CC2 channel configured as output: CCR2 is the value to be loaded in the actual capture/compare 2 register (preload value). It is loaded permanently if the preload feature is not selected in the OC2PE bit.Else the preload value is copied in the active capture/compare 2 register when an UEV occurs.The active capture/compare 2 register contains the value to be compared to the counter TIM_CNT and signalled on OC2 output.
* CC2 channel configured as pulse mode 1: CCR2 is the counter value transferred by the last input capture event (TRGI).</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_CCR3</name>
          <addressOffset>0x00000030</addressOffset>
          <size>32</size>
          <description>TIM Capture/Compare register 3</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>OPM_DL3</name>
              <description>One-pulse mode default level
* 0: Default level is 0
* 1: Default level is 1
This bit takes effect only in PWM output one-pulse mode.</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC3M</name>
              <description>CC3 working mode
* 0: PWM mode
* 1: Input capture mode</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC3P</name>
              <description>CC3 channel configured as output:
* 0: OC3 active high
* 1: OC3 active low
CC3 channel configured as input:
* 0: Positive edge of TRGI is active for capture.
* 1: Negative edge of TRGI is active for capture.</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OC3PE</name>
              <description>Enable output capture 3 preload
* 0: Disable preload register on CCR3. CCR3 can be written at any time, the new value is taken into account immediately.
* 1: Enable preload register on CCR3. Read/Write operations access the preload register. CCR3 preload value is loaded in the active register at each UEV.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC3E</name>
              <description>Enable CC3</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CCR3</name>
              <description>Capture/Compare 3 value
* CC3 channel configured as output: CCR3 is the value to be loaded in the actual capture/compare 3 register (preload value). It is loaded permanently if the preload feature is not selected in the OC3PE bit.Else the preload value is copied in the active capture/compare 3 register when an UEV occurs.The active capture/compare 3 register contains the value to be compared to the counter TIM_CNT and signalled on OC3 output.
* CC3 channel configured as pulse mode 1: CCR3 is the counter value transferred by the last input capture event (TRGI).</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_CCR4</name>
          <addressOffset>0x00000034</addressOffset>
          <size>32</size>
          <description>TIM Capture/Compare register 4</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>OPM_DL4</name>
              <description>One-pulse mode default level
* 0: Default level is 0
* 1: Default level is 1
This bit takes effect only in PWM output one-pulse mode.</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC4M</name>
              <description>CC4 working mode
* 0: PWM mode
* 1: Input capture mode</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC4P</name>
              <description>CC4 channel configured as output:
* 0: OC4 active high
* 1: OC4 active low
CC4 channel configured as input:
* 0: Positive edge of TRGI is active for capture.
* 1: Negative edge of TRGI is active for capture.</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OC4PE</name>
              <description>Enable output capture 4 preload
* 0: Disable preload register on CCR4. CCR4 can be written at any time, the new value is taken into account immediately.
* 1: Enable preload register on CCR4. Read/Write operations access the preload register. CCR4 preload value is loaded in the active register at each UEV.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC4E</name>
              <description>Enable CC4</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CCR4</name>
              <description>Capture/Compare 4 value
* CC4 channel configured as output: CCR4 is the value to be loaded in the actual capture/compare 4 register (preload value). It is loaded permanently if the preload feature is not selected in the OC4PE bit.Else the preload value is copied in the active capture/compare 4 register when an UEV occurs.The active capture/compare 4 register contains the value to be compared to the counter TIM_CNT and signalled on OC4 output.
* CC4 channel configured as pulse mode 1: CCR4 is the counter value transferred by the last input capture event (TRGI).</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_CCR5</name>
          <addressOffset>0x00000038</addressOffset>
          <size>32</size>
          <description>TIM Capture/Compare register 5</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>OPM_DL5</name>
              <description>One-pulse mode default level
* 0: Default level is 0
* 1: Default level is 1
This bit takes effect only in PWM output one-pulse mode.</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC5M</name>
              <description>CC5 working mode
* 0: PWM mode
* 1: Input capture mode</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC5P</name>
              <description>CC5 channel configured as output:
* 0: OC5 active high
* 1: OC5 active low
CC5 channel configured as input:
* 0: Positive edge of TRGI is active for capture.
* 1: Negative edge of TRGI is active for capture.</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OC5PE</name>
              <description>Enable output capture 5 preload
* 0: Disable preload register on CCR5. CCR5 can be written at any time, the new value is taken into account immediately.
* 1: Enable preload register on CCR5. Read/Write operations access the preload register. CCR5 preload value is loaded in the active register at each UEV.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC5E</name>
              <description>Enable CC5</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CCR5</name>
              <description>Capture/Compare 5 value
* CC5 channel configured as output: CCR5 is the value to be loaded in the actual capture/compare 5 register (preload value). It is loaded permanently if the preload feature is not selected in the OC5PE bit.Else the preload value is copied in the active capture/compare 5 register when an UEV occurs.The active capture/compare 5 register contains the value to be compared to the counter TIM_CNT and signalled on OC5 output.
* CC5 channel configured as pulse mode 1: CCR5 is the counter value transferred by the last input capture event (TRGI).</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_PSYNC0</name>
          <addressOffset>0x00000044</addressOffset>
          <size>32</size>
          <description>TIM Phase Synchronization register 0</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SYNCEN0</name>
              <description>Enable phase sync function in channel 0. Phase sync takes effect only in output PWM mode.</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SYNCDIR0</name>
              <description>Phase sync direction to the reference counter
* 0: Delay to the reference counter
* 1: Ahead to the reference counter</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SYNCPE0</name>
              <description>Enable sync phase parameter preload
* 0: Disable preload register on PSYNC0. PSYNC0 can be written at any time, the new value is taken into account immediately.
* 1: Enable preload register on PSYNC0. Read/Write operations access the preload register. PSYNC0 preload value is loaded in the active register at each UEV.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SYNCPHASE0</name>
              <description>The deviation value of channel0 to the reference counter</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_PSYNC1</name>
          <addressOffset>0x00000048</addressOffset>
          <size>32</size>
          <description>TIM Phase Synchronization register 1</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SYNCEN1</name>
              <description>Enable phase sync function in channel 1. Phase sync takes effect only in output PWM mode.</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SYNCDIR1</name>
              <description>Phase sync direction to the reference counter
* 0: Delay to the reference counter
* 1: Ahead to the reference counter</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SYNCPE1</name>
              <description>Enable sync phase parameter preload
* 0: Disable preload register on PSYNC1. PSYNC1 can be written at any time, the new value is taken into account immediately.
* 1: Enable preload register on PSYNC1. Read/Write operations access the preload register. PSYNC1 preload value is loaded in the active register at each UEV.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SYNCPHASE1</name>
              <description>The deviation value of channel1 to the reference counter</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_PSYNC2</name>
          <addressOffset>0x0000004C</addressOffset>
          <size>32</size>
          <description>TIM Phase Synchronization register 2</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SYNCEN2</name>
              <description>Enable phase sync function in channel 2. Phase sync takes effect only in output PWM mode.</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SYNCDIR2</name>
              <description>Phase sync direction to the reference counter
* 0: Delay to the reference counter
* 1: Ahead to the reference counter</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SYNCPE2</name>
              <description>Enable sync phase parameter preload
* 0: Disable preload register on PSYNC2. PSYNC2 can be written at any time, the new value is taken into account immediately.
* 1: Enable preload register on PSYNC2. Read/Write operations access the preload register. PSYNC2 preload value is loaded in the active register at each UEV.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SYNCPHASE2</name>
              <description>The deviation value of channel2 to the reference counter</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_PSYNC3</name>
          <addressOffset>0x00000050</addressOffset>
          <size>32</size>
          <description>TIM Phase Synchronization register 3</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SYNCEN3</name>
              <description>Enable phase sync function in channel 3. Phase sync takes effect only in output PWM mode.</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SYNCDIR3</name>
              <description>Phase sync direction to the reference counter
* 0: Delay to the reference counter
* 1: Ahead to the reference counter</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SYNCPE3</name>
              <description>Enable sync phase parameter preload
* 0: Disable preload register on PSYNC3. PSYNC3 can be written at any time, the new value is taken into account immediately.
* 1: Enable preload register on PSYNC3. Read/Write operations access the preload register. PSYNC3 preload value is loaded in the active register at each UEV.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SYNCPHASE3</name>
              <description>The deviation value of channel3 to the reference counter</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_PSYNC4</name>
          <addressOffset>0x00000054</addressOffset>
          <size>32</size>
          <description>TIM Phase Synchronization register 4</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SYNCEN4</name>
              <description>Enable phase sync function in channel 4. Phase sync takes effect only in output PWM mode.</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SYNCDIR4</name>
              <description>Phase sync direction to the reference counter
* 0: Delay to the reference counter
* 1: Ahead to the reference counter</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SYNCPE4</name>
              <description>Enable sync phase parameter preload
* 0: Disable preload register on PSYNC4. PSYNC4 can be written at any time, the new value is taken into account immediately.
* 1: Enable preload register on PSYNC4. Read/Write operations access the preload register. PSYNC4 preload value is loaded in the active register at each UEV.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SYNCPHASE4</name>
              <description>The deviation value of channel4 to the reference counter</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_PSYNC5</name>
          <addressOffset>0x00000058</addressOffset>
          <size>32</size>
          <description>TIM Phase Synchronization register 5</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SYNCEN5</name>
              <description>Enable phase sync function in channel 5. Phase sync takes effect only in output PWM mode.</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SYNCDIR5</name>
              <description>Phase sync direction to the reference counter
* 0: Delay to the reference counter
* 1: Ahead to the reference counter</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SYNCPE5</name>
              <description>Enable sync phase parameter preload
* 0: Disable preload register on PSYNC5. PSYNC5 can be written at any time, the new value is taken into account immediately.
* 1: Enable preload register on PSYNC5. Read/Write operations access the preload register. PSYNC5 preload value is loaded in the active register at each UEV.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SYNCPHASE5</name>
              <description>The deviation value of channel5 to the reference counter</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_PHASECNT0</name>
          <addressOffset>0x00000064</addressOffset>
          <size>32</size>
          <description>TIM phase counter register 0</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CNT0</name>
              <description>Phase counter value of channel0</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_PHASECNT1</name>
          <addressOffset>0x00000068</addressOffset>
          <size>32</size>
          <description>TIM phase counter register 1</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CNT1</name>
              <description>Phase counter value of channel1</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_PHASECNT2</name>
          <addressOffset>0x0000006C</addressOffset>
          <size>32</size>
          <description>TIM phase counter register 2</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CNT2</name>
              <description>Phase counter value of channel2</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_PHASECNT3</name>
          <addressOffset>0x00000070</addressOffset>
          <size>32</size>
          <description>TIM phase counter register 3</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CNT3</name>
              <description>Phase counter value of channel3</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_PHASECNT4</name>
          <addressOffset>0x00000074</addressOffset>
          <size>32</size>
          <description>TIM phase counter register 4</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CNT4</name>
              <description>Phase counter value of channel4</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIM_PHASECNT5</name>
          <addressOffset>0x00000078</addressOffset>
          <size>32</size>
          <description>TIM phase counter register 5</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CNT5</name>
              <description>Phase counter value of channel5</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TIM_PWM_DUMMY</name>
          <addressOffset>0x00000084</addressOffset>
          <size>32</size>
          <description>Timer PWM Dummy Register</description>
          <resetValue>0x0000FFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>Dummy register</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>uartirda</name>
      <baseAddress>0x4100F000</baseAddress>
      <size>0x00000060</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00000060</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>UART_DLL</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description>UART divisor length register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BAUD</name>
              <description>The low 8 bits of divisor coefficient (not used)</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_IER</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description>UART interrupt enable register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ERXNDI</name>
              <description>Rx noise detected interrupt enable</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ETOI</name>
              <description>Rx timeout interrupt enable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EMDI</name>
              <description>Rx path monitor done interrupt enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EDSSI</name>
              <description>Modem Status Interrupt (EDSSI) (modem status transition) enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ELSI</name>
              <description>Receiver Line Status Interrupt (ELSI) (receiver line status) enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ETBEI</name>
              <description>Transmitter FIFO Empty interrupt (ETBEI) (Tx FIFO empty) enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ERBI</name>
              <description>Received Data Available Interrupt (ERBFI) (Rx trigger) enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_IIR</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description>UART interrupt identification register</description>
          <resetValue>0x00000001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>INT_PEND</name>
              <description>* 0: pending, and the IIR contents may be used as a pointer to the appropriate interrupt service routine
* 1: no interrupt is pending</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_LCR</name>
          <addressOffset>0x0000000C</addressOffset>
          <size>32</size>
          <description>UART line control register</description>
          <resetValue>0x00FF0001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>Dummy</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DLAB</name>
              <description>Divisor Latch Access bit, and control the accessibility of the DLL, DLM and IER registers
* 0: The divisor latches not accessible; IER accessible
* 1: The divisor latches accessible; DLL and DLM accessible
Note: THR/RBR don't care the value of this bit.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BRCTL</name>
              <description>Break Control bit
* 0: break signal disable
* 1: break signal enable (logic '0')</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>STKP</name>
              <description>Stick Parity bit
* 0: Not stick parity, the parity type is ODD or EVEN (depending on eps)
* 1: Stick parity
** eps=1: low parity (1'b0)
** eps=0: high parity (1'b1)</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EPS</name>
              <description>Even Parity selection
* 0: Odd parity, the number of Logic '1' is odd.
* 1: Even parity, the number of Logic '1' is even.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PEN</name>
              <description>Parity Enable
* 0: No parity bit
* 1: Parity bit is generated on each outgoing character and is checked on each incoming one</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>STB</name>
              <description>Stop bits length selection
* 0: 1 stop bit
* 1: 2 stop bits
Note: The receiver always checks the first stop bit only.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WLS0</name>
              <description>Word length selection
* 0: 7 bits data
* 1: 8 bits data</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_MCR</name>
          <addressOffset>0x00000010</addressOffset>
          <size>32</size>
          <description>UART modem control register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>AFE</name>
              <description>Auto flow control enable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LOOP_EN</name>
              <description>LoopBack mode
* 0: Normal operation mode
* 1: Loopback mode</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT2</name>
              <description>Auxiliary output 2
Bit[3] affects the OUT2_ output in a manner identical to that described above set to 0
In loopback mode, connected to Data Carrier Detect (DCD).</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT1</name>
              <description>Auxiliary output 1
Bit[3] affects the OUT1_ output in a manner identical to that described above set to 0
In loopback mode, connected to Ring Indicator (RI)</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RTS</name>
              <description>Request to Send (RTS) signal control
* 0: RTS is logic 1.
* 1: RTS is logic 0.
This bit controls the RTS_ output. Bit[1] affects the RTS_ output in a manner identical to that described above set to 0.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DTR</name>
              <description>* 0: DTR is logic 1
* 1: DTR is logic 0
This bit controls the DTR output</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_LSR</name>
          <addressOffset>0x00000014</addressOffset>
          <size>32</size>
          <description>UART line status register</description>
          <resetValue>0x00000060</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RXND_INT</name>
              <description>This bit is only set when RX debouncer has detected noise
1: Rx path noise detected interrupt</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>MODEM_INT</name>
              <description>This bit is only set when Modem status pending 
1: Modem interrupt</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>MONITOR_DONE_INT</name>
              <description>This bit is only set when Rx Path Monitor Done interrupt is enabled(EMDI is set)
1: Rx path monitor done</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TIMEOUT_INT</name>
              <description>This bit is only set when Rx Timeout interrupt is enabled(ETOI is set)
1: at least one character in the FIFO but no character has been input to the FIFO or reading from it for the time duration, which depends on the value in register REG_RX_PATH_CTRL[31:16]</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RXFIFO_INT</name>
              <description>This bit is only set when Received Data Available Interrupt interrupt is enabled(ERBI is set)
1: FIFO Trigger level reached or Rx FIFO full</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RXFIFO_ERR</name>
              <description>Uart_rx_error, depending on the FIFO control register (FCR) bit[0]
* 0: clear when the CPU reads the LSR, if there are no subsequent errors in the FIFO.
* 1: parity error, overrun error, framing error or break indication in the FIFO.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TX_NOT_FULL</name>
              <description>TXFIFO not full indicator</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TX_EMPTY</name>
              <description>TXFIFO empty indicator</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BREAK_INT</name>
              <description>Break Interrupt (BI) indicator
* 0: No break condition in the current character
* 1: The received data input held in the Spacing ( logic 0) state is longer than a full word transmission time</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FRM_ERR</name>
              <description>Framing Error (FE) indicator
* 0: No framing error in the current character
* 1: The received character does not have a valid stop bit</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAR_ERR</name>
              <description>Parity Error (PE) indicator
* 0: No parity error in current character
* 1: The received character does not have the correct parity bit</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>OVR_ERR</name>
              <description>Overrun Error (OE) indicator
* 0: No Overrun state
* 1: The transmission is continue although the Rx FIFO is full</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DRDY</name>
              <description>* 0: No characters in the Receiver FIFO
* 1: At least one character has been received and transferred into the FIFO</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_MSR</name>
          <addressOffset>0x00000018</addressOffset>
          <size>32</size>
          <description>UART modem status register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>R_DCD</name>
              <description>Complement of the DCD input or equals to Out2 in loopback mode.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>R_RI</name>
              <description>Complement of the RI input or equals to Out1 in loopback mode.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>R_DSR</name>
              <description>Complement of the DSR input or equals to DTR in loopback mode.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>R_CTS</name>
              <description>Complement of the CTS input or equals to RTS in loopback mode.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>D_DCD</name>
              <description>* 0: Otherwise
* 1: The DCD line has changed its state</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TERI</name>
              <description>* 0: Otherwise
* 1: The RI line has changed its state from low to high state</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>D_DSR</name>
              <description>* 0: Otherwise
* 1: The DSR line has changed its state</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>D_CTS</name>
              <description>* 0: Otherwise
* 1: The CTS line has changed its state</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_SCR</name>
          <addressOffset>0x0000001C</addressOffset>
          <size>32</size>
          <description>UART scratch pad register</description>
          <resetValue>0x00000030</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>XFACTOR_ADJ</name>
              <description>One factor of Baud rate calculation for Tx path</description>
              <bitRange>[26:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DBG_SEL</name>
              <description>Debug port selection</description>
              <bitRange>[12:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCRATCH_7</name>
              <description>Clear Rx break signal interrupt status</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCRATCH_6_0</name>
              <description>* Bit[6]: Rx break signal interrupt enable
* Bit[5]: fl_set_bi_err
* Bit[4]: fl_frame_err
* Bit[3]: pin_lb_test
* Bit[2:0]: reserved</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_STS</name>
          <addressOffset>0x00000020</addressOffset>
          <size>32</size>
          <description>UART STS register</description>
          <resetValue>0x00010470</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>XFACTOR</name>
              <description>Factor of Baud rate calculation for Tx path</description>
              <bitRange>[23:4]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_RBR_OR_UART_THR</name>
          <addressOffset>0x00000024</addressOffset>
          <size>32</size>
          <description>UART receiver buffer register/UART transmitter holding register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATABIT</name>
              <description>UART_RBR's Rx data bits or UART_THR's Tx data bit[7:0]
Note: Bit[0] is the least significant bit. It is the first bit serially received/transmitted.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_MISCR</name>
          <addressOffset>0x00000028</addressOffset>
          <size>32</size>
          <description>UART MISC control register</description>
          <resetValue>0x00002020</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CLR_DUMMY_FLAG</name>
              <description>Indicate the clearing of dummy data</description>
              <bitRange>[30:30]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>DUMMY_DATA</name>
              <description>Store dummy data, when UART is DMA flow controller, dummy data is padded for last RXDMA burst request.</description>
              <bitRange>[29:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXDMA_OWNER</name>
              <description>* 0: GDMA
* 1: UART, interrupt enable signal other than erpd should be masked</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IRDA_RX_INV</name>
              <description>irda_rx_i reverse input enable</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IRDA_TX_INV</name>
              <description>irda_tx_o reverse output enable</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXDMA_BURSTSIZE</name>
              <description>RXDMA burstsize, maximum value is 16.</description>
              <bitRange>[18:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXDMA_BURSTSIZE</name>
              <description>TXDMA burstsize, maximum value is 16.</description>
              <bitRange>[10:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXDMA_EN</name>
              <description>RXDMA enable, valid when dma_mode in FCR is 1'b1</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXDMA_EN</name>
              <description>TXDMA enable, valid when dma_mode in FCR is 1'b1</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IRDA_ENABLE</name>
              <description>* 0: UART mode only
* 1: UART is co-work with IRDA SIR mode</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_SIR_TX_PWC0</name>
          <addressOffset>0x0000002C</addressOffset>
          <size>32</size>
          <description>UART IRDA SIR TX pulse width control 0 register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>UPPERBOUND_SHIFTRIGHT</name>
              <description>* 0: Shift left, minus offset value of upperbound_shiftval
* 1: Shift right, plus offset value of upperbound_shiftval</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>UPPERBOUND_SHIFTVAL</name>
              <description>The shift value of SIR Tx pulse's right edge</description>
              <bitRange>[30:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LOWBOUND_SHIFTRIGHT</name>
              <description>* 0: Shift left, minus offset value of lowbound_shiftval
* 1: Shift right, plus offset value of lowbound_shiftval</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LOWBOUND_SHIFTVAL</name>
              <description>The shift value of SIR Tx pulse's left edge</description>
              <bitRange>[14:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_SIR_RX_PFC</name>
          <addressOffset>0x00000030</addressOffset>
          <size>32</size>
          <description>UART IRDA SIR Rx pulse filter control register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>R_SIR_RX_FILTER_THRS</name>
              <description>The threshold of SIR Rx filter, Rx pulse is valid only when Rx pulse width is larger than the threshold.</description>
              <bitRange>[15:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>R_SIR_RX_FILTER_EN</name>
              <description>IrDA SIR Rx filter enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_BAUD_MON</name>
          <addressOffset>0x00000034</addressOffset>
          <size>32</size>
          <description>UART baud monitor register</description>
          <resetValue>0x07000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TOGGLE_MON_EN</name>
              <description>Toggle monitor enable</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MON_DATA_VLD</name>
              <description>Indicate valid monitoring data</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FALLING_THRESH</name>
              <description>Indicate the threshold of Rx data rising edge</description>
              <bitRange>[29:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MIN_LOW_PERIOD</name>
              <description>Minimum space of consecutive logic '0' of Rx data</description>
              <bitRange>[23:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>MIN_FALL_SPACE</name>
              <description>Minimum space of adjacent falling edge of Rx data</description>
              <bitRange>[11:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_DBGR</name>
          <addressOffset>0x0000003C</addressOffset>
          <size>32</size>
          <description>UART debug register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DBG_UART</name>
              <description>The output value of debug port, depending on dbg_sel value in SCR[2:0]</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_RX_PATH_CTRL</name>
          <addressOffset>0x00000040</addressOffset>
          <size>32</size>
          <description>UART Rx path control register</description>
          <resetValue>0x00400000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>R_RXTO_THRS</name>
              <description>Indicate the timeout threshold of Rx path, unit in one-bit time</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXBAUD_ADJ_10_0</name>
              <description>One factor of Baud rate calculation for Rx path, similar with xfactor_adj</description>
              <bitRange>[13:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>R_RST_NEWRX_N</name>
              <description>Reset new Rx path, low active</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_MON_BAUD_CTRL</name>
          <addressOffset>0x00000044</addressOffset>
          <size>32</size>
          <description>UART monitor baud rate control register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>R_UPD_OSC_IN_XTAL</name>
              <description>Update parameter r_cycnum_perbit_osc (during the update of parameter r_cycnum_perbit_xtal) enable</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>R_CYCNUM_PERBIT_OSC</name>
              <description>Indicate the average OSC clock cycle number of one bit, for Rx path OSC clk
NOTE: SW sets the initial value, HW updates it depending on the monitor result.</description>
              <bitRange>[28:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>R_BIT_NUM_THRES</name>
              <description>Indicate the bit number threshold of one monitor period, max value is 127</description>
              <bitRange>[8:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>R_MON_BAUD_EN</name>
              <description>Monitor Rx baud enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_MON_BAUD_STS</name>
          <addressOffset>0x00000048</addressOffset>
          <size>32</size>
          <description>UART monitor baud rate status register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RO_MON_TOTAL_BIT</name>
              <description>Indicate the number of bits actually monitored</description>
              <bitRange>[28:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RO_MON_RDY</name>
              <description>Indicate the finish of calculation of actual cycle number per bit, it's cleared when r_mon_baud_en is 0</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>R_CYCNUM_PERBIT_XTAL</name>
              <description>Indicate the fractional xtal clock cycle number of one bit, for Rx path xtal clk
NOTE: SW sets the initial value, HW updates it depending on the monitor result.</description>
              <bitRange>[19:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_MON_CYC_NUM</name>
          <addressOffset>0x0000004C</addressOffset>
          <size>32</size>
          <description>UART monitored cycle number register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RO_MON_TOTAL_CYCLE</name>
              <description>Indicate the number of clock cycle actually monitored</description>
              <bitRange>[27:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_RX_BYTE_CNT</name>
          <addressOffset>0x00000050</addressOffset>
          <size>32</size>
          <description>UART Rx data byte count register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CLR_RX_BYTE_CNT</name>
              <description>Write 1 to clear ro_rx_byte_cnt</description>
              <bitRange>[16:16]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>RO_RX_BYTE_CNT</name>
              <description>Count the byte number of data read from RXFIFO</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_FCR</name>
          <addressOffset>0x00000054</addressOffset>
          <size>32</size>
          <description>UART FIFO control register</description>
          <resetValue>0x000000C1</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RECVTRG</name>
              <description>Define the 16-entries Receiver FIFO Interrupt trigger level (0~15 bytes)
* 00: 1 byte
* 01: 16 bytes (FIFO_DEPTH/4)
* 10: 32 bytes (FIFO_DEPTH/2)
* 11: 62 bytes (FIFO_DEPTH-2)</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_MODE</name>
              <description>Support dma mode (cooperating with DW DDMA in the data path)</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XMIT_CLR</name>
              <description>Clear xmitckt</description>
              <bitRange>[2:2]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>RECV_CLR</name>
              <description>Clear receiving</description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>FIFO_EN</name>
              <description>Error report of RCVR FIFO field enable, only valid when the LSR bit[7] is set to 1.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_ICR</name>
          <addressOffset>0x00000058</addressOffset>
          <size>32</size>
          <description>UART interrupt clear register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RXNDICF</name>
              <description>Rx noise Detected Interrupt Flag</description>
              <bitRange>[4:4]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>MDICF</name>
              <description>Monitor Done Interrupt Flag</description>
              <bitRange>[3:3]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>MICF</name>
              <description>Modem Interrupt Clear Flag</description>
              <bitRange>[2:2]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>TOICF</name>
              <description>Timeout Interrupt Clear Flag</description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>RLSICF</name>
              <description>Receiver Line Statue Interrupt Clear Flag
Writing 1 to this bit clears PARITY_ERR, OVERRUN_ERR, FRAMING_ERR, BREAK_ERR_INT and RXFIFO_ERR in the USART_LSR register.</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_RXDBCR</name>
          <addressOffset>0x0000005C</addressOffset>
          <size>32</size>
          <description>UART RX debounce control register</description>
          <resetValue>0x0000001E</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DBNC_CYC</name>
              <description>Debounce cycles in unit of sclk</description>
              <bitRange>[15:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DBNC_FEN</name>
              <description>UART RX debounce enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>iwdg</name>
      <baseAddress>0x4100CC00</baseAddress>
      <size>0x00000014</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00000014</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>WDG_MKEYR</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description>WDG Magic Key Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>MKEY</name>
              <description>0x6969: enable access to register WDG_CR/WDG_RLR/WDG_WINR
0x5A5A: reload WDG counter
0x3C3C: enable WDG function</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WDG_CR</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description>WDG Control Regsietr</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RVU</name>
              <description>Watchdog counter update by reload command</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EVU</name>
              <description>Watchdog early interrupt function update</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LPEN</name>
              <description>Low power enable
0: WDG will be gating when system goes into sleep mode
1: WDG keeps running when system goes into sleep mode</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EIC</name>
              <description>Write '1' clear the early interrupt</description>
              <bitRange>[17:17]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>EIE</name>
              <description>Watchdog early interrupt enable</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EICNT</name>
              <description>Early interrupt trigger threshold</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WDG_RLR</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description>WDG Reload Register</description>
          <resetValue>0x00630FFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PRER</name>
              <description>Prescaler counter, configuration only allowed before watchdog enable  
WDG: 0x63
System WDG: 0x1F</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RELOAD</name>
              <description>Reload value for watchdog counter</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WDG_WINR</name>
          <addressOffset>0x0000000C</addressOffset>
          <size>32</size>
          <description>WDG Window Register</description>
          <resetValue>0x0000FFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>WINDOW</name>
              <description>Watchdog feed protect window register</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IWDG_DUMMY</name>
          <addressOffset>0x00000010</addressOffset>
          <size>32</size>
          <description>Dummy Register</description>
          <resetValue>0x000000FF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>Hardware dummy</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>zgb</name>
      <baseAddress>0x42001C00</baseAddress>
      <size>0x00000028</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00000028</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>ZGB_FUN_EN</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description>Zigbee Function enable</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description></description>
              <bitRange>[31:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_zgb_rx_en</name>
              <description>zigbee mac rx enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_zgb_tx_en</name>
              <description>zigbee mac tx enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ZGB_TXBUF_CTRL</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description>Zigbee Tx buffer control</description>
          <resetValue>0x00140280</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description></description>
              <bitRange>[31:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txbuf_empty_th</name>
              <description>when zigbee txbuf empty entry is large than the r_txbuf_empty_th, interrupt is issued to CPU
half size of tx buffer:320,unit is 4byte</description>
              <bitRange>[22:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_zgb_txdma_th</name>
              <description>when r_zgb_txdma_en is 1 and zigbee txbuf empty entry is large than the r_zgb_txdma_th, dma_tx_req is raised to GDMA
half size of tx buffer:320,unit is 4byte</description>
              <bitRange>[11:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_zgb_txdma_en</name>
              <description>GDMA enable for Zigbee Txbuf</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ZGB_RXBUF_CTRL</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description>Zigbee Rx buffer control</description>
          <resetValue>0x00060180</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description></description>
              <bitRange>[31:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_rxbuf_full_th</name>
              <description>when zigbee rxbuf valid entry is large than the r_rxbuf_full_th, interrupt is issued to CPU
half size of tx buffer:192,unit is 4byte</description>
              <bitRange>[20:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_zgb_rxdma_th</name>
              <description>when r_zgb_rxdma_en is 1 and zigbee rxbuf valid entry is large than the r_zgb_rxdma_th, dma_rx_req is raised to GDMA
half size of tx buffer:192,unit is 4byte</description>
              <bitRange>[10:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_zgb_rxdma_en</name>
              <description>GDMA enable for Zigbee Rxbuf</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ZGB_ISR0</name>
          <addressOffset>0x0000000C</addressOffset>
          <size>32</size>
          <description>Zigbee Interrupt0 status</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_zgb_isr0</name>
              <description>interrupt status register of zigbee
[31],WLAN2ZIGBEE_MAILBOX_INT, From Mailbox controller, 指示当前wlan fw 有向 mailbox(wlan-&gt;zigbee)写入信息
[30],BT_RX_STOP_INT, From PTA, BIT_BT_TX_START=(pre_gnt_bt_rx==1) &amp;&amp;(cur_gnt_bt_rx==0)
[29],BT_RX_START_INT, From PTA, BIT_BT_TX_START=(pre_gnt_bt_rx==0) &amp;&amp;(cur_gnt_bt_rx==1)
[28],BT_TX_STOP_INT, From PTA, BIT_BT_TX_START=(pre_gnt_bt_tx==1) &amp;&amp;(cur_gnt_bt_tx==0)
[27],BT_TX_START_INT, From PTA, BIT_BT_TX_START=(pre_gnt_bt_tx==0) &amp;&amp;(cur_gnt_bt_tx==1)
[26],WLAN_RX_STOP_INT, From wmac, BIT_WLAN_RX_START=(pre_wl_cca==1)&amp;&amp;(cur_wl_cca==0)
[25],WLAN_RX_START_INT, From wmac, BIT_WLAN_RX_START=(pre_wl_cca==0)&amp;&amp;(cur_wl_cca==1), Zigbee 收到该中断后,可以选择是否要中断当前封包TX or RX
[24],WLAN_TX_STOP_INT, From wmac, BIT_WLAN_TX_START=(pre_wl_mactxen==1)&amp;&amp;(cur_wl_mactxen=0)
[23],WLAN_TX_START_INT, From wmac, BIT_WLAN_TX_START=(pre_wl_mactxen==0)&amp;&amp;(cur_wl_mactxen=1), Zigbee 收到该中断后,可以选择是否要中断当前封包TX or RX
[22],DIS_GNT_ZIGBEE_TX_INT, From PTA, BIT_DIS_GNT_ZIGBEE_TX=(pre_gnt_zigbee_tx==1)&amp;&amp; (cur_gnt_zigbee_tx==0)
[21],GNT_ZIGBEE_TX_INT, From PTA, BIT_GNT_ZIGBEE_TX=(pre_gnt_zigbee_tx==0)&amp;&amp; (cur_gnt_zigbee_tx==1)
[20:15],dummy
[14],INTER_ZIGBEE_RFGAIN_CHANGED, zigbee_rfgain_changed posedge pulse
[13],INTER_ZIGBEE_AAGC_DONE, zigbee_aagcrdy posedge pulse
[12],rxbuf_underflow, when read rxbuf and txbuf is empty
[11],rxbuf_empty, when rxbuf is empty
[10],rxbuf_overflow, when write rxbuf and rxbuf is full
[9],rxbuf_full, when rxbuf is full
[8],INTER_ZIGBEE_RXBUF_ALMOST_FULL, when zigbee rxbuf valid entry is large than the r_rxbuf_full_th
[7:6],dummy
[5],INTER_ZIGBEE_TX_STOP, zigbee_rftxen negedege pulse
[4],txbuf_overflow, when wirte txbuf and txbuf is full
[3],txbuf_full, when txbuf is full
[2],txbuf_underflow, when read txbuf and txbuf is empty
[1],txbuf_empty, when txbuf is empty
[0],INTER_ZIGBEE_TXBUF_ALMOST_EMPTY, when zigbee txbuf empty entry is large than the r_txbuf_empty_th</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ZGB_IMR0</name>
          <addressOffset>0x00000010</addressOffset>
          <size>32</size>
          <description>Zigbee Interrupt0 mask</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_zgb_imr0</name>
              <description>interrupt mask register of zigbee</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ZGB_TRXBUF_INFO</name>
          <addressOffset>0x00000014</addressOffset>
          <size>32</size>
          <description>Zigbee Tx/Rx buffer information</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description></description>
              <bitRange>[31:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>txbuf_empty_entry</name>
              <description>empty entry size of txbuf, unit is 4byte</description>
              <bitRange>[20:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>rxbuf_valid_entry</name>
              <description>valid entry size of rxbuf, unit is 4byte</description>
              <bitRange>[9:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ZGB_TRX_REQ</name>
          <addressOffset>0x0000001C</addressOffset>
          <size>32</size>
          <description>Zigbee Tx/Rx/pri request</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description></description>
              <bitRange>[31:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>zgb_tx_req</name>
              <description>zigbee tx request</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>zgb_rx_req</name>
              <description>zigbee rx request</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>zgb_pri_req</name>
              <description>zigbee priority request</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ZGB_ISR1</name>
          <addressOffset>0x00000020</addressOffset>
          <size>32</size>
          <description>Zigbee Interrupt1 status</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_zgb_isr1</name>
              <description>interrupt status register of zigbee
[31:8],dummy
[7:0],INTER_ZIGBEE_INTR_O, zigbee_intr_o[7:0] posedge pulse</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ZGB_IMR1</name>
          <addressOffset>0x00000024</addressOffset>
          <size>32</size>
          <description>Zigbee Interrupt1 mask</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_zgb_imr1</name>
              <description>interrupt mask register of zigbee</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>ECDSA</name>
      <baseAddress>0x4011F000</baseAddress>
      <size>0x00000204</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00000204</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>ECR1</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description>ECDSA Control Register 1</description>
          <resetValue>0x00000100</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>reg_eng_clk_enable</name>
              <description>ECDSA engine clock enable signal.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_eng_rst</name>
              <description>ECDSA reset. Used to reset flip-flop that are clocked by the eng_clk.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ESCR</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description>ECDSA Swap Control Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>reg_sign_s_swap</name>
              <description>Byte swap for eng_sign_s</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_sign_r_swap</name>
              <description>Byte swap for eng_sign_r</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_order_n_swap</name>
              <description>Byte swap for order_n</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_h_swap</name>
              <description>Byte swap for eng_h</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_prime_swap</name>
              <description>Byte swap for prime</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_cor_a_swap</name>
              <description>Byte swap for cor_a</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_yo_swap</name>
              <description>Byte swap for eng_yo</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_xo_swap</name>
              <description>Byte swap for eng_xo</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_verify_s_swap</name>
              <description>Byte swap for eng_verify_s</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_verify_r_swap</name>
              <description>Byte swap for eng_verify_r</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_gy_swap</name>
              <description>Byte swap for eng_gy</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_gx_swap</name>
              <description>Byte swap for eng_gx</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_y_swap</name>
              <description>Byte swap for eng_y</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_x_swap</name>
              <description>Byte swap for eng_x</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EISR</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description>ECDSA Interrupt Status Register</description>
          <resetValue>0x00000010</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>infinity_err</name>
              <description>This bit indicates that the output coordinates are at infinity.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>share_key_err</name>
              <description>When secret_key &lt; 1, or secret_key &gt; (order_n-1), the bit is set to 1.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>sign_err</name>
              <description>Error message description
0001: private &lt;1 or private &gt; (order_n-1)
0010: (random_k % order_n) == 0
0100: r == 0
1000: s == 0</description>
              <bitRange>[15:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>verify_err</name>
              <description>Error message description
01: R &lt; 1, or R &gt; (order_n-1)
10: S &lt; 1, or S &gt; (order_n-1)</description>
              <bitRange>[11:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>verify_pass</name>
              <description>Verification is completed successfully.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ecdsa_finish_int</name>
              <description>ECDSA interrupt status. This bit is cleaned by writing 1. If ecdsa_finish_int_mask is configured to 0, it only masks ecdsa_int  trigger, ecdsa_finish_int still holds the status.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>eng_idle</name>
              <description>When the ECDSA is idle, the bit is set to 1.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>hash_ok</name>
              <description>After the calculation of SHA (m) is completed, this bit will be set to 1 by the software.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>eng_start</name>
              <description>When this bit is set to 1, ECDSA will start the operation according to the corresponding register.</description>
              <bitRange>[1:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ECR2</name>
          <addressOffset>0x0000000C</addressOffset>
          <size>32</size>
          <description>ECDSA Control Register 2</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>extend_n</name>
              <description>When this bit is set to 1, order_n will extend out of 8 bits.
001: 232-bit
010: 200-bit
011: 168-bit
100: 126-bit
101: 120-bit
Others: 256-bit</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pri_key_sel</name>
              <description>Reserved bits.</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>hash256_en</name>
              <description>If the length of the hash message exceeds 128-bit, use this function to speed up the operation.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_num</name>
              <description>Select bit_num for correspoinding bit length, when "exten_n" is set to 0.
001: 224-bit
010: 192-bit
011: 160-bit
100: 128-bit
101: 112-bit
Others: 256-bit</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ecdsa_finish_int_mask</name>
              <description>Mask ECDSA engine interrupt.
When the ecdsa_finish_int = 1'b1, if ecdsa_finish_int_mask = 1'b1, then the bit masks ecdsa_int. It means that ecdsa_int = 1'b0, but the ecdsa_finish_int status still holds the value(1'b1) in EISR register.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_func_sel</name>
              <description>The bit is used to select the operation in basic function mode. The bits are valid when reg_mode_sel[1:0] is set to 2'b11.
000: Field subtraction
001: Field division
010: Field addition
011: Field multiplication
1xx: Point addition</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>reg_mode_sel</name>
              <description>Select operating mode
00: Verification
01: Signature
10: Scalar multiplication
11: Basic function</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>curve_sel</name>
              <description>Select the ECC curve
00: secp256k1
01: P-256
10: Curve25519 Weierstrass
11: Others</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_x_p0</name>
          <addressOffset>0x00000010</addressOffset>
          <size>32</size>
          <description>ENG_X_P Register 0</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_x_p0</name>
              <description>Date register
Verification mode: Public key x
Signature mode: Private key
Scalar multiplication mode: Base point x
Basic function mode: Operand</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_x_p1</name>
          <addressOffset>0x00000014</addressOffset>
          <size>32</size>
          <description>ENG_X_P Register 1</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_x_p1</name>
              <description>Date register
Verification mode: Public key x
Signature mode: Private key
Scalar multiplication mode: Base point x
Basic function mode: Operand</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_x_p2</name>
          <addressOffset>0x00000018</addressOffset>
          <size>32</size>
          <description>ENG_X_P Register 2</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_x_p2</name>
              <description>Date register
Verification mode: Public key x
Signature mode: Private key
Scalar multiplication mode: Base point x
Basic function mode: Operand</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_x_p3</name>
          <addressOffset>0x0000001C</addressOffset>
          <size>32</size>
          <description>ENG_X_P Register 3</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_x_p3</name>
              <description>Date register
Verification mode: Public key x
Signature mode: Private key
Scalar multiplication mode: Base point x
Basic function mode: Operand</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_x_p4</name>
          <addressOffset>0x00000020</addressOffset>
          <size>32</size>
          <description>ENG_X_P Register 4</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_x_p4</name>
              <description>Date register
Verification mode: Public key x
Signature mode: Private key
Scalar multiplication mode: Base point x
Basic function mode: Operand</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_x_p5</name>
          <addressOffset>0x00000024</addressOffset>
          <size>32</size>
          <description>ENG_X_P Register 5</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_x_p5</name>
              <description>Date register
Verification mode: Public key x
Signature mode: Private key
Scalar multiplication mode: Base point x
Basic function mode: Operand</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_x_p6</name>
          <addressOffset>0x00000028</addressOffset>
          <size>32</size>
          <description>ENG_X_P Register 6</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_x_p6</name>
              <description>Date register
Verification mode: Public key x
Signature mode: Private key
Scalar multiplication mode: Base point x
Basic function mode: Operand</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_x_p7</name>
          <addressOffset>0x0000002C</addressOffset>
          <size>32</size>
          <description>ENG_X_P Register 7</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_x_p7</name>
              <description>Date register
Verification mode: Public key x
Signature mode: Private key
Scalar multiplication mode: Base point x
Basic function mode: Operand</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_y_p0</name>
          <addressOffset>0x00000030</addressOffset>
          <size>32</size>
          <description>ENG_Y_P Register 0</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_y_p0</name>
              <description>Date register
Verification mode: Public key y
Signature mode: Random k
Scalar multiplication mode: Base point y
Basic function mode: Operand</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_y_p1</name>
          <addressOffset>0x00000034</addressOffset>
          <size>32</size>
          <description>ENG_Y_P Register 1</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_y_p1</name>
              <description>Date register
Verification mode: Public key y
Signature mode: Random k
Scalar multiplication mode: Base point y
Basic function mode: Operand</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_y_p2</name>
          <addressOffset>0x00000038</addressOffset>
          <size>32</size>
          <description>ENG_Y_P Register 2</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_y_p2</name>
              <description>Date register
Verification mode: Public key y
Signature mode: Random k
Scalar multiplication mode: Base point y
Basic function mode: Operand</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_y_p3</name>
          <addressOffset>0x0000003C</addressOffset>
          <size>32</size>
          <description>ENG_Y_P Register 3</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_y_p3</name>
              <description>Date register
Verification mode: Public key y
Signature mode: Random k
Scalar multiplication mode: Base point y
Basic function mode: Operand</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_y_p4</name>
          <addressOffset>0x00000040</addressOffset>
          <size>32</size>
          <description>ENG_Y_P Register 4</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_y_p4</name>
              <description>Date register
Verification mode: Public key y
Signature mode: Random k
Scalar multiplication mode: Base point y
Basic function mode: Operand</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_y_p5</name>
          <addressOffset>0x00000044</addressOffset>
          <size>32</size>
          <description>ENG_Y_P Register 5</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_y_p5</name>
              <description>Date register
Verification mode: Public key y
Signature mode: Random k
Scalar multiplication mode: Base point y
Basic function mode: Operand</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_y_p6</name>
          <addressOffset>0x00000048</addressOffset>
          <size>32</size>
          <description>ENG_Y_P Register 6</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_y_p6</name>
              <description>Date register
Verification mode: Public key y
Signature mode: Random k
Scalar multiplication mode: Base point y
Basic function mode: Operand</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_y_p7</name>
          <addressOffset>0x0000004C</addressOffset>
          <size>32</size>
          <description>ENG_Y_P Register 7</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_y_p7</name>
              <description>Date register
Verification mode: Public key y
Signature mode: Random k
Scalar multiplication mode: Base point y
Basic function mode: Operand</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_gx_ps0</name>
          <addressOffset>0x00000050</addressOffset>
          <size>32</size>
          <description>ENG_GX_PS Register 0</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_gx_ps0</name>
              <description>Because the default cur_sel[1:0] = 2'd0 (secp256k1), so these register initial values are secp256k1 setting values.
Verification mode: Base point x
Signature mode: Base point x
Scalar multiplication mode: Base point x
Basic function mode:</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_gx_ps1</name>
          <addressOffset>0x00000054</addressOffset>
          <size>32</size>
          <description>ENG_GX_PS Register 1</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_gx_ps1</name>
              <description>Because the default cur_sel[1:0] = 2'd0 (secp256k1), so these register initial values are secp256k1 setting values.
Verification mode: Base point x
Signature mode: Base point x
Scalar multiplication mode: Base point x
Basic function mode:</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_gx_ps2</name>
          <addressOffset>0x00000058</addressOffset>
          <size>32</size>
          <description>ENG_GX_PS Register 2</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_gx_ps2</name>
              <description>Because the default cur_sel[1:0] = 2'd0 (secp256k1), so these register initial values are secp256k1 setting values.
Verification mode: Base point x
Signature mode: Base point x
Scalar multiplication mode: Base point x
Basic function mode:</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_gx_ps3</name>
          <addressOffset>0x0000005C</addressOffset>
          <size>32</size>
          <description>ENG_GX_PS Register 3</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_gx_ps3</name>
              <description>Because the default cur_sel[1:0] = 2'd0 (secp256k1), so these register initial values are secp256k1 setting values.
Verification mode: Base point x
Signature mode: Base point x
Scalar multiplication mode: Base point x
Basic function mode:</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_gx_ps4</name>
          <addressOffset>0x00000060</addressOffset>
          <size>32</size>
          <description>ENG_GX_PS Register 4</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_gx_ps4</name>
              <description>Because the default cur_sel[1:0] = 2'd0 (secp256k1), so these register initial values are secp256k1 setting values.
Verification mode: Base point x
Signature mode: Base point x
Scalar multiplication mode: Base point x
Basic function mode:</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_gx_ps5</name>
          <addressOffset>0x00000064</addressOffset>
          <size>32</size>
          <description>ENG_GX_PS Register 5</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_gx_ps5</name>
              <description>Because the default cur_sel[1:0] = 2'd0 (secp256k1), so these register initial values are secp256k1 setting values.
Verification mode: Base point x
Signature mode: Base point x
Scalar multiplication mode: Base point x
Basic function mode:</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_gx_ps6</name>
          <addressOffset>0x00000068</addressOffset>
          <size>32</size>
          <description>ENG_GX_PS Register 6</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_gx_ps6</name>
              <description>Because the default cur_sel[1:0] = 2'd0 (secp256k1), so these register initial values are secp256k1 setting values.
Verification mode: Base point x
Signature mode: Base point x
Scalar multiplication mode: Base point x
Basic function mode:</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_gx_ps7</name>
          <addressOffset>0x0000006C</addressOffset>
          <size>32</size>
          <description>ENG_GX_PS Register 7</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_gx_ps7</name>
              <description>Because the default cur_sel[1:0] = 2'd0 (secp256k1), so these register initial values are secp256k1 setting values.
Verification mode: Base point x
Signature mode: Base point x
Scalar multiplication mode: Base point x
Basic function mode:</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_gy_ps0</name>
          <addressOffset>0x00000070</addressOffset>
          <size>32</size>
          <description>ENG_GY_PS Register 0</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_gy_ps0</name>
              <description>Because the default cur_sel[1:0] = 2'd0 (secp256k1), so these register initial values are secp256k1 setting values.
Verification mode: Base point y
Signature mode: Base point y
Scalar multiplication mode: Base point y
Basic function mode:</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_gy_ps1</name>
          <addressOffset>0x00000074</addressOffset>
          <size>32</size>
          <description>ENG_GY_PS Register 1</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_gy_ps1</name>
              <description>Because the default cur_sel[1:0] = 2'd0 (secp256k1), so these register initial values are secp256k1 setting values.
Verification mode: Base point y
Signature mode: Base point y
Scalar multiplication mode: Base point y
Basic function mode:</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_gy_ps2</name>
          <addressOffset>0x00000078</addressOffset>
          <size>32</size>
          <description>ENG_GY_PS Register 2</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_gy_ps2</name>
              <description>Because the default cur_sel[1:0] = 2'd0 (secp256k1), so these register initial values are secp256k1 setting values.
Verification mode: Base point y
Signature mode: Base point y
Scalar multiplication mode: Base point y
Basic function mode:</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_gy_ps3</name>
          <addressOffset>0x0000007C</addressOffset>
          <size>32</size>
          <description>ENG_GY_PS Register 3</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_gy_ps3</name>
              <description>Because the default cur_sel[1:0] = 2'd0 (secp256k1), so these register initial values are secp256k1 setting values.
Verification mode: Base point y
Signature mode: Base point y
Scalar multiplication mode: Base point y
Basic function mode:</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_gy_ps4</name>
          <addressOffset>0x00000080</addressOffset>
          <size>32</size>
          <description>ENG_GY_PS Register 4</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_gy_ps4</name>
              <description>Because the default cur_sel[1:0] = 2'd0 (secp256k1), so these register initial values are secp256k1 setting values.
Verification mode: Base point y
Signature mode: Base point y
Scalar multiplication mode: Base point y
Basic function mode:</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_gy_ps5</name>
          <addressOffset>0x00000084</addressOffset>
          <size>32</size>
          <description>ENG_GY_PS Register 5</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_gy_ps5</name>
              <description>Because the default cur_sel[1:0] = 2'd0 (secp256k1), so these register initial values are secp256k1 setting values.
Verification mode: Base point y
Signature mode: Base point y
Scalar multiplication mode: Base point y
Basic function mode:</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_gy_ps6</name>
          <addressOffset>0x00000088</addressOffset>
          <size>32</size>
          <description>ENG_GY_PS Register 6</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_gy_ps6</name>
              <description>Because the default cur_sel[1:0] = 2'd0 (secp256k1), so these register initial values are secp256k1 setting values.
Verification mode: Base point y
Signature mode: Base point y
Scalar multiplication mode: Base point y
Basic function mode:</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_gy_ps7</name>
          <addressOffset>0x0000008C</addressOffset>
          <size>32</size>
          <description>ENG_GY_PS Register 7</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_gy_ps7</name>
              <description>Because the default cur_sel[1:0] = 2'd0 (secp256k1), so these register initial values are secp256k1 setting values.
Verification mode: Base point y
Signature mode: Base point y
Scalar multiplication mode: Base point y
Basic function mode:</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_xo_p0</name>
          <addressOffset>0x00000090</addressOffset>
          <size>32</size>
          <description>ENG_XO_P Register 0</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_xo_p0</name>
              <description>Date register
Verification mode: R_x
Signature mode: Public x
Scalar multiplication mode: Public x
Basic function mode: Coordinate x</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_xo_p1</name>
          <addressOffset>0x00000094</addressOffset>
          <size>32</size>
          <description>ENG_XO_P Register 1</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_xo_p1</name>
              <description>Date register
Verification mode: R_x
Signature mode: Public x
Scalar multiplication mode: Public x
Basic function mode: Coordinate x</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_xo_p2</name>
          <addressOffset>0x00000098</addressOffset>
          <size>32</size>
          <description>ENG_XO_P Register 2</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_xo_p2</name>
              <description>Date register
Verification mode: R_x
Signature mode: Public x
Scalar multiplication mode: Public x
Basic function mode: Coordinate x</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_xo_p3</name>
          <addressOffset>0x0000009C</addressOffset>
          <size>32</size>
          <description>ENG_XO_P Register 3</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_xo_p3</name>
              <description>Date register
Verification mode: R_x
Signature mode: Public x
Scalar multiplication mode: Public x
Basic function mode: Coordinate x</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_xo_p4</name>
          <addressOffset>0x000000A0</addressOffset>
          <size>32</size>
          <description>ENG_XO_P Register 4</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_xo_p4</name>
              <description>Date register
Verification mode: R_x
Signature mode: Public x
Scalar multiplication mode: Public x
Basic function mode: Coordinate x</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_xo_p5</name>
          <addressOffset>0x000000A4</addressOffset>
          <size>32</size>
          <description>ENG_XO_P Register 5</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_xo_p5</name>
              <description>Date register
Verification mode: R_x
Signature mode: Public x
Scalar multiplication mode: Public x
Basic function mode: Coordinate x</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_xo_p6</name>
          <addressOffset>0x000000A8</addressOffset>
          <size>32</size>
          <description>ENG_XO_P Register 6</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_xo_p6</name>
              <description>Date register
Verification mode: R_x
Signature mode: Public x
Scalar multiplication mode: Public x
Basic function mode: Coordinate x</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_xo_p7</name>
          <addressOffset>0x000000AC</addressOffset>
          <size>32</size>
          <description>ENG_XO_P Register 7</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_xo_p7</name>
              <description>Date register
Verification mode: R_x
Signature mode: Public x
Scalar multiplication mode: Public x
Basic function mode: Coordinate x</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_yo_p0</name>
          <addressOffset>0x000000B0</addressOffset>
          <size>32</size>
          <description>ENG_YO_P Register 0</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_yo_p0</name>
              <description>Date register
Verification mode: R_y
Signature mode: Public y
Scalar multiplication mode: Public y
Basic function mode: Coordinate y</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_yo_p1</name>
          <addressOffset>0x000000B4</addressOffset>
          <size>32</size>
          <description>ENG_YO_P Register 1</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_yo_p1</name>
              <description>Date register
Verification mode: R_y
Signature mode: Public y
Scalar multiplication mode: Public y
Basic function mode: Coordinate y</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_yo_p2</name>
          <addressOffset>0x000000B8</addressOffset>
          <size>32</size>
          <description>ENG_YO_P Register 2</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_yo_p2</name>
              <description>Date register
Verification mode: R_y
Signature mode: Public y
Scalar multiplication mode: Public y
Basic function mode: Coordinate y</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_yo_p3</name>
          <addressOffset>0x000000BC</addressOffset>
          <size>32</size>
          <description>ENG_YO_P Register 3</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_yo_p3</name>
              <description>Date register
Verification mode: R_y
Signature mode: Public y
Scalar multiplication mode: Public y
Basic function mode: Coordinate y</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_yo_p4</name>
          <addressOffset>0x000000C0</addressOffset>
          <size>32</size>
          <description>ENG_YO_P Register 4</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_yo_p4</name>
              <description>Date register
Verification mode: R_y
Signature mode: Public y
Scalar multiplication mode: Public y
Basic function mode: Coordinate y</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_yo_p5</name>
          <addressOffset>0x000000C4</addressOffset>
          <size>32</size>
          <description>ENG_YO_P Register 5</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_yo_p5</name>
              <description>Date register
Verification mode: R_y
Signature mode: Public y
Scalar multiplication mode: Public y
Basic function mode: Coordinate y</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_yo_p6</name>
          <addressOffset>0x000000C8</addressOffset>
          <size>32</size>
          <description>ENG_YO_P Register 6</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_yo_p6</name>
              <description>Date register
Verification mode: R_y
Signature mode: Public y
Scalar multiplication mode: Public y
Basic function mode: Coordinate y</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_yo_p7</name>
          <addressOffset>0x000000CC</addressOffset>
          <size>32</size>
          <description>ENG_YO_P Register 7</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_yo_p7</name>
              <description>Date register
Verification mode: R_y
Signature mode: Public y
Scalar multiplication mode: Public y
Basic function mode: Coordinate y</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_sign_r_s0</name>
          <addressOffset>0x000000D0</addressOffset>
          <size>32</size>
          <description>ENG_SIGN_R_S Register 0</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_sign_r_s0</name>
              <description>Date register
Verification mode:
Signature mode: R
Scalar multiplication mode: 
Basic function mode:</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_sign_r_s1</name>
          <addressOffset>0x000000D4</addressOffset>
          <size>32</size>
          <description>ENG_SIGN_R_S Register 1</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_sign_r_s1</name>
              <description>Date register
Verification mode:
Signature mode: R
Scalar multiplication mode: 
Basic function mode:</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_sign_r_s2</name>
          <addressOffset>0x000000D8</addressOffset>
          <size>32</size>
          <description>ENG_SIGN_R_S Register 2</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_sign_r_s2</name>
              <description>Date register
Verification mode:
Signature mode: R
Scalar multiplication mode: 
Basic function mode:</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_sign_r_s3</name>
          <addressOffset>0x000000DC</addressOffset>
          <size>32</size>
          <description>ENG_SIGN_R_S Register 3</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_sign_r_s3</name>
              <description>Date register
Verification mode:
Signature mode: R
Scalar multiplication mode: 
Basic function mode:</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_sign_r_s4</name>
          <addressOffset>0x000000E0</addressOffset>
          <size>32</size>
          <description>ENG_SIGN_R_S Register 4</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_sign_r_s4</name>
              <description>Date register
Verification mode:
Signature mode: R
Scalar multiplication mode: 
Basic function mode:</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_sign_r_s5</name>
          <addressOffset>0x000000E4</addressOffset>
          <size>32</size>
          <description>ENG_SIGN_R_S Register 5</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_sign_r_s5</name>
              <description>Date register
Verification mode:
Signature mode: R
Scalar multiplication mode: 
Basic function mode:</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_sign_r_s6</name>
          <addressOffset>0x000000E8</addressOffset>
          <size>32</size>
          <description>ENG_SIGN_R_S Register 6</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_sign_r_s6</name>
              <description>Date register
Verification mode:
Signature mode: R
Scalar multiplication mode: 
Basic function mode:</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_sign_r_s7</name>
          <addressOffset>0x000000EC</addressOffset>
          <size>32</size>
          <description>ENG_SIGN_R_S Register 7</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_sign_r_s7</name>
              <description>Date register
Verification mode:
Signature mode: R
Scalar multiplication mode: 
Basic function mode:</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_sign_s_s0</name>
          <addressOffset>0x000000F0</addressOffset>
          <size>32</size>
          <description>ENG_SIGN_S_S Register 0</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_sign_s_s0</name>
              <description>Date register
Verification mode:
Signature mode: S
Scalar multiplication mode: 
Basic function mode:</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_sign_s_s1</name>
          <addressOffset>0x000000F4</addressOffset>
          <size>32</size>
          <description>ENG_SIGN_S_S Register 1</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_sign_s_s1</name>
              <description>Date register
Verification mode:
Signature mode: S
Scalar multiplication mode: 
Basic function mode:</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_sign_s_s2</name>
          <addressOffset>0x000000F8</addressOffset>
          <size>32</size>
          <description>ENG_SIGN_S_S Register 2</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_sign_s_s2</name>
              <description>Date register
Verification mode:
Signature mode: S
Scalar multiplication mode: 
Basic function mode:</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_sign_s_s3</name>
          <addressOffset>0x000000FC</addressOffset>
          <size>32</size>
          <description>ENG_SIGN_S_S Register 3</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_sign_s_s3</name>
              <description>Date register
Verification mode:
Signature mode: S
Scalar multiplication mode: 
Basic function mode:</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_sign_s_s4</name>
          <addressOffset>0x00000100</addressOffset>
          <size>32</size>
          <description>ENG_SIGN_S_S Register 4</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_sign_s_s4</name>
              <description>Date register
Verification mode:
Signature mode: S
Scalar multiplication mode: 
Basic function mode:</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_sign_s_s5</name>
          <addressOffset>0x00000104</addressOffset>
          <size>32</size>
          <description>ENG_SIGN_S_S Register 5</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_sign_s_s5</name>
              <description>Date register
Verification mode:
Signature mode: S
Scalar multiplication mode: 
Basic function mode:</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_sign_s_s6</name>
          <addressOffset>0x00000108</addressOffset>
          <size>32</size>
          <description>ENG_SIGN_S_S Register 6</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_sign_s_s6</name>
              <description>Date register
Verification mode:
Signature mode: S
Scalar multiplication mode: 
Basic function mode:</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_sign_s_s7</name>
          <addressOffset>0x0000010C</addressOffset>
          <size>32</size>
          <description>ENG_SIGN_S_S Register 7</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_sign_s_s7</name>
              <description>Date register
Verification mode:
Signature mode: S
Scalar multiplication mode: 
Basic function mode:</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_verify_r_p0</name>
          <addressOffset>0x00000110</addressOffset>
          <size>32</size>
          <description>ENG_VERIFY_R_P Register 0</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_verify_r_p0</name>
              <description>Date register
Verification mode: R
Signature mode: 
Scalar multiplication mode: 
Basic function mode:</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_verify_r_p1</name>
          <addressOffset>0x00000114</addressOffset>
          <size>32</size>
          <description>ENG_VERIFY_R_P Register 1</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_verify_r_p1</name>
              <description>Date register
Verification mode: R
Signature mode: 
Scalar multiplication mode: 
Basic function mode:</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_verify_r_p2</name>
          <addressOffset>0x00000118</addressOffset>
          <size>32</size>
          <description>ENG_VERIFY_R_P Register 2</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_verify_r_p2</name>
              <description>Date register
Verification mode: R
Signature mode: 
Scalar multiplication mode: 
Basic function mode:</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_verify_r_p3</name>
          <addressOffset>0x0000011C</addressOffset>
          <size>32</size>
          <description>ENG_VERIFY_R_P Register 3</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_verify_r_p3</name>
              <description>Date register
Verification mode: R
Signature mode: 
Scalar multiplication mode: 
Basic function mode:</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_verify_r_p4</name>
          <addressOffset>0x00000120</addressOffset>
          <size>32</size>
          <description>ENG_VERIFY_R_P Register 4</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_verify_r_p4</name>
              <description>Date register
Verification mode: R
Signature mode: 
Scalar multiplication mode: 
Basic function mode:</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_verify_r_p5</name>
          <addressOffset>0x00000124</addressOffset>
          <size>32</size>
          <description>ENG_VERIFY_R_P Register 5</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_verify_r_p5</name>
              <description>Date register
Verification mode: R
Signature mode: 
Scalar multiplication mode: 
Basic function mode:</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_verify_r_p6</name>
          <addressOffset>0x00000128</addressOffset>
          <size>32</size>
          <description>ENG_VERIFY_R_P Register 6</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_verify_r_p6</name>
              <description>Date register
Verification mode: R
Signature mode: 
Scalar multiplication mode: 
Basic function mode:</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_verify_r_p7</name>
          <addressOffset>0x0000012C</addressOffset>
          <size>32</size>
          <description>ENG_VERIFY_R_P Register 7</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_verify_r_p7</name>
              <description>Date register
Verification mode: R
Signature mode: 
Scalar multiplication mode: 
Basic function mode:</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_verify_s_p0</name>
          <addressOffset>0x00000130</addressOffset>
          <size>32</size>
          <description>ENG_VERIFY_S_P Register 0</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_verify_s_p0</name>
              <description>Date register
Verification mode: S
Signature mode: 
Scalar multiplication mode: 
Basic function mode:</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_verify_s_p1</name>
          <addressOffset>0x00000134</addressOffset>
          <size>32</size>
          <description>ENG_VERIFY_S_P Register 1</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_verify_s_p1</name>
              <description>Date register
Verification mode: S
Signature mode: 
Scalar multiplication mode: 
Basic function mode:</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_verify_s_p2</name>
          <addressOffset>0x00000138</addressOffset>
          <size>32</size>
          <description>ENG_VERIFY_S_P Register 2</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_verify_s_p2</name>
              <description>Date register
Verification mode: S
Signature mode: 
Scalar multiplication mode: 
Basic function mode:</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_verify_s_p3</name>
          <addressOffset>0x0000013C</addressOffset>
          <size>32</size>
          <description>ENG_VERIFY_S_P Register 3</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_verify_s_p3</name>
              <description>Date register
Verification mode: S
Signature mode: 
Scalar multiplication mode: 
Basic function mode:</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_verify_s_p4</name>
          <addressOffset>0x00000140</addressOffset>
          <size>32</size>
          <description>ENG_VERIFY_S_P Register 4</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_verify_s_p4</name>
              <description>Date register
Verification mode: S
Signature mode: 
Scalar multiplication mode: 
Basic function mode:</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_verify_s_p5</name>
          <addressOffset>0x00000144</addressOffset>
          <size>32</size>
          <description>ENG_VERIFY_S_P Register 5</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_verify_s_p5</name>
              <description>Date register
Verification mode: S
Signature mode: 
Scalar multiplication mode: 
Basic function mode:</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_verify_s_p6</name>
          <addressOffset>0x00000148</addressOffset>
          <size>32</size>
          <description>ENG_VERIFY_S_P Register 6</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_verify_s_p6</name>
              <description>Date register
Verification mode: S
Signature mode: 
Scalar multiplication mode: 
Basic function mode:</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_verify_s_p7</name>
          <addressOffset>0x0000014C</addressOffset>
          <size>32</size>
          <description>ENG_VERIFY_S_P Register 7</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_verify_s_p7</name>
              <description>Date register
Verification mode: S
Signature mode: 
Scalar multiplication mode: 
Basic function mode:</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_h_p0</name>
          <addressOffset>0x00000150</addressOffset>
          <size>32</size>
          <description>ENG_H_P Register 0</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_h_p0</name>
              <description>ECDSA "hash" parameter
Verification mode: Hash
Signature mode: Hash
Scalar multiplication mode: Private key
Basic function mode:</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_h_p1</name>
          <addressOffset>0x00000154</addressOffset>
          <size>32</size>
          <description>ENG_H_P Register 1</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_h_p1</name>
              <description>ECDSA "hash" parameter
Verification mode: Hash
Signature mode: Hash
Scalar multiplication mode: Private key
Basic function mode:</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_h_p2</name>
          <addressOffset>0x00000158</addressOffset>
          <size>32</size>
          <description>ENG_H_P Register 2</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_h_p2</name>
              <description>ECDSA "hash" parameter
Verification mode: Hash
Signature mode: Hash
Scalar multiplication mode: Private key
Basic function mode:</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_h_p3</name>
          <addressOffset>0x0000015C</addressOffset>
          <size>32</size>
          <description>ENG_H_P Register 3</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_h_p3</name>
              <description>ECDSA "hash" parameter
Verification mode: Hash
Signature mode: Hash
Scalar multiplication mode: Private key
Basic function mode:</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_h_p4</name>
          <addressOffset>0x00000160</addressOffset>
          <size>32</size>
          <description>ENG_H_P Register 4</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_h_p4</name>
              <description>ECDSA "hash" parameter
Verification mode: Hash
Signature mode: Hash
Scalar multiplication mode: Private key
Basic function mode:</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_h_p5</name>
          <addressOffset>0x00000164</addressOffset>
          <size>32</size>
          <description>ENG_H_P Register 5</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_h_p5</name>
              <description>ECDSA "hash" parameter
Verification mode: Hash
Signature mode: Hash
Scalar multiplication mode: Private key
Basic function mode:</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_h_p6</name>
          <addressOffset>0x00000168</addressOffset>
          <size>32</size>
          <description>ENG_H_P Register 6</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_h_p6</name>
              <description>ECDSA "hash" parameter
Verification mode: Hash
Signature mode: Hash
Scalar multiplication mode: Private key
Basic function mode:</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>eng_h_p7</name>
          <addressOffset>0x0000016C</addressOffset>
          <size>32</size>
          <description>ENG_H_P Register 7</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_h_p7</name>
              <description>ECDSA "hash" parameter
Verification mode: Hash
Signature mode: Hash
Scalar multiplication mode: Private key
Basic function mode:</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>cor_a_p0</name>
          <addressOffset>0x00000170</addressOffset>
          <size>32</size>
          <description>COR_A_P Register 0</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>cor_a_p0</name>
              <description>ECDSA "a" parameter
Verification mode: cor_a
Signature mode: cor_a
Scalar multiplication mode: cor_a
Basic function mode: cor_a</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>cor_a_p1</name>
          <addressOffset>0x00000174</addressOffset>
          <size>32</size>
          <description>COR_A_P Register 1</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>cor_a_p1</name>
              <description>ECDSA "a" parameter
Verification mode: cor_a
Signature mode: cor_a
Scalar multiplication mode: cor_a
Basic function mode: cor_a</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>cor_a_p2</name>
          <addressOffset>0x00000178</addressOffset>
          <size>32</size>
          <description>COR_A_P Register 2</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>cor_a_p2</name>
              <description>ECDSA "a" parameter
Verification mode: cor_a
Signature mode: cor_a
Scalar multiplication mode: cor_a
Basic function mode: cor_a</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>cor_a_p3</name>
          <addressOffset>0x0000017C</addressOffset>
          <size>32</size>
          <description>COR_A_P Register 3</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>cor_a_p3</name>
              <description>ECDSA "a" parameter
Verification mode: cor_a
Signature mode: cor_a
Scalar multiplication mode: cor_a
Basic function mode: cor_a</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>cor_a_p4</name>
          <addressOffset>0x00000180</addressOffset>
          <size>32</size>
          <description>COR_A_P Register 4</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>cor_a_p4</name>
              <description>ECDSA "a" parameter
Verification mode: cor_a
Signature mode: cor_a
Scalar multiplication mode: cor_a
Basic function mode: cor_a</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>cor_a_p5</name>
          <addressOffset>0x00000184</addressOffset>
          <size>32</size>
          <description>COR_A_P Register 5</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>cor_a_p5</name>
              <description>ECDSA "a" parameter
Verification mode: cor_a
Signature mode: cor_a
Scalar multiplication mode: cor_a
Basic function mode: cor_a</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>cor_a_p6</name>
          <addressOffset>0x00000188</addressOffset>
          <size>32</size>
          <description>COR_A_P Register 6</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>cor_a_p6</name>
              <description>ECDSA "a" parameter
Verification mode: cor_a
Signature mode: cor_a
Scalar multiplication mode: cor_a
Basic function mode: cor_a</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>cor_a_p7</name>
          <addressOffset>0x0000018C</addressOffset>
          <size>32</size>
          <description>COR_A_P Register 7</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>cor_a_p7</name>
              <description>ECDSA "a" parameter
Verification mode: cor_a
Signature mode: cor_a
Scalar multiplication mode: cor_a
Basic function mode: cor_a</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>prime_p0</name>
          <addressOffset>0x00000190</addressOffset>
          <size>32</size>
          <description>Prime_P Register 0</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>prime_p0</name>
              <description>Because the default cur_sel[1:0] = 2'd0 (secp256k1), so these registers' initial values are secp256k1 setting values.
ECDSA "prime" parameter
Verification mode: Prime
Signature mode: Prime
Scalar multiplication mode: Prime
Basic function mode: Prime</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>prime_p1</name>
          <addressOffset>0x00000194</addressOffset>
          <size>32</size>
          <description>Prime_P Register 1</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>prime_p1</name>
              <description>Because the default cur_sel[1:0] = 2'd0 (secp256k1), so these registers' initial values are secp256k1 setting values.
ECDSA "prime" parameter
Verification mode: Prime
Signature mode: Prime
Scalar multiplication mode: Prime
Basic function mode: Prime</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>prime_p2</name>
          <addressOffset>0x00000198</addressOffset>
          <size>32</size>
          <description>Prime_P Register 2</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>prime_p2</name>
              <description>Because the default cur_sel[1:0] = 2'd0 (secp256k1), so these registers' initial values are secp256k1 setting values.
ECDSA "prime" parameter
Verification mode: Prime
Signature mode: Prime
Scalar multiplication mode: Prime
Basic function mode: Prime</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>prime_p3</name>
          <addressOffset>0x0000019C</addressOffset>
          <size>32</size>
          <description>Prime_P Register 3</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>prime_p3</name>
              <description>Because the default cur_sel[1:0] = 2'd0 (secp256k1), so these registers' initial values are secp256k1 setting values.
ECDSA "prime" parameter
Verification mode: Prime
Signature mode: Prime
Scalar multiplication mode: Prime
Basic function mode: Prime</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>prime_p4</name>
          <addressOffset>0x000001A0</addressOffset>
          <size>32</size>
          <description>Prime_P Register 4</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>prime_p4</name>
              <description>Because the default cur_sel[1:0] = 2'd0 (secp256k1), so these registers' initial values are secp256k1 setting values.
ECDSA "prime" parameter
Verification mode: Prime
Signature mode: Prime
Scalar multiplication mode: Prime
Basic function mode: Prime</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>prime_p5</name>
          <addressOffset>0x000001A4</addressOffset>
          <size>32</size>
          <description>Prime_P Register 5</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>prime_p5</name>
              <description>Because the default cur_sel[1:0] = 2'd0 (secp256k1), so these registers' initial values are secp256k1 setting values.
ECDSA "prime" parameter
Verification mode: Prime
Signature mode: Prime
Scalar multiplication mode: Prime
Basic function mode: Prime</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>prime_p6</name>
          <addressOffset>0x000001A8</addressOffset>
          <size>32</size>
          <description>Prime_P Register 6</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>prime_p6</name>
              <description>Because the default cur_sel[1:0] = 2'd0 (secp256k1), so these registers' initial values are secp256k1 setting values.
ECDSA "prime" parameter
Verification mode: Prime
Signature mode: Prime
Scalar multiplication mode: Prime
Basic function mode: Prime</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>prime_p7</name>
          <addressOffset>0x000001AC</addressOffset>
          <size>32</size>
          <description>Prime_P Register 7</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>prime_p7</name>
              <description>Because the default cur_sel[1:0] = 2'd0 (secp256k1), so these registers' initial values are secp256k1 setting values.
ECDSA "prime" parameter
Verification mode: Prime
Signature mode: Prime
Scalar multiplication mode: Prime
Basic function mode: Prime</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>order_n_p0</name>
          <addressOffset>0x000001B0</addressOffset>
          <size>32</size>
          <description>Order_N_P Register 0</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>order_n_p0</name>
              <description>Because the default cur_sel[1:0] = 2'd0 (secp256k1), so these registers' initial values are secp256k1 setting values.
ECDSA "prime" parameter
Verification mode: order_n
Signature mode: order_n
Scalar multiplication mode: order_n
Basic function mode: order_n</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>order_n_p1</name>
          <addressOffset>0x000001B4</addressOffset>
          <size>32</size>
          <description>Order_N_P Register 1</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>order_n_p1</name>
              <description>Because the default cur_sel[1:0] = 2'd0 (secp256k1), so these registers' initial values are secp256k1 setting values.
ECDSA "prime" parameter
Verification mode: order_n
Signature mode: order_n
Scalar multiplication mode: order_n
Basic function mode: order_n</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>order_n_p2</name>
          <addressOffset>0x000001B8</addressOffset>
          <size>32</size>
          <description>Order_N_P Register 2</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>order_n_p2</name>
              <description>Because the default cur_sel[1:0] = 2'd0 (secp256k1), so these registers' initial values are secp256k1 setting values.
ECDSA "prime" parameter
Verification mode: order_n
Signature mode: order_n
Scalar multiplication mode: order_n
Basic function mode: order_n</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>order_n_p3</name>
          <addressOffset>0x000001BC</addressOffset>
          <size>32</size>
          <description>Order_N_P Register 3</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>order_n_p3</name>
              <description>Because the default cur_sel[1:0] = 2'd0 (secp256k1), so these registers' initial values are secp256k1 setting values.
ECDSA "prime" parameter
Verification mode: order_n
Signature mode: order_n
Scalar multiplication mode: order_n
Basic function mode: order_n</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>order_n_p4</name>
          <addressOffset>0x000001C0</addressOffset>
          <size>32</size>
          <description>Order_N_P Register 4</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>order_n_p4</name>
              <description>Because the default cur_sel[1:0] = 2'd0 (secp256k1), so these registers' initial values are secp256k1 setting values.
ECDSA "prime" parameter
Verification mode: order_n
Signature mode: order_n
Scalar multiplication mode: order_n
Basic function mode: order_n</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>order_n_p5</name>
          <addressOffset>0x000001C4</addressOffset>
          <size>32</size>
          <description>Order_N_P Register 5</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>order_n_p5</name>
              <description>Because the default cur_sel[1:0] = 2'd0 (secp256k1), so these registers' initial values are secp256k1 setting values.
ECDSA "prime" parameter
Verification mode: order_n
Signature mode: order_n
Scalar multiplication mode: order_n
Basic function mode: order_n</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>order_n_p6</name>
          <addressOffset>0x000001C8</addressOffset>
          <size>32</size>
          <description>Order_N_P Register 6</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>order_n_p6</name>
              <description>Because the default cur_sel[1:0] = 2'd0 (secp256k1), so these registers' initial values are secp256k1 setting values.
ECDSA "prime" parameter
Verification mode: order_n
Signature mode: order_n
Scalar multiplication mode: order_n
Basic function mode: order_n</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>order_n_p7</name>
          <addressOffset>0x000001CC</addressOffset>
          <size>32</size>
          <description>Order_N_P Register 7</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>order_n_p7</name>
              <description>Because the default cur_sel[1:0] = 2'd0 (secp256k1), so these registers' initial values are secp256k1 setting values.
ECDSA "prime" parameter
Verification mode: order_n
Signature mode: order_n
Scalar multiplication mode: order_n
Basic function mode: order_n</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ecdsa_dbg_o</name>
          <addressOffset>0x00000200</addressOffset>
          <size>32</size>
          <description>ECDSA Debug Output Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ecdsa_dbg_o</name>
              <description>Debug singnals</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>RSIP</name>
      <baseAddress>0x40100000</baseAddress>
      <size>0x00000160</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00000160</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>SR</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description>Status Register</description>
          <resetValue>0x00000001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>lock_status</name>
              <description>Indicates whether the setting is locked. 
If it is locked, only clr_intr and Maintenance registers can be set.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>remap_addr_error</name>
              <description>Indicates the address after adding offset size cross 256MB boundaries</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>remap_region_error</name>
              <description>Indicates the read address hits multiple remapping region.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>intr_err_init</name>
              <description>Indicates the transaction was received before the key initialization is completed.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>intr_err_apb</name>
              <description>Indicates whether the setting configuration failed.
When a transaction is in progress, all settings except clear interruption are invalid.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>intr_err_resp</name>
              <description>Indicates the error response is received from slave.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>intr_err_tag</name>
              <description>Indicates a GCM tag mismatch error occurred.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>key_init_done</name>
              <description>Indicates whether the initialization of the key is completed.
Only used in GCM and MIX mode.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>idle</name>
              <description>Indicates whether there is any outstanding transaction.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CIR</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description>Component Identification Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>line_size</name>
              <description>Cache line size
0: 16B = 1 AES block
1: 32B = 2 AES blocks
2: 64B = 4 AES blocks
3: 128B = 8 AES blocks
Indicates how many 128-bit blocks are used to calculate the tag
cache line size (byte) = 16 * 2BLOCK_SIZE</description>
              <bitRange>[14:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>key_source</name>
              <description>Indicates the key source
0: from dedicated key port (only supporting this configuration currently)
1: from APB register</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>support_gcm</name>
              <description>Indicates whether GCM mode is supported.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>support_mix</name>
              <description>Indicates whether MIX mode is supported.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>support_ctr</name>
              <description>Indicates whether CTR mode is supported.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>iv_number</name>
              <description>Number of supported IVs registers</description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>region_number</name>
              <description>Number of supported decryption regions</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EALR</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description>Error Address Log Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>error_address</name>
              <description>Recorded address when GCM Tag mismatch error or receiving an error response.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ICR</name>
          <addressOffset>0x00000010</addressOffset>
          <size>32</size>
          <description>Interrupt Clear Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>clr_intr</name>
              <description>Interrupt clear
It has to write 1'b1 to this register every time when the error exception occurs.</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CR</name>
          <addressOffset>0x00000014</addressOffset>
          <size>32</size>
          <description>Control Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>icg_ctrl_4</name>
              <description>Disable key-reg auto clock gating</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>icg_ctrl_3</name>
              <description>Disable apb-ctrl auto clock gating</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>icg_ctrl_2</name>
              <description>Disable aes-engine auto clock gating</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>icg_ctrl_1</name>
              <description>Disable fetch-unit auto clock gating</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>icg_ctrl_0</name>
              <description>Disable line-buffer auto clock gating</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>aes_en</name>
              <description>Determine whether to enable the AES engine
0: Disable decryption engine (expect remapping function)
1: Enable decryption engine and line buffer</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>key_size</name>
              <description>Determine the size of KEY
0: 128 bits
1: 192 bits
2: 256 bits</description>
              <bitRange>[6:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>axi_word_swap</name>
              <description>Determine the endian of ciphertext in slave memory.
Setting to 1 can swap word order.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>axi_byte_swap</name>
              <description>Determine the endian of ciphertext in slave memory.
Setting to 1 can swap byte order.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tag_size</name>
              <description>The size of the tag will affect the length of each tag command.
0: 32 bits
1: 64 bits
2: 128bits</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MOR</name>
          <addressOffset>0x00000018</addressOffset>
          <size>32</size>
          <description>Maintenance Operation Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>clean_cache_line</name>
              <description>Manually clear the line buffer. Write 1 to clear all after flash data update.</description>
              <bitRange>[2:2]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>dec_key_init</name>
              <description>Only used in MIX mode.
Whenever the key is changed, write 1 to this bit to initialize the decryption key.
When keys are update by external port, sec engine will trigger this bit automatically.
The status of completion can be determined by reading bit 1 of the status register.</description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>gcm_key_init</name>
              <description>Only used in GCM mode.
Whenever the key is changed, write 1 to initialize the GMAC key.
When keys are update by external port, sec engine will trigger this bit automatically.
The status of completion can be determined by reading bit 1 of the status register.</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LR</name>
          <addressOffset>0x0000001C</addressOffset>
          <size>32</size>
          <description>Lock Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>lock</name>
              <description>When this field is set to 0xDC, all registers except clr_intr and Maintenance are not allowed to be written.</description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TBAR</name>
          <addressOffset>0x00000020</addressOffset>
          <size>32</size>
          <description>GCM Tag Base Address Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>tag_base_0</name>
              <description>Tag base address in flash memory</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GDR</name>
          <addressOffset>0x00000024</addressOffset>
          <size>32</size>
          <description>Gen Date Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>year</name>
              <description>Year of code generation</description>
              <bitRange>[31:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>date</name>
              <description>Date of code generation</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>VR</name>
          <addressOffset>0x00000028</addressOffset>
          <size>32</size>
          <description>Version Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>version</name>
              <description>Version of code generation</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>R0BAR</name>
          <addressOffset>0x00000040</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>region_0_base</name>
              <description>Region 0 base address register</description>
              <bitRange>[31:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>region_0_iv_num</name>
              <description>IV used in region 0
Apply which IV reigster to this region
Number corresponds to IV register</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>R0EAR</name>
          <addressOffset>0x00000044</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>region_0_end</name>
              <description>Region 0 end address register</description>
              <bitRange>[31:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>region_0_mode</name>
              <description>Mode used in region 0
2'b00: GCM mode
2'b01: CTR mode
2'b10: MIX mode
2'b11: Reserved</description>
              <bitRange>[2:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>region_0_enable</name>
              <description>Enable region 0 setting</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>R1BAR</name>
          <addressOffset>0x00000048</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>region_1_base</name>
              <description>Region 1 base address register</description>
              <bitRange>[31:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>region_1_iv_num</name>
              <description>IV used in region 1
Apply which IV reigster to this region
Number corresponds to IV register</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>R1EAR</name>
          <addressOffset>0x0000004C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>region_1_end</name>
              <description>Region 1 end address register</description>
              <bitRange>[31:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>region_1_mode</name>
              <description>Mode used in region 1
2'b00: GCM mode
2'b01: CTR mode
2'b10: MIX mode
2'b11: Reserved</description>
              <bitRange>[2:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>region_1_enable</name>
              <description>Enable region 1 setting</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>R2BAR</name>
          <addressOffset>0x00000050</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>region_2_base</name>
              <description>Region 2 base address register</description>
              <bitRange>[31:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>region_2_iv_num</name>
              <description>IV used in region 2
Apply which IV reigster to this region
Number corresponds to IV register</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>R2EAR</name>
          <addressOffset>0x00000054</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>region_2_end</name>
              <description>Region 2 end address register</description>
              <bitRange>[31:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>region_2_mode</name>
              <description>Mode used in region 2
2'b00: GCM mode
2'b01: CTR mode
2'b10: MIX mode
2'b11: Reserved</description>
              <bitRange>[2:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>region_2_enable</name>
              <description>Enable region 2 setting</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>R3BAR</name>
          <addressOffset>0x00000058</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>region_3_base</name>
              <description>Region 3 base address register</description>
              <bitRange>[31:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>region_3_iv_num</name>
              <description>IV used in region 3
Apply which IV reigster to this region
Number corresponds to IV register</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>R3EAR</name>
          <addressOffset>0x0000005C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>region_3_end</name>
              <description>Region 3 end address register</description>
              <bitRange>[31:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>region_3_mode</name>
              <description>Mode used in region 3
2'b00: GCM mode
2'b01: CTR mode
2'b10: MIX mode
2'b11: Reserved</description>
              <bitRange>[2:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>region_3_enable</name>
              <description>Enable region 3 setting</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>R4BAR</name>
          <addressOffset>0x00000060</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>region_4_base</name>
              <description>Region 4 base address register</description>
              <bitRange>[31:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>region_4_iv_num</name>
              <description>IV used in region 4
Apply which IV reigster to this region
Number corresponds to IV register</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>R4EAR</name>
          <addressOffset>0x00000064</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>region_4_end</name>
              <description>Region 4 end address register</description>
              <bitRange>[31:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>region_4_mode</name>
              <description>Mode used in region 4
2'b00: GCM mode
2'b01: CTR mode
2'b10: MIX mode
2'b11: Reserved</description>
              <bitRange>[2:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>region_4_enable</name>
              <description>Enable region 4 setting</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>R5BAR</name>
          <addressOffset>0x00000068</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>region_5_base</name>
              <description>Region 5 base address register</description>
              <bitRange>[31:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>region_5_iv_num</name>
              <description>IV used in region 5
Apply which IV reigster to this region
Number corresponds to IV register</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>R5EAR</name>
          <addressOffset>0x0000006C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>region_5_end</name>
              <description>Region 5 end address register</description>
              <bitRange>[31:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>region_5_mode</name>
              <description>Mode used in region 5
2'b00: GCM mode
2'b01: CTR mode
2'b10: MIX mode
2'b11: Reserved</description>
              <bitRange>[2:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>region_5_enable</name>
              <description>Enable region 5 setting</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>R6BAR</name>
          <addressOffset>0x00000070</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>region_6_base</name>
              <description>Region 6 base address register</description>
              <bitRange>[31:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>region_6_iv_num</name>
              <description>IV used in region 6
Apply which IV reigster to this region
Number corresponds to IV register</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>R6EAR</name>
          <addressOffset>0x00000074</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>region_6_end</name>
              <description>Region 6 end address register</description>
              <bitRange>[31:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>region_6_mode</name>
              <description>Mode used in region 6
2'b00: GCM mode
2'b01: CTR mode
2'b10: MIX mode
2'b11: Reserved</description>
              <bitRange>[2:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>region_6_enable</name>
              <description>Enable region 6 setting</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>R7BAR</name>
          <addressOffset>0x00000078</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>region_7_base</name>
              <description>Region 7 base address register</description>
              <bitRange>[31:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>region_7_iv_num</name>
              <description>IV used in region 7
Apply which IV reigster to this region
Number corresponds to IV register</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>R7EAR</name>
          <addressOffset>0x0000007C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>region_7_end</name>
              <description>Region 7 end address register</description>
              <bitRange>[31:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>region_7_mode</name>
              <description>Mode used in region 7
2'b00: GCM mode
2'b01: CTR mode
2'b10: MIX mode
2'b11: Reserved</description>
              <bitRange>[2:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>region_7_enable</name>
              <description>Enable region 7 setting</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IV0L</name>
          <addressOffset>0x00000080</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>iv_0_high</name>
              <description>Fixed field of IV value
iv_0[127:96]
IV = iv_0_high32 || iv_0_low32 || (address &gt;&gt; (4+(LINE_SIZE/32)-1))32 || (address[4+(LINE_SIZE/32)-2:0] + 2)32</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IV0H</name>
          <addressOffset>0x00000084</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>iv_0_low</name>
              <description>Fixed field of IV value
iv_0[95:64]
IV = iv_0_high32 || iv_0_low32 || (address &gt;&gt; (4+(LINE_SIZE/32)-1))32 || (address[4+(LINE_SIZE/32)-2:0] + 2)32</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IV1L</name>
          <addressOffset>0x00000088</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>iv_1_high</name>
              <description>Fixed field of IV value
iv_1[127:96]
IV = iv_1_high32 || iv_1_low32 || (address &gt;&gt; (4+(LINE_SIZE/32)-1))32 || (address[4+(LINE_SIZE/32)-2:0] + 2)32</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IV1H</name>
          <addressOffset>0x0000008C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>iv_1_low</name>
              <description>Fixed field of IV value
iv_1[95:64]
IV = iv_1_high32 || iv_1_low32 || (address &gt;&gt; (4+(LINE_SIZE/32)-1))32 || (address[4+(LINE_SIZE/32)-2:0] + 2)32</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IV2L</name>
          <addressOffset>0x00000090</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>iv_2_high</name>
              <description>Fixed field of IV value
iv_2[127:96]
IV = iv_2_high32 || iv_2_low32 || (address &gt;&gt; (4+(LINE_SIZE/32)-1))32 || (address[4+(LINE_SIZE/32)-2:0] + 2)32</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IV2H</name>
          <addressOffset>0x00000094</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>iv_2_low</name>
              <description>Fixed field of IV value
iv_2[95:64]
IV = iv_2_high32 || iv_2_low32 || (address &gt;&gt; (4+(LINE_SIZE/32)-1))32 || (address[4+(LINE_SIZE/32)-2:0] + 2)32</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IV3L</name>
          <addressOffset>0x00000098</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>iv_3_high</name>
              <description>Fixed field of IV value
iv_3[127:96]
IV = iv_3_high32 || iv_3_low32 || (address &gt;&gt; (4+(LINE_SIZE/32)-1))32 || (address[4+(LINE_SIZE/32)-2:0] + 2)32</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IV3H</name>
          <addressOffset>0x0000009C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>iv_3_low</name>
              <description>Fixed field of IV value
iv_3[95:64]
IV = iv_3_high32 || iv_3_low32 || (address &gt;&gt; (4+(LINE_SIZE/32)-1))32 || (address[4+(LINE_SIZE/32)-2:0] + 2)32</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IV4L</name>
          <addressOffset>0x000000A0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>iv_4_high</name>
              <description>Fixed field of IV value
iv_4[127:96]
IV = iv_4_high32 || iv_4_low32 || (address &gt;&gt; (4+(LINE_SIZE/32)-1))32 || (address[4+(LINE_SIZE/32)-2:0] + 2)32</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IV4H</name>
          <addressOffset>0x000000A4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>iv_4_low</name>
              <description>Fixed field of IV value
iv_4[95:64]
IV = iv_4_high32 || iv_4_low32 || (address &gt;&gt; (4+(LINE_SIZE/32)-1))32 || (address[4+(LINE_SIZE/32)-2:0] + 2)32</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IV5L</name>
          <addressOffset>0x000000A8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>iv_5_high</name>
              <description>Fixed field of IV value
iv_5[127:96]
IV = iv_5_high32 || iv_5_low32 || (address &gt;&gt; (4+(LINE_SIZE/32)-1))32 || (address[4+(LINE_SIZE/32)-2:0] + 2)32</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IV5H</name>
          <addressOffset>0x000000AC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>iv_5_low</name>
              <description>Fixed field of IV value
iv_5[95:64]
IV = iv_5_high32 || iv_5_low32 || (address &gt;&gt; (4+(LINE_SIZE/32)-1))32 || (address[4+(LINE_SIZE/32)-2:0] + 2)32</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IV6L</name>
          <addressOffset>0x000000B0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>iv_6_high</name>
              <description>Fixed field of IV value
iv_6[127:96]
IV = iv_6_high32 || iv_6_low32 || (address &gt;&gt; (4+(LINE_SIZE/32)-1))32 || (address[4+(LINE_SIZE/32)-2:0] + 2)32</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IV6H</name>
          <addressOffset>0x000000B4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>iv_6_low</name>
              <description>Fixed field of IV value
iv_6[95:64]
IV = iv_6_high32 || iv_6_low32 || (address &gt;&gt; (4+(LINE_SIZE/32)-1))32 || (address[4+(LINE_SIZE/32)-2:0] + 2)32</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IV7L</name>
          <addressOffset>0x000000B8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>iv_7_high</name>
              <description>Fixed field of IV value
iv_7[127:96]
IV = iv_7_high32 || iv_7_low32 || (address &gt;&gt; (4+(LINE_SIZE/32)-1))32 || (address[4+(LINE_SIZE/32)-2:0] + 2)32</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IV7H</name>
          <addressOffset>0x000000BC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>iv_7_low</name>
              <description>Fixed field of IV value
iv_7[95:64]
IV = iv_7_high32 || iv_7_low32 || (address &gt;&gt; (4+(LINE_SIZE/32)-1))32 || (address[4+(LINE_SIZE/32)-2:0] + 2)32</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REMAP0BAR</name>
          <addressOffset>0x00000100</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>remap_base_0_addr</name>
              <description>Remap region 0 base address [27:5]
Region_Base_Addr = {flash_base[31:28], remap_base_0_addr, 5'b0}
The region address is 32B aligned, and not cross 256KB.</description>
              <bitRange>[31:9]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REMAP0EAR</name>
          <addressOffset>0x00000104</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>remap_end_0_offset</name>
              <description>Remap region 0 end address [27:5]
Region_Base_Addr = {flash_base[31:28], remap_end_0_addr, 5'b0}
The region address is 32B aligned, and not cross 256KB.</description>
              <bitRange>[31:9]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REMAP0OR</name>
          <addressOffset>0x00000108</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>remap_0_offset</name>
              <description>Remap region 0 offset [27:5]
Region_Offset = {4'b0,remap_0_offset, 5'b0}
The output address is "Access address - Region_Base_Addr + Region_Offset".</description>
              <bitRange>[31:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>remap_0_enable</name>
              <description>Remap region 0 enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REMAP1BAR</name>
          <addressOffset>0x0000010C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>remap_base_1_addr</name>
              <description>Remap region 1 base address [27:5]
Region_Base_Addr = {flash_base[31:28], remap_base_1_addr, 5'b0}
The region address is 32B aligned, and not cross 256KB.</description>
              <bitRange>[31:9]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REMAP1EAR</name>
          <addressOffset>0x00000110</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>remap_end_1_offset</name>
              <description>Remap region 1 end address [27:5]
Region_Base_Addr = {flash_base[31:28], remap_end_1_addr, 5'b0}
The region address is 32B aligned, and not cross 256KB.</description>
              <bitRange>[31:9]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REMAP1OR</name>
          <addressOffset>0x00000114</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>remap_1_offset</name>
              <description>Remap region 1 offset [27:5]
Region_Offset = {4'b0,remap_1_offset, 5'b0}
The output address is "Access address - Region_Base_Addr + Region_Offset".</description>
              <bitRange>[31:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>remap_1_enable</name>
              <description>Remap region 1 enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REMAP2BAR</name>
          <addressOffset>0x00000118</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>remap_base_2_addr</name>
              <description>Remap region 2 base address [27:5]
Region_Base_Addr = {flash_base[31:28], remap_base_2_addr, 5'b0}
The region address is 32B aligned, and not cross 256KB.</description>
              <bitRange>[31:9]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REMAP2EAR</name>
          <addressOffset>0x0000011C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>remap_end_2_offset</name>
              <description>Remap region 2 end address [27:5]
Region_Base_Addr = {flash_base[31:28], remap_end_2_addr, 5'b0}
The region address is 32B aligned, and not cross 256KB.</description>
              <bitRange>[31:9]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REMAP2OR</name>
          <addressOffset>0x00000120</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>remap_2_offset</name>
              <description>Remap region 2 offset [27:5]
Region_Offset = {4'b0,remap_2_offset, 5'b0}
The output address is "Access address - Region_Base_Addr + Region_Offset".</description>
              <bitRange>[31:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>remap_2_enable</name>
              <description>Remap region 2 enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REMAP3BAR</name>
          <addressOffset>0x00000124</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>remap_base_3_addr</name>
              <description>Remap region 3 base address [27:5]
Region_Base_Addr = {flash_base[31:28], remap_base_3_addr, 5'b0}
The region address is 32B aligned, and not cross 256KB.</description>
              <bitRange>[31:9]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REMAP3EAR</name>
          <addressOffset>0x00000128</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>remap_end_3_offset</name>
              <description>Remap region 3 end address [27:5]
Region_Base_Addr = {flash_base[31:28], remap_end_3_addr, 5'b0}
The region address is 32B aligned, and not cross 256KB.</description>
              <bitRange>[31:9]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REMAP3OR</name>
          <addressOffset>0x0000012C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>remap_3_offset</name>
              <description>Remap region 3 offset [27:5]
Region_Offset = {4'b0,remap_3_offset, 5'b0}
The output address is "Access address - Region_Base_Addr + Region_Offset".</description>
              <bitRange>[31:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>remap_3_enable</name>
              <description>Remap region 3 enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REMAP4BAR</name>
          <addressOffset>0x00000130</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>remap_base_4_addr</name>
              <description>Remap region 4 base address [27:5]
Region_Base_Addr = {flash_base[31:28], remap_base_4_addr, 5'b0}
The region address is 32B aligned, and not cross 256KB.</description>
              <bitRange>[31:9]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REMAP4EAR</name>
          <addressOffset>0x00000134</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>remap_end_4_offset</name>
              <description>Remap region 4 end address [27:5]
Region_Base_Addr = {flash_base[31:28], remap_end_4_addr, 5'b0}
The region address is 32B aligned, and not cross 256KB.</description>
              <bitRange>[31:9]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REMAP4OR</name>
          <addressOffset>0x00000138</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>remap_4_offset</name>
              <description>Remap region 4 offset [27:5]
Region_Offset = {4'b0,remap_4_offset, 5'b0}
The output address is "Access address - Region_Base_Addr + Region_Offset".</description>
              <bitRange>[31:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>remap_4_enable</name>
              <description>Remap region 4 enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REMAP5BAR</name>
          <addressOffset>0x0000013C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>remap_base_5_addr</name>
              <description>Remap region 5 base address [27:5]
Region_Base_Addr = {flash_base[31:28], remap_base_5_addr, 5'b0}
The region address is 32B aligned, and not cross 256KB.</description>
              <bitRange>[31:9]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REMAP5EAR</name>
          <addressOffset>0x00000140</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>remap_end_5_offset</name>
              <description>Remap region 5 end address [27:5]
Region_Base_Addr = {flash_base[31:28], remap_end_5_addr, 5'b0}
The region address is 32B aligned, and not cross 256KB.</description>
              <bitRange>[31:9]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REMAP5OR</name>
          <addressOffset>0x00000144</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>remap_5_offset</name>
              <description>Remap region 5 offset [27:5]
Region_Offset = {4'b0,remap_5_offset, 5'b0}
The output address is "Access address - Region_Base_Addr + Region_Offset".</description>
              <bitRange>[31:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>remap_5_enable</name>
              <description>Remap region 5 enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REMAP6BAR</name>
          <addressOffset>0x00000148</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>remap_base_6_addr</name>
              <description>Remap region 6 base address [27:5]
Region_Base_Addr = {flash_base[31:28], remap_base_6_addr, 5'b0}
The region address is 32B aligned, and not cross 256KB.</description>
              <bitRange>[31:9]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REMAP6EAR</name>
          <addressOffset>0x0000014C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>remap_end_6_offset</name>
              <description>Remap region 6 end address [27:5]
Region_Base_Addr = {flash_base[31:28], remap_end_6_addr, 5'b0}
The region address is 32B aligned, and not cross 256KB.</description>
              <bitRange>[31:9]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REMAP6OR</name>
          <addressOffset>0x00000150</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>remap_6_offset</name>
              <description>Remap region 6 offset [27:5]
Region_Offset = {4'b0,remap_6_offset, 5'b0}
The output address is "Access address - Region_Base_Addr + Region_Offset".</description>
              <bitRange>[31:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>remap_6_enable</name>
              <description>Remap region 6 enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REMAP7BAR</name>
          <addressOffset>0x00000154</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>remap_base_7_addr</name>
              <description>Remap region 7 base address [27:5]
Region_Base_Addr = {flash_base[31:28], remap_base_7_addr, 5'b0}
The region address is 32B aligned, and not cross 256KB.</description>
              <bitRange>[31:9]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REMAP7EAR</name>
          <addressOffset>0x00000158</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>remap_end_7_offset</name>
              <description>Remap region 7 end address [27:5]
Region_Base_Addr = {flash_base[31:28], remap_end_7_addr, 5'b0}
The region address is 32B aligned, and not cross 256KB.</description>
              <bitRange>[31:9]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REMAP7OR</name>
          <addressOffset>0x0000015C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>remap_7_offset</name>
              <description>Remap region 7 offset [27:5]
Region_Offset = {4'b0,remap_7_offset, 5'b0}
The output address is "Access address - Region_Base_Addr + Region_Offset".</description>
              <bitRange>[31:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>remap_7_enable</name>
              <description>Remap region 7 enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>audio</name>
      <baseAddress>0x41017000</baseAddress>
      <size>0x00000908</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00000908</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>audio_control_0</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description>Audio Control Register 0</description>
          <resetValue>0x00000020</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>audio_ip_en</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>daad_lpbk_en</name>
              <description>Digital DAC -&gt; ADC loop back control
1'b0: Disable
1'b1: Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adda_lpbk_en</name>
              <description>Digital ADC -&gt; DAC loop back control
1'b0: Disable
1'b1: Enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>audio_control_0_dummy</name>
              <description>Dummy</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sys_clk_rate_sel</name>
              <description>audio_sys clock selection</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rws_seq_en</name>
              <description>1'b0: Disable
1'b1: Enable</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>audio_dbg_sel</name>
              <description>Debug probe selection</description>
              <bitRange>[17:13]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>audio_control_1</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description>Audio Control Register 1</description>
          <resetValue>0x00001701</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>sel_bb_ck_depop</name>
              <description>Select BB clock depop</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bb_ck_depop_en</name>
              <description>BB clcok depop enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ckx_micbias_en</name>
              <description>ckx_micbias enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pdm_clk_double</name>
              <description>PDM clock double</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pdm_clk_sel</name>
              <description>PDM clock selection
2'b0: 5MHz
2'b1: 2.5MHz
2'b2: 6.67MHz</description>
              <bitRange>[6:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pdm_ch_swap</name>
              <description>pdm_ch_swap</description>
              <bitRange>[8:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pdm_data_phase_sel</name>
              <description>pdm_data_phase_sel</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pdm_gain_shift_en</name>
              <description>pdm_gain_shift_en</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pdm_clk_inv_sel</name>
              <description>pdm_clk_inv_sel</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>i2s_data_rnd_en</name>
              <description>I2S data read enable</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>audio_control_1_dummy</name>
              <description>Dummy</description>
              <bitRange>[16:13]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>clock_control_1</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description>Clock Control Register 1</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>da_l_en</name>
              <description>DAC L channel clock enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>clock_control_1_dummy0</name>
              <description>Dummy</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>mod_l_en</name>
              <description>SDM L channel clock enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>clock_control_1_dummy1</name>
              <description>Dummy</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>da_ana_clk_en</name>
              <description>DAC/ADC analog clock enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>da_fifo_en</name>
              <description>DAC FIFO clock enable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ad_0_en</name>
              <description>ADC channel 0 clock enable</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ad_1_en</name>
              <description>ADC channel 1 clock enable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ad_2_en</name>
              <description>ADC channel 2 clock enable</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ad_3_en</name>
              <description>ADC channel 3 clock enable</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ad_0_fifo_en</name>
              <description>ADC channel 0 FIFO clock enable</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ad_1_fifo_en</name>
              <description>ADC channel 1 FIFO clock enable</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ad_2_fifo_en</name>
              <description>ADC channel 2 FIFO clock enable</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ad_3_fifo_en</name>
              <description>ADC channel 3 FIFO clock enable</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ad_ana_clk_en</name>
              <description>ADC analog clock enable</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>clock_control_2</name>
          <addressOffset>0x0000000C</addressOffset>
          <size>32</size>
          <description>Clock Control Register 2</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ad_ana_0_en</name>
              <description>ADC filter channel 0 clock enable: analog ADC path</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ad_ana_1_en</name>
              <description>ADC filter channel 1 clock enable: analog ADC path</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ad_ana_2_en</name>
              <description>ADC filter channel 2 clock enable: analog ADC path</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ad_ana_3_en</name>
              <description>ADC filter channel 3 clock enable: analog ADC path</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dmic_0_en</name>
              <description>ADC filter channel 0 clock enable: DMIC path</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dmic_1_en</name>
              <description>ADC filter channel 1 clock enable: DMIC path</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dmic_2_en</name>
              <description>ADC filter channel 2 clock enable: DMIC path</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dmic_3_en</name>
              <description>ADC filter channel 3 clock enable: DMIC path</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>clock_control_3</name>
          <addressOffset>0x00000010</addressOffset>
          <size>32</size>
          <description>Clock Control Register 3</description>
          <resetValue>0x00000001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dmic1_clk_sel</name>
              <description>Set clock of digital microphone
3'b000: 5MHz
3'b001: 2.5MHz
3'b010: 1.25MHz
3'b011: 625kHz
3'b100: 312.5kHz
3'b101: Reserved
3'b110: Reserved
3'b111: 769.2kHz</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dmic1_clk_en</name>
              <description>Digital microphone clock enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>clock_control_4</name>
          <addressOffset>0x00000014</addressOffset>
          <size>32</size>
          <description>Clock Control Register 4</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>sample_rate_0</name>
              <description>Set sample rate source 0
4'h0: 48K
4'h1: 96K
4'h2: 192K
4'h3: 32K
4'h4: 176.4K
4'h5: 16K
4'h6: Reserved
4'h7: 8K
4'h8: 44.1K
4'h9: 88.2K
4'ha:24K
4'hb: 12K
4'hc: 22.05K
4'hd: 11.025K
4'he~4'hf: Reserved</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sample_rate_1</name>
              <description>Set sample rate source 1
4'h0: 48K
4'h1: 96K
4'h2: 192K
4'h3: 32K
4'h4: 176.4K
4'h5: 16K
4'h6: Reserved
4'h7: 8K
4'h8: 44.1K
4'h9: 88.2K
4'ha:24K
4'hb: 12K
4'hc: 22.05K
4'hd: 11.025K
4'he~4'hf: Reserved</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sample_rate_2</name>
              <description>Set sample rate source 2
4'h0: 48K
4'h1: 96K
4'h2: 192K
4'h3: 32K
4'h4: 176.4K
4'h5: 16K
4'h6: Reserved
4'h7: 8K
4'h8: 44.1K
4'h9: 88.2K
4'ha:24K
4'hb: 12K
4'hc: 22.05K
4'hd: 11.025K
4'he~4'hf: Reserved</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sample_rate_3</name>
              <description>Set sample rate source 3
4'h0: 48K
4'h1: 96K
4'h2: 192K
4'h3: 32K
4'h4: 176.4K
4'h5: 16K
4'h6: Reserved
4'h7: 8K
4'h8: 44.1K
4'h9: 88.2K
4'ha:24K
4'hb: 12K
4'hc: 22.05K
4'hd: 11.025K
4'he~4'hf: Reserved</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>clock_control_5</name>
          <addressOffset>0x00000018</addressOffset>
          <size>32</size>
          <description>Clock Control Register 5</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_0_fs_src_sel</name>
              <description>Channel 0 ADC path sample rate source selection
2'b00: Source 0
2'b01: Source 1
2'b10: Source 2
2'b11: Source 3</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_1_fs_src_sel</name>
              <description>Channel 1 ADC path sample rate source selection
2'b00: Source 0
2'b01: Source 1
2'b10: Source 2
2'b11: Source 3</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_2_fs_src_sel</name>
              <description>Channel 2 ADC path sample rate source selection
2'b00: Source 0
2'b01: Source 1
2'b10: Source 2
2'b11: Source 3</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_3_fs_src_sel</name>
              <description>Channel 3 ADC path sample rate source selection
2'b00: Source 0
2'b01: Source 1
2'b10: Source 2
2'b11: Source 3</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dac_l_fs_src_sel</name>
              <description>DAC path sample rate source selection
2'b00: Source 0
2'b01: Source 1
2'b10: Source 2
2'b11: Source 3</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>clock_control_6</name>
          <addressOffset>0x0000001C</addressOffset>
          <size>32</size>
          <description>Clock Control Register 6</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_0_asrc_en</name>
              <description>Channel 0 ADC path ASRC enable
0: Disable
1: Enable
If ASRC is enabled, sample_rate becomes useless.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_1_asrc_en</name>
              <description>Channel 1 ADC path ASRC enable
0: Disable
1: Enable
If ASRC is enabled, sample_rate becomes useless.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_2_asrc_en</name>
              <description>Channel 2 ADC path ASRC enable
0: Disable
1: Enable
If ASRC is enabled, sample_rate becomes useless.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_3_asrc_en</name>
              <description>Channel 3 ADC path ASRC enable
0: Disable
1: Enable
If ASRC is enabled, sample_rate becomes useless.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dac_l_asrc_en</name>
              <description>DAC path ASRC enable
0: Disable
1: Enable
If ASRC is enabled, sample_rate becomes useless.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>clock_control_7</name>
          <addressOffset>0x00000020</addressOffset>
          <size>32</size>
          <description>Clock Control Register 7</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>da_ana_clk_sel</name>
              <description>Set clk_da_ana phase
1'b0: Inphase
1'b1: Inverse phase</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ad_ana_clk_sel</name>
              <description>Set clk_ad_ana phase
1'b0: Inphase
1'b1: Inverse phase</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ad_latch_phase</name>
              <description>Set latch ADC data phase
1'b0: Inphase
1'b1: Inverse phase</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ana_clk_rate_sel</name>
              <description>Set DA/AD analog clock
0: 10MHz
1: 5MHz
2: 2.5MHz
3: Reserved</description>
              <bitRange>[4:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ad_lpf_clk_rate_sel</name>
              <description>Set AD LPF clock
0: 10MHz
1: 5MHz
2: 2.5MHz
3: Reserved</description>
              <bitRange>[6:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_0_dmic_lpf_clk_sel</name>
              <description>Channel 0 ADC path DMIC LPF clock
2'b00: 10M
2'b01: 5M
2'b10: 2.5M
2'b11: 769.2*2K</description>
              <bitRange>[8:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_1_dmic_lpf_clk_sel</name>
              <description>Channel 1 ADC path DMIC LPF clock
2'b00: 10M
2'b01: 5M
2'b10: 2.5M
2'b11: 769.2*2K</description>
              <bitRange>[10:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_2_dmic_lpf_clk_sel</name>
              <description>Channel 2 ADC path DMIC LPF clock
2'b00: 10M
2'b01: 5M
2'b10: 2.5M
2'b11: 769.2*2K</description>
              <bitRange>[12:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_3_dmic_lpf_clk_sel</name>
              <description>Channel 3 ADC path DMIC LPF clock
2'b00: 10M
2'b01: 5M
2'b10: 2.5M
2'b11: 769.2*2K</description>
              <bitRange>[14:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ana_clk_phase_sel</name>
              <description>1: Analog clock shift 80MHz phase
0: Disable</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ad_ana_osr_double</name>
              <description>1: Latch ADC data with 10MHz clock</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>asrc_control_0</name>
          <addressOffset>0x00000024</addressOffset>
          <size>32</size>
          <description>ASRC Control Register 0</description>
          <resetValue>0x0000001C</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>asrc_rate_sel_tx</name>
              <description>0: fs supports 4kHz ~ 60kHz
1: fs supports 60kHz ~ 120kHz
2: fs supports 120kHz ~ 200kHz
3: Reserved</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>asrc_gain_sel_tx</name>
              <description>ASRC convergence rate: larger is faster but more noisy</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>asrc_auto_adjust_tx</name>
              <description>HW auto adjust convergence rate
0: Disable
1: Enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>asrc_control_1</name>
          <addressOffset>0x00000028</addressOffset>
          <size>32</size>
          <description>ASRC Control Register 1</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>asrc_sdm_inti_tx</name>
              <description>Set initial value of tracked frequency</description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>asrc_control_2</name>
          <addressOffset>0x0000002C</addressOffset>
          <size>32</size>
          <description>ASRC Control Register 2</description>
          <resetValue>0x0000001C</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>asrc_rate_sel_rx_0</name>
              <description>0: fs supports 4kHz ~ 60kHz
1: fs supports 60kHz ~ 120kHz
2/3: Reserved</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>asrc_gain_sel_rx_0</name>
              <description>ASRC convergence rate: larger is faster but more noisy</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>asrc_auto_adjust_rx_0</name>
              <description>HW auto adjust convergence rate
0: Disable
1: Enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>asrc_control_3</name>
          <addressOffset>0x00000030</addressOffset>
          <size>32</size>
          <description>ASRC Control Register 3</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>asrc_sdm_inti_rx_0</name>
              <description>Set initial value of tracked frequency</description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>i2s_0_control</name>
          <addressOffset>0x0000003C</addressOffset>
          <size>32</size>
          <description>I2S 0 Control Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>i2s_0_rst_n_reg</name>
              <description>1'b1: rst_n to audio digital IP is de-asserted
1'b0: rst_n to audio digital IP is asserted</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>i2s_0_inv_sclk</name>
              <description>1'b1: I2S/PCM bit clock is inverted</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>i2s_0_self_lpbk_en</name>
              <description>1'b1: Internal loopback mode is enabled</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>i2s_0_same_lrc_en</name>
              <description>1'b1: LRC_TX share to LRC_RX</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>i2s_0_tdm_mode_rx</name>
              <description>I2S 0 Rx channel TDM mode
0: 2 channels
1: 4 channels
2/3: Reserved</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>i2s_0_data_format_sel_tx</name>
              <description>I2S 0 Tx channel data format
2'b00: I2S
2'b01: Left-justified
2'b10: PCM mode A
2'b11: PCM mode B</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>i2s_0_data_format_sel_rx</name>
              <description>I2S 0 Rx channel data format
2'b00: I2S
2'b01: Left-justified
2'b10: PCM mode A
2'b11: PCM mode B</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>i2s_0_data_len_sel_tx</name>
              <description>I2S 0 Tx channel data length
2'b00: 16 bits
2'b10: 24 bits
2'b11: 8 bits</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>i2s_0_data_len_sel_rx</name>
              <description>I2S 0 Rx channel data length
2'b00: 16 bits
2'b10: 24 bits
2'b11: 8 bits</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>i2s_0_ch_len_sel_tx</name>
              <description>I2S 0 Tx channel length
2'b00: 16 bits
2'b01: 32 bits
2'b10: 24 bits
2'b11: 8 bits</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>i2s_0_ch_len_sel_rx</name>
              <description>I2S 0 Rx channel length
2'b00: 16 bits
2'b01: 32 bits
2'b10: 24 bits
2'b11: 8 bits</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>i2s_0_data_ch_sel_tx</name>
              <description>I2S 0 Tx channel data channel
2'b00: L/R
2'b01: R/L
2'b10: L/L
2'b11: R/R</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>i2s_0_master_sel</name>
              <description>I2S 0 master source selection
1'b0: SPORT internal
1'b1: External I2S</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>i2s_0_control_1</name>
          <addressOffset>0x00000040</addressOffset>
          <size>32</size>
          <description>I2S 0 Control Register 1</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>i2s_0_data_ch0_sel_rx</name>
              <description>I2S 0 Rx channel data channel 0
0: CH0
1: CH1
2: CH2
3: CH3
4/5/6/7: Reserved</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>i2s_0_data_ch1_sel_rx</name>
              <description>I2S 0 Rx channel data channel 1
0: CH0
1: CH1
2: CH2
3: CH3
4/5/6/7: Reserved</description>
              <bitRange>[5:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>i2s_0_data_ch2_sel_rx</name>
              <description>I2S 0 Rx channel data channel 2
0: CH0
1: CH1
2: CH2
3: CH3
4/5/6/7: Reserved</description>
              <bitRange>[8:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>i2s_0_data_ch3_sel_rx</name>
              <description>I2S 0 Rx channel data channel 3
0: CH0
1: CH1
2: CH2
3: CH3
4/5/6/7: Reserved</description>
              <bitRange>[11:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>i2s_0_data_ch0_rx_disable</name>
              <description>I2S 0 Rx channel data channel 0
1: disable
0: enable</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>i2s_0_data_ch1_rx_disable</name>
              <description>I2S 0 Rx channel data channel 1
1: disable
0: enable</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>i2s_0_data_ch2_rx_disable</name>
              <description>I2S 0 Rx channel data channel 2
1: disable
0: enable</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>i2s_0_data_ch3_rx_disable</name>
              <description>I2S 0 Rx channel data channel 3
1: disable
0: enable</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_0_control_0</name>
          <addressOffset>0x00000050</addressOffset>
          <size>32</size>
          <description>ADC Channel 0 Control Register 0</description>
          <resetValue>0x280A4898</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_0_dmic_src_sel</name>
              <description>Channel 0 DMIC source selection
3'b000: MIC 1 rising
3'b001: MIC 1 falling
3'b010: MIC 2 rising
3'b011: MIC 2 falling
Other: Reserved</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_0_dmic_lpf2nd_en</name>
              <description>Channel 0 DMIC path SRC 2nd LPF control
0: Disable
1: Enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_0_dmic_lpf1st_en</name>
              <description>Channel 0 DMIC path SRC 1st LPF control
0: Disable
1: Enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_0_dmic_lpf1st_fc_sel</name>
              <description>Channel 0 DMIC path SRC 1st LPF FC</description>
              <bitRange>[6:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_0_dmic_mix_mute</name>
              <description>Channel 0 DMIC input path mute
0: Unmute
1: Mute</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_0_ad_src_sel</name>
              <description>Channel 0 ANA ADC source selection
3'd0: ADC 1
3'd1: ADC 2
3'd2: ADC 3
Others: Reserved</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_0_ad_lpf2nd_en</name>
              <description>Channel 0 ADC path SRC 2nd LPF control
0: Disable
1: Enable</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_0_ad_lpf2nd_fc_sel</name>
              <description>Channel 0 ADC path SRC 2nd LPF FC</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_0_ad_lpf1st_en</name>
              <description>Channel 0 ADC path SRC 1st LPF control
0: Disable
1: Enable</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_0_ad_lpf1st_fc_sel</name>
              <description>Channel 0 ADC path SRC 1st LPF FC</description>
              <bitRange>[16:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_0_ad_mix_mute</name>
              <description>Channel 0 ADC input path mute
0: Unmute
1: Mute</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_0_ad_zdet_func</name>
              <description>Channel 0 ADC path zero detection function selection
2'b00: immediate change
2'b01: zero detection &amp; immediate change
2'b10: zero detection &amp; step
2'b11: zero detection &amp; timeout step</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_0_ad_zdet_tout</name>
              <description>Channel 0 ADC path zero detection time out selection
2'b00: 1024*16 samples
2'b01: 1024*32 samples
2'b10: 1024*64 samples
2'b11: 64 samples</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_0_ad_mute</name>
              <description>Channel 0 ADC path mute
0: Unmute
1: Mute</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_0_hpf_rsvd</name>
              <description>Channel 0 ADC path reserved</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_0_deci_src_sel</name>
              <description>Channel 0 ADC path decimation source selection
0: ADC
1: Reserved
2: MUSIC
3: Reserved</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_0_dchpf_en</name>
              <description>Channel 0 ADC path high pass filter enable control (filter DC)
0: Disable
1: Enable</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_0_dchpf_fc_sel</name>
              <description>Channel 0 ADC path high pass filter Fc</description>
              <bitRange>[29:27]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_0_control_1</name>
          <addressOffset>0x00000054</addressOffset>
          <size>32</size>
          <description>ADC Channel 0 Control Register 1</description>
          <resetValue>0x0000002F</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_0_ad_gain</name>
              <description>Channel 0 ADC digital volume -17.625dB ~ 48dB in 0.375dB step
8'h00: -17.625dB
...
8'h2f: 0dB
8'h30: 0.375dB
...
8'haf: 48dB</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_0_boost_gain</name>
              <description>Channel 0 ADC path boost gain control
00: 0dB
01: 12dB
10: 24dB
11: 36dB</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DUMMY</name>
              <description>Dummy</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_0_rptr_hold</name>
              <description>Channel 0 I2S read point hold number
rptr_hold = (I2S_fs/ad_fs) - 1</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_0_fifo_keep_one</name>
              <description>Channel 0 i2s sample buffering
0: 4 samples
1: 1 sample</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_1_control_0</name>
          <addressOffset>0x00000058</addressOffset>
          <size>32</size>
          <description>ADC Channel 1 Control Register 0</description>
          <resetValue>0x280A4898</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_1_dmic_src_sel</name>
              <description>Channel 1 DMIC source selection
3'b000: MIC 1 rising
3'b001: MIC 1 falling
3'b010: MIC 2 rising
3'b011: MIC 2 falling
Other: Reserved</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_1_dmic_lpf2nd_en</name>
              <description>Channel 1 DMIC path SRC 2nd LPF control
0: Disable
1: Enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_1_dmic_lpf1st_en</name>
              <description>Channel 1 DMIC path SRC 1st LPF control
0: Disable
1: Enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_1_dmic_lpf1st_fc_sel</name>
              <description>Channel 1 DMIC path SRC 1st LPF FC</description>
              <bitRange>[6:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_1_dmic_mix_mute</name>
              <description>Channel 1 DMIC input path mute
0: Unmute
1: Mute</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_1_ad_src_sel</name>
              <description>Channel 1 ANA ADC source selection
3'd0: ADC 1
3'd1: ADC 2
3'd2: ADC 3
Others: Reserved</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_1_ad_lpf2nd_en</name>
              <description>Channel 1 ADC path SRC 2nd LPF control
0: Disable
1: Enable</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_1_ad_lpf2nd_fc_sel</name>
              <description>Channel 1 ADC path SRC 2nd LPF FC</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_1_ad_lpf1st_en</name>
              <description>Channel 1 ADC path SRC 1st LPF control
0: Disable
1: Enable</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_1_ad_lpf1st_fc_sel</name>
              <description>Channel 1 ADC path SRC 1st LPF FC</description>
              <bitRange>[16:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_1_ad_mix_mute</name>
              <description>Channel 1 ADC input path mute
0: Unmute
1: Mute</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_1_ad_zdet_func</name>
              <description>Channel 1 ADC path zero detection function selection
2'b00: immediate change
2'b01: zero detection &amp; immediate change
2'b10: zero detection &amp; step
2'b11: zero detection &amp; timeout step</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_1_ad_zdet_tout</name>
              <description>Channel 1 ADC path zero detection time out selection
2'b00: 1024*16 samples
2'b01: 1024*32 samples
2'b10: 1024*64 samples
2'b11: 64 samples</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_1_ad_mute</name>
              <description>Channel 1 ADC path mute
0: Unmute
1: Mute</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_1_hpf_rsvd</name>
              <description>Channel 1 ADC path reserved</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_1_deci_src_sel</name>
              <description>Channel 1 ADC path decimation source selection
0: ADC
1: Reserved
2: MUSIC
3: Reserved</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_1_dchpf_en</name>
              <description>Channel 1 ADC path high pass filter enable control (filter DC)
0: Disable
1: Enable</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_1_dchpf_fc_sel</name>
              <description>Channel 1 ADC path high pass filter Fc</description>
              <bitRange>[29:27]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_1_control_1</name>
          <addressOffset>0x0000005C</addressOffset>
          <size>32</size>
          <description>ADC Channel 1 Control Register 1</description>
          <resetValue>0x0000002F</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_1_ad_gain</name>
              <description>Channel 1 ADC digital volume -17.625dB ~ 48dB in 0.375dB step
8'h00: -17.625dB
...
8'h2f: 0dB
8'h30: 0.375dB
...
8'haf: 48dB</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_1_boost_gain</name>
              <description>Channel 1 ADC path boost gain control
00: 0dB
01: 12dB
10: 24dB
11: 36dB</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DUMMY</name>
              <description>Dummy</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_1_rptr_hold</name>
              <description>Channel 1 I2S read point hold number
rptr_hold = (I2S_fs/ad_fs) - 1</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_1_fifo_keep_one</name>
              <description>Channel 1 i2s sample buffering
0: 4 samples
1: 1 sample</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_2_control_0</name>
          <addressOffset>0x00000060</addressOffset>
          <size>32</size>
          <description>ADC Channel 2 Control Register 0</description>
          <resetValue>0x280A4898</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_2_dmic_src_sel</name>
              <description>Channel 2 DMIC source selection
3'b000: MIC 1 rising
3'b001: MIC 1 falling
3'b010: MIC 2 rising
3'b011: MIC 2 falling
Other: Reserved</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_2_dmic_lpf2nd_en</name>
              <description>Channel 2 DMIC path SRC 2nd LPF control
0: Disable
1: Enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_2_dmic_lpf1st_en</name>
              <description>Channel 2 DMIC path SRC 1st LPF control
0: Disable
1: Enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_2_dmic_lpf1st_fc_sel</name>
              <description>Channel 2 DMIC path SRC 1st LPF FC</description>
              <bitRange>[6:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_2_dmic_mix_mute</name>
              <description>Channel 2 DMIC input path mute
0: Unmute
1: Mute</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_2_ad_src_sel</name>
              <description>Channel 2 ANA ADC source selection
3'd0: ADC 1
3'd1: ADC 2
3'd2: ADC 3
Others: Reserved</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_2_ad_lpf2nd_en</name>
              <description>Channel 2 ADC path SRC 2nd LPF control
0: Disable
1: Enable</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_2_ad_lpf2nd_fc_sel</name>
              <description>Channel 2 ADC path SRC 2nd LPF FC</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_2_ad_lpf1st_en</name>
              <description>Channel 2 ADC path SRC 1st LPF control
0: Disable
1: Enable</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_2_ad_lpf1st_fc_sel</name>
              <description>Channel 2 ADC path SRC 1st LPF FC</description>
              <bitRange>[16:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_2_ad_mix_mute</name>
              <description>Channel 2 ADC input path mute
0: Unmute
1: Mute</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_2_ad_zdet_func</name>
              <description>Channel 2 ADC path zero detection function selection
2'b00: immediate change
2'b01: zero detection &amp; immediate change
2'b10: zero detection &amp; step
2'b11: zero detection &amp; timeout step</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_2_ad_zdet_tout</name>
              <description>Channel 2 ADC path zero detection time out selection
2'b00: 1024*16 samples
2'b01: 1024*32 samples
2'b10: 1024*64 samples
2'b11: 64 samples</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_2_ad_mute</name>
              <description>Channel 2 ADC path mute
0: Unmute
1: Mute</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_2_hpf_rsvd</name>
              <description>Channel 2 ADC path reserved</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_2_deci_src_sel</name>
              <description>Channel 2 ADC path decimation source selection
0: ADC
1: Reserved
2: MUSIC
3: Reserved</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_2_dchpf_en</name>
              <description>Channel 2 ADC path high pass filter enable control (filter DC)
0: Disable
1: Enable</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_2_dchpf_fc_sel</name>
              <description>Channel 2 ADC path high pass filter Fc</description>
              <bitRange>[29:27]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_2_control_1</name>
          <addressOffset>0x00000064</addressOffset>
          <size>32</size>
          <description>ADC Channel 2 Control Register 1</description>
          <resetValue>0x0000002F</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_2_ad_gain</name>
              <description>Channel 2 ADC digital volume -17.625dB ~ 48dB in 0.375dB step
8'h00: -17.625dB
...
8'h2f: 0dB
8'h30: 0.375dB
...
8'haf: 48dB</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_2_boost_gain</name>
              <description>Channel 2 ADC path boost gain control
00: 0dB
01: 12dB
10: 24dB
11: 36dB</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DUMMY</name>
              <description>Dummy</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_2_rptr_hold</name>
              <description>Channel 2 I2S read point hold number
rptr_hold = (I2S_fs/ad_fs) - 1</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_2_fifo_keep_one</name>
              <description>Channel 2 i2s sample buffering
0: 4 samples
1: 1 sample</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_3_control_0</name>
          <addressOffset>0x00000068</addressOffset>
          <size>32</size>
          <description>ADC Channel 3 Control Register 0</description>
          <resetValue>0x280A4898</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_3_dmic_src_sel</name>
              <description>Channel 3 DMIC source selection
3'b000: MIC 1 rising
3'b001: MIC 1 falling
3'b010: MIC 2 rising
3'b011: MIC 2 falling
Other: Reserved</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_3_dmic_lpf2nd_en</name>
              <description>Channel 3 DMIC path SRC 2nd LPF control
0: Disable
1: Enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_3_dmic_lpf1st_en</name>
              <description>Channel 3 DMIC path SRC 1st LPF control
0: Disable
1: Enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_3_dmic_lpf1st_fc_sel</name>
              <description>Channel 3 DMIC path SRC 1st LPF FC</description>
              <bitRange>[6:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_3_dmic_mix_mute</name>
              <description>Channel 3 DMIC input path mute
0: Unmute
1: Mute</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_3_ad_src_sel</name>
              <description>Channel 3 ANA ADC source selection
3'd0: ADC 1
3'd1: ADC 2
3'd2: ADC 3
Others: Reserved</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_3_ad_lpf2nd_en</name>
              <description>Channel 3 ADC path SRC 2nd LPF control
0: Disable
1: Enable</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_3_ad_lpf2nd_fc_sel</name>
              <description>Channel 3 ADC path SRC 2nd LPF FC</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_3_ad_lpf1st_en</name>
              <description>Channel 3 ADC path SRC 1st LPF control
0: Disable
1: Enable</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_3_ad_lpf1st_fc_sel</name>
              <description>Channel 3 ADC path SRC 1st LPF FC</description>
              <bitRange>[16:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_3_ad_mix_mute</name>
              <description>Channel 3 ADC input path mute
0: Unmute
1: Mute</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_3_ad_zdet_func</name>
              <description>Channel 3 ADC path zero detection function selection
2'b00: immediate change
2'b01: zero detection &amp; immediate change
2'b10: zero detection &amp; step
2'b11: zero detection &amp; timeout step</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_3_ad_zdet_tout</name>
              <description>Channel 3 ADC path zero detection time out selection
2'b00: 1024*16 samples
2'b01: 1024*32 samples
2'b10: 1024*64 samples
2'b11: 64 samples</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_3_ad_mute</name>
              <description>Channel 3 ADC path mute
0: Unmute
1: Mute</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_3_hpf_rsvd</name>
              <description>Channel 3 ADC path reserved</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_3_deci_src_sel</name>
              <description>Channel 3 ADC path decimation source selection
0: ADC
1: Reserved
2: MUSIC
3: Reserved</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_3_dchpf_en</name>
              <description>Channel 3 ADC path high pass filter enable control (filter DC)
0: Disable
1: Enable</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_3_dchpf_fc_sel</name>
              <description>Channel 3 ADC path high pass filter Fc</description>
              <bitRange>[29:27]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_3_control_1</name>
          <addressOffset>0x0000006C</addressOffset>
          <size>32</size>
          <description>ADC Channel 3 Control Register 1</description>
          <resetValue>0x0000002F</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_3_ad_gain</name>
              <description>Channel 3 ADC digital volume -17.625dB ~ 48dB in 0.375dB step
8'h00: -17.625dB
...
8'h2f: 0dB
8'h30: 0.375dB
...
8'haf: 48dB</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_3_boost_gain</name>
              <description>Channel 3 ADC path boost gain control
00: 0dB
01: 12dB
10: 24dB
11: 36dB</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DUMMY</name>
              <description>Dummy</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_3_rptr_hold</name>
              <description>Channel 3 I2S read point hold number
rptr_hold = (I2S_fs/ad_fs) - 1</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_3_fifo_keep_one</name>
              <description>Channel 3 i2s sample buffering
0: 4 samples
1: 1 sample</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>dac_l_control_0</name>
          <addressOffset>0x00000090</addressOffset>
          <size>32</size>
          <description>DAC Left Channel Control Register 0</description>
          <resetValue>0x000000AF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dac_l_da_gain</name>
              <description>Channel L DAC path dvol gain control (0.375dB/step)
8'hAF: 0dB
8'h00: -65.625dB</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dac_l_da_src_sel</name>
              <description>Channel L DAC path input selection
0: I2S L channel
1: Test tone</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dac_l_control_0_dummy</name>
              <description>Dummy</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dac_l_test_tone_en</name>
              <description>Channel L DAC path test tone enable</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dac_l_test_fc_sel</name>
              <description>Channel L DAC path test tone frequency: (fs/192)*(tone_fc_sel+1)Hz</description>
              <bitRange>[27:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dac_l_test_gain_sel</name>
              <description>Channel L DAC path test tone gain control 0 -6.02*(gain_sel)dB</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>dac_l_control_1</name>
          <addressOffset>0x00000094</addressOffset>
          <size>32</size>
          <description>DAC Left Channel Control Register 1</description>
          <resetValue>0x0000E002</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dac_l_da_zdet_func</name>
              <description>Channel L DAC path zero detection function selection
2'b00: immediate change
2'b01: zero detection &amp; immediate change
2'b10: zero detection &amp; step
2'b11: zero detection &amp; timeout step</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dac_l_da_zdet_tout</name>
              <description>Channel L DAC path zero detection time out selection
2'b00: 1024*16 samples
2'b01: 1024*32 samples
2'b10: 1024*64 samples
2'b11: 64 samples</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dac_l_da_mute</name>
              <description>Channel L DAC path dvol mute enable
1'b0: unmute
1'b1: mute</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dac_l_dahpf_en</name>
              <description>Channel L DAC path Narrow-band 1st HPF enable control
0: Disable
1: Enable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dac_l_da_dither_sel</name>
              <description>Channel L DAC path dither select
2'b00: Disable
2'b01: LSB
2'b10: LSB+1
2'b11: LSB+2</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dac_l_dmix_mute_da</name>
              <description>Channel L DAC path 128fs-domain mixer DA path mute enable
1'b0: unmute
1'b1: mute</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dac_l_control_1_dummy0</name>
              <description>Dummy</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dac_l_dmix_mute_dc</name>
              <description>Channel L DAC path 128fs-domain mixer a DC from dac_l_tone_compensation_offset
1'b0: unmute
1'b1: mute</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dac_l_music_mute_en</name>
              <description>Channel L DAC path music output mute enable
1'b0: unmute
1'b1: mute</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dac_l_pdm_en</name>
              <description>Channel L DAC path PDM
0: Disable
1: Enable</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dac_l_sdm_extend_fb_en</name>
              <description>Channel L DAC path feedback extend (for debug purpose, needing turn on by default)
0: Disable
1: Enable</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dac_l_sdm_ef_en</name>
              <description>Channel L DAC path 2nd order SDM enable
0: Disable
1: Enable</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dac_l_sdm_dither_sel</name>
              <description>Channel L DAC path SDM dither selection
2'b00: Disable
2'b01: LSB
2'b10: LSB+1
2'b11: LSB+2</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dac_l_da_flt_type</name>
              <description>Channel L DAC path interpolation filter type</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dac_l_control_1_dummy1</name>
              <description>Dummy</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>dac_l_control_2</name>
          <addressOffset>0x00000098</addressOffset>
          <size>32</size>
          <description>DAC Left Channel Control Register 2</description>
          <resetValue>0x00700000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dac_l_dc_offset</name>
              <description>Channel L DAC path 128fs-domain mixer a DC compensation for spur issue 2's complement</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dac_l_control_2_dummy0</name>
              <description>Dummy</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dac_l_control_2_dummy1</name>
              <description>Dummy</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_align_control_0</name>
          <addressOffset>0x000000AC</addressOffset>
          <size>32</size>
          <description>ADC Align Control Register 0</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>sp_ad_fifo_align_en</name>
              <description>1: Uplink FIFO will align with I2S
0: Disable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_ad_align_en</name>
              <description>1: Uplink channel will align with I2S
0: Disable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_align_control</name>
          <addressOffset>0x000000B0</addressOffset>
          <size>32</size>
          <description>ADC Align Control Register</description>
          <resetValue>0x00002210</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_0_align_ch_sel</name>
              <description>Uplink CH0 align channel selection
0: CH0
1: CH1
2: CH2
3: CH3
Others: Reserved</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_0_align_en</name>
              <description>Uplink CH0 align enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_1_align_ch_sel</name>
              <description>Uplink CH1 align channel selection
0: CH0
1: CH1
2: CH2
3: CH3
Others: Reserved</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_1_align_en</name>
              <description>Uplink CH1 align enable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_2_align_ch_sel</name>
              <description>Uplink CH2 align channel selection
0: CH0
1: CH1
2: CH2
3: CH3
Others: Reserved</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_2_align_en</name>
              <description>Uplink CH2 align enable</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_3_align_ch_sel</name>
              <description>Uplink CH3 align channel selection
0: CH0
1: CH1
2: CH2
3: CH3
Others: Reserved</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_3_align_en</name>
              <description>Uplink CH3 align enable</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>dac_mix_control</name>
          <addressOffset>0x000000BC</addressOffset>
          <size>32</size>
          <description>DAC Mix Control Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dac_mix_control_dummy</name>
              <description>Dummy</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>phase_compensation_control_register_0</name>
          <addressOffset>0x000000C0</addressOffset>
          <size>32</size>
          <description>Channel 0 Phase Compensation Control Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>phase_delay_counter_en_0</name>
              <description>Enable Uplink CH0 phase compensation</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>phase_delay_counter_0</name>
              <description>Uplink CH 0 phase compensation delay</description>
              <bitRange>[10:1]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>phase_compensation_control_register_1</name>
          <addressOffset>0x000000C4</addressOffset>
          <size>32</size>
          <description>Channel 1 Phase Compensation Control Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>phase_delay_counter_en_1</name>
              <description>Enable Uplink CH1 phase compensation</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>phase_delay_counter_1</name>
              <description>Uplink CH 1 phase compensation delay</description>
              <bitRange>[10:1]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>phase_compensation_control_register_2</name>
          <addressOffset>0x000000C8</addressOffset>
          <size>32</size>
          <description>Channel 2 Phase Compensation Control Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>phase_delay_counter_en_2</name>
              <description>Enable Uplink CH2 phase compensation</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>phase_delay_counter_2</name>
              <description>Uplink CH 2 phase compensation delay</description>
              <bitRange>[10:1]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_0_silence_control</name>
          <addressOffset>0x00000100</addressOffset>
          <size>32</size>
          <description>ADC Channel 0 Silence Control Register</description>
          <resetValue>0x00000032</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_0_silence_det_en</name>
              <description>Channel 0 ADC path silence detection enable
0: Disable
1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_0_silence_level_sel</name>
              <description>Channel 0 ADC path silence detection threshold
3'b000: -54db
3'b001: -60db
3'b010: -66db
3'b011: -72db
3'b100: -78db
3'b101: -84db
3'b110: -90db
3'b111: -96db</description>
              <bitRange>[3:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_0_silence_debounce_sel</name>
              <description>Channel 0 ADC path silence detection debounce (48K)
3'b000: 80ms
3'b001: 160ms
3'b010: 320ms
3'b011: 640ms
3'b100: 1.28s
3'b101: 2.56s
3'b110: 5.12s
3'b111: 0.16ms</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_1_silence_control</name>
          <addressOffset>0x00000104</addressOffset>
          <size>32</size>
          <description>ADC Channel 1 Silence Control Register</description>
          <resetValue>0x00000032</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_1_silence_det_en</name>
              <description>Channel 1 ADC path silence detection enable
0: Disable
1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_1_silence_level_sel</name>
              <description>Channel 1 ADC path silence detection threshold
3'b000: -54db
3'b001: -60db
3'b010: -66db
3'b011: -72db
3'b100: -78db
3'b101: -84db
3'b110: -90db
3'b111: -96db</description>
              <bitRange>[3:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_1_silence_debounce_sel</name>
              <description>Channel 1 ADC path silence detection debounce (48K)
3'b000: 80ms
3'b001: 160ms
3'b010: 320ms
3'b011: 640ms
3'b100: 1.28s
3'b101: 2.56s
3'b110: 5.12s
3'b111: 0.16ms</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_2_silence_control</name>
          <addressOffset>0x00000108</addressOffset>
          <size>32</size>
          <description>ADC Channel 2 Silence Control Register</description>
          <resetValue>0x00000032</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_2_silence_det_en</name>
              <description>Channel 2 ADC path silence detection enable
0: Disable
1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_2_silence_level_sel</name>
              <description>Channel 2 ADC path silence detection threshold
3'b000: -54db
3'b001: -60db
3'b010: -66db
3'b011: -72db
3'b100: -78db
3'b101: -84db
3'b110: -90db
3'b111: -96db</description>
              <bitRange>[3:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_2_silence_debounce_sel</name>
              <description>Channel 2 ADC path silence detection debounce (48K)
3'b000: 80ms
3'b001: 160ms
3'b010: 320ms
3'b011: 640ms
3'b100: 1.28s
3'b101: 2.56s
3'b110: 5.12s
3'b111: 0.16ms</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_3_silence_control</name>
          <addressOffset>0x0000010C</addressOffset>
          <size>32</size>
          <description>ADC Channel 3 Silence Control Register</description>
          <resetValue>0x00000032</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_3_silence_det_en</name>
              <description>Channel 3 ADC path silence detection enable
0: Disable
1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_3_silence_level_sel</name>
              <description>Channel 3 ADC path silence detection threshold
3'b000: -54db
3'b001: -60db
3'b010: -66db
3'b011: -72db
3'b100: -78db
3'b101: -84db
3'b110: -90db
3'b111: -96db</description>
              <bitRange>[3:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>adc_3_silence_debounce_sel</name>
              <description>Channel 3 ADC path silence detection debounce (48K)
3'b000: 80ms
3'b001: 160ms
3'b010: 320ms
3'b011: 640ms
3'b100: 1.28s
3'b101: 2.56s
3'b110: 5.12s
3'b111: 0.16ms</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>dac_l_silence_control</name>
          <addressOffset>0x00000120</addressOffset>
          <size>32</size>
          <description>DAC Left Channel Silence Control Register</description>
          <resetValue>0x00000032</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dac_l_silence_det_en</name>
              <description>Channel L DAC path silence detection enable
0: Disable
1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dac_l_silence_level_sel</name>
              <description>Channel L DAC path silence detection threshold
3'b000: -78db
3'b001: -84db
3'b010: -90db
3'b011: -102db
3'b100: -108db
3'b101: -114db
3'b110: -126db
3'b111: -132db</description>
              <bitRange>[3:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dac_l_silence_debounce_sel</name>
              <description>Channel L DAC path silence detection debounce (48K)
3'b000: 80ms
3'b001: 160ms
3'b010: 320ms
3'b011: 640ms
3'b100: 1.28s
3'b101: 2.56s
3'b110: 5.12s
3'b111: 0.16ms</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>vad_ctrl</name>
          <addressOffset>0x00000700</addressOffset>
          <size>32</size>
          <description>VAD Control Register</description>
          <resetValue>0x00000001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>vad_reset</name>
              <description>Reset VAD module</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>vad_eq_src_sel</name>
              <description>VAD source selection
2'b00: adc_0_eq_out
2'b01: adc_1_eq_out
2'b10: adc_2_eq_out
2'b11: adc_3_eq_out</description>
              <bitRange>[3:1]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>vad_voice_level</name>
          <addressOffset>0x00000704</addressOffset>
          <size>32</size>
          <description>VAD Voice Level Register</description>
          <resetValue>0x0000002C</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>vad_voice_level</name>
              <description>The minimum value of mean power of PE&amp;D unit0</description>
              <bitRange>[8:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>vad_det_thr</name>
          <addressOffset>0x00000708</addressOffset>
          <size>32</size>
          <description>VAD Detection Threshold Register</description>
          <resetValue>0x00000019</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>vad_det_thr</name>
              <description>Setting vad_flag threshold between frame power and mean power of PE&amp;D unit0</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>vad_intr_en</name>
          <addressOffset>0x0000070C</addressOffset>
          <size>32</size>
          <description>VAD Interrupt Enable Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>vad_intr_en</name>
              <description>New enables of vad interrupts</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>dac_dre_control_0</name>
          <addressOffset>0x00000710</addressOffset>
          <size>32</size>
          <description>DAC DRE Control Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dac_dre_rsvd</name>
              <description>reserved</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ana_read</name>
          <addressOffset>0x00000800</addressOffset>
          <size>32</size>
          <description>ANA Read Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>micbias_oc</name>
              <description>The status flag of MICBIAS over-current protection</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_0_lpf_rd</name>
          <addressOffset>0x00000804</addressOffset>
          <size>32</size>
          <description>ADC Channel 0 LPF Read Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_0_lpf_rd</name>
              <description>CH 0 ADC LPF out values</description>
              <bitRange>[18:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_1_lpf_rd</name>
          <addressOffset>0x00000808</addressOffset>
          <size>32</size>
          <description>ADC Channel 1 LPF Read Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_1_lpf_rd</name>
              <description>CH 1 ADC LPF out values</description>
              <bitRange>[18:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_2_lpf_rd</name>
          <addressOffset>0x0000080C</addressOffset>
          <size>32</size>
          <description>ADC Channel 2 LPF Read Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_2_lpf_rd</name>
              <description>CH 2 ADC LPF out values</description>
              <bitRange>[18:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>adc_3_lpf_rd</name>
          <addressOffset>0x00000810</addressOffset>
          <size>32</size>
          <description>ADC Channel 3 LPF Read Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>adc_3_lpf_rd</name>
              <description>CH 3 ADC LPF out values</description>
              <bitRange>[18:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>silence_inform</name>
          <addressOffset>0x00000824</addressOffset>
          <size>32</size>
          <description>Silence Inform Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dac_l_silence_det_o</name>
              <description>dac_l_silence data status (result of silence detection) 
1'b0: not dac_l_silence data
1'b1: dac_l_silence is detected</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>dac_l_silence_det_status</name>
              <description>Ongoing status of dac_l_silence detection
1'b0: dac_l_silence detection is resting (clock is gating)
1'b1: dac_l_silence detection is working</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>adc_0_silence_det_o</name>
              <description>adc_0_silencedata status (result of silence detection)
1'b0: not adc_0_silencedata
1'b1: adc_0_silenceis detected</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>adc_0_silence_det_status</name>
              <description>Ongoing status of adc_0_silencedetection
1'b0: adc_0_silencedetection is resting (clock is gating)
1'b1: adc_0_silencedetection is working</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>adc_1_silence_det_o</name>
              <description>adc_1_silencedata status (result of silence detection)
1'b0: not adc_1_silencedata
1'b1: adc_1_silenceis detected</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>adc_1_silence_det_status</name>
              <description>Ongoing status of adc_1_silencedetection
1'b0: adc_1_silencedetection is resting (clock is gating)
1'b1: adc_1_silencedetection is working</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>adc_2_silence_det_o</name>
              <description>adc_2_silencedata status (result of silence detection)
1'b0: not adc_2_silencedata
1'b1: adc_2_silenceis detected</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>adc_2_silence_det_status</name>
              <description>Ongoing status of adc_2_silencedetection
1'b0: adc_2_silencedetection is resting (clock is gating)
1'b1: adc_2_silencedetection is working</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>adc_3_silence_det_o</name>
              <description>adc_3_silencedata status (result of silence detection)
1'b0: not adc_3_silencedata
1'b1: adc_3_silenceis detected</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>adc_3_silence_det_status</name>
              <description>Ongoing status of adc_3_silencedetection
1'b0: adc_3_silencedetection is resting (clock is gating)
1'b1: adc_3_silencedetection is working</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>audio_ro_dummy1</name>
          <addressOffset>0x00000828</addressOffset>
          <size>32</size>
          <description>Audio RO Dummy1 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>audio_ro_dummy1</name>
              <description>Dummy</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>vad_intr_st</name>
          <addressOffset>0x00000900</addressOffset>
          <size>32</size>
          <description>VAD Interrupt Status Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>vad_intr_st</name>
              <description>Status of new VAD interrupts and clear them by writing 1</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>vad_det_flag</name>
          <addressOffset>0x00000904</addressOffset>
          <size>32</size>
          <description>VAD Detection Flag Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>vad_det_flag</name>
              <description>VAD detection flag 1</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>SPORT</name>
      <baseAddress>0x4011C000</baseAddress>
      <size>0x00000984</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00000984</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>SP_REG_MUX</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description>SPORT MUX Register</description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>sp_reg_mux</name>
              <description>Mux of register write with different base address of the same SPORT.
This register can be set as different value with four different base address in one SPORT, but other registers share the same value with four different base addresses in one SPORT.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SP_CTRL0</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description>SPORT Control Register 0</description>
          <resetValue>0x01010000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>mclk_sel</name>
              <description>2'b00: MCLK output=dsp_src_clk/4
2'b01: MCLK output=dsp_src_clk/2
2'b10/2'b11: MCLK output=dsp_src_clk</description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_sel_i2s_rx_ch</name>
              <description>ADC path
2'b00: L/R
2'b01: R/L
2'b10: L/L
2'b11: R/R</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_sel_i2s_tx_ch</name>
              <description>DAC path
2'b00: L/R
2'b01: R/L
2'b10: L/L
2'b11: R/R</description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_start_rx</name>
              <description>1'b0: Rx is disabled.
1'b1: Rx is started.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_rx_disable</name>
              <description>1'b1: SPORT Rx is disabled.
1'b0: SPORT Rx is enabled.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rx_lsb_first_0</name>
              <description>1'b0: MSB first when Rx
1'b1: LSB first</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tx_lsb_first_0</name>
              <description>1'b0: MSB first when Tx
1'b1: LSB first</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_tdm_mode_sel_rx</name>
              <description>2'b00: Without TDM
2'b01: TDM4
2'b10: TDM6
2'b11: TDM8</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_tdm_mode_sel_tx</name>
              <description>2'b00: Without TDM
2'b01: TDM4
2'b10: TDM6
2'b11: TDM8</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_start_tx</name>
              <description>1'b0: Tx is disabled.
1'b1: Tx is started.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_tx_disable</name>
              <description>1'b1: SPORT Tx is disabled.
1'b0: SPORT Tx is enabled.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_i2s_self_lpbk_en</name>
              <description>1'b1: internal loopback mode is enabled.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_data_len_sel_tx_0</name>
              <description>3'b000: 16 bits
3'b001: 20 bits
3'b010: 24 bits
3'b100: 32 bits</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_en_i2s_mono_tx_0</name>
              <description>1'b1: mono
1'b0: stereo</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_inv_i2s_sclk</name>
              <description>1'b1: I2S/PCM bit clock is inverted.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_data_format_sel_tx</name>
              <description>2'b00: I2S
2'b01: Left-justified
2'b10: PCM mode A
2'b11: PCM mode B</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dsp_ctl_mode</name>
              <description>1'b1: DSP and SPORT1 handshaking is enabled.
1'b0: GDMA and SPORT1 handshaking is enabled.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_loopback</name>
              <description>1'b1: Self-loopback mode</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_wclk_tx_inverse</name>
              <description>1'b1: I2S/PCM word clock is inverted for Tx (SPK path)</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>slave_data_sel</name>
              <description>1'b1: To be an I2S or PCM slave (data path)</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>slave_clk_sel</name>
              <description>1'b1: To be an I2S or PCM slave (CLK path)</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rx_inv_i2s_sclk</name>
              <description>1'b1: sclk to Rx path (ADC path) is inverted</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tx_inv_i2s_sclk</name>
              <description>1'b1: sclk to Tx path (DAC path) is inverted</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_reset</name>
              <description>1'b1: Reset SPORT1 module, and remember to write "1" to reset and then write "0" to release from reset.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SP_CTRL1</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description>SPORT Control Register 1</description>
          <resetValue>0x1100008C</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>rx_fifo_1_reg_1_en</name>
              <description>1'b1: Enable last two channel of RX_FIFO_1. Only enable when "rx_fifo_1_reg_0_en" = 1.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rx_fifo_1_reg_0_en</name>
              <description>1'b1: Enable first two channel of RX_FIFO_1. Only enable when "rx_fifo_0_reg_0_en" = 1.</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rx_fifo_0_reg_1_en</name>
              <description>1'b1: Enable last two channel of RX_FIFO_0. Only enable when "rx_fifo_0_reg_0_en" = 1.</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rx_fifo_0_reg_0_en</name>
              <description>1'b1: Enable first two channel of RX_FIFO_0. Disable 0x0008[28] ~ 0x0008[31] at the same time to reset Rx FIFO.</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tx_fifo_1_reg_1_en</name>
              <description>1'b1: Enable last two channel of TX_FIFO_1. Only enable when "tx_fifo_1_reg_0_en" = 1.</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tx_fifo_1_reg_0_en</name>
              <description>1'b1: Enable first two channel of TX_FIFO_1. Only enable when "tx_fifo_0_reg_0_en" = 1.</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tx_fifo_0_reg_1_en</name>
              <description>1'b1: Enable last two channel of TX_FIFO_0. Only enable when "tx_fifo_0_reg_0_en" = 1.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tx_fifo_0_reg_0_en</name>
              <description>1'b1: Enable first two channel of TX_FIFO_0. Disable 0x0008[24] ~ 0x0008[27] at the same time to reset Tx FIFO.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rx_snk_lr_swap_0</name>
              <description>1'b1: Swap L/R audio samples written to the sink memory of RX_FIFO_0</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rx_snk_byte_swap_0</name>
              <description>1'b1: Swap H/L bytes written to the sink memory of RX_FIFO_0</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tx_src_lr_swap_0</name>
              <description>1'b1: Swap L/R audio samples read from the source memory of TX_FIFO_0</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tx_src_byte_swap_0</name>
              <description>1'b1: Swap H/L bytes read from the source memory of TX_FIFO_0</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>direct_mode_en</name>
              <description>1'b1: WS (LRCK) and SCK (BCLK) are from other SPORT</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_direct_src_sel</name>
              <description>2'b00: WS and SCK are from SPORT0.
2'b01: WS and SCK are from SPORT1.
2'b10: WS and SCK are from SPORT2.
2'b11: WS and SCK are from SPORT3.</description>
              <bitRange>[18:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>err_cnt_sat_set</name>
              <description>1'b1: Saturation count (65534 -&gt; 65535 -&gt; 65535 ...)
1'b0: Wrap count (65534 -&gt; 65535 -&gt; 0 -&gt; 1 -&gt; 2 ...)</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sport_clk_sel</name>
              <description>2'b0x00: dsp_src_clk (BCLK*2)
2'b10: dsp_src_clk (BCLK*4)/2
2'b11: dsp_src_clk (BCLK*8)/4</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>clear_rx_err_cnt</name>
              <description>Write 1'b1 and then write 0 to clear Rx error counter</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>clear_tx_err_cnt</name>
              <description>Write 1'b1 and then write 0 to clear Tx error counter</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>enable_mclk</name>
              <description>Enable mclk.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>debug_bus_sel</name>
              <description>3'b000: debug_bus_a
3'b001: debug_bus_b
...
3'b111: debug_bus_h</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ws_force_val</name>
              <description>When "ws_force" = 1, ws_out_tx and ws_out_rx = "ws_force_val."</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ws_force</name>
              <description>1'b1: Make ws_out_tx and ws_out_rx = "ws_force_val"</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bclk_reset</name>
              <description>1'b0: Enable bclk
1'b1: Disable and reset bclk</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bclk_pull_zero</name>
              <description>Write 1'b1 to pull bclk to 0 smoothly.
Write 1'b0 to reopen bclk.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>multi_io_en_rx</name>
              <description>1'b1: Enable multi-IO of Rx
1'b0: Disable multi-IO of Rx</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>multi_io_en_tx</name>
              <description>1'b1: Enable multi-IO of Tx
1'b0: Disable multi-IO of Tx</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tx_fifo_fill_zero</name>
              <description>X is the burst size of TX_FIFO_0. Y is the burst size of TX_FIFO_1. 
Fill TX_FIFO_0 with X zero data and fill TX_FIFO_1 with Y zero data. 
This control bit is "write 1 clear" type.</description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>sp_reset_smooth</name>
              <description>1'b1: Reset SPORT1 module with complete LRCK cycle.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SP_INT_CTRL</name>
          <addressOffset>0x0000000C</addressOffset>
          <size>32</size>
          <description>SPORT Interrupt Control Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>int_enable_dsp_1</name>
              <description>Bit[24]: for the interrupt of "sp_ready_to_tx_1"
Bit[25]: for the interrupt of "sp_ready_to_rx_1"
Bit[26]: for the interrupt of "tx_fifo_full_intr_1"
Bit[27]: for the interrupt of "rx_fifo_full_intr_1"
Bit[28]: for the interrupt of "tx_fifo_empty_intr_1"
Bit[29]: for the interrupt of "rx_fifo_empty_intr_1"
Bit[30]: for the interrupt of "tx_i2s_idle_1"
Bit[31]: Reserved</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>int_enable_dsp_0</name>
              <description>Bit[16]: for the interrupt of "sp_ready_to_tx"
Bit[17]: for the interrupt of "sp_ready_to_rx"
Bit[18]: for the interrupt of "tx_fifo_full_intr"
Bit[19]: for the interrupt of "rx_fifo_full_intr"
Bit[20]: for the interrupt of "tx_fifo_empty_intr"
Bit[21]: for the interrupt of "rx_fifo_empty_intr"
Bit[22]: for the interrupt of "tx_i2s_idle"
Bit[23]: Reserved</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DUMMY</name>
              <description>Dummy</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>intr_clr_1</name>
              <description>Bit[9]: for the interrupt of "tx_fifo_full_intr_1"
Bit[10]: for the interrupt of "rx_fifo_full_intr_1"
Bit[11]: for the interrupt of "tx_fifo_empty_intr_1"
Bit[12]: for the interrupt of "rx_fifo_empty_intr_1"
Bit[13]: Reserved</description>
              <bitRange>[13:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rx_dsp_clear_int_1</name>
              <description>For DSP mode (bypass GDMA), F/W writes 1'b1 and then 1'b0 to clear Rx interrupt.
Note: Rx interrupt is to indicate that DSP can get audio data from Rx FIFO_1.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tx_dsp_clear_int_1</name>
              <description>For DSP mode (bypass GDMA), F/W writes 1'b1 and then 1'b0 to clear Tx interrupt.
Note: Tx interrupt is to indicate that DSP can write audio data to Tx FIFO_1.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>intr_clr_0</name>
              <description>Bit[2]: for the interrupt of "tx_fifo_full_intr"
Bit[3]: for the interrupt of "rx_fifo_full_intr"
Bit[4]: for the interrupt of "tx_fifo_empty_intr"
Bit[5]: for the interrupt of "rx_fifo_empty_intr"
Bit[6]: Reserved</description>
              <bitRange>[6:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rx_dsp_clear_int_0</name>
              <description>For DSP mode (bypass GDMA), F/W writes 1'b1 and then 1'b0 to clear Rx interrupt.
Note: Rx interrupt is to indicate that DSP can get audio data from Rx FIFO_0.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tx_dsp_clear_int_0</name>
              <description>For DSP mode (bypass GDMA), F/W writes 1'b1 and then 1'b0 to clear Tx interrupt.
Note: Tx interrupt is to indicate that DSP can write audio data to Tx FIFO_0.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SP_TRX_COUNTER_STATUS</name>
          <addressOffset>0x00000014</addressOffset>
          <size>32</size>
          <description>SPORT TRX Counter Status Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>sp_reset_state</name>
              <description>1'b1: sp_reset is enabled.
1'b0: sp_reset is disabled.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>rx_depth_cnt_1</name>
              <description>Rx FIFO_1 depth counter status (MIC path)</description>
              <bitRange>[29:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>tx_depth_cnt_1</name>
              <description>Tx FIFO_1 depth counter status (SPK path)</description>
              <bitRange>[21:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>rx_depth_cnt_0</name>
              <description>Rx FIFO_0 depth counter status (MIC path)</description>
              <bitRange>[13:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>tx_depth_cnt_0</name>
              <description>Tx FIFO_0 depth counter status (SPK path)</description>
              <bitRange>[5:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SP_ERR</name>
          <addressOffset>0x00000018</addressOffset>
          <size>32</size>
          <description>SPORT Error Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>rx_err_cnt</name>
              <description>Rx error counter (MIC path)
Note: This counter should always be zero if everything works well.</description>
              <bitRange>[31:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>tx_err_cnt</name>
              <description>Tx error counter (SPK path)
Note: This counter should always be zero if everything works well.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SR_TX_BCLK</name>
          <addressOffset>0x0000001C</addressOffset>
          <size>32</size>
          <description>SPORT Tx BCLK Register</description>
          <resetValue>0x00300271</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>tx_mi_ni_update</name>
              <description>1'b1: to update "mi" and "ni" to get the new clock rate.
This bit will be reset automatically when the update is done</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tx_ni</name>
              <description>BCLK = 40MHz*(ni/mi)     
For example: BCLK=3.072MHz=40MHz*(48/625)</description>
              <bitRange>[30:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tx_mi</name>
              <description></description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SP_TX_LRCLK</name>
          <addressOffset>0x00000020</addressOffset>
          <size>32</size>
          <description>SPORT Tx LRCLK Register</description>
          <resetValue>0x3F3F1010</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>rx_bclk_div_ratio</name>
              <description>Rx bclk even-bit integer divider. Used in "mode_40mhz" to set as 1'b1. 
(rx_bclk_div_ratio + 1) is the number of "sck_out" cycles within a "ws_out_rx" cycle (1/fs).
Default of (rx_bclk_div_ratio + 1) is 64. Set as 64 - 1 = 63. 
Only odd number supported. Maximum is 255.</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tx_bclk_div_ratio</name>
              <description>Tx bclk even-bit integer divider. Used in "mode_40mhz" set as 1'b1. 
(tx_bclk_div_ratio + 1) is the number of "sck_out" cycles within a "ws_out_tx" cycle (1/fs).
Default of (tx_bclk_div_ratio + 1) is 64. Set as 64 - 1 = 63. 
Only odd number supported. Maximum is 255.</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DUMMY1</name>
              <description>Dummy</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rxdma_busrtsize</name>
              <description>Rx DMA burst size</description>
              <bitRange>[13:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DUMMY2</name>
              <description>Dummy</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>txdma_burstsize</name>
              <description>Tx DMA burst size</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SP_FIFO_CTRL</name>
          <addressOffset>0x00000024</addressOffset>
          <size>32</size>
          <description>SPORT FIFO Control Register</description>
          <resetValue>0xCC000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>rx_fifo_empty_0</name>
              <description>1: Rx FIFO_0 is empty.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>tx_fifo_empty_0</name>
              <description>1: Tx FIFO_0 is empty.</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>rx_fifo_full_0</name>
              <description>1: Rx FIFO_0 is full.</description>
              <bitRange>[29:29]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>tx_fifo_full_0</name>
              <description>1: Tx FIFO_0 is full.</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>rx_fifo_empty_1</name>
              <description>1: Rx FIFO_1 is empty.</description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>tx_fifo_empty_1</name>
              <description>1: Tx FIFO_1 is empty.</description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>rx_fifo_full_1</name>
              <description>1: Rx FIFO_1 is full.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>tx_fifo_full_1</name>
              <description>1: Tx FIFO_1 is full.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>tx_i2s_idle_1</name>
              <description>1: Tx is working but FIFO_1 is empty.</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>rx_fifo_empty_intr_1</name>
              <description>1: Rx FIFO_1 is empty (MIC path).</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>tx_fifo_empty_intr_1</name>
              <description>1: Tx FIFO_1 is empty (SPK path).</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>rx_fifo_full_intr_1</name>
              <description>1: Rx FIFO_1 is full (MIC path).</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>tx_fifo_full_intr_1</name>
              <description>1: Tx FIFO_1 is full (SPK path).</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>sp_ready_to_rx_1</name>
              <description>1: It is ready to receive data (MIC path).</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>sp_ready_to_tx_1</name>
              <description>1: It is ready to send data out (SPK path).</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>tx_i2s_idle_0</name>
              <description>1: Tx is working but FIFO_0 is empty.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>rx_fifo_empty_intr_0</name>
              <description>1: Rx FIFO_0 is empty (MIC path).</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>tx_fifo_empty_intr_0</name>
              <description>1: Tx FIFO_0 is empty (SPK path).</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>rx_fifo_full_intr_0</name>
              <description>1: Rx FIFO_0 is full (MIC path).</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>tx_fifo_full_intr_0</name>
              <description>1: Tx FIFO_0 is full (SPK path).</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>sp_ready_to_rx_0</name>
              <description>1: It is ready to receive data (MIC path).</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>sp_ready_to_tx_0</name>
              <description>1: It is ready to send data out (SPK path).</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SP_FORMAT</name>
          <addressOffset>0x00000028</addressOffset>
          <size>32</size>
          <description>SPORT Format Register</description>
          <resetValue>0x44000007</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>trx_same_ch_len</name>
              <description>1: Tx (SPK path) and Rx (MIC path) have the same channel length.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_ch_len_sel_rx</name>
              <description>3'b000: 16 bits
3'b001: 20 bits
3'b010: 24 bits
3'b100: 32 bits</description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DUMMY3</name>
              <description>Dummy</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_ch_len_sel_tx</name>
              <description>3'b000: 16 bits
3'b001: 20 bits
3'b010: 24 bits
3'b100: 32 bits</description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rx_ideal_len_en</name>
              <description>Function enable of rx_ideal_len.</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rx_ideal_len</name>
              <description>sd_in can be received 1 ~ 8 (= rx_ideal_len + 1 ) BCLK cycle latter.</description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tx_ideal_len_en</name>
              <description>Function enable of tx_ideal_len. PCMA SDO will be delayed 1 LRCK.</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tx_ideal_len</name>
              <description>sd_out can be sent 1 ~ 8 (= tx_ideal_len + 1 ) BCLK cycle earlier.</description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DUMMY4</name>
              <description>Dummy</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_data_len_sel_rx_0</name>
              <description>Data length of MIC path and it is valid if "trx_same_length" == 1'b0.
3'b000: 16 bits
3'b001: 20 bits
3'b010: 24 bits
3'b100: 32 bits</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_en_i2s_mono_rx_0</name>
              <description>Channel format of MIC path and it is valid if "trx_same_ch" == 1'b0.
1: mono
0: stereo</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>trx_same_lrc</name>
              <description>1: "ws_out_rx" is as same as "ws_out_tx"</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_data_format_sel_rx</name>
              <description>Data format of MIC path and it is valid if  "trx_same_fs" == 1'b0.
2'b00: I2S
2'b01: Left-justified
2'b10: PCM mode A
2'b11: PCM mode B</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fixed_bclk</name>
              <description>1: Refer to the description of "fixed_bclk_sel"
0: BCLK = dsp_clk/2 when "mode_40mhz = 0"</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>fixed_bclk_sel</name>
              <description>0: BCLK is fixed at dsp_src_clk/4
1: BCLK is fixed at dsp_src_clk/2</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_wclk_rx_inverse</name>
              <description>1: invert the phase of "ws_out_rx" which is also called as "ADCLRC"</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DUMMY5</name>
              <description>Dummy</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sck_out_inverse</name>
              <description>1: invert the phase of "sck_out"</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>trx_same_length</name>
              <description>1: Tx (SPK path) and Rx (MIC path) have the same data length. Both are either 16 or 24 bits.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>trx_same_ch</name>
              <description>1: Tx (SPK path) and Rx (MIC path) have the same channel setting. Both are either stereo or mono.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>trx_same_fs</name>
              <description>1: Tx (SPK path) and Rx (MIC path) have the same sampling rate</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SP_RX_BCLK</name>
          <addressOffset>0x0000002C</addressOffset>
          <size>32</size>
          <description>SPORT RX BCLK Register</description>
          <resetValue>0x00300271</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>rx_mi_ni_update</name>
              <description>1'b1: to update "mi" and "ni" to get the new clock rate.
This bit will be reset automatically when the update is done.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rx_ni</name>
              <description>BCLK = 40MHz*(ni/mi)     
For example: BCLK=3.072MHz=40MHz*(48/625)</description>
              <bitRange>[30:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rx_mi</name>
              <description></description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SP_RX_LRCLK</name>
          <addressOffset>0x00000030</addressOffset>
          <size>32</size>
          <description>SPORT RX LRCLK Register</description>
          <resetValue>0x00000040</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>clr_tx_sport_rdy</name>
              <description>0x001: Clear tx_sport_interrupt signal
This control bit is "write 1 clear" type.
For read, the read data is from clr_tx_sport_rdy.</description>
              <bitRange>[31:31]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>en_tx_sport_interrupt</name>
              <description>Enable tx_sport_interrupt</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>en_fs_phase_latch</name>
              <description>0x001: Latch the value of tx_fs_phase_rpt, rx_fs_phase_rpt, tx_sport_sounter, rx_sport_sounter at the same time.
This control bit is "write 1 clear" type.</description>
              <bitRange>[29:29]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>DUMMY6</name>
              <description>Dummy</description>
              <bitRange>[28:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tx_sport_compare_val</name>
              <description>X = (tx_sport_compare_val). When counter equal X, SPORT will send tx_sport_interrupt to DSP. 
FW should take care X={32~8191}.</description>
              <bitRange>[26:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SP_DSP_COUNTER</name>
          <addressOffset>0x00000034</addressOffset>
          <size>32</size>
          <description>SPORT DSP Counter Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>tx_sport_counter</name>
              <description>For DSP read instant Tx SPORT counter value, counter down</description>
              <bitRange>[31:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>tx_fs_phase_rpt</name>
              <description>Report Tx phase</description>
              <bitRange>[4:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SP_DIRECT_CTRL0</name>
          <addressOffset>0x0000003C</addressOffset>
          <size>32</size>
          <description>SPORT Direct Control Register 0</description>
          <resetValue>0x76543210</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>tx_ch7_data_sel</name>
              <description>4'h0: tx_fifo_0_reg_0_l
4'h1: tx_fifo_0_reg_0_r
4'h2: tx_fifo_0_reg_1_l
4'h3: tx_fifo_0_reg_1_r 
4'h4: tx_fifo_1_reg_0_l
4'h5: tx_fifo_1_reg_0_r
4'h6: tx_fifo_1_reg_1_l
4'h7: tx_fifo_1_reg_1_r 
4'h8: direct_reg_7</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tx_ch6_data_sel</name>
              <description>(Ibid.) 
4'h8: direct_reg_6</description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tx_ch5_data_sel</name>
              <description>(Ibid.) 
4'h8: direct_reg_5</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tx_ch4_data_sel</name>
              <description>(Ibid.) 
4'h8: direct_reg_4</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tx_ch3_data_sel</name>
              <description>(Ibid.) 
4'h8: direct_reg_3</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tx_ch2_data_sel</name>
              <description>(Ibid.) 
4'h8: direct_reg_2</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tx_ch1_data_sel</name>
              <description>(Ibid.) 
4'h8: direct_reg_1</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tx_ch0_data_sel</name>
              <description>(Ibid.) 
4'h8: direct_reg_0</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SP_FIFO_IRQ</name>
          <addressOffset>0x00000044</addressOffset>
          <size>32</size>
          <description>SPORT FIFO IRQ Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>rx_lsb_first_1</name>
              <description>1'b0: MSB first when Tx
1'b1: LSB first</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tx_lsb_first_1</name>
              <description>1'b0: MSB first when Tx
1'b1: LSB first</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rx_snk_lr_swap_1</name>
              <description>1'b1: Swap L/R audio samples written to the sink memory of RX_FIFO_1</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rx_snk_byte_swap_1</name>
              <description>1'b1: Swap H/L bytes written to the sink memory of RX_FIFO_1</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tx_src_lr_swap_1</name>
              <description>1'b1: Swap L/R audio samples read from the source memory of TX_FIFO_1</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tx_src_byte_swap_1</name>
              <description>1'b1: Swap H/L bytes read from the source memory of TX_FIFO_1</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DUMMY7</name>
              <description>Dummy</description>
              <bitRange>[25:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>int_enable_mcu_1</name>
              <description>Bit[8]: for the interrupt of "sp_ready_to_tx"
Bit[9]: for the interrupt of "sp_ready_to_rx"
Bit[10]: for the interrupt of "tx_fifo_full_intr"
Bit[11]: for the interrupt of "rx_fifo_full_intr"
Bit[12]: for the interrupt of "tx_fifo_empty_intr"
Bit[13]: for the interrupt of "rx_fifo_empty_intr"
Bit[14]: for the interrupt of "tx_i2s_idle"
Bit[15]: Reserved</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>int_enable_mcu_0</name>
              <description>Bit[0]: for the interrupt of "sp_ready_to_tx"
Bit[1]: for the interrupt of "sp_ready_to_rx"
Bit[2]: for the interrupt of "tx_fifo_full_intr"
Bit[3]: for the interrupt of "rx_fifo_full_intr"
Bit[4]: for the interrupt of "tx_fifo_empty_intr"
Bit[5]: for the interrupt of "rx_fifo_empty_intr"
Bit[6]: for the interrupt of "tx_i2s_idle"
Bit[7]: Reserved</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SP_DIRECT_CTRL1</name>
          <addressOffset>0x00000048</addressOffset>
          <size>32</size>
          <description>SPORT Direct Control Register 1</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>sp_en_i2s_mono_rx_1</name>
              <description>Channel format of MIC path and it is valid if "trx_same_ch" == 1'b0.
1'b1: mono
1'b0: stereo</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_data_len_sel_rx_1</name>
              <description>Data length of MIC path and it is valid if "trx_same_length" == 1'b0.
3'b000: 16 bits
3'b001: 20 bits
3'b010: 24 bits
3'b100: 32 bits</description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_en_i2s_mono_tx_1</name>
              <description>1'b1: mono
1'b0: stereo</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_data_len_sel_tx_1</name>
              <description>3'b000: 16 bits
3'b001: 20 bits
3'b010: 24 bits
3'b100: 32 bits</description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>direct_reg_3_en</name>
              <description>1'b1: Enable direct_reg_3.</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>direct_reg_3_sel</name>
              <description>5'h0: spa_direct_in_0
5'h1: spa_direct_in_1
5'h2: spa_direct_in_2
5'h3: spa_direct_in_3
5'h4: spa_direct_in_4
5'h5: spa_direct_in_5
5'h6: spa_direct_in_6
5'h7: spa_direct_in_7
5'h8: spb_direct_in_0
5'h9: spb_direct_in_1
5'ha: spb_direct_in_2
5'hb: spb_direct_in_3
5'hc: spb_direct_in_4
5'hd: spb_direct_in_5
5'he: spb_direct_in_6
5'hf: spb_direct_in_7
5'h10: spc_direct_in_0
5'h11: spc_direct_in_1
5'h12: spc_direct_in_2
5'h13: spc_direct_in_3
5'h14: spc_direct_in_4
5'h15: spc_direct_in_5
5'h16: spc_direct_in_6
5'h17: spc_direct_in_7
5'h18: sp0_direct_in_tx_fifo_0_reg_0_l
5'h19: sp0_direct_in_tx_fifo_0_reg_0_r
5'h1a: sp0_direct_in_tx_fifo_0_reg_1_l
5'h1b: sp0_direct_in_tx_fifo_0_reg_1_r
5'h1c: TDM_RX_CH3
SPORT0: a = 1, b = 2, c = 3
SPORT1: a = 0, b = 2, c = 3
SPORT2: a = 0, b = 1, c = 3
SPORT3: a = 0, b = 1, c = 2</description>
              <bitRange>[22:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>direct_reg_2_en</name>
              <description>1'b1: Enable direct_reg_2.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>direct_reg_2_sel</name>
              <description>(Ibid.)
5'h1c: TDM_RX_CH2</description>
              <bitRange>[16:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>direct_reg_1_en</name>
              <description>1'b1: Enable direct_reg_1.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>direct_reg_1_sel</name>
              <description>(Ibid.)
5'h1c: TDM_RX_CH1</description>
              <bitRange>[10:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>direct_reg_0_en</name>
              <description>1'b1: Enable direct_reg_0.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>direct_reg_0_sel</name>
              <description>(Ibid.)
5'h1c: TDM_RX_CH0</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SP_DIRECT_CTRL2</name>
          <addressOffset>0x0000004C</addressOffset>
          <size>32</size>
          <description>SPORT Direct Control Register 2</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>sp_direct_out_7_en</name>
              <description>Enable sp_direct_out_7.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_direct_out_6_en</name>
              <description>Enable sp_direct_out_6.</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_direct_out_5_en</name>
              <description>Enable sp_direct_out_5.</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_direct_out_4_en</name>
              <description>Enable sp_direct_out_4.</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_direct_out_3_en</name>
              <description>Enable sp_direct_out_3.</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_direct_out_2_en</name>
              <description>Enable sp_direct_out_2.</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_direct_out_1_en</name>
              <description>Enable sp_direct_out_1.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sp_direct_out_0_en</name>
              <description>Enable sp_direct_out_0.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>direct_reg_7_en</name>
              <description>1'b1: Enable direct_reg_7.</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>direct_reg_7_sel</name>
              <description>5'h0: spa_direct_in_0
5'h1: spa_direct_in_1
5'h2: spa_direct_in_2
5'h3: spa_direct_in_3
5'h4: spa_direct_in_4
5'h5: spa_direct_in_5
5'h6: spa_direct_in_6
5'h7: spa_direct_in_7
5'h8: spb_direct_in_0
5'h9: spb_direct_in_1
5'ha: spb_direct_in_2
5'hb: spb_direct_in_3
5'hc: spb_direct_in_4
5'hd: spb_direct_in_5
5'he: spb_direct_in_6
5'hf: spb_direct_in_7
5'h10: spc_direct_in_0
5'h11: spc_direct_in_1
5'h12: spc_direct_in_2
5'h13: spc_direct_in_3
5'h14: spc_direct_in_4
5'h15: spc_direct_in_5
5'h16: spc_direct_in_6
5'h17: spc_direct_in_7
5'h18: sp0_direct_in_tx_fifo_0_reg_0_l
5'h19: sp0_direct_in_tx_fifo_0_reg_0_r
5'h1a: sp0_direct_in_tx_fifo_0_reg_1_l
5'h1b: sp0_direct_in_tx_fifo_0_reg_1_r
5'h1c: TDM_RX_CH7
SPORT0: a = 1, b = 2, c = 3
SPORT1: a = 0, b = 2, c = 3
SPORT2: a = 0, b = 1, c = 3
SPORT3: a = 0, b = 1, c = 2</description>
              <bitRange>[22:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>direct_reg_6_en</name>
              <description>1'b1: Enable direct_reg_6.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>direct_reg_6_sel</name>
              <description>(Ibid.)
5'h1c: TDM_RX_CH6</description>
              <bitRange>[16:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>direct_reg_5_en</name>
              <description>1'b1: Enable direct_reg_5.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>direct_reg_5_sel</name>
              <description>(Ibid.)
5'h1c: TDM_RX_CH5</description>
              <bitRange>[10:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>direct_reg_4_en</name>
              <description>1'b1: Enable direct_reg_4.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>direct_reg_4_sel</name>
              <description>(Ibid.)
5'h1c: TDM_RX_CH4</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SP_DIRECT_CTRL3</name>
          <addressOffset>0x00000054</addressOffset>
          <size>32</size>
          <description>SPORT Direct Control Register 3</description>
          <resetValue>0x03020100</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DUMMY8</name>
              <description>Dummy</description>
              <bitRange>[31:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rx_fifo_0_reg_1_r_sel</name>
              <description>5'd0: RX_CH0_data_out (MIC path)
5'd1: RX_CH1_data_out (MIC path)
5'd2: RX_CH2_data_out (MIC path)
5'd3: RX_CH3_data_out (MIC path)
5'd4: RX_CH4_data_out (MIC path)
5'd5: RX_CH5_data_out (MIC path)
5'd6: RX_CH6_data_out (MIC path)
5'd7: RX_CH7_data_out (MIC path)
5'd8:  spa_direct_in_0 
5'd9:  spa_direct_in_1
5'd10: spa_direct_in_2
5'd11: spa_direct_in_3
5'd12: spa_direct_in_4
5'd13: spa_direct_in_5
5'd14: spa_direct_in_6
5'd15: spa_direct_in_7
5'd16: spb_direct_in_0
5'd17: spb_direct_in_1
5'd18: spb_direct_in_2
5'd19: spb_direct_in_3
5'd20: spb_direct_in_4
5'd21: spb_direct_in_5
5'd22: spb_direct_in_6
5'd23: spb_direct_in_7
5'd24: spc_direct_in_0
5'd25: spc_direct_in_1
5'd26: spc_direct_in_2
5'd27: spc_direct_in_3
5'd28: spc_direct_in_4
5'd29: spc_direct_in_5
5'd30: spc_direct_in_6
5'd31: spc_direct_in_7
SPORT0: a = 1, b = 2, c = 3
SPORT1: a = 0, b = 2, c = 3
SPORT2: a = 0, b = 1, c = 3
SPORT3: a = 0, b = 1, c = 2</description>
              <bitRange>[28:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DUMMY9</name>
              <description>Dummy</description>
              <bitRange>[23:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rx_fifo_0_reg_1_l_sel</name>
              <description>(Ibid.)</description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DUMMY10</name>
              <description>Dummy</description>
              <bitRange>[15:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rx_fifo_0_reg_0_r_sel</name>
              <description>(Ibid.)</description>
              <bitRange>[12:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DUMMY11</name>
              <description>Dummy</description>
              <bitRange>[7:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rx_fifo_0_reg_0_l_sel</name>
              <description>(Ibid.)</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SP_DIRECT_CTRL4</name>
          <addressOffset>0x00000058</addressOffset>
          <size>32</size>
          <description>SPORT Direct Control Register 4</description>
          <resetValue>0x07060504</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DUMMY12</name>
              <description>Dummy</description>
              <bitRange>[31:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rx_fifo_1_reg_1_r_sel</name>
              <description>5'd0: RX_CH0_data_out (MIC path)
5'd1: RX_CH1_data_out (MIC path)
5'd2: RX_CH2_data_out (MIC path)
5'd3: RX_CH3_data_out (MIC path)
5'd4: RX_CH4_data_out (MIC path)
5'd5: RX_CH5_data_out (MIC path)
5'd6: RX_CH6_data_out (MIC path)
5'd7: RX_CH7_data_out (MIC path)
5'd8:  spa_direct_in_0
5'd9:  spa_direct_in_1
5'd10: spa_direct_in_2
5'd11: spa_direct_in_3
5'd12: spa_direct_in_4
5'd13: spa_direct_in_5
5'd14: spa_direct_in_6
5'd15: spa_direct_in_7
5'd16: spb_direct_in_0
5'd17: spb_direct_in_1
5'd18: spb_direct_in_2
5'd19: spb_direct_in_3
5'd20: spb_direct_in_4
5'd21: spb_direct_in_5
5'd22: spb_direct_in_6
5'd23: spb_direct_in_7
5'd24: spc_direct_in_0
5'd25: spc_direct_in_1
5'd26: spc_direct_in_2
5'd27: spc_direct_in_3
5'd28: spc_direct_in_4
5'd29: spc_direct_in_5
5'd30: spc_direct_in_6
5'd31: spc_direct_in_7
SPORT0: a = 1, b = 2, c = 3
SPORT1: a = 0, b = 2, c = 3
SPORT2: a = 0, b = 1, c = 3
SPORT3: a = 0, b = 1, c = 2</description>
              <bitRange>[28:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DUMMY13</name>
              <description>Dummy</description>
              <bitRange>[23:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rx_fifo_1_reg_1_l_sel</name>
              <description>(Ibid.)</description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DUMMY14</name>
              <description>Dummy</description>
              <bitRange>[15:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rx_fifo_1_reg_0_r_sel</name>
              <description>(Ibid.)</description>
              <bitRange>[12:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DUMMY15</name>
              <description>Dummy</description>
              <bitRange>[7:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rx_fifo_1_reg_0_l_sel</name>
              <description>(Ibid.)</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SP_RX_COUNTER1</name>
          <addressOffset>0x0000005C</addressOffset>
          <size>32</size>
          <description>SPORT RX Counter Register 1</description>
          <resetValue>0x00000040</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>clr_rx_sport_rdy</name>
              <description>X = (tx_sport_compare_val). When counter equals X, SPORT will send tx_sport_interrupt to DSP. 
FW should take care X={32~8191}.</description>
              <bitRange>[31:31]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>en_rx_sport_interrupt</name>
              <description>Enable Rx SPORT interrupt</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DUMMY16</name>
              <description>Dummy</description>
              <bitRange>[29:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rx_sport_compare_val</name>
              <description>X = (rx_sport_compare_val). When counter equals X, SPORT will send rx_sport_interrupt to DSP. 
FW should take care X={32~8191}.</description>
              <bitRange>[26:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SP_RX_COUNTER2</name>
          <addressOffset>0x00000060</addressOffset>
          <size>32</size>
          <description>SPORT RX Counter Register 2</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>rx_sport_counter</name>
              <description>For DSP read instant Rx SPORT counter value, counter down</description>
              <bitRange>[31:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>rx_fs_phase_rpt</name>
              <description>Report Rx phase</description>
              <bitRange>[4:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TX_FIFO_0_WR_ADDR</name>
          <addressOffset>0x00000800</addressOffset>
          <size>32</size>
          <description>TX FIFO 0 Write Address Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TX_FIFO_0_WR_ADDR</name>
              <description>Tx FIFO 0 write address</description>
              <bitRange>[31:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RX_FIFO_0_RD_ADDR</name>
          <addressOffset>0x00000880</addressOffset>
          <size>32</size>
          <description>RX FIFO 0 Read Address Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RX_FIFO_0_RD_ADDR</name>
              <description>Rx FIFO 0 read address</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TX_FIFO_1_WR_ADDR</name>
          <addressOffset>0x00000900</addressOffset>
          <size>32</size>
          <description>TX FIFO 1 Write Address Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TX_FIFO_1_WR_ADDR</name>
              <description>Tx FIFO 1 write address</description>
              <bitRange>[31:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RX_FIFO_1_RD_ADDR</name>
          <addressOffset>0x00000980</addressOffset>
          <size>32</size>
          <description>RX FIFO 1 Read Address Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RX_FIFO_1_RD_ADDR</name>
              <description>Rx FIFO 1 read address</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>ipsec</name>
      <baseAddress>0x40100000</baseAddress>
      <size>0x0000101C</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x0000101C</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>REG_SDSR</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description>Source Descriptor Status Register</description>
          <resetValue>0x40000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>src_rst</name>
              <description>Source descriptor reset. (only for pk_up = 1'b1)</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pk_up</name>
              <description>Packet base update wptr to engine.
If pk_up =1, the total number of souce descriptor in one packet can't be over 16, and the total number of destination descriptor in one packet can't be over 8.</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>src_fail_status</name>
              <description>Source Descriptor failed status.
2'd1: Users write the first word twice consecutively
2'd2: Users write the second word directly without writing first word in the beginning
2'd3: Overflow (Detect users try to write source descriptor, but there isn't available FIFO node could use).</description>
              <bitRange>[26:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>src_fail</name>
              <description>Source Descriptor failed interrupt. Write 1 to clear this bit.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SRPTR</name>
              <description>Source Descriptor FIFO read pointer. When engine read a descriptor and finished it, SRPTR = SRPTR+2</description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SWPTR</name>
              <description>Source Descriptor FIFO write pointer. When write descriptor to SDSW successfully, SWPTR = SWPTR+2</description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>src_des_fifo_empty_cnt</name>
              <description>Source Descriptor FIFO empty counter. Use this field to check how many available FIFO nodes in Source descriptor FIFO could use.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SDFWR</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description>Source Descriptor First Word Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SDFW</name>
              <description>Source Descriptor First Word</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SDSWR</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description>Source Descriptor Second Word Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SDSW</name>
              <description>Source Descriptor Second Word</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_IPSCSR_RSTEACONFISR</name>
          <addressOffset>0x00000010</addressOffset>
          <size>32</size>
          <description>Reset Engine And Configure Interrupt Service Routine Register</description>
          <resetValue>0x04010000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ipsec_rst</name>
              <description>IPsec engine reset. Write '1' to reset the crypto engine and DMA engine. (Use to clear fatal error)</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ahb_err_int_mask</name>
              <description></description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>clr_ahb_err_int</name>
              <description></description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ahb_err_int</name>
              <description></description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>clear_ok_int_num</name>
              <description>Clear ok interrupt number. In interrupt counter mode, if the programmer wants to clear ok_intr_cnt, need to write ok_intr_cnt to this field first, then write '1' to cmd_ok.</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ok_intr_cnt</name>
              <description>Ok interrupt counter. Read this field can know how many interrupts are coming to notify crypto engine has calculated cryptographic feature results. Use this field in interrupt counter mode.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>intr_mode</name>
              <description>Select ok interrupt mode:
1'd0: Interrupt mode is general mode.
1'd1: Interrupt mode is counter mode.
General mode means no matter how many interrupts are coming to notify crypto engine has calculated cryptographic feature results, there always is one interrupt signal shows in cmd_ok field, and nothing in ok_intr_cnt. So if the programmer want to clear this signal, just write '1' to cmd_ok.
Counter mode means the programmer can know how many interrupts are coming to notify crypto engine has calculated cryptographic feature results from ok_intr_cnt. The programmer also can know there are at least one interrupt from reading cmd_ok. So if the programmer want to clear ok_intr_cnt signals, need to write ok_intr_cnt into clear_ok_int_num, then write '1' to cmd_ok.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cmd_ok</name>
              <description>Command ok Interrupt. Read this field to detect whether crypto engine has calculated a cryptographic feature result. 
Even if interrupt mode is counter mode, still can use this field to detect whether an interrupt is coming.
Write '1' to clear this interrupt signal.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dma_busy</name>
              <description>Detect whether IPsec DMA is busy:
1'd0: DMA is not busy
1'd1: DMA is busy
Using for debuging to avoid data coherence issue (when getting crypto finish calculated interrupt, user can make sure DMA engine has already move data to result buffer.)</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>soft_rst</name>
              <description>Software Reset. Write '1' to reset the crypto engine</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_IPSCSR_INTM</name>
          <addressOffset>0x00000014</addressOffset>
          <size>32</size>
          <description>Interrupt Mask Register</description>
          <resetValue>0x0007FFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>des_err5_m</name>
              <description>Destination Descriptor Error 5 Interrupt Mask
1'd0: Disable mask
1'd1: Enable mask</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>des_err4_m</name>
              <description>Destination Descriptor Error 4 Interrupt Mask
1'd0: Disable mask
1'd1: Enable mask</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>des_err3_m</name>
              <description>Destination Descriptor Error 3 Interrupt Mask
1'd0: Disable mask
1'd1: Enable mask</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>des_err2_m</name>
              <description>Destination Descriptor Error 2 Interrupt Mask
1'd0: Disable mask
1'd1: Enable mask</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>des_err1_m</name>
              <description>Destination Descriptor Error 1 Interrupt Mask
1'd0: Disable mask
1'd1: Enable mask</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>des_err0_m</name>
              <description>Destination Descriptor Error 0 Interrupt Mask
1'd0: Disable mask
1'd1: Enable mask</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>src_err9_m</name>
              <description>Source Descriptor Error 9 Interrupt Mask
1'd0: Disable mask
1'd1: Enable mask</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>src_err8_m</name>
              <description>Source Descriptor Error 8 Interrupt Mask
1'd0: Disable mask
1'd1: Enable mask</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>src_err7_m</name>
              <description>Source Descriptor Error 7 Interrupt Mask
1'd0: Disable mask
1'd1: Enable mask</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>src_err6_m</name>
              <description>Source Descriptor Error 6 Interrupt Mask
1'd0: Disable mask
1'd1: Enable mask</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>src_err5_m</name>
              <description>Source Descriptor Error 5 Interrupt Mask
1'd0: Disable mask
1'd1: Enable mask</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>src_err4_m</name>
              <description>Source Descriptor Error 4 Interrupt Mask
1'd0: Disable mask
1'd1: Enable mask</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>src_err3_m</name>
              <description>Source Descriptor Error 3 Interrupt Mask
1'd0: Disable mask
1'd1: Enable mask</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>src_err2_m</name>
              <description>Source Descriptor Error 2 Interrupt Mask
1'd0: Disable mask
1'd1: Enable mask</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>src_err1_m</name>
              <description>Source Descriptor Error 1 Interrupt Mask
1'd0: Disable mask
1'd1: Enable mask</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>src_err0_m</name>
              <description>Source Descriptor Error 0 Interrupt Mask
1'd0: Disable mask
1'd1: Enable mask</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>des_fail_m</name>
              <description>Source Descriptor fail interrupt mask.
1'd0: Disable mask
1'd1: Enable mask</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>src_fail_m</name>
              <description>Destination Descriptor fail interrupt mask.
1'd0: Disable mask
1'd1: Enable mask</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cmd_ok_m</name>
              <description>Command ok Interrupt Mask.
1'd0: Disable mask
1'd1: Enable mask
If the programmer wants to disable cmd_ok interrupt signal, write '1' to enable interrupt mask.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_IPSCSR_DBG</name>
          <addressOffset>0x00000018</addressOffset>
          <size>32</size>
          <description>Debug Regster</description>
          <resetValue>0x00010000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>debug_wb</name>
              <description>Debug: write back mode.
1'd0: Disable DMA write back mode.
1'd1: Enable DMA write back mode.
Enable this field, crypto DMA will move data from source address to destination address. During this period, the data won't be processed in any calculation (Encryption, Decryption, Hash). Then the programmer can check whether the source data is the same as destination data.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>mst_bad_sel</name>
              <description>Select Lexra master data bus (optional)
2'd0: mst_ipsec_bad[07:00]
2'd1: mst_ipsec_bad[15:08]
2'd2: mst_ipsec_bad[23:16]
2'd3: mst_ipsec_bad[31:24]</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>engine_clk_en</name>
              <description>IPsec engine clock enable
1'd0: Disable IPsec engine clock
1'd1: Enable IPsec engine clock</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>debug_port_sel</name>
              <description>Debug port selection
4'd0: engine_debug
4'd1: dma_lexra_debug
4'd2: dma_rx_debug
4'd3: dma_tx_debug</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>arbiter_mode</name>
              <description>DMA arbiter mode:
1'd0: round-robin
1'd1: detect FIFO wasted level
There are 2 FIFOs in DMA that are read FIFO and write FIFO. Detect FIFO wasted level means that DMA will process which FIFO first depends on which wasted level is high. Because the wasted level is high means there are many FIFO nodes waiting to be processed in this FIFO, so DMA must process them in hurry.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dma_wait_cycle</name>
              <description>Set DMA wait cycles to assert next DMA request</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_IPSCSR_ERR_INT</name>
          <addressOffset>0x0000001C</addressOffset>
          <size>32</size>
          <description>Error Interrupt Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>lx_fail_3</name>
              <description>When a burst done,burst length != burst cnt
Write "1" to clear this error signal.</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>lx_fail_2</name>
              <description>When ipsec is working, rdata from bus != rdata of ipsec or wdata of ipsec != wdata on bus
Write "1" to clear this error signal.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>lx_fail_1</name>
              <description>lx bus timing issue
Write "1" to clear this error signal.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>des_err5</name>
              <description>Destination Descriptor Error 5 Interrupt. The error condition is authentication digest length error in destination descriptor.
MD5: adl != 16 or
SHA1: adl != 20 or
SHA2-224: adl != 28 or adl != 32 when set sequential hash and not sequential hash last
SHA2-256: adl != 32 or
SHA2-384: adl != 48 or adl != 64 when set sequential hash and not sequential hash last
SHA2-512: adl != 64
Write '1' to clear this error signal.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>des_err4</name>
              <description>Destination Descriptor Error 4 Interrupt. The error condition is authentication digest length error in destination descriptor.
MD5: adl &gt; 16 or
SHA1: adl &gt; 20 or
SHA2-224: adl &gt; 28 or adl &gt; 32when set sequential hash and not sequential hash last
SHA2-256: adl &gt; 32 or
SHA2-384: adl &gt; 48 or adl &gt; 64when set sequential hash and not sequential hash last
SHA2-512: adl &gt; 64
Write '1' to clear this error signal.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>des_err3</name>
              <description>Destination Descriptor Error 3 Interrupt. One of the error conditions is the sum of enl is greater than Encryption Total Length. The other error condition is about destination descriptor length error ((enl(Encryption length)==0) &amp; (adl(authentication data length)==0)).
Write '1' to clear this error signal.
Sum of enl reference the register REG_IPSCSR_SENLR (offset 0x24).</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>des_err2</name>
              <description>Destination Descriptor Error 2 Interrupt. The error condition is the bit field ENC=1'b0 (active Hash engine to process hash data), but only active Cipher engine.
Write '1' to clear this error signal.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>des_err1</name>
              <description>Destination Descriptor Error 1 Interrupt. The error condition is the bit field ENC=1'b1 (active cipher engine to process cipher data), but only active Hash engine.
Write '1' to clear this error signal.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>des_err0</name>
              <description>Destination Descriptor Error 0 Interrupt. One of the error conditions is destination descriptor starting address error (DDSA[1:0]!=2'd0 [At least 4 bytes-aligned]). The other error condition is memory protection event.
Write '1' to clear this error signal.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>src_err9</name>
              <description>Source Descriptor Error 9 Interrupt. The error condition is sum of epl is not equal to EPTL (Encryption Padding Total Length). 
Write '1' to clear this error signal.
Sum of epl reference the register REG_IPSCSR_SEPLR (offset 0x2C).</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>src_err8</name>
              <description>Source Descriptor Error 8 Interrupt. The error condition is sum of apl is not equal to HPTL (Hash Padding Total Length). 
Write '1' to clear this error signal.
Sum of apl reference the register REG_IPSCSR_SAPLR (offset 0x28).</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>src_err7</name>
              <description>Source Descriptor Error 7 Interrupt. The error condition is sum of enl is not equal to ETL (Encryption Total Length). 
Write '1' to clear this error signal.
Sum of enl reference the register REG_IPSCSR_SENLR (offset 0x24).</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>src_err6</name>
              <description>Source Descriptor Error 6 Interrupt. The error condition is sum of a2eo is not equal to HTL (Header Total Length). 
Write '1' to clear this error signal.
Sum of a2eo reference the register REG_IPSCSR_SAADLR (offset 0x20).</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>src_err5</name>
              <description>Source Descriptor Error 5 Interrupt. The error condition is there is a source descriptor, but the data length ((a2eo/epl) +(enl) + (apl)) is 0.
Write '1' to clear this error signal.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>src_err4</name>
              <description>Source Descriptor Error 4 Interrupt. The error condition is source data buffer pointer error (SDBP[1:0]!=2'd0 [At least 4 byte aligned]).
Write '1' to clear this error signal.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>src_err3</name>
              <description>Source Descriptor Error 3 Interrupt. About source descriptor length error, one of the error conditions is set the first descriptor but the (CL!=3). The other error condition is there is a source descriptor but CL, KL, IL, PL, SHIVL are all 0.
Write '1' to clear this error signal.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>src_err2</name>
              <description>Source Descriptor Error 2 Interrupt. One of the error conditions is Source descriptor starting address error (SDSA[1:0]!=2'd0 [At least 4 bytes-aligned]). The other error condition is memory protection event.
Write '1' to clear this error signal.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>src_err1</name>
              <description>Source Descriptor Error 1 Interrupt. The error condition is last Segment descriptor is set (LS=1), when descriptor is pointing to the first segment of the packet.
Write '1' to clear this error signal.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>src_err0</name>
              <description>Source Descriptor Error 0 Interrupt. One of the error conditions is first segment descriptor is not set (FS=0), when descriptor is pointing to the first segment of the packet. The other error condition is first segment descriptor is set (FS=1), when descriptor is not pointing to the first segment of the packet. 
Write '1' to clear this error signal.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_IPSCSR_SADDLR</name>
          <addressOffset>0x00000020</addressOffset>
          <size>32</size>
          <description>Sum of Additional Authentication Data Length Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>a2eo_sum</name>
              <description>Sum of additional authentication data length.</description>
              <bitRange>[10:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_IPSCSR_SENLR</name>
          <addressOffset>0x00000024</addressOffset>
          <size>32</size>
          <description>Sum of Encryption Data Length Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>enl_sum</name>
              <description>Sum of encryption data length.</description>
              <bitRange>[23:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_IPSCSR_SAPLR</name>
          <addressOffset>0x00000028</addressOffset>
          <size>32</size>
          <description>Sum of Authentication Padding Data Length Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>apl_sum</name>
              <description>Sum of authentication padding data length. (Mix mode uses this field)</description>
              <bitRange>[11:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_IPSCSR_SEPLR</name>
          <addressOffset>0x0000002C</addressOffset>
          <size>32</size>
          <description>Sum of Encryption Padding Data Length Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>epl_sum</name>
              <description>Sum of encryption padding data length. (Mix mode uses this field)</description>
              <bitRange>[5:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_IPSCSR_SWAPABURSTR</name>
          <addressOffset>0x00000030</addressOffset>
          <size>32</size>
          <description>Swap and Burst Register</description>
          <resetValue>0x00100000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>cha_input_data_byte_swap</name>
              <description>Byte swap for cha input data
1: Enable
0: Disable</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cha_output_data_byte_swap</name>
              <description>Byte swap for cha output data
1: Enable
0: Disable</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>md5_input_data_byte_swap</name>
              <description>Byte swap for md5 input data
1: Enable
0: Disable</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>md5_output_data_byte_swap</name>
              <description>Byte swap for md5 output data
1: Enable
0: Disable</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dma_burst_length</name>
              <description>Set DMA burst length
The maximum setting length is 16 bursts, and the minimum setting length is 1 burst.
Note: If all bits are zero (6'd0), it means maximum burst size or undefined burst size.</description>
              <bitRange>[21:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tx_wd_swap</name>
              <description>Word swap for dma_tx engine input data
1'd0: Disable
1'd1: Enable</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rx_wd_swap</name>
              <description>Word swap for dma_rx engine output data
1'd0: Disable
1'd1: Enable</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>mac_out_little_endian</name>
              <description>Ouput mac is little endian
1'd0: Big endian
1'd1: Little endian</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>data_out_little_endian</name>
              <description>Ouput data is little endian
1'd0: Big endian
1'd1: Little endian</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tx_byte_swap</name>
              <description>Byte swap for dma_tx engine input data
1'd0: Disable
1'd1: Enable</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>auto_padding_swap</name>
              <description>Byte swap for padding_len input data
1 : Enable
0 : Disable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>data_in_little_endian</name>
              <description>Input data is little endian
1'd0: Big endian
1'd1: Little endian</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>hash_initial_value_swap</name>
              <description>Byte swap for sequential hash initial value
1'd0: Disable
1'd1: Enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>key_pad_swap</name>
              <description>Byte swap for HMAC key pad
1'd0: Disable
1'd1: Enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>key_iv_swap</name>
              <description>Byte swap for Cipher key and Initial Vector
1'd0: Disable
1'd1: Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>set_swap</name>
              <description>Byte swap for command setting data
1'd0: Disable
1'd1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_IPSEKCR</name>
          <addressOffset>0x00000034</addressOffset>
          <size>32</size>
          <description>Key Control Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>efuse_key_req</name>
              <description>Request of loading key from OTP, cleared by key_rdy</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>efuse_key_id</name>
              <description>2'b00: load key from OTP key1
2'b01: load key from OTP key2
2'b10: load key from OTP RSIP key1
2'b11: load key from OTP RSIP key2</description>
              <bitRange>[30:29]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ENG_DBG</name>
          <addressOffset>0x00000040</addressOffset>
          <size>32</size>
          <description>Debug Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_dbg</name>
              <description>Crypto engine debug info</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DMA_LX_DBG</name>
          <addressOffset>0x00000044</addressOffset>
          <size>32</size>
          <description>LX Bus Debug Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dma_lx_dbg</name>
              <description>Crypto engine LX bus debug info</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DMA_RX_DBG</name>
          <addressOffset>0x00000048</addressOffset>
          <size>32</size>
          <description>DMA Rx Debug Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dma_rx_dbg</name>
              <description>Crypto engine DMA Rx debug info</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DMA_TX_DBG</name>
          <addressOffset>0x0000004C</addressOffset>
          <size>32</size>
          <description>DMA Tx Debug Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dma_tx_dbg</name>
              <description>Crypto engine DMA Tx debug info</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DDSR</name>
          <addressOffset>0x00001000</addressOffset>
          <size>32</size>
          <description>Destination Descriptor Status Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>des_rst</name>
              <description>Destination descriptor reset. (only for pk_up = 1'b1)</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>des_fail_status</name>
              <description>Destination Descriptor failed status
2'd1: Users write the first word twice consecutively
2'd2: Users write the second word directly without writing first word in the beginning
2'd3: Overflow (Detect users try to write source descriptor, but there isn't available FIFO node could use).</description>
              <bitRange>[26:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>des_fail</name>
              <description>Destination Descriptor failed interrupt. Write 1 to clear this bit.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DRPTR</name>
              <description>Destination Descriptor FIFO read pointer. When engine reads a descriptor and finished it, DRPTR = DRPTR+2</description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DWPTR</name>
              <description>Destination Descriptor FIFO write pointer. When write descriptor to DDSW successfully, DWPTR = DWPTR+2</description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>des_des_fifo_empty_cnt</name>
              <description>Destination Descriptor FIFO empty counter. Use this field to check how many available FIFO nodes in Destination descriptor FIFO could use.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DDFWR</name>
          <addressOffset>0x00001004</addressOffset>
          <size>32</size>
          <description>Destination Descriptor First Word Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DDFW</name>
              <description>Destination Descriptor First Word</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DDSWR</name>
          <addressOffset>0x00001008</addressOffset>
          <size>32</size>
          <description>Destination Descriptor Second Word Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DDSW</name>
              <description>Destination Descriptor Second Word</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DES_PKTCONF</name>
          <addressOffset>0x0000100C</addressOffset>
          <size>32</size>
          <description>Packet Configure Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>cfg_pk_arbiter_mode</name>
              <description>Arbiter rule between secure and no-secure access
0: round-robin
1/2/3: decided by the load_count of source descpritor FIFO of secure and non-secure, the more full is the winner.</description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cfg_bus3_priority_th</name>
              <description>The priority of bus3 (reserved now)</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cfg_bus2_priority_th</name>
              <description>The priority of bus2 - secure access.
If 0x100C[31:30]=1, the load_count of source descriptor FIFO is wr_ptr - rd_ptr + 0x100C[27:26]. Otherwise, the load_count of source descriptor FIFO is wr_ptr - rd_ptr.</description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cfg_bus1_priority_th</name>
              <description>The priority of bus2 - non-secure access.
If 0x100C[31:30]=1, the load_count of source descriptor FIFO is wr_ptr - rd_ptr + 0x100C[25:24]. Otherwise, the load_count of source descriptor FIFO is wr_ptr - rd_ptr.</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DBG_DPTR</name>
              <description>Destination Descriptor FIFO read pointer: Users read this pointer value can know what the ID number of FIFO node that is now pointed by read pointer is.
If users want to know what the 32bits value of a specified FIFO node, users can write an ID number to this read pointer, then get the 32bits value from Debug Destination Descriptor Data Register.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DBG_SPTR</name>
              <description>Source Descriptor FIFO read pointer: Users read this pointer value can know what the ID number of FIFO node that is now pointed by read pointer is.
If users want to know what the 32bits value of a specified FIFO node, users can write an ID number to this read pointer, then get the 32bits value from Debug Source Descriptor Data Register.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DBGSDR</name>
          <addressOffset>0x00001010</addressOffset>
          <size>32</size>
          <description>Debug Source Descriptor Data Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DBG_SD</name>
              <description>Debug Source Descriptor Data
This register is used with DBG_SPTR.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DBGDDR</name>
          <addressOffset>0x00001014</addressOffset>
          <size>32</size>
          <description>Debug Destination Descriptor Data Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DBG_DD</name>
              <description>Debug Destination Descriptor Data
This register is used with DBG_DPTR.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DUMMY</name>
          <addressOffset>0x00001018</addressOffset>
          <size>32</size>
          <description>Dummy Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>HW used only, reserved</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>hash</name>
      <baseAddress>0x40108000</baseAddress>
      <size>0x0000101C</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x0000101C</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>REG_SDSR</name>
          <addressOffset>0x00000000</addressOffset>
          <size>32</size>
          <description>Source Descriptor Status Register</description>
          <resetValue>0x40000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>src_rst</name>
              <description>Source descriptor reset. (only for pk_up = 1'b1)</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>pk_up</name>
              <description>Packet base update wptr to engine.
If pk_up =1, the total number of souce descriptor in one packet can't be over 16, and the total number of destination descriptor in one packet can't be over 8.</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>src_fail_status</name>
              <description>Source Descriptor failed status.
2'd1: Users write the first word twice consecutively
2'd2: Users write the second word directly without writing first word in the beginning
2'd3: Overflow (Detect users try to write source descriptor, but there isn't available FIFO node could use).</description>
              <bitRange>[26:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>src_fail</name>
              <description>Source Descriptor failed interrupt. Write 1 to clear this bit.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SRPTR</name>
              <description>Source Descriptor FIFO read pointer. When engine reads a descriptor and finishes it, SRPTR = SRPTR+2</description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SWPTR</name>
              <description>Source Descriptor FIFO write pointer. When write descriptor to SDSW successfully, SWPTR = SWPTR+2</description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>src_desc_fifo_empty_cnt</name>
              <description>Source Descriptor FIFO empty counter. Use this field to check how many available FIFO nodes in Source descriptor FIFO could use.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SDFWR</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description>Source Descriptor First Word Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SDFW</name>
              <description>Source Descriptor First Word</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SDSWR</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description>Source Descriptor Second Word Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SDSW</name>
              <description>Source Descriptor Second Word</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_IPSCSR_RSTEACONFISR</name>
          <addressOffset>0x00000010</addressOffset>
          <size>32</size>
          <description>Reset Engine And Configure Interrupt Service Routine Register</description>
          <resetValue>0x04010000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ipsec_rst</name>
              <description>IPsec engine reset. Write '1' to reset the crypto engine and DMA engine. (Use to clear fatal error)</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ahb_err_int_mask</name>
              <description></description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>clr_ahb_err_int</name>
              <description></description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ahb_err_int</name>
              <description></description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>clear_ok_int_num</name>
              <description>Clear ok interrupt number. In interrupt counter mode, if the programmer wants to clear ok_intr_cnt, need to write ok_intr_cnt to this field first, then write '1' to cmd_ok.</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ok_intr_cnt</name>
              <description>Ok interrupt counter. Read this field can know how many interrupts are coming to notify crypto engine has calculated cryptographic feature results. Use this field in interrupt counter mode.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>intr_mode</name>
              <description>Select ok interrupt mode
1'd0: Interrupt mode is general mode.
1'd1: Interrupt mode is counter mode.
General mode means no matter how many interrupts are coming to notify crypto engine has calculated cryptographic feature results, there always is one interrupt signal shows in cmd_ok field, and nothing in ok_intr_cnt. So if the programmer want to clear this signal, just write '1' to cmd_ok.
Counter mode means the programmer can know how many interrupts are coming to notify crypto engine has calculated cryptographic feature results from ok_intr_cnt. The programmer also can know there are at least one interrupt from reading cmd_ok. So if the programmer want to clear ok_intr_cnt signals, need to write ok_intr_cnt into clear_ok_int_num, then write 1 to cmd_ok.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cmd_ok</name>
              <description>Command ok Interrupt. Read this field to detect whether crypto engine has calculated a cryptographic feature result. 
Even if interrupt mode is counter mode, still can use this field to detect whether an interrupt is coming.
Write 1 to clear this interrupt signal.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dma_busy</name>
              <description>Detect whether IPsec DMA is busy
1'd0: DMA is not busy
1'd1: DMA is busy
Using for debuging to avoid data coherence issue (when getting crypto finish calculated interrupt, user can make sure DMA engine has already move data to result buffer.)</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>soft_rst</name>
              <description>Software Reset. Write 1 to reset the crypto engine</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_IPSCSR_INTM</name>
          <addressOffset>0x00000014</addressOffset>
          <size>32</size>
          <description>Interrupt Mask Register</description>
          <resetValue>0x0007FFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>des_err5_m</name>
              <description>Destination Descriptor Error 5 Interrupt Mask
1'd0: Disable mask
1'd1: Enable mask</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>des_err4_m</name>
              <description>Destination Descriptor Error 4 Interrupt Mask
1'd0: Disable mask
1'd1: Enable mask</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>des_err3_m</name>
              <description>Destination Descriptor Error 3 Interrupt Mask
1'd0: Disable mask
1'd1: Enable mask</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>des_err2_m</name>
              <description>Destination Descriptor Error 2 Interrupt Mask
1'd0: Disable mask
1'd1: Enable mask</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>des_err1_m</name>
              <description>Destination Descriptor Error 1 Interrupt Mask
1'd0: Disable mask
1'd1: Enable mask</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>des_err0_m</name>
              <description>Destination Descriptor Error 0 Interrupt Mask
1'd0: Disable mask
1'd1: Enable mask</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>src_err9_m</name>
              <description>Source Descriptor Error 9 Interrupt Mask
1'd0: Disable mask
1'd1: Enable mask</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>src_err8_m</name>
              <description>Source Descriptor Error 8 Interrupt Mask
1'd0: Disable mask
1'd1: Enable mask</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>src_err7_m</name>
              <description>Source Descriptor Error 7 Interrupt Mask
1'd0: Disable mask
1'd1: Enable mask</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>src_err6_m</name>
              <description>Source Descriptor Error 6 Interrupt Mask
1'd0: Disable mask
1'd1: Enable mask</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>src_err5_m</name>
              <description>Source Descriptor Error 5 Interrupt Mask
1'd0: Disable mask
1'd1: Enable mask</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>src_err4_m</name>
              <description>Source Descriptor Error 4 Interrupt Mask
1'd0: Disable mask
1'd1: Enable mask</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>src_err3_m</name>
              <description>Source Descriptor Error 3 Interrupt Mask
1'd0: Disable mask
1'd1: Enable mask</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>src_err2_m</name>
              <description>Source Descriptor Error 2 Interrupt Mask
1'd0: Disable mask
1'd1: Enable mask</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>src_err1_m</name>
              <description>Source Descriptor Error 1 Interrupt Mask
1'd0: Disable mask
1'd1: Enable mask</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>src_err0_m</name>
              <description>Source Descriptor Error 0 Interrupt Mask
1'd0: Disable mask
1'd1: Enable mask</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>des_fail_m</name>
              <description>Source Descriptor Fail Interrupt Mask
1'd0: Disable mask
1'd1: Enable mask</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>src_fail_m</name>
              <description>Destination Descriptor Fail Interrupt Mask
1'd0: Disable mask
1'd1: Enable mask</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cmd_ok_m</name>
              <description>Command OK Interrupt Mask
1'd0: Disable mask
1'd1: Enable mask
If the programmer wants to disable cmd_ok interrupt signal, write '1' to enable interrupt mask.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_IPSCSR_DBG</name>
          <addressOffset>0x00000018</addressOffset>
          <size>32</size>
          <description>Debug Regster</description>
          <resetValue>0x00010000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>debug_wb</name>
              <description>Debug: write back mode.
1'd0: Disable DMA write back mode.
1'd1: Enable DMA write back mode.
Enable this field, Crypto DMA will move data from source address to destination address. During this period, the data won't be processed in any calculation (Encryption, Decryption, Hash). Then the programmer can check whether the source data is the same as destination data.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>mst_bad_sel</name>
              <description>Select Lexra master data bus (optional)
2'd0: mst_ipsec_bad[07:00]
2'd1: mst_ipsec_bad[15:08]
2'd2: mst_ipsec_bad[23:16]
2'd3: mst_ipsec_bad[31:24]</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>engine_clk_en</name>
              <description>IPsec engine clock enable
1'd0: Disable IPsec engine clock
1'd1: Enable IPsec engine clock</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>debug_port_sel</name>
              <description>Debug port selection
4'd0: engine_debug
4'd1: dma_lexra_debug
4'd2: dma_rx_debug
4'd3: dma_tx_debug</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>arbiter_mode</name>
              <description>DMA arbiter mode
1'd0: round-robin
1'd1: detect FIFO wasted level
There are 2 FIFOs in DMA that are read FIFO and write FIFO. Detect FIFO wasted level means that DMA will process which FIFO first dependS on which wasted level is high. Because the wasted level is high means there are many FIFO nodes waiting to be processed in this FIFO, so DMA must process them in hurry.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dma_wait_cycle</name>
              <description>Set DMA wait cycles to assert next DMA request</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_IPSCSR_ERR_INT</name>
          <addressOffset>0x0000001C</addressOffset>
          <size>32</size>
          <description>Error Interrupt Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>lx_fail_3</name>
              <description>When a burst done,burst length != burst cnt
Write "1" to clear this error signal.</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>lx_fail_2</name>
              <description>When ipsec is working, rdata from bus != rdata of ipsec or wdata of ipsec != wdata on bus
Write "1" to clear this error signal.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>lx_fail_1</name>
              <description>LX bus timing issue
Write "1" to clear this error signal.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>des_err5</name>
              <description>Destination Descriptor Error 5 Interrupt. The error condition is authentication digest length error in destination descriptor.
MD5: adl != 16 or
SHA1: adl != 20 or
SHA2-224: adl != 28 or adl != 32 when set sequential hash and not sequential hash last
SHA2-256: adl != 32 or
SHA2-384: adl != 48 or adl != 64 when set sequential hash and not sequential hash last
SHA2-512: adl != 64
Write '1' to clear this error signal.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>des_err4</name>
              <description>Destination Descriptor Error 4 Interrupt. The error condition is authentication digest length error in destination descriptor.
MD5: adl &gt; 16 or
SHA1: adl &gt; 20 or
SHA2-224: adl &gt; 28 or adl &gt; 32when set sequential hash and not sequential hash last
SHA2-256: adl &gt; 32 or
SHA2-384: adl &gt; 48 or adl &gt; 64when set sequential hash and not sequential hash last
SHA2-512: adl &gt; 64
Write '1' to clear this error signal.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>des_err3</name>
              <description>Destination Descriptor Error 3 Interrupt. One of the error condition is the sum of enl is greater than Encryption Total Length. The other error condition is about destination descriptor length error ((enl(Encryption length)==0) &amp; (adl(authentication data length)==0)).
Write '1' to clear this error signal.
Sum of enl reference the register REG_IPSCSR_SENLR (offset 0x24).</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>des_err2</name>
              <description>Destination Descriptor Error 2 Interrupt. The error condition is the bit field ENC=1'b0 (active Hash engine to process hash data), but only active Cipher engine.
Write '1' to clear this error signal.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>des_err1</name>
              <description>Destination Descriptor Error 1 Interrupt. The error condition is the bit field ENC=1'b1 (active cipher engine to process cipher data), but only active Hash engine.
Write '1' to clear this error signal.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>des_err0</name>
              <description>Destination Descriptor Error 0 Interrupt. One of the error condition is destination descriptor starting address error (DDSA[1:0]!=2'd0 [At least 4 bytes-aligned]). The other error condition is memory protection event.
Write '1' to clear this error signal.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>src_err9</name>
              <description>Source Descriptor Error 9 Interrupt. The error condition is sum of epl is not equal to EPTL (Encryption Padding Total Length). 
Write '1' to clear this error signal.
Sum of epl reference the register REG_IPSCSR_SEPLR (offset 0x2C).</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>src_err8</name>
              <description>Source Descriptor Error 8 Interrupt. The error condition is sum of apl is not equal to HPTL(Hash Padding Total Length). 
Write '1' to clear this error signal.
Sum of apl reference the register REG_IPSCSR_SAPLR (offset 0x28).</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>src_err7</name>
              <description>Source Descriptor Error 7 Interrupt. The error condition is sum of enl is not equal to ETL (Encryption Total Length). 
Write '1' to clear this error signal.
Sum of enl reference the register REG_IPSCSR_SENLR (offset 0x24).</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>src_err6</name>
              <description>Source Descriptor Error 6 Interrupt. The error condition is sum of a2eo is not equal to HTL (Header Total Length). 
Write '1' to clear this error signal.
Sum of a2eo reference the register REG_IPSCSR_SAADLR (offset 0x20).</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>src_err5</name>
              <description>Source Descriptor Error 5 Interrupt. The error condition is there is a source descriptor, but the data length ((a2eo/epl) +(enl) + (apl)) is 0.
Write '1' to clear this error signal.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>src_err4</name>
              <description>Source Descriptor Error 4 Interrupt. The error condition is source data buffer pointer error (SDBP[1:0]!=2'd0 [At least 4 byte aligned]).
Write '1' to clear this error signal.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>src_err3</name>
              <description>Source Descriptor Error 3 Interrupt. About source descriptor length error. One of the error condition is set the first descriptor but the (CL!=3). The other error condition is there is a source descriptor but CL, KL, IL, PL, SHIVL are all 0.
Write '1' to clear this error signal.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>src_err2</name>
              <description>Source Descriptor Error 2 Interrupt. One of the error condition is Source descriptor starting address error (SDSA[1:0]!=2'd0 [At least 4 bytes-aligned]). The other error condition is memory protection event.
Write '1' to clear this error signal.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>src_err1</name>
              <description>Source Descriptor Error 1 Interrupt. The error condition is last Segment descriptor is set (LS=1), when descriptor is pointing to the first segment of the packet.
Write '1' to clear this error signal.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>src_err0</name>
              <description>Source Descriptor Error 0 Interrupt. One of the error condition is first segment descriptor is not set (FS=0), when descriptor is pointing to the first segment of the packet. The other error condition is first segment descriptor is set (FS=1), when descriptor is not pointing to the first segment of the packet. 
Write '1' to clear this error signal.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_IPSCSR_SADDLR</name>
          <addressOffset>0x00000020</addressOffset>
          <size>32</size>
          <description>Sum of Additional Authentication Data Length Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>a2eo_sum</name>
              <description>Sum of additional authentication data length.</description>
              <bitRange>[10:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_IPSCSR_SENLR</name>
          <addressOffset>0x00000024</addressOffset>
          <size>32</size>
          <description>Sum of Encryption Data Length Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>enl_sum</name>
              <description>Sum of encryption data length.</description>
              <bitRange>[23:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_IPSCSR_SAPLR</name>
          <addressOffset>0x00000028</addressOffset>
          <size>32</size>
          <description>Sum of Authentication Padding Data Length Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>apl_sum</name>
              <description>Sum of authentication padding data length. (Mix mode uses this field)</description>
              <bitRange>[11:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_IPSCSR_SEPLR</name>
          <addressOffset>0x0000002C</addressOffset>
          <size>32</size>
          <description>Sum of Encryption Padding Data Length Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>epl_sum</name>
              <description>Sum of encryption padding data length. [Mix mode uses this field]</description>
              <bitRange>[5:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_IPSCSR_SWAPABURSTR</name>
          <addressOffset>0x00000030</addressOffset>
          <size>32</size>
          <description>Swap And Burst Register</description>
          <resetValue>0x00100000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>cha_input_data_byte_swap</name>
              <description>Byte swap for cha input data
1: Enable
0: Disable</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cha_output_data_byte_swap</name>
              <description>Byte swap for cha output data
1: Enable
0: Disable</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>md5_input_data_byte_swap</name>
              <description>Byte swap for md5 input data
1: Enable
0: Disable</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>md5_output_data_byte_swap</name>
              <description>Byte swap for md5 output data
1: Enable
0: Disable</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dma_burst_length</name>
              <description>Set DMA burst length
The maximum setting length is 16 bursts, and the minimum setting length is 1 burst.
Note: If all bits are zero (6'd0), it means maximum burst size or undefined burst size.</description>
              <bitRange>[21:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tx_wd_swap</name>
              <description>Word swap for dma_tx engine input data
1'd0: Disable
1'd1: Enable</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>rx_wd_swap</name>
              <description>Word swap for dma_rx engine output data
1'd0: Disable
1'd1: Enable</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>mac_out_little_endian</name>
              <description>Ouput mac is little endian
1'd0: Big endian
1'd1: Little endian</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>data_out_little_endian</name>
              <description>Ouput data is little endian
1'd0: Big endian
1'd1: Little endian</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>tx_byte_swap</name>
              <description>Byte swap for dma_tx engine input data
1'd0: Disable
1'd1: Enable</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>auto_padding_swap</name>
              <description>Byte swap for padding_len input data
1: Enable
0: Disable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>data_in_little_endian</name>
              <description>Input data is little endian
1'd0: Big endian
1'd1: Little endian</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>hash_initial_value_swap</name>
              <description>Byte swap for sequential hash initial value
1'd0: Disable
1'd1: Enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>key_pad_swap</name>
              <description>Byte swap for HMAC key pad
1'd0: Disable
1'd1: Enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>key_iv_swap</name>
              <description>Byte swap for Cipher key and Initial Vector
1'd0: Disable
1'd1: Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>set_swap</name>
              <description>Byte swap for command setting data:
1'd0: Disable
1'd1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_IPSEKCR</name>
          <addressOffset>0x00000034</addressOffset>
          <size>32</size>
          <description>KEY Control Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>efuse_key_req</name>
              <description>Request of loading key from OTP, cleared by key_rdy</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>efuse_key_id</name>
              <description>2'b00/2'b01: load key from OTP key1
2'b10/2'b11: load key from OTP key2</description>
              <bitRange>[30:29]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ENG_DBG</name>
          <addressOffset>0x00000040</addressOffset>
          <size>32</size>
          <description>Debug Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>eng_dbg</name>
              <description>Crypto engine debug info</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DMA_LX_DBG</name>
          <addressOffset>0x00000044</addressOffset>
          <size>32</size>
          <description>LX Bus Debug Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dma_lx_dbg</name>
              <description>Crypto engine LX bus debug info</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DMA_RX_DBG</name>
          <addressOffset>0x00000048</addressOffset>
          <size>32</size>
          <description>DMA Rx Debug Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dma_rx_dbg</name>
              <description>Crypto engine DMA Rx debug info</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DMA_TX_DBG</name>
          <addressOffset>0x0000004C</addressOffset>
          <size>32</size>
          <description>DMA Tx Debug Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dma_tx_dbg</name>
              <description>Crypto engine DMA Tx debug info</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DDSR</name>
          <addressOffset>0x00001000</addressOffset>
          <size>32</size>
          <description>Destination Descriptor Status Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>des_rst</name>
              <description>Destination descriptor reset. (only for pk_up = 1'b1)</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>des_fail_status</name>
              <description>Destination Descriptor failed status:
2'd1: Users write the first word twice consecutively
2'd2: Users write the second word directly without writing first word in the beginning
2'd3: Overflow (Detect users try to write source descriptor, but there isn't available FIFO node could use).</description>
              <bitRange>[26:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>des_fail</name>
              <description>Destination Descriptor failed interrupt. Write 1 to clear this bit.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DRPTR</name>
              <description>Destination Descriptor FIFO read pointer. When engine reads a descriptor and finished it, DRPTR = DRPTR+2</description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DWPTR</name>
              <description>Destination Descriptor FIFO write pointer. When write descriptor to DDSW successfully, DWPTR = DWPTR+2</description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>des_des_fifo_empty_cnt</name>
              <description>Destination Descriptor FIFO empty counter. Use this field to check how many available FIFO nodes in Destination descriptor FIFO could use.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DDFWR</name>
          <addressOffset>0x00001004</addressOffset>
          <size>32</size>
          <description>Destination Descriptor First Word Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DDFW</name>
              <description>Destination Descriptor First Word</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DDSWR</name>
          <addressOffset>0x00001008</addressOffset>
          <size>32</size>
          <description>Destination Descriptor Second Word Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DDSW</name>
              <description>Destination Descriptor Second Word</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DES_PKTCONF</name>
          <addressOffset>0x0000100C</addressOffset>
          <size>32</size>
          <description>Packet Configure Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>cfg_pk_arbiter_mode</name>
              <description>Arbiter rule between secure and no-secure access
0: round-robin
1/2/3: decided by the load_count of source descpritor FIFO of secure and non-secure, the more full is the winner.</description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cfg_bus3_priority_th</name>
              <description>The priority of bus3 (reserved now)</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cfg_bus2_priority_th</name>
              <description>The priority of bus2 - secure access.
If 0x100C[31:30]=1, the load_count of source descriptor FIFO is wr_ptr - rd_ptr + 0x100C[27:26]. Otherwise, the load_count of source descriptor FIFO is wr_ptr - rd_ptr.</description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>cfg_bus1_priority_th</name>
              <description>The priority of bus2 - non-secure access.
If 0x100C[31:30]=1, the load_count of source descriptor FIFO is wr_ptr - rd_ptr + 0x100C[25:24]. Otherwise, the load_count of source descriptor FIFO is wr_ptr - rd_ptr.</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DBG_DPTR</name>
              <description>Destination Descriptor FIFO read pointer: Users read this pointer value can know what the ID number of FIFO node that is now pointed by read pointer is.
If users want to know what the 32bits value of a specified FIFO node, users can write an ID number to this read pointer, then get the 32bits value from Debug Destination Descriptor Data Register.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DBG_SPTR</name>
              <description>Source Descriptor FIFO read pointer: Users read this pointer value can know what the ID number of FIFO node that is now pointed by read pointer is.
If users want to know what the 32bits value of a specified FIFO node, users can write an ID number to this read pointer, then get the 32bits value from Debug Source Descriptor Data Register.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DBGSDR</name>
          <addressOffset>0x00001010</addressOffset>
          <size>32</size>
          <description>Debug Source Descriptor Data Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DBG_SD</name>
              <description>Debug Source Descriptor Data
This register is used with DBG_SPTR.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DBGDDR</name>
          <addressOffset>0x00001014</addressOffset>
          <size>32</size>
          <description>Debug Destination Descriptor Data Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DBG_DD</name>
              <description>Debug Destination Descriptor Data
This register is used with DBG_DPTR.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DUMMY</name>
          <addressOffset>0x00001018</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>HW used only, reserved.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>page0</name>
      <groupName>WIFI</groupName>
      <baseAddress>0x40000000</baseAddress>
      <size>0x00000100</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00000100</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>REG_SYS_PWC_ISO_CTRL</name>
          <addressOffset>0x00000000</addressOffset>
          <size>16</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_WL_SWR_REQ_1P1V</name>
              <description>1: wl request switch SWR vlotage to 1.1V 
0: wl request switch SWR vlotage to 0.9V</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WL_PWM_EN</name>
              <description>1:WL request switch to PWM mode
0:WL request switch to PFM mode</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WL_save_en</name>
              <description>1 to 0:gen req to restore register in power on flow
1:gen req to backup register in power on flow</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SPC_MAC_EN</name>
              <description>1: Enable WLOFF power cut</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WL_CLK_CTRL</name>
          <addressOffset>0x00000002</addressOffset>
          <size>16</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_WLON_SWITCH_TSF_EN</name>
              <description>enable wlpmc switch TSF clock to MAC clock</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WLOFF_SWITCH_TSF_EN</name>
              <description>enable wlpmc switch TSF clock to 32K clock</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WL_CKEN_IQDUMP</name>
              <description>0: disable clock for iqdump (LA MODE)
1: enable clock for iqdump (LA MODE)
same clock source as security clock</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_IS_SCH_CLK_INSLP_V2</name>
              <description>WL TSF clock status:
0: MAC clock
1: 32K clock</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_TSF_CKSLP_SEL</name>
              <description>1: TSF clock switch to 32.768KHz; 0: TSF clock switch to MAC clock</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WL_CKTSF_EN</name>
              <description>1: enable tsf clock; 0: gated</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WL_FQSEL_CK32K</name>
              <description>1:32K frequency select 32.768KHz 0:32K frequency select 32KHz</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CKSL_CK32K</name>
              <description>1:select MAC internal 32K clk, 0:select MAC external 32K clk</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WL_CK32K_EN</name>
              <description>1: enable 32k clock; 0: gated</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WL_CKMCU_EN</name>
              <description>1: enable MCU engine clock; 0: gated</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WL_CKSEC_EN</name>
              <description>1: enable MAC security engine clock; 0: gated</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WL_CKMAC_EN</name>
              <description>1: enable MAC clock; 0: gated</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WL_FUNC_EN</name>
          <addressOffset>0x00000004</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_WL_SEL_SW_SI</name>
              <description>indicate SW use indirect path to access WLRFC register</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BB_SAVE_EN</name>
              <description>1 to 0:gen req to restore register in power on flow
1:gen req to backup register in power on flow</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FEN_BBRSTB_V2</name>
              <description>When this bit is set to "0", CCK and OFDM are disabled, and clock are gated. Otherwise, CCK and OFDM are enabled.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FEN_BB_GLB_RSTn_V2</name>
              <description>When this bit is set to "0", whole BB is reset. When this bit is set, BB is enabled.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>Reserved</description>
              <bitRange>[15:13]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_SEC_ACCESS</name>
              <description>enable security access wifi register, no use
this bit only access by secutiry</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FEN_MLPLT</name>
              <description></description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RFAFE_HW33PDB</name>
              <description></description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FEN_WLON</name>
              <description>1: enable WL partial ON; 0: reset</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FEN_WLMCU</name>
              <description>1: enable WLMCU; 0: reset</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FEN_MACREG</name>
              <description>1: enable MAC REG; 0: reset</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FEN_WLOFF</name>
              <description>1: enable WLOFF; 0: reset</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FEN_MAC_PMC</name>
              <description>1: enable MAC PMC; 0: reset</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CLKDIV_CKSEL</name>
          <addressOffset>0x00000008</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00540000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_WL_CKRFC_EN</name>
              <description>1: enable WLRFC clock; 0: gated</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RFC_CLK_SEL</name>
              <description>11/10:40M
01:80M
00:160M</description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SEC_CLK_SEL</name>
              <description>11/10:40M
01:80M
00:160M</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MAC_CLK_SEL</name>
              <description>11/10:20M
01:40M
00:80M</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CPU_CLK_SEL</name>
              <description></description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WL_CLK_SYNC</name>
              <description>1: sync 40M/80M clock  phase with PLL</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WL_RFC_PHASE</name>
              <description>80M WLRFC clock phase control</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WL_40M_PHASE</name>
              <description>40M MAC clock phase control</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WL_80M_PHASE</name>
              <description>80M security clock phase control</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CPWM</name>
          <addressOffset>0x0000000C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_CPWM_TOGGLING</name>
              <description>Toggling bit : one bit sequence number bit. When this bit is toggled, interrupt is send to HISR.CPWMINT.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CPWM_MOD</name>
              <description>The current power mode index.</description>
              <bitRange>[14:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RPWM</name>
          <addressOffset>0x00000014</addressOffset>
          <size>32</size>
          <description>register for hrpwm</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RPWM_TOGGLING</name>
              <description>Toggling bit : one bit sequence number bit. When this bit is toggled, interrupt is send to FISR.RPWMINT.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RPWM_MOD</name>
              <description>The current power mode index.</description>
              <bitRange>[14:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RSV_CTRL</name>
          <addressOffset>0x0000001C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_HREG_DBG</name>
              <description>HREG Access Debug information</description>
              <bitRange>[23:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_LOCK_REGALL_EN</name>
              <description>1:Enable 'Locked All' setting by Hardware, 0: Hardware Enable 'Locked All' denied.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PRST_WLMAC</name>
              <description></description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WLOCK_1C_B6</name>
              <description>1:Register Write Locked, 0: Register Accessible by SW/FW (offset:0x001C[6])</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WLOCK_40</name>
              <description>1:Register Write Locked, 0: Register Accessible by SW/FW (offset:0x0040h~0x0043h)</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WLOCK_08</name>
              <description>1:Register Write Locked, 0: Register Accessible by SW/FW (offset:0x0008h~0x000Bh)</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WLOCK_04</name>
              <description>1:Register Write Locked, 0: Register Accessible by SW/FW (offset:0x0004h~0x0007h)</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WLOCK_00</name>
              <description>1:Register Write Locked, 0: Register Accessible by SW/FW (offset:0x0000h~0x0003h)</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WLOCK_ALL</name>
              <description>1:Register Write Locked, 0: Register Accessible by SW/FW (offset:0x0000h~0x00FFh)</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WL_PMC_CTRL</name>
          <addressOffset>0x00000020</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x03001F00</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_WLPON_OPT_EXCKN2A</name>
              <description></description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WLPON_OPT_EXCKP2A</name>
              <description>PON option to enable AFE clock</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WL_PMC_CNT_PAR</name>
              <description>WL PMC FSM counting unit.</description>
              <bitRange>[13:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CUR_PST_IS_LPS</name>
              <description>indicate current WL power status is LPS mode</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_WL_PMC_LPS_EN</name>
              <description>Inform WLAN PMC FSM to enter LPS mode. 
(auto clear when ready)</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WL_PMC_OFFMAC</name>
              <description>Inform WLAN PMC FSM to power OFF mode, include clock, isolation, power control for MAC only (clear when Power Ready)</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WL_PMC_ONMAC</name>
              <description>Inform WLAN PMC FSM to power On mode, include clock, isolation, power control for MAC only (clear when Power Ready)</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WL_SYSCONFIG</name>
          <addressOffset>0x00000024</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_DIS_TIMEOUT_IO</name>
              <description>Disabled timeout of IO wrapper</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MCU_WDT_MODE</name>
              <description></description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WLCPU_ANA_PORT_IDLE</name>
              <description></description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_WLCPU_MAC_PORT_IDLE</name>
              <description></description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_P0_TBTT_TIMER</name>
          <addressOffset>0x00000028</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>P0_ELY_BCNINT_CNT</name>
              <description>Unit: bcn_space
the total time to next specified TBTT is (new_ely_agg_cnt - 1) * r_bcn_space(0x554) + (beacon_cnt_down - 1)* 1ms + (cnt_128us + 1)* 128us</description>
              <bitRange>[30:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>P0_BCN_CNT_DOWN</name>
              <description>Unit: 1ms
beacon_cnt_down - 1</description>
              <bitRange>[18:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>P0_128US_CNT</name>
              <description>Unit: 128us</description>
              <bitRange>[2:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AFC_CTRL0</name>
          <addressOffset>0x00000030</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000080</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_POW_AFE_REQ</name>
              <description>AFE power on request to afe_ctrl
1:request to turn on AFE pwr
0:turn off AFE pwr</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WL_XTAL_ACTIVE_MODE</name>
              <description>1:WL request XTAL to enter active mode
 0:WL request XTAL to enter LPS mode</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WL_XTAL_EN</name>
              <description>1:WL enable XTAL  0:WL disable XTAL</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FSIMR_V1</name>
          <addressOffset>0x00000040</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FS_PWMERR_INT_EN_V1</name>
              <description>Enable MCU Access Error interrupt source(TIE0)</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_BTON_STS_UPDATE_INT_EN</name>
              <description>BTON status update interrupt
When 0x78[31] toggled, this interrupt is issue to indicate the status updated.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FSISR_V1</name>
          <addressOffset>0x00000044</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FS_PWMERR_INT_V1</name>
              <description>MCU Access Error interrupt source Write 1 clear</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_BTON_STS_UPDATE_INT</name>
              <description>BTON status update interrupt
When 0x78[31] toggled, this interrupt is issue to indicate the status updated.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TXDMA_H2C_RD_POINTER</name>
          <addressOffset>0x00000048</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>tde_h2c_rd_addr</name>
              <description>not used in amd2</description>
              <bitRange>[17:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TXDMA_H2C_WR_POINTER</name>
          <addressOffset>0x0000004C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>tde_h2c_wr_addr</name>
              <description>not used in amd2</description>
              <bitRange>[17:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FW_DBG0</name>
          <addressOffset>0x00000050</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FW_DBG0</name>
              <description>fw debug0</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FW_DBG1</name>
          <addressOffset>0x00000054</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FW_DBG1</name>
              <description>fw debug1</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FW_DBG2</name>
          <addressOffset>0x00000058</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FW_DBG2</name>
              <description>fw debug2</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FW_DBG3</name>
          <addressOffset>0x0000005C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FW_DBG3</name>
              <description>fw debug3</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FW_DBG4</name>
          <addressOffset>0x00000060</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FW_DBG4</name>
              <description>fw debug4</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FW_DBG5</name>
          <addressOffset>0x00000064</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FW_DBG5</name>
              <description>fw debug5</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FW_DBG6</name>
          <addressOffset>0x00000068</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FW_DBG6</name>
              <description>fw debug6</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FW_DBG7</name>
          <addressOffset>0x0000006C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FW_DBG7</name>
              <description>fw debug7</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WL_PIN_FUNC_CTRL0</name>
          <addressOffset>0x00000070</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_WL_DBG_SEL</name>
              <description>WL debug select</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WL_BTCOEX_CTRL</name>
          <addressOffset>0x00000074</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0000000A</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_LTECOEX_DBGEN</name>
              <description></description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BTMode_V1</name>
              <description>Bluetooth Mode</description>
              <bitRange>[18:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EnBT_V1</name>
              <description>Enable PTA ( from BT side)</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WL_DPDT1_IDV</name>
              <description></description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WL_DPDT1_MUX</name>
              <description></description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WL_DPDT0_IDV</name>
              <description></description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WL_DPDT0_MUX</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SCOREBOARD_RD_BT2WL</name>
          <addressOffset>0x00000078</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RD_BT2WL_INFO</name>
              <description>Read Data :  WL TO BT INFO, WLON Status Report</description>
              <bitRange>[30:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DBG_PORT_REG</name>
          <addressOffset>0x0000007C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_DEBUG_ST</name>
              <description>Debug signals, sel by 70[31:24]</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WL_MCUFW_CTRL</name>
          <addressOffset>0x00000080</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FW_INIT_RDY</name>
              <description>CPU fw initialize ready, set by CPU</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FW_DBG8</name>
          <addressOffset>0x00000084</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BLK_TST</name>
              <description>fw debug8</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FW_DBG9</name>
          <addressOffset>0x00000088</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_HOST_MSG_E1</name>
              <description>User Defined Message</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HOST_MSG_E0</name>
              <description>User Defined Message</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FW_DBG10</name>
          <addressOffset>0x0000008C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_HOST_MSG_E3</name>
              <description>User Defined Message</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HOST_MSG_E2</name>
              <description>User Defined Message</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_LPS_CTRL</name>
          <addressOffset>0x00000090</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x07F78000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description></description>
              <bitRange>[31:30]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_WL_LPS_OPT_SAVE_REG</name>
              <description>LPS option to save retention FF
1: enable request to save retention FF
0: disable request to save retention FF</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LPS_MEMPM_PHYON</name>
              <description></description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LPS_MEMPM_MACOFF_FTC_ZGB</name>
              <description>MAC OFF FTC memory power mode when enable LPS memory power mode(for zgb_txbuf/zgb_rxbuf)
00 : normal
01 : NAP
10 : RET
11 : SLP</description>
              <bitRange>[26:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LPS_MEMPM_MACOFF_FTC_SHR</name>
              <description>MAC OFF FTC memory power mode when enable LPS memory power mode(for rxpktbuf/ txpktbuf low 24k[SHARE with system])
00 : normal
01 : NAP
10 : RET
11 : SLP</description>
              <bitRange>[24:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LPS_MEMPM_MACOFF_SNPS_TXRPT</name>
              <description>MAC OFF SNPS memory power mode when enable LPS memory power mode
(for txrptbuf)
00 : normal
01 : LS
10 : DS
11 : SD</description>
              <bitRange>[22:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LPS_MEMPM_MACON_FTC_TXPKT</name>
              <description>MAC ON FTC memory power mode when enable LPS memory power mode
(for txpktbuf high 8k)
00 : normal
01 : NAP
10 : RET
11 : SLP</description>
              <bitRange>[20:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LPS_MEMPM_MACOFF_FTC_TRXFIFO</name>
              <description>MAC OFF FTC memory power mode when enable LPS memory power mode
(for rxfifo/txfifo)
0 : normal
1 : NAP</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LPS_MEMPM_MACOFF_SNPS</name>
              <description>MAC OFF SNPS memory power mode when enable LPS memory power mode
(for txllt/rc4/txoqt/keysrch/rxbacam/dmafifo/txpwr_rate/txpwr_macid/txpwr_usrlist/txpwr_srpwr/txpwr_rulim)
0 : normal
1 : LS</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LPS_MEMPM_MACOFF_FTC</name>
              <description>MAC OFF FTC memory power mode when enable LPS memory power mode(for rxcsibuf/phystsbuf)
00 : normal
01 : NAP
10 : RET
11 : SLP</description>
              <bitRange>[16:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WL_LPS_OPT_PFM_EN</name>
              <description>LPS option to switch to PFM mode
1: set to PFM mode
0: stay in PWM mode</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WL_LPS_OPT_SWR_0P9</name>
              <description>LPS option to set SWR voltage 0.9V
1: set SWR voltage 0.9V
0: set SWR voltage 1.1V</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WL_LPS_OPT_LP_XTAL</name>
              <description>LPS option to set XTAL low power mode when enable XTAL
1: set XTAL low power mode
0: set XTAL active mode</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WL_LPS_OPT_DIS_XTAL</name>
              <description>LPS option to disable XTAL
1: disable XTAL
0: enable XTAL</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WL_LPS_OPT_EMACFUN</name>
              <description>LPS option to reset WL MAC OFF block when enable WL MAC OFF power
1: not reset WL MAC OFF block
0: reset WL MAC OFF block</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WL_LPS_OPT_EPHYPWR</name>
              <description>LPS option to enable WL BB block power
1: Enable WL BB block power 
0: Disable WL BB block power</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WL_LPS_OPT_EMACPWR</name>
              <description>LPS option to enable WL MAC OFF block power
1: Enable WL MAC OFF block power 
0: Disable WL MAC OFF block power</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>rsvd</description>
              <bitRange>[7:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WL_LPS_MEMPM_EN</name>
              <description>enable LPS memory power mode control</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WL_NRM_MEMPM_SL</name>
              <description>MAC memory power mode when BIT_WL_LPS_MEMPM_EN is 0,
0 : Normal
1 : SD</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FW_DBG11</name>
          <addressOffset>0x00000094</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FW_DBG11</name>
              <description>fw debug11</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>reg_boot_reason</name>
          <addressOffset>0x00000098</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[31:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WL_WDT_PLFM</name>
              <description></description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WL_WDT_MCU</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SCOREBOARD_CTRL</name>
          <addressOffset>0x000000A0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BT_INT_EN</name>
              <description>For WL, write 1 to issue interrupt 
1 : Issue one INT to BT
0 : Don't care</description>
              <bitRange>[31:31]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_WL2BT_INFO</name>
              <description>WLON Status Report TO BTON</description>
              <bitRange>[30:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SYSON_FSM_MON_V1</name>
          <addressOffset>0x000000A4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>Reserved</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WLPMC_DEBUG_SEL</name>
              <description>debug select signal for WL PMC</description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WLPMC_DEBUG</name>
              <description>debug signal of WL PMC</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PMC_DBG_CTRL1</name>
          <addressOffset>0x000000A8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_PMC_WR_OVF</name>
              <description>PMC Write Access Timer Overflow</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_WLPMC_ERRINT</name>
              <description>WLPMC Error interrupt</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PMC_DBG_CTRL2_V1</name>
          <addressOffset>0x000000AC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>Reserved</description>
              <bitRange>[31:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SYSON_REG_ARB</name>
              <description>HW PMC Access Register Time Out Control</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_HIMR0</name>
          <addressOffset>0x000000B0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_HISR1_INT_EN</name>
              <description>HISR1 Indicator (HIISR1 andHIMR1 are true, this bit is set to 1)</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXDES_UNAVAIL_INT_EN</name>
              <description>Rx Descriptor Unavailable</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HISR2_INT_EN</name>
              <description>HISR2 Indicator (HIISR2 andHIMR2 are true, this bit is set to 1)</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EVTQ_DONE_INT_EN</name>
              <description>event queue done interrupt for NAN</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EVTQ_START_INT_EN_V1</name>
              <description>event queue start interrupt for NAN</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FWMSG_INT_EN</name>
              <description>FW message interrupt,CPU to Host Command INT Status, Write 1 clear</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HCPWM_INT_EN</name>
              <description>CPWM interrupt,CPU power Mode exchange INT Status, Write 1 clear</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXFF_FULL_INT_EN</name>
              <description>Rxpktbuffer full interrupt</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RDE_ERR_INT_EN</name>
              <description>Rxdma error interrupt</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TDE_ERR_INT_EN</name>
              <description>Txdma error interrupt</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXFF_FIFO_INT_EN</name>
              <description>txpktbuffer full interrupt</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXBCN8_ERR_INT_EN</name>
              <description>port0 BSSID7 TX beacon error interrupt</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXBCN7_ERR_INT_EN</name>
              <description>port0 BSSID6 TX beacon error interrupt</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXBCN6_ERR_INT_EN</name>
              <description>port0 BSSID5 TX beacon error interrupt</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXBCN5_ERR_INT_EN</name>
              <description>port0 BSSID4 TX beacon error interrupt</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXBCN4_ERR_INT_EN</name>
              <description>port0 BSSID3 TX beacon error interrupt</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXBCN3_ERR_INT_EN</name>
              <description>port0 BSSID2 TX beacon error interrupt</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXBCN2_ERR_INT_EN</name>
              <description>port0 BSSID1 TX beacon error interrupt</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXBCN1_ERR_INT_EN</name>
              <description>port0 BSSID0 TX beacon error interrupt</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXBCN8_OK_INT_EN</name>
              <description>port0 BSSID7 TX beacon ok interrupt</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXBCN7_OK_INT_EN</name>
              <description>port0 BSSID6 TX beacon ok interrupt</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXBCN6_OK_INT_EN</name>
              <description>port0 BSSID5 TX beacon ok interrupt</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXBCN5_OK_INT_EN</name>
              <description>port0 BSSID4 TX beacon ok interrupt</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXBCN4_OK_INT_EN</name>
              <description>port0 BSSID3 TX beacon ok interrupt</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXBCN3_OK_INT_EN</name>
              <description>port0 BSSID2 TX beacon ok interrupt</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXBCN2_OK_INT_EN</name>
              <description>port0 BSSID1 TX beacon ok interrupt</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXBCN1_OK_INT_EN</name>
              <description>port0 BSSID0 TX beacon ok interrupt</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TSF_BIT32_TOGGLE_INT_EN</name>
              <description>TSF Timer BIT32 toggle indication interrupt</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TIMEOUT2_INT_EN</name>
              <description>tsf Timer2 interrupt</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TIMEOUT1_V1_INT_EN</name>
              <description>tsf Timer1 interrupt</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TIMEOUT0_V1_INT_EN</name>
              <description>tsf Timer0 interrupt</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_HISR0</name>
          <addressOffset>0x000000B4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_HISR1_INT</name>
              <description>HISR1 Indicator (HIISR1 andHIMR1 are true, this bit is set to 1)</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RXDES_UNAVAIL_INT</name>
              <description>Rx Descriptor Unavailable</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HISR2_INT</name>
              <description>HISR2 Indicator (HIISR2 andHIMR2 are true, this bit is set to 1)</description>
              <bitRange>[29:29]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_EVTQ_DONE_INT</name>
              <description>event queue done interrupt for NAN</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_EVTQ_START_INT_V1</name>
              <description>event queue start interrupt for NAN</description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FWMSG_INT</name>
              <description>FW message interrupt,CPU to Host Command INT Status, Write 1 clear</description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HCPWM_INT</name>
              <description>CPWM interrupt,CPU power Mode exchange INT Status, Write 1 clear</description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RXFF_FULL_INT</name>
              <description>Rxpktbuffer full interrupt</description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RDE_ERR_INT</name>
              <description>Rxdma error interrupt</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_TDE_ERR_INT</name>
              <description>Txdma error interrupt</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_TXFF_FIFO_INT</name>
              <description>txpktbuffer full interrupt</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_TXBCN8_ERR_INT</name>
              <description>port0 BSSID7 TX beacon error interrupt</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_TXBCN7_ERR_INT</name>
              <description>port0 BSSID6 TX beacon error interrupt</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_TXBCN6_ERR_INT</name>
              <description>port0 BSSID5 TX beacon error interrupt</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_TXBCN5_ERR_INT</name>
              <description>port0 BSSID4 TX beacon error interrupt</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_TXBCN4_ERR_INT</name>
              <description>port0 BSSID3 TX beacon error interrupt</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_TXBCN3_ERR_INT</name>
              <description>port0 BSSID2 TX beacon error interrupt</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_TXBCN2_ERR_INT</name>
              <description>port0 BSSID1 TX beacon error interrupt</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_TXBCN1_ERR_INT</name>
              <description>port0 BSSID0 TX beacon error interrupt</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_TXBCN8_OK_INT</name>
              <description>port0 BSSID7 TX beacon ok interrupt</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_TXBCN7_OK_INT</name>
              <description>port0 BSSID6 TX beacon ok interrupt</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_TXBCN6_OK_INT</name>
              <description>port0 BSSID5 TX beacon ok interrupt</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_TXBCN5_OK_INT</name>
              <description>port0 BSSID4 TX beacon ok interrupt</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_TXBCN4_OK_INT</name>
              <description>port0 BSSID3 TX beacon ok interrupt</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_TXBCN3_OK_INT</name>
              <description>port0 BSSID2 TX beacon ok interrupt</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_TXBCN2_OK_INT</name>
              <description>port0 BSSID1 TX beacon ok interrupt</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_TXBCN1_OK_INT</name>
              <description>port0 BSSID0 TX beacon ok interrupt</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_TSF_BIT32_TOGGLE_INT</name>
              <description>TSF Timer BIT32 toggle indication interrupt</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_TIMEOUT2_INT</name>
              <description>tsf Timer2 interrupt</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_TIMEOUT1_INT_V1</name>
              <description>tsf Timer1 interrupt</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_TIMEOUT0_INT_V1</name>
              <description>tsf Timer0 interrupt</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_HIMR1</name>
          <addressOffset>0x000000B8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_CTWEND1_INT_EN</name>
              <description>Client1 traffic window end interrupt  for P2P</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTWEND0_INT_EN</name>
              <description>Client0 traffic window end interrupt  for P2P</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DWWIN_END_INT_EN_V1</name>
              <description>discovery window end interrupt for NAN</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ATIMEND8_INT_EN</name>
              <description>port1 atimend interrupt</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ATIMEND7_INT_EN</name>
              <description>port0 BSSID7 atimend interrupt</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ATIMEND6_INT_EN</name>
              <description>port0 BSSID6 atimend interrupt</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ATIMEND5_INT_EN</name>
              <description>port0 BSSID5 atimend interrupt</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ATIMEND4_INT_EN</name>
              <description>port0 BSSID4 atimend interrupt</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ATIMEND3_INT_EN</name>
              <description>port0 BSSID3 atimend interrupt</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ATIMEND2_INT_EN</name>
              <description>port0 BSSID2 atimend interrupt</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ATIMEND1_INT_EN</name>
              <description>port0 BSSID1 atimend interrupt</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ATIMEND0_INT_EN</name>
              <description>port0 BSSID0 atimend interrupt</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BCNERLY8_INT_EN</name>
              <description>port1 beacon early interrupt</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BCNERLY7_INT_EN</name>
              <description>port0 BSSID7 beacon early interrupt ,  only valid under MBSSID mode</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BCNERLY6_INT_EN</name>
              <description>port0 BSSID6 beacon early interrupt ,  only valid under MBSSID mode</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BCNERLY5_INT_EN</name>
              <description>port0 BSSID5 beacon early interrupt ,  only valid under MBSSID mode</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BCNERLY4_INT_EN</name>
              <description>port0 BSSID4 beacon early interrupt,  only valid under MBSSID mode</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BCNERLY3_INT_EN</name>
              <description>port0 BSSID3 beacon early interrupt ,  only valid under MBSSID mode</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BCNERLY2_INT_EN</name>
              <description>port0 BSSID2 beacon early interrupt,  only valid under MBSSID mode</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BCNERLY1_INT_EN</name>
              <description>port0 BSSID1 beacon early interrupt ,  only valid under MBSSID mode</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BCNERLY0_INT_EN</name>
              <description>This interrupt is issued at the time set by DRVERLYINT register before TBTT time 
for port 0 root bssid</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CPU_MGQ_TXDONE_INT_EN</name>
              <description>CPU_MQG_TXDONE ineterrupt source
when HW TX CPUMGQ packet success, it issue interrupt to host</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PS_Timer_C_INT_EN</name>
              <description>PS_Timer_C interrupt source
When the lower 4 bytes of TSF(that select by reg 0x1510[18:16]) matches the content of this register, the PS_Timer_C_INT interrupt is issued</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PS_Timer_B_INT_EN</name>
              <description>PS_Timer_B interrupt source
When the lower 4 bytes of TSF(that select by reg 0x1510[10:8]) matches the content of this register, the PS_Timer_B_INT interrupt is issued</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PS_Timer_A_INT_EN</name>
              <description>PS_Timer_A interrupt source
When the lower 4 bytes of TSF(that select by reg 0x1510[2:0]) matches the content of this register, the PS_Timer_A_INT interrupt is issued</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_BCNELY0_AGGR_INT_EN</name>
              <description>port 0 Beacon early aggregation interrupt</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_GTINT4_EN</name>
              <description>When GTIMER4 expires, this bit is set to 1</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_GTINT3_EN</name>
              <description>When GTIMER3 expires, this bit is set to 1</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXBCNOK9_INT_EN</name>
              <description>PORT1 TX beacon OK interrupt</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXBCNERE9_INT_EN</name>
              <description>PORT1 TX beacon Error interrupt</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXBCN_NAN_RPT_OK_EN</name>
              <description>port2 rxbcn rpt and write to txrptbuf ok</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_HISR1</name>
          <addressOffset>0x000000BC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_CTWEND1_INT</name>
              <description>Client1 traffic window end interrupt  for P2P</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_CTWEND0_INT</name>
              <description>Client0 traffic window end interrupt  for P2P</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_DWWIN_END_INT_V1</name>
              <description>discovery window end interrupt for NAN</description>
              <bitRange>[29:29]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_ATIMEND8_INT</name>
              <description>port1 atimend interrupt</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_ATIMEND7_INT</name>
              <description>port0 BSSID7 atimend interrupt</description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_ATIMEND6_INT</name>
              <description>port0 BSSID6 atimend interrupt</description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_ATIMEND5_INT</name>
              <description>port0 BSSID5 atimend interrupt</description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_ATIMEND4_INT</name>
              <description>port0 BSSID4 atimend interrupt</description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_ATIMEND3_INT</name>
              <description>port0 BSSID3 atimend interrupt</description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_ATIMEND2_INT</name>
              <description>port0 BSSID2 atimend interrupt</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_ATIMEND1_INT</name>
              <description>port0 BSSID1 atimend interrupt</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_ATIMEND0_INT</name>
              <description>port0 BSSID0 atimend interrupt</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BCNERLY8_INT</name>
              <description>port1 beacon early interrupt</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BCNERLY7_INT</name>
              <description>port0 BSSID7 beacon early interrupt ,  only valid under MBSSID mode</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BCNERLY6_INT</name>
              <description>port0 BSSID6 beacon early interrupt ,  only valid under MBSSID mode</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BCNERLY5_INT</name>
              <description>port0 BSSID5 beacon early interrupt ,  only valid under MBSSID mode</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BCNERLY4_INT</name>
              <description>port0 BSSID4 beacon early interrupt,  only valid under MBSSID mode</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BCNERLY3_INT</name>
              <description>port0 BSSID3 beacon early interrupt ,  only valid under MBSSID mode</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BCNERLY2_INT</name>
              <description>port0 BSSID2 beacon early interrupt,  only valid under MBSSID mode</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BCNERLY1_INT</name>
              <description>port0 BSSID1 beacon early interrupt ,  only valid under MBSSID mode</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BCNERLY0_INT</name>
              <description>This interrupt is issued at the time set by DRVERLYINT register before TBTT time 
for port 0 root bssid</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_BCNELY1_AGGR_INT</name>
              <description>port 1 Beacon early aggregation interrupt</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_CPU_MGQ_TXDONE_INT</name>
              <description>CPU_MQG_TXDONE ineterrupt source
when HW TX CPUMGQ packet success, it issue interrupt to host</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_PS_Timer_C_INT</name>
              <description>PS_Timer_C interrupt source
When the lower 4 bytes of TSF(that select by reg 0x1510[18:16]) matches the content of this register, the PS_Timer_C_INT interrupt is issued</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_PS_Timer_B_INT</name>
              <description>PS_Timer_B interrupt source
When the lower 4 bytes of TSF(that select by reg 0x1510[10:8]) matches the content of this register, the PS_Timer_B_INT interrupt is issued</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_PS_Timer_A_INT</name>
              <description>PS_Timer_A interrupt source
When the lower 4 bytes of TSF(that select by reg 0x1510[2:0]) matches the content of this register, the PS_Timer_A_INT interrupt is issued</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_BCNELY0_AGGR_INT</name>
              <description>port 0 Beacon early aggregation interrupt</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_GTINT4</name>
              <description>When GTIMER4 expires, this bit is set to 1</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_GTINT3</name>
              <description>When GTIMER3 expires, this bit is set to 1</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_TXBCNOK9_INT</name>
              <description>PORT1 TX beacon OK interrupt</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_TXBCNERR9_INT</name>
              <description>PORT1 TX beacon Error interrupt</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RXBCN_NAN_RPT_OK</name>
              <description>port2 rxbcn rpt and write to txrptbuf ok</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_HIMR2</name>
          <addressOffset>0x000000C0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_KM0_INT_EN</name>
              <description>The gathering of interrupts of KM0</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PS_Timer_E_INT_EN</name>
              <description>PS_Timer_E interrupt 
When the TSF(that select by reg 0x1520[13:12]) matches the content of this register, the PS_Timer_E_INT interrupt is issued</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PS_Timer_D_INT_EN</name>
              <description>PS_Timer_D interrupt 
When the lower 4 bytes of TSF(that select by reg 0x1520[17:16]) matches the content of this register, the PS_Timer_D_INT interrupt is issued</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PS_Timer_E_Early_INT_EN</name>
              <description>This interrupt is issued at the time set by PS_Timer_E_Early register before PS_Timer_E time.</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PS_Timer_D_Early_INT_EN</name>
              <description>This interrupt is issued at the time set by PS_Timer_D_Early register before PS_Timer_D time.</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PS_Timer_C_Early_INT_EN</name>
              <description>This interrupt is issued at the time set by PS_Timer_C_Early register before PS_Timer_C time.</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PS_Timer_B_Early_INT_EN</name>
              <description>This interrupt is issued at the time set by PS_Timer_B_Early register before PS_Timer_B time.</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PS_Timer_A_Early_INT_EN</name>
              <description>This interrupt is issued at the time set by PS_Timer_A_Early register before PS_Timer_A time.</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXBCNOK_NAN_INT_EN</name>
              <description>PORT2 TX beacon OK interrupt</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXBCNERR_NAN_INT_EN</name>
              <description>PORT2 TX beacon Error interrupt</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXTMREQ_INT_EN</name>
              <description>If BIT_RXTMREQ_INT_EN =1. When HW receive TMREQ packet, it will generate interrupt to firmware.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXTM_INT_EN</name>
              <description>If BIT_RXTM_INT_EN =1. When HW receive TM and transmit ACK frame successfully. It will generate interrupt to firmware.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXTM_INT_EN</name>
              <description>If BIT_TXTM_INT_EN =1. When HW transmit TM and receive ACK frame successfully. It will generate interrupt to firmware.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RX_PAYLOAD_MATCH_INT_EN</name>
              <description>indicate rx payload content match</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CHINFO_SEG_DONE_INT_EN</name>
              <description>indicate one channel info segment is received ok</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CSI_BUF_FULL_INT_EN</name>
              <description>indicate channel info rxcsibuffer is full</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_RX_PHYSTS_DONE_INT_EN</name>
              <description>indicate physts is successfully write into physts_mem</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_TIM_HIT_INT_EN</name>
              <description>when my aid or aid is 0 (0x16DC[8]) or my bssid is in tim element,generate this interrupt</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_DFS_PKT_INT_EN</name>
              <description>enable interrupt when receiving dfs pkt and about to reach threshold of given pkt number or timeout</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_BC_TWT_PARA_CHG_INT_EN</name>
              <description>RX broadcast twt with parameter changing,notify fw to read twt report</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_BCN_IE_0_HIT_INT_EN</name>
              <description>rx bcn with ie0 hit</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_BCN_IE_1_HIT_INT_EN</name>
              <description>rx bcn with ie1 hit</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HS_TIM_NO_HIT_INT_EN</name>
              <description>when no my aid or aid is 0(0x16DC[8]) or my bssid is not in tim element(0x16DB[31]),generate this interrupt</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HISR2</name>
          <addressOffset>0x000000C4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_KM0_INT</name>
              <description>The gathering of interrupts of KM0</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_PS_Timer_E_INT</name>
              <description>PS_Timer_E interrupt 
When the TSF(that select by reg 0x1520[13:12]) matches the content of this register, the PS_Timer_E_INT interrupt is issued</description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_PS_Timer_D_INT</name>
              <description>PS_Timer_D interrupt 
When the lower 4 bytes of TSF(that select by reg 0x1520[17:16]) matches the content of this register, the PS_Timer_D_INT interrupt is issued</description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_PS_Timer_E_Early_INT</name>
              <description>This interrupt is issued at the time set by PS_Timer_E_Early register before PS_Timer_E time.</description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_PS_Timer_D_Early_INT</name>
              <description>This interrupt is issued at the time set by PS_Timer_D_Early register before PS_Timer_D time.</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_PS_Timer_C_Early_INT</name>
              <description>This interrupt is issued at the time set by PS_Timer_C_Early register before PS_Timer_C time.</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_PS_Timer_B_Early_INT</name>
              <description>This interrupt is issued at the time set by PS_Timer_B_Early register before PS_Timer_B time.</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_PS_Timer_A_Early_INT</name>
              <description>This interrupt is issued at the time set by PS_Timer_A_Early register before PS_Timer_A time.</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_TXBCNOK_NAN_INT</name>
              <description>PORT2 TX beacon OK interrupt</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_TXBCNERR_NAN_INT</name>
              <description>PORT2 TX beacon Error interrupt</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RXTMREQ_INT</name>
              <description>If BIT_RXTMREQ_INT_EN =1. When HW receive TMREQ packet, it will generate interrupt to firmware.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RXTM_INT</name>
              <description>If BIT_RXTM_INT_EN =1. When HW receive TM and transmit ACK frame successfully. It will generate interrupt to firmware.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_TXTM_INT</name>
              <description>If BIT_TXTM_INT_EN =1. When HW transmit TM and receive ACK frame successfully. It will generate interrupt to firmware.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RX_PAYLOAD_MATCH_INT</name>
              <description>indicate rx payload content match</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_CHINFO_SEG_DONE_INT</name>
              <description>indicate one channel info segment is received ok</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_CSI_BUF_FULL_INT</name>
              <description>indicate channel info rxcsibuffer is full</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_RX_PHYSTS_DONE_INT</name>
              <description>indicate physts is successfully write into physts_mem</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_TIM_HIT_INT</name>
              <description>when my aid or aid is 0 (0x16DC[8]) or my bssid is in tim element,generate this interrupt</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_DFS_PKT_INT</name>
              <description>enable interrupt when receiving dfs pkt and about to reach threshold of given pkt number or timeout</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_BC_TWT_PARA_CHG_INT</name>
              <description>RX broadcast twt with parameter changing,notify fw to read twt report</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_BCN_IE_0_HIT_INT</name>
              <description>rx bcn with ie0 hit</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_BCN_IE_1_HIT_INT</name>
              <description>rx bcn with ie1 hit</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HS_TIM_NO_HIT_INT</name>
              <description>when no my aid or aid is 0(0x16DC[8]) or my bssid is not in tim element(0x16DB[31]),generate this interrupt</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SDM_IDR_CTRL0</name>
          <addressOffset>0x000000E8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_SDM_ADDR</name>
              <description>SDM register offset</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WL_CK32KGEN_RWD</name>
          <addressOffset>0x000000EC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_CK32GEN_RD</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SYS_CONFIG0</name>
          <addressOffset>0x000000F0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000080</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>dummy</description>
              <bitRange>[31:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_AUX_IS_32K</name>
              <description></description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_IS_SCH_CLK_INSLP_V1</name>
              <description>WL TSF clock status:
0: MAC clock
1: 32K clock</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_VENDOR_ID_V1</name>
              <description>Vendor ID
[7:6] : Download FW version ; 
00: TSMC , 01: SMIC, 10: UMC
[5] ; 0 : Download FW , init BB and RF registers
         1 : Do not download FW and do not init BB and RF registers
[4] ; 0 : BT do not exist in IC
         1 : BT exist in IC</description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_PLL_CK_RDY</name>
              <description>indicate AFE PLL clock is ready</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>page1</name>
      <groupName>WIFI</groupName>
      <baseAddress>0x40000000</baseAddress>
      <size>0x00001200</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00001200</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>REG_CR</name>
          <addressOffset>0x00000100</addressOffset>
          <size>32</size>
          <description>MAC TOP Function enable</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DMACLBK</name>
              <description>[28:24] LBMODE
[4]dual-mac lbk, [3] no buffer, 1: no delay, 0: delay; [2] dmalbk, [1] no_txphy, [0] diglbk.
00000: Normal
01011: Single MAC Direct loopback (no HW encryption/decryption)
00011: Single MAC Delay Loopback (with HW encryption/decryption)</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_NO_TBUF</name>
              <description></description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DMALBK</name>
              <description></description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_NO_TXPHY</name>
              <description></description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIGLBK</name>
              <description></description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_NETYPE1</name>
              <description>Network Type for Port 1
00: No link
01: Link in ad hoc network
10: Link in infrastructure network
11 : AP mode
Default: 00b.</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_NETYPE0</name>
              <description>Network Type for port 0
00: No link
01: Link in ad hoc network
10: Link in infrastructure network
11 : AP mode
Default: 00b.</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_I2C_MAILBOX_EN</name>
              <description>Enable I2C mailbox</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MAC_SEC_EN</name>
              <description>Enable MAC security engine
When this bit is clear, security engine is reset</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ENSWBCN</name>
              <description>Enable SW TX beacon
0 : disable, beacon is DMAed from host memory by HW at BCNDMAINT
1 : enable, beacon is polled to DMA to TXBUF.
In both case, as long as a beacon frame is set in BCN page, MAC will automatically sent beacon frame automatically.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MACRXEN</name>
              <description>MAC Receiver Enable.
When set to 1, and the receive state machine is idle, the receive machine becomes active. This bit will read back as 1 whenever the receive state machine is active. After initial power-up, software must ensure that the receiver has completely reset before setting this bit.
1: Enable
0: Disable
Default: 0b.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MACTXEN</name>
              <description>MAC Transmitter Enable.
When set to 1, and the transmit state machine is idle, the transmit state machine becomes active. This bit will read back as 1 whenever the transmit state machine is active. After initial power-up, software must ensure that the transmitter has completely reset before setting this bit.
1: Enable
0: Disable
Default: 0b.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SCHEDULE_EN</name>
              <description>Schedule Enable.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PROTOCOL_EN</name>
              <description>protocol Block Function Enable.(FW2HW)</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXDMA_EN</name>
              <description>RXDMA Function Enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXDMA_EN</name>
              <description>TXDMA Function Enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HCI_RXDMA_EN</name>
              <description>HCI to RXDMA Interface Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HCI_TXDMA_EN</name>
              <description>HCI to TXDMA Interface Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PG_SIZE</name>
          <addressOffset>0x00000104</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[15:9]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TSF_CLK_STATE</name>
          <addressOffset>0x00000108</addressOffset>
          <size>32</size>
          <description>Beacon time reset value</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[31:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_CLK_TSF_IS32K</name>
              <description>Which Clock is Used by TSF Clock
1: 32K Clock
0: MAC Clock</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TXDMA_PQ_MAP</name>
          <addressOffset>0x0000010C</addressOffset>
          <size>32</size>
          <description>RX DMA Fuction enable</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[31:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXDMA_CMQ_MAP</name>
              <description>00: Extra priority queue
01: Low priority queue
10: Normal priority queue
11: High priority queue</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXDMA_HIQ_MAP</name>
              <description>00: Extra priority queue
01: Low priority queue
10: Normal priority queue
11: High priority queue</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXDMA_MGQ_MAP</name>
              <description>00: Extra priority queue
01: Low priority queue
10: Normal priority queue
11: High priority queue</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXDMA_BKQ_MAP</name>
              <description>00: Extra priority queue
01: Low priority queue
10: Normal priority queue
11: High priority queue</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXDMA_BEQ_MAP</name>
              <description>00: Extra priority queue
01: Low priority queue
10: Normal priority queue
11: High priority queue</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXDMA_VIQ_MAP</name>
              <description>00: Extra priority queue
01: Low priority queue
10: Normal priority queue
11: High priority queue</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXDMA_VOQ_MAP</name>
              <description>00: Extra priority queue
01: Low priority queue
10: Normal priority queue
11: High priority queue</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXDMA_AGG_EN</name>
              <description>When this bit is set, then RXDMA will inform host to receive RX packets, when packet page number in RXFF exceeds the threshold set in RXDMA_AGG_PG_TH register.
When this bit is set, then page size of receive packet buffer shall be set larger than 64 bytes/page</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ENSHFT</name>
              <description>When this bit is set, RX shift to fit alignment is enabled.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXDMA_BW_EN</name>
              <description>Enable RXDMA Arbitrator priority for Host interface.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TRXFF_BNDY</name>
          <addressOffset>0x00000114</addressOffset>
          <size>32</size>
          <description>FIFO Boundary control register</description>
          <resetValue>0x3FFF0F00</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RXPKT0ENDADDR</name>
              <description>This register sets the upper boundary of RXFF0. The unit is 1 byte. The available memory space in RXPKTBUF for RXFF0 is configurable. The value is set to the physical LX bus address.</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXFFOVFL_RSV</name>
              <description>Use this register to set reserved entries number of rxpktbuffer for overflow judgment. The rxpktbuffer overflow will be pre-asserted if the left entries count meets the value set here.</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PTA_I2C_MBOX</name>
          <addressOffset>0x00000118</addressOffset>
          <size>32</size>
          <description>Status register-FIFO status</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[31:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_I2C_M_STATUS</name>
              <description>Read these can get the I2C_M_STATUS of PTA_I2C's OUTPUT.</description>
              <bitRange>[11:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_I2C_M_BUS_GNT_FW</name>
              <description>Use this bit to control PTA_I2C's BUS_GNT. 100 for gnt_txdata, 010 for gnt_txack, 001 for gnt_rxstatus.</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_I2C_GNT_FW</name>
              <description>Use this bit to control PTA_I2C_GNT_FW input. 1 for FW I2C bus arbiter, 0 for HW as I2C bus arbiter.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_I2C_M_SPEED</name>
              <description>Use these bit to control PTA_I2C I2C interface data rate. SCL = clk / 2^(3 + I2C_DATA_RATE)</description>
              <bitRange>[2:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_I2C_M_UNLOCK</name>
              <description>If this bit is set, PTA_I2C use 118H and 119H to control PTA_I2C</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RXFF_PTR</name>
          <addressOffset>0x0000011C</addressOffset>
          <size>32</size>
          <description>RX  FIFO Read/write pointer</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RXFF0_RDPTR</name>
              <description>The read pointer address of RXFF0. The value is set to the physical LX bus address.</description>
              <bitRange>[31:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RXFF0_WTPTR</name>
              <description>The write pointer address of RXFF0. The value is set to the physical LX bus address.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FE1IMR</name>
          <addressOffset>0x00000120</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FS_NOT_BEACON_INT_EN</name>
              <description>not beacon packet interrupt</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_BB_STOP_RX_INT_EN</name>
              <description>BB STOP RX interrupt</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TSF_GT_THRES_INT_EN</name>
              <description>The interrupt is issued when difference of tsft in beacon frame of port0 is greater than threshold</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_RXPLCP_CHKOK_INT_EN</name>
              <description>RXPCLP check ok interrupt</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_RXBCN_TIMEUP_CNT_INT_EN</name>
              <description>When this bit is enable, the interrupt is issued when RX beacon frame timeout occurs specified times in port0.specified by 0x17C[23:20]</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_RXBCN_TIMEUP_INT_EN</name>
              <description>When this bit is enable, the interrupt is issued when RX beacon frame timeout occurs in port0.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_RX_BCN_ERR_P1_INT_EN</name>
              <description>When this bit is enable, the interrupt is issued when RX beacon frame with fcs error occurs in port1.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_RX_BCN_ERR_P0_INT_EN</name>
              <description>When this bit is enable, the interrupt is issued when RX beacon frame with fcs error occurs in port0.</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_RX_BCN_P1_INT_EN</name>
              <description>When this bit is enable, the interrupt is issued when RX beacon frame occurs in port1.</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_RX_BCN_P0_INT_EN</name>
              <description>When this bit is enable, the interrupt is issued when RX beacon frame occurs in port0.</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_RX_UMD0_INT_EN</name>
              <description>The interrupt is issued while receiving unicast data frame with More Data=0</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_RX_UMD1_INT_EN</name>
              <description>The interrupt is issued while receiving unicast data frame with More Data=1</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_RX_BMD0_INT_EN</name>
              <description>The interrupt is issued while receiving broadcast data frame with More Data=0</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_RX_BMD1_INT_EN</name>
              <description>The interrupt is issued while receiving broadcast data frame with More Data=1</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_RXDONE0_INT_EN</name>
              <description>Rx Packet 0 done interrupt (for WOL release packet)</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_WWLAN_INT_EN</name>
              <description>HW detect rxpkt Wol WLAN event interrupt</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_SOUND_DONE_INT_EN</name>
              <description>Be a beamformer, this interrupt is issued at the time after sounding finish</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_LP_STBY_INT_EN</name>
              <description>Lower Power Standby Interrupt</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_BF1_PRETO_INT_EN</name>
              <description>BF1 pretimeout interrupt</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_BF0_PRETO_INT_EN</name>
              <description>BF0 pretimeout interrupt</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PTCL_RELEASE_MACID_INT_EN</name>
              <description>PTCL release macid interrupt</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PRETXERR_HANDLE_FSISR_INT_EN</name>
              <description>PRETXERR_HANDLE FW Flag Interrupt register.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_WLBB_LOW_PRI_INT_EN</name>
              <description>ERROR happened in bb,not fatal</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_WLBB_HIGH_PRI_INT_EN</name>
              <description>fatal error happened in bb</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_WLACTOFF_INT_EN</name>
              <description>WL_ACT_MASK_ON de-assertion for bt coexistence function interrupt</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_WLACTON_INT_EN</name>
              <description>WL_ACT_MASK_ON assertion for bt coexistence function interrupt</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_BTCMD_INT_EN</name>
              <description>the interrupt is issued when btcmd occurs.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_REG_Mailbox_TO_I2C_INT_EN</name>
              <description>Mailbox_TO_I2C_INT (BT bridge)</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TRPC_TO_INT_EN</name>
              <description>TRPC time out Interrupt</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_RPC_O_T_INT_EN</name>
              <description>RPC over threshold Interrupt</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FE1ISR</name>
          <addressOffset>0x00000124</addressOffset>
          <size>32</size>
          <description>Firmware Extend Interrupt Status Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FS_NOT_BEACON_INT</name>
              <description>not beacon packet interrupt</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_BB_STOP_RX_INT</name>
              <description>BB STOP RX interrupt</description>
              <bitRange>[29:29]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TSF_GT_THRES_INT</name>
              <description>The interrupt is issued when difference of tsft in beacon frame is greater than threshold</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_RXPLCP_CHKOK_INT</name>
              <description>RXPCLP check ok interrupt</description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_RXBCN_TIMEUP_CNT_INT</name>
              <description>When this bit is enable, the interrupt is issued when RX beacon frame timeout occurs specified times in port0.specified by 0x17C[23:20]</description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_RXBCN_TIMEUP_INT</name>
              <description>When this bit is enable, the interrupt is issued when RX beacon frame timeout occurs in port0.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_RX_BCN_ERR_P1_INT</name>
              <description>When this bit is enable, the interrupt is issued when RX beacon frame with fcs error occurs in port1.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_RX_BCN_ERR_P0_INT</name>
              <description>When this bit is enable, the interrupt is issued when RX beacon frame with fcs error occurs in port0.</description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_RX_BCN_P1_INT</name>
              <description>When this bit is enable, the interrupt is issued when RX beacon frame occurs in port1.</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_RX_BCN_P0_INT</name>
              <description>When this bit is enable, the interrupt is issued when RX beacon frame occurs in port0.</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_RX_UMD0_INT</name>
              <description>The interrupt is issued while receiving unicast data frame with More Data=0</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_RX_UMD1_INT</name>
              <description>The interrupt is issued while receiving unicast data frame with More Data=1</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_RX_BMD0_INT</name>
              <description>The interrupt is issued while receiving broadcast data frame with More Data=0</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_RX_BMD1_INT</name>
              <description>The interrupt is issued while receiving broadcast data frame with More Data=1</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_RXDONE0_INT</name>
              <description>Rx Packet 0 done interrupt (for WOL release packet)</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_WWLAN_INT</name>
              <description>HW detect rxpkt Wol WLAN event interrupt</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_SOUND_DONE_INT</name>
              <description>Be a beamformer, this interrupt is issued at the time after sounding finish</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_LP_STBY_INT</name>
              <description>Lower Power Standby Interrupt</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_BF1_PRETO_INT</name>
              <description>BF1 pretimeout interrupt</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_BF0_PRETO_INT</name>
              <description>BF0 pretimeout interrupt</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PTCL_RELEASE_MACID_INT</name>
              <description>PTCL release macid interrupt</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PRETXERR_HANDLE_FSISR_INT</name>
              <description>PRETXERR_HANDLE FW Flag Interrupt register.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_WLBB_LOW_PRI_INT</name>
              <description>ERROR happened in bb,not fatal</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_WLBB_HIGH_PRI_INT</name>
              <description>fatal error happened in bb</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_WLACTOFF_INT</name>
              <description>WL_ACT_MASK_ON de-assertion for bt coexistence function interrupt</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_WLACTON_INT</name>
              <description>WL_ACT_MASK_ON assertion for bt coexistence function interrupt</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_BTCMD_INT</name>
              <description>the interrupt is issued when btcmd occurs.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_REG_Mailbox_TO_I2C_INT</name>
              <description>Mailbox_TO_I2C_INT (BT bridge)</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TRPC_TO_INT</name>
              <description>tx/rx  pkt time out Interrupt</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_RPC_O_T_INT</name>
              <description>RXPKT counter over threshold Interrupt</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FWIMR</name>
          <addressOffset>0x00000130</addressOffset>
          <size>32</size>
          <description>Firmware Interrupt Mask Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FS_TXBCNOK_MB7_INT_EN</name>
              <description>MBSSID7 TX beacon OK interrupt</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNOK_MB6_INT_EN</name>
              <description>MBSSID6 TX beacon OK interrupt</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNOK_MB5_INT_EN</name>
              <description>MBSSID5 TX beacon OK interrupt</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNOK_MB4_INT_EN</name>
              <description>MBSSID4 TX beacon OK interrupt</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNOK_MB3_INT_EN</name>
              <description>MBSSID3 TX beacon OK interrupt</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNOK_MB2_INT_EN</name>
              <description>MBSSID2 TX beacon OK interrupt</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNOK_MB1_INT_EN</name>
              <description>MBSSID1 TX beacon OK interrupt</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNOK_MB0_INT_EN</name>
              <description>MBSSID0 TX beacon OK interrupt</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNERR_MB7_INT_EN</name>
              <description>MBSSID7 TX beacon Error interrupt</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNERR_MB6_INT_EN</name>
              <description>MBSSID6 TX beacon Error interrupt</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNERR_MB5_INT_EN</name>
              <description>MBSSID5 TX beacon Error interrupt</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNERR_MB4_INT_EN</name>
              <description>MBSSID4 TX beacon Error interrupt</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNERR_MB3_INT_EN</name>
              <description>MBSSID3 TX beacon Error interrupt</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNERR_MB2_INT_EN</name>
              <description>MBSSID2 TX beacon Error interrupt</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNERR_MB1_INT_EN</name>
              <description>MBSSID1 TX beacon Error interrupt</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNERR_MB0_INT_EN</name>
              <description>MBSSID0 TX beacon Error interrupt</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_CPUMGN_POLLED_PKT_DONE_INT_EN</name>
              <description>CPU management queue polled packet released done interrupt enable (check cpu management queue current flow)</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_MGNTQ_FF_RELEASE_INT_EN</name>
              <description>MgntQ ReadPtr FIFO release interrupt (for 8822B)</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_CPUMGQ_ERR_INT_EN</name>
              <description>CPU management queue polled packet not TX OK while new packet comes in, enable to issue interrupt or not</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>rsvd</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_DDMA0_LP_INT_EN</name>
              <description>Low priority ddma0 down interrupt .</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_DDMA0_HP_INT_EN</name>
              <description>High priority ddma0 down interrupt</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TXRPT_INT_EN</name>
              <description>TX report interrupt</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_C2H_W_READY_INT_EN</name>
              <description>C2H register ready for write interrupt</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_HRCV_INT_EN</name>
              <description>Host to CPU Message Interrupt, generated on writing to 0x1CF</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_H2CCMD_INT_EN</name>
              <description>Host To CPU Message Interrupt</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TX_CLOSE_INT_EN</name>
              <description>TX DONE INTERRUPT</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_ERRORHDL_INT_EN</name>
              <description>FWHW/ TXDMA/ RXDMA/ WMAC error status interrupt(0x210[31:0], 0x288[31:0], 0x4E2[15:0], 0x6B8[31:0]). WMAC error state will be recovered by HW, the others won't.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TXCCX_INT_EN</name>
              <description>CCX PKT TX Report Interrupt</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PTCL_HANDLE_OK_INT_EN</name>
              <description>TX Finish (Ack/BA process Finish) Interrupt.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FWISR</name>
          <addressOffset>0x00000134</addressOffset>
          <size>32</size>
          <description>Firmware Interrupt Status Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FS_TXBCNOK_MB7_INT</name>
              <description>MBSSID7 TX beacon OK interrupt</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNOK_MB6_INT</name>
              <description>MBSSID6 TX beacon OK interrupt</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNOK_MB5_INT</name>
              <description>MBSSID5 TX beacon OK interrupt</description>
              <bitRange>[29:29]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNOK_MB4_INT</name>
              <description>MBSSID4 TX beacon OK interrupt</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNOK_MB3_INT</name>
              <description>MBSSID3 TX beacon OK interrupt</description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNOK_MB2_INT</name>
              <description>MBSSID2 TX beacon OK interrupt</description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNOK_MB1_INT</name>
              <description>MBSSID1 TX beacon OK interrupt</description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNOK_MB0_INT</name>
              <description>MBSSID0 TX beacon OK interrupt</description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNERR_MB7_INT</name>
              <description>MBSSID7 TX beacon Error interrupt</description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNERR_MB6_INT</name>
              <description>MBSSID6 TX beacon Error interrupt</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNERR_MB5_INT</name>
              <description>MBSSID5 TX beacon Error interrupt</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNERR_MB4_INT</name>
              <description>MBSSID4 TX beacon Error interrupt</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNERR_MB3_INT</name>
              <description>MBSSID3 TX beacon Error interrupt</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNERR_MB2_INT</name>
              <description>MBSSID2 TX beacon Error interrupt</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNERR_MB1_INT</name>
              <description>MBSSID1 TX beacon Error interrupt</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNERR_MB0_INT</name>
              <description>MBSSID0 TX beacon Error interrupt</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_CPUMGN_POLLED_PKT_DONE_INT</name>
              <description>CPU management queue polled packet released done interrupt enable (check cpu management queue current flow)</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_MGNTQ_FF_RELEASE_INT</name>
              <description>MgntQ ReadPtr FIFO release interrupt (for 8822B)</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_CPUMGQ_ERR_INT</name>
              <description>CPU management queue polled packet not TX OK while new packet comes in, enable to issue interrupt or not</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>rsvd</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_DDMA0_LP_INT</name>
              <description>Low priority ddma0 down interrupt .</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_DDMA0_HP_INT</name>
              <description>High priority ddma0 down interrupt</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TXRPT_INT</name>
              <description>TX report interrupt</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_C2H_W_READY_INT</name>
              <description>C2H register ready for write interrupt</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_HRCV_INT</name>
              <description>Host to CPU Message Interrupt, generated on writing to 0x1CF</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_H2CCMD_INT</name>
              <description>Host To CPU Message Interrupt</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TX_CLOSE_INT</name>
              <description>TX DONE INTERRUPT</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_ERRORHDL_INT</name>
              <description>FWHW/ TXDMA/ RXDMA/ WMAC error status interrupt(0x210[31:0], 0x288[31:0], 0x4E2[15:0], 0x6B8[31:0]). WMAC error state will be recovered by HW, the others won't.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TXCCX_INT</name>
              <description>CCX PKT TX Report Interrupt</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PTCL_HANDLE_OK_INT</name>
              <description>TX Finish (Ack/BA process Finish) Interrupt.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FTIMR</name>
          <addressOffset>0x00000138</addressOffset>
          <size>32</size>
          <description>Firmware  Timer Interrupt Mask Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FS_FTSR1_INT_EN</name>
              <description>FTMR1 Indicator (FTMR1 and FTMR1 are true, this bit is set to 1)</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_FTSR2_INT_EN</name>
              <description>FTMR2 Indicator (FTMR2 and FTMR2 are true, this bit is set to 1)</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_RPWM_INT_EN</name>
              <description>RPWM interrupt</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PS_Timer_E_INT_EN</name>
              <description>PS_Timer_E interrupt 
When the TSF(that select by reg 0x1520[13:12]) matches the content of this register, the PS_Timer_E_INT interrupt is issued</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PS_Timer_D_INT_EN</name>
              <description>PS_Timer_D interrupt 
When the lower 4 bytes of TSF(that select by reg 0x1520[17:16]) matches the content of this register, the PS_Timer_D_INT interrupt is issued</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PS_Timer_E_Early_INT_EN</name>
              <description>This interrupt is issued at the time set by PS_Timer_E_Early register before PS_Timer_E time.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PS_Timer_D_Early_INT_EN</name>
              <description>This interrupt is issued at the time set by PS_Timer_D_Early register before PS_Timer_D time.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PS_Timer_C_Early_INT_EN</name>
              <description>This interrupt is issued at the time set by PS_Timer_C_Early register before PS_Timer_C time.</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PS_Timer_B_Early_INT_EN</name>
              <description>This interrupt is issued at the time set by PS_Timer_B_Early register before PS_Timer_B time.</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PS_Timer_A_Early_INT_EN</name>
              <description>This interrupt is issued at the time set by PS_Timer_A_Early register before PS_Timer_A time.</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PS_Timer_C_INT_EN</name>
              <description>PS_Timer_C interrupt 
When the lower 4 bytes of TSF(that select by reg 0x1510[18:16]) matches the content of this register, the PS_Timer_C_INT interrupt is issued</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PS_Timer_B_INT_EN</name>
              <description>PS_Timer_B interrupt 
When the lower 4 bytes of TSF(that select by reg 0x1510[10:8]) matches the content of this register, the PS_Timer_B_INT interrupt is issued</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PS_Timer_A_INT_EN</name>
              <description>PS_Timer_A interrupt 
When the lower 4 bytes of TSF(that select by reg 0x1510[2:0]) matches the content of this register, the PS_Timer_A_INT interrupt is issued</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PS_TIMEOUT2_INT_EN</name>
              <description>PS_TimeOut2 interrupt .
When the lower 4 bytes of FREERUN CNT matches the content of this register(0x588), the FW PS_TimeOut2 interrupt is issued.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PS_TIMEOUT1_INT_EN</name>
              <description>PS_TimeOut1 interrupt . 
When the lower 4 bytes of TSFTR(that select by 0x5b1[5:3])  matches the content of this register(0x584), the FW PS_TimeOut1 interrupt is issued.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PS_TIMEOUT0_INT_EN</name>
              <description>PS_TimeOut0 interrupt . 
When the lower 4 bytes of TSFTR(that select by 0x5b4[2:0])  matches the content of this register(0x580), the FW PS_TimeOut0 interrupt is issued.</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_FTM_PTT_INT_EN</name>
              <description>Partial tsf timer</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_GTINT6_INT_EN</name>
              <description>General Timer[6] interrupt</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_GTINT5_INT_EN</name>
              <description>General Timer[5] interrupt</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_GTINT4_INT_EN</name>
              <description>General Timer[4] interrupt</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_GTINT3_INT_EN</name>
              <description>General Timer[3] interrupt</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_GTINT2_INT_EN</name>
              <description>General Timer[2] interrupt</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_GTINT1_INT_EN</name>
              <description>General Timer[1] interrupt</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_GTINT0_INT_EN</name>
              <description>General Timer[0] interrupt</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FTISR</name>
          <addressOffset>0x0000013C</addressOffset>
          <size>32</size>
          <description>Firmware Timer Interrupt Status Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FS_FTSR1_INT</name>
              <description>FTMR1 Indicator (FTMR1 and FTMR1 are true, this bit is set to 1)</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_FTSR2_INT</name>
              <description>FTMR2 Indicator (FTMR2 and FTMR2 are true, this bit is set to 1)</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_RPWM_INT</name>
              <description>RPWM interrupt</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PS_Timer_E_INT</name>
              <description>PS_Timer_E interrupt 
When the TSF(that select by reg 0x1520[13:12]) matches the content of this register, the PS_Timer_E_INT interrupt is issued</description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PS_Timer_D_INT</name>
              <description>PS_Timer_D interrupt 
When the lower 4 bytes of TSF(that select by reg 0x1520[17:16]) matches the content of this register, the PS_Timer_D_INT interrupt is issued</description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PS_Timer_E_Early_INT</name>
              <description>This interrupt is issued at the time set by PS_Timer_E_Early register before PS_Timer_E time.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PS_Timer_D_Early_INT</name>
              <description>This interrupt is issued at the time set by PS_Timer_D_Early register before PS_Timer_D time.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PS_Timer_C_Early_INT</name>
              <description>This interrupt is issued at the time set by PS_Timer_C_Early register before PS_Timer_C time.</description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PS_Timer_B_Early_INT</name>
              <description>This interrupt is issued at the time set by PS_Timer_B_Early register before PS_Timer_B time.</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PS_Timer_A_Early_INT</name>
              <description>This interrupt is issued at the time set by PS_Timer_A_Early register before PS_Timer_A time.</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PS_Timer_C_INT</name>
              <description>PS_Timer_C interrupt 
When the lower 4 bytes of TSF(that select by reg 0x1510[18:16]) matches the content of this register, the PS_Timer_C_INT interrupt is issued</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PS_Timer_B_INT</name>
              <description>PS_Timer_B interrupt 
When the lower 4 bytes of TSF(that select by reg 0x1510[10:8]) matches the content of this register, the PS_Timer_B_INT interrupt is issued</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PS_Timer_A_INT</name>
              <description>PS_Timer_A interrupt 
When the lower 4 bytes of TSF(that select by reg 0x1510[2:0]) matches the content of this register, the PS_Timer_A_INT interrupt is issued</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PS_TIMEOUT2_INT</name>
              <description>PS_TimeOut2 interrupt .
When the lower 4 bytes of FREERUN CNT matches the content of this register(0x588), the FW PS_TimeOut2 interrupt is issued.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PS_TIMEOUT1_INT</name>
              <description>PS_TimeOut1 interrupt . 
When the lower 4 bytes of TSFTR(that select by 0x5b1[5:3])  matches the content of this register(0x584), the FW PS_TimeOut1 interrupt is issued.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PS_TIMEOUT0_INT</name>
              <description>PS_TimeOut0 interrupt . 
When the lower 4 bytes of TSFTR(that select by 0x5b4[2:0])  matches the content of this register(0x580), the FW PS_TimeOut0 interrupt is issued.</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_FTM_PTT_INT</name>
              <description>Partial tsf timer</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_GTINT6_INT</name>
              <description>General Timer[6] interrupt</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_GTINT5_INT</name>
              <description>General Timer[5] interrupt</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_GTINT4_INT</name>
              <description>General Timer[4] interrupt</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_GTINT3_INT</name>
              <description>General Timer[3] interrupt</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_GTINT2_INT</name>
              <description>General Timer[2] interrupt</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_GTINT1_INT</name>
              <description>General Timer[1] interrupt</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_GTINT0_INT</name>
              <description>General Timer[0] interrupt</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PHYSTS_REL</name>
          <addressOffset>0x00000140</addressOffset>
          <size>32</size>
          <description>PHYSTS REALSE</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_PHY_STS_STR</name>
              <description>physts start read address,8 bytes unit</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PHY_STS_NUM</name>
              <description>physts packet number in physts buffer</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PHY_SYS_POLL</name>
              <description>physts release polling,when polling done,write the bit to 0</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CHANNEL_INFO_REL</name>
          <addressOffset>0x00000144</addressOffset>
          <size>32</size>
          <description>CHANNEL INFO REALSE</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_CHINFO_STR</name>
              <description>channel info start read address,8 bytes unit</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CHINFO_NUM</name>
              <description>channel info packet number in csi buffer</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CHINFO_POLL</name>
              <description>channel info release polling,when polling done,write the bit to 0</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TC0_CTRL</name>
          <addressOffset>0x00000150</addressOffset>
          <size>32</size>
          <description>Counter 0 data</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>Rsvd</description>
              <bitRange>[31:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TC0INT_EN</name>
              <description>When write "1" to this bit, Counter 0 starts counting down. This is a one-bit pulse.</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TC0MODE</name>
              <description>Timer/Counter 0 mode 
0=counter mode
1=timer mode</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TC0EN</name>
              <description>Timer/Counter 0 enable</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TC0DATA</name>
              <description>Timer/Counter 0 data register. It specifies the time-out duration.</description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TC1_CTRL</name>
          <addressOffset>0x00000154</addressOffset>
          <size>32</size>
          <description>Counter 1 data</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>Rsvd</description>
              <bitRange>[31:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TC1INT_EN</name>
              <description>When write "1" to this bit, Counter 1 starts counting down. This is a one-bit pulse.</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TC1MODE</name>
              <description>Timer/Counter 1 mode 
0=counter mode
1=timer mode</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TC1EN</name>
              <description>Timer/Counter 1 enable</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TC1DATA</name>
              <description>Timer/Counter 1 data register. It specifies the time-out duration.</description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TC2_CTRL</name>
          <addressOffset>0x00000158</addressOffset>
          <size>32</size>
          <description>Counter 2 data</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>Reserved</description>
              <bitRange>[31:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TC2INT_EN</name>
              <description>When write "1" to this bit, Counter 2 starts counting down. This is a one-bit pulse.</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TC2MODE</name>
              <description>Timer/Counter 2 mode 
0=counter mode
1=timer mode</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TC2EN</name>
              <description>Timer/Counter 2 enable</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TC2DATA</name>
              <description>Timer/Counter 2 data register. It specifies the time-out duration.</description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TC3_CTRL</name>
          <addressOffset>0x0000015C</addressOffset>
          <size>32</size>
          <description>Counter 3 data</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>Reserved</description>
              <bitRange>[31:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TC3INT_EN</name>
              <description>When write "1" to this bit, Counter 3 starts counting down. This is a one-bit pulse.</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TC3MODE</name>
              <description>Timer/Counter 3 mode 
0=counter mode
1=timer mode</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TC3EN</name>
              <description>Timer/Counter 3 enable</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TC3Data</name>
              <description>Timer/Counter 3 data register. It specifies the time-out duration.</description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TC4_CTRL</name>
          <addressOffset>0x00000160</addressOffset>
          <size>32</size>
          <description>Counter 4 data</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>Reserved</description>
              <bitRange>[31:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TC4INT_EN</name>
              <description>When write "1" to this bit, Counter 4 starts counting down. This is a one-bit pulse.</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TC4MODE</name>
              <description>Timer/Counter 4mode 
0=counter mode
1=timer mode</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TC4EN</name>
              <description>Timer/Counter 4 enable</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TC4Data</name>
              <description>Timer/Counter 4 data register. It specifies the time-out duration.</description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TCUNIT_BASE</name>
          <addressOffset>0x00000164</addressOffset>
          <size>32</size>
          <description>Control Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[31:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TC_UNIT_BASE</name>
              <description>The register set the number of clocks that equals to the base time unit of timer/counter. The clock domain is 32k clock domain.</description>
              <bitRange>[13:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TC5_CTRL</name>
          <addressOffset>0x00000168</addressOffset>
          <size>32</size>
          <description>Counter 5 data</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[31:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TC50INT_EN</name>
              <description>When write "1" to this bit, Counter 5 starts counting down. This is a one-bit pulse.</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TC5MODE</name>
              <description>Timer/Counter 5 mode
0=counter mode
1=timer mode</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TC5EN</name>
              <description>Timer/Counter5 enable</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TC5DATA</name>
              <description>Timer/Counter 5 data register. It specifies the time-out duration.</description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TC6_CTRL</name>
          <addressOffset>0x0000016C</addressOffset>
          <size>32</size>
          <description>Counter 6 data</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[31:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TC60INT_EN</name>
              <description>When write "1" to this bit, Counter 6 starts counting down. This is a one-bit pulse.</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TC6MODE</name>
              <description>Timer/Counter 6 mode
0=counter mode
1=timer mode</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TC6EN</name>
              <description>Timer/Counter6 enable</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TC6DATA</name>
              <description>Timer/Counter 6 data register. It specifies the time-out duration.</description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_HW_IOE_CR_CHN1</name>
          <addressOffset>0x00000170</addressOffset>
          <size>32</size>
          <description>HW IO Engine Configure Register_CHN1</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_HIOE_ACTIVE_CHN1</name>
              <description>indicate HIOE engine is active</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[30:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HIOE_RESTORE_REQ_CHN1</name>
              <description>WLOFF REG restore request, clear by hw</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HIOE_BACKUP_REQ_CHN1</name>
              <description>WLOFF REG backup request, clear by hw</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HIOE_END_ADDR_CHN1</name>
              <description>HIOE command end address in txpktbuffer, unit:8byte</description>
              <bitRange>[23:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HIOE_STR_ADDR_CHN1</name>
              <description>HIOE command start address in txpktbuffer, unit:8byte</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_HW_IOE_CR_CHN_ON</name>
          <addressOffset>0x00000174</addressOffset>
          <size>32</size>
          <description>HW IO Engine Configure Register_CHN_ON</description>
          <resetValue>0x04000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_HIOE_ACTIVE_CHN_ON</name>
              <description>indicate HIOE engine is active, used for wlan power on flow</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[30:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HIOE_BYPASS_CHN_ON</name>
              <description>BYPASS HW trig hioe to do rf on flow</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HIOE_RESTORE_REQ_CHN_ON</name>
              <description>WLOFF REG restore request, clear by hw</description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HIOE_END_ADDR_CHN_ON</name>
              <description>HIOE command end address in txpktbuffer, unit:8byte</description>
              <bitRange>[23:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HIOE_STR_ADDR_CHN_ON</name>
              <description>HIOE command start address in txpktbuffer, unit:8byte</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_HW_IOE_CR_CHN_OFF</name>
          <addressOffset>0x00000178</addressOffset>
          <size>32</size>
          <description>HW IO Engine Configure Register_CHN_OFF</description>
          <resetValue>0x04000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_HIOE_ACTIVE_CHN_OFF</name>
              <description>indicate HIOE engine is active, used for wlan power off flow</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[30:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HIOE_BYPASS_CHN_OFF</name>
              <description>BYPASS HW trig hioe to do rf off flow</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HIOE_RESTORE_REQ_CHN_OFF</name>
              <description>WLOFF REG restore request, clear by hw</description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HIOE_END_ADDR_CHN_OFF</name>
              <description>HIOE command end address in txpktbuffer, unit:8byte</description>
              <bitRange>[23:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HIOE_STR_ADDR_CHN_OFF</name>
              <description>HIOE command start address in txpktbuffer, unit:8byte</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RXBCN_TIMER</name>
          <addressOffset>0x0000017C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00301F40</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FS_HW_LPS_EN</name>
              <description>enable HW enter lps after hioe_off_int rise when BIT_FS_RXBCN_LPS_EN=1</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXBCN_TIMEOUT_COUNT</name>
              <description>rxbcn timeout counter</description>
              <bitRange>[30:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_RXBCN_LPS_EN</name>
              <description>enable lps offload flow when rxbcn frame in port0 acting as a non-AP STA.</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_WAIT_RXBCN_FINISH</name>
              <description>when rxbcn frame, turn off rf or generate interrupt ablout rxbcn after beacon fcs is parsered</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXBCN_TIMEOUT_COUNT_CLR</name>
              <description>clear rxbcn timeout counter</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXBCN_TIMEOUT_COUNT_THRES</name>
              <description>threshold for rxbcn timeout counter,when 0x17C[30:27] equals to this value,generate interrupt</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXBCN_TIMEOUT_THRES</name>
              <description>threshold for rxbcn timeout,UNIT:us default:8ms</description>
              <bitRange>[19:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_HW_IOE_CR_CH0</name>
          <addressOffset>0x000001B0</addressOffset>
          <size>32</size>
          <description>HW IO Engine Configure Register_CH0</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_HIOE_ACTIVE_CH0</name>
              <description>indicate HIOE engine is active</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[30:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HIOE_RESTORE_REQ_CH0</name>
              <description>WLOFF REG restore request, clear by hw</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HIOE_BACKUP_REQ_CH0</name>
              <description>WLOFF REG backup request, clear by hw</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HIOE_END_ADDR_CH0</name>
              <description>HIOE command end address in txpktbuffer, unit:8byte</description>
              <bitRange>[23:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HIOE_STR_ADDR_CH0</name>
              <description>HIOE command start address in txpktbuffer, unit:8byte</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BB_RFC_ATR</name>
          <addressOffset>0x000001B4</addressOffset>
          <size>32</size>
          <description>BB/RFC REG Access Time Register</description>
          <resetValue>0x07050406</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_PHYRE_CNT</name>
              <description>the timing after RE for host/cpu access BB/RFC REG</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PHYWR_SETUP_CNT</name>
              <description>the timing WDATA stable before WE for host/cpu access BB/RFC REG</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PHYWR_HOLD_CNT</name>
              <description>the timing WDATA stable after WE for host/cpu access BB/RFC REG</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PHYRD_WAIT_CNT</name>
              <description>the timing RDATA stable after ADDR for host/cpu access BB/RFC REG</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FW_DBG12</name>
          <addressOffset>0x000001B8</addressOffset>
          <size>32</size>
          <description>SD Reserved register for FW debug</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_SW_DEFINED_PAGE1_V1</name>
              <description>User Defined Message</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FW_DBG13</name>
          <addressOffset>0x000001BC</addressOffset>
          <size>32</size>
          <description>SD Reserved register for FW debug</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_SW_DEFINED_PAGE2</name>
              <description>User Defined Message</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FW_DBG14</name>
          <addressOffset>0x000001C0</addressOffset>
          <size>32</size>
          <description>SD Reserved register for FW debug</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MCUDMSG_I</name>
              <description>User Defined Message</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FW_DBG15</name>
          <addressOffset>0x000001C4</addressOffset>
          <size>32</size>
          <description>SD Reserved register for FW debug</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MCUDMSG_II</name>
              <description>User Defined Message</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FMETHR</name>
          <addressOffset>0x000001C8</addressOffset>
          <size>32</size>
          <description>Firmware Message Mail Box Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FWMSG_INTPS</name>
              <description>Toggle this bit will generate C2H interrupt to Host</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FW_MSG</name>
              <description>User Defined Message</description>
              <bitRange>[30:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_HMETFR</name>
          <addressOffset>0x000001CC</addressOffset>
          <size>32</size>
          <description>Host Message Mail Box Status register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_HRCV_MSG</name>
              <description>Host Recover Message, Host Write This Byte will generate interrupt to 8051 (0x0134h[5])</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[23:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_H3MSG_VLD</name>
              <description>MSG_BOX_3 Valid. Enable when the Entry is write, Clear when the Entry is Read by 8051.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_H2MSG_VLD</name>
              <description>MSG_BOX_2 Valid. Enable when the Entry is write, Clear when the Entry is Read by 8051.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_H1MSG_VLD</name>
              <description>MSG_BOX_1 Valid. Enable when the Entry is write, Clear when the Entry is Read by 8051.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_H0MSG_VLD</name>
              <description>MSG_BOX_0 Valid. Enable when the Entry is write, Clear when the Entry is Read by 8051.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_HMEBOX0</name>
          <addressOffset>0x000001D0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_HOST_MSG_0</name>
              <description>User Defined Message</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_HMEBOX1</name>
          <addressOffset>0x000001D4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_HOST_MSG_1</name>
              <description>User Defined Message</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_HMEBOX2</name>
          <addressOffset>0x000001D8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_HOST_MSG_2</name>
              <description>User Defined Message</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_HMEBOX3</name>
          <addressOffset>0x000001DC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_HOST_MSG_3</name>
              <description>User Defined Message</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_GENTST</name>
          <addressOffset>0x000001E4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_GENTST</name>
              <description>Dummy register for MAC I/O REG Read/Write Access TEST</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BB_ACCESS_CTRL</name>
          <addressOffset>0x000001E8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BB_WRITE_READ</name>
              <description>00 : No Active Baseband cycle
01 : Baseband Write Access (auto return to 00 when access finished)
1X : Baseband Read Access (auto return to 00 when access finished)</description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[29:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BB_WRITE_EN_V1</name>
              <description>Byte Write Enable</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BB_ADDR_V1</name>
              <description>Baseband Access Write/Read Address (in DW unit)</description>
              <bitRange>[15:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BB_ERRACC</name>
              <description>Duplicate Access when previous cycle pending (write one clear)</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BB_ACCESS_DATA</name>
          <addressOffset>0x000001EC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BB_DATA</name>
              <description>Baseband Access Write/Read Data (in DW unit)</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_HMEBOX_E0</name>
          <addressOffset>0x000001F0</addressOffset>
          <size>32</size>
          <description>Host Message Mail Box 4 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_HMEBOX_E0</name>
              <description>User Defined Message</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_HMEBOX_E1</name>
          <addressOffset>0x000001F4</addressOffset>
          <size>32</size>
          <description>Host Message Mail Box 5 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_HMEBOX_E1</name>
              <description>User Defined Message</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_HMEBOX_E2</name>
          <addressOffset>0x000001F8</addressOffset>
          <size>32</size>
          <description>Host Message Mail Box 6 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_HMEBOX_E2</name>
              <description>User Defined Message</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_HMEBOX_E3</name>
          <addressOffset>0x000001FC</addressOffset>
          <size>32</size>
          <description>Host Message Mail Box 7 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_HMEBOX_E3</name>
              <description>User Defined Message</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FW_DBG16</name>
          <addressOffset>0x00001100</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FS_FW_DEBUG_0</name>
              <description>User Defined Message</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FW_DBG17</name>
          <addressOffset>0x00001104</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FS_FW_DEBUG_1</name>
              <description>User Defined Message</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FW_DBG18</name>
          <addressOffset>0x00001108</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FS_FW_DEBUG_2</name>
              <description>User Defined Message</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FW_DBG19</name>
          <addressOffset>0x0000110C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FS_FW_DEBUG_3</name>
              <description>User Defined Message</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ZB2WL_MAILBOX</name>
          <addressOffset>0x00001110</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_ZB2WL_MAILBOX</name>
              <description>Write to generate interrupt (0x116C [31])</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WL2ZB_MAILBOX</name>
          <addressOffset>0x00001114</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_WL2ZB_MAILBOX</name>
              <description>Write to generate interrupt (0x0C4 [10])</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FE2IMR</name>
          <addressOffset>0x00001120</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_ATIM_PORT1_INT_EN</name>
              <description>PORT1 ATIM end window interrupt .</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_ATIM_MB7_INT_EN</name>
              <description>MBSSID7 ATIM end window interrupt .</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_ATIM_MB6_INT_EN</name>
              <description>MBSSID6 ATIM end window interrupt .</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_ATIM_MB5_INT_EN</name>
              <description>MBSSID5 ATIM end window interrupt .</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_ATIM_MB4_INT_EN</name>
              <description>MBSSID4 ATIM end window interrupt .</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_ATIM_MB3_INT_EN</name>
              <description>MBSSID3 ATIM end window interrupt .</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_ATIM_MB2_INT_EN</name>
              <description>MBSSID2 ATIM end window interrupt .</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_ATIM_MB1_INT_EN</name>
              <description>MBSSID1 ATIM end window interrupt .</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_ATIM_MB0_INT_EN</name>
              <description>MBSSID0 ATIM end window interrupt .</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_CTWE_INT2_EN</name>
              <description>port2 CTWindow end interrupt for p2p.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_CTWE_INT_EN0</name>
              <description>port0 CTWindow end interrupt for p2p.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_CTWE_INT_EN1</name>
              <description>port1 CTWindow end interrupt for p2p.</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TBTTALL_INT_EN</name>
              <description>the interrupt  from the exact TBTT time for all port.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PO_TBTT_AGG_INT_EN</name>
              <description>the interrupt  from the multiplt TBTT times for P0.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TBTT2INT_EN</name>
              <description>the interrupt  from the exact TBTT time for P2.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TBTT1INT_EN</name>
              <description>the interrupt  from the exact TBTT time for P1.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TBTT0_MB7INT_EN</name>
              <description>the interrupt  from the exact TBTT time for P0 MBSSID7.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TBTT0_MB6INT_EN</name>
              <description>the interrupt  from the exact TBTT time for P0 MBSSID6.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TBTT0_MB5INT_EN</name>
              <description>the interrupt  from the exact TBTT time for P0 MBSSID5.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TBTT0_MB4INT_EN</name>
              <description>the interrupt  from the exact TBTT time for P0 MBSSID4.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TBTT0_MB3INT_EN</name>
              <description>the interrupt  from the exact TBTT time for P0 MBSSID3.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TBTT0_MB2INT_EN</name>
              <description>the interrupt  from the exact TBTT time for P0 MBSSID2.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TBTT0_MB1INT_EN</name>
              <description>the interrupt  from the exact TBTT time for P0 MBSSID1.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TBTT0_INT_EN</name>
              <description>the interrupt  from the exact TBTT time for P0 MBSSID0.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FE2ISR</name>
          <addressOffset>0x00001124</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_ATIM_PORT1_INT</name>
              <description>PORT1 ATIM end window interrupt .</description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_ATIM_MB7_INT</name>
              <description>MBSSID7 ATIM end window interrupt .</description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_ATIM_MB6_INT</name>
              <description>MBSSID6 ATIM end window interrupt .</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_ATIM_MB5_INT</name>
              <description>MBSSID5 ATIM end window interrupt .</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_ATIM_MB4_INT</name>
              <description>MBSSID4 ATIM end window interrupt .</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_ATIM_MB3_INT</name>
              <description>MBSSID3 ATIM end window interrupt .</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_ATIM_MB2_INT</name>
              <description>MBSSID2 ATIM end window interrupt .</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_ATIM_MB1_INT</name>
              <description>MBSSID1 ATIM end window interrupt .</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_ATIM_MB0_INT</name>
              <description>MBSSID0 ATIM end window interrupt .</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_CTWE_INT2</name>
              <description>port2 CTWindow end interrupt for p2p.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_CTWE_INT0</name>
              <description>port0 CTWindow end interrupt for p2p.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_CTWE_INT1</name>
              <description>port1 CTWindow end interrupt for p2p.</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TBTTALL_INT</name>
              <description>the interrupt  from the exact TBTT time for all port.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PO_TBTT_AGG_INT</name>
              <description>the interrupt  from the multiplt TBTT times for P0.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TBTT2INT</name>
              <description>the interrupt  from the exact TBTT time for P2.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TBTT1INT</name>
              <description>the interrupt  from the exact TBTT time for P1.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TBTT0_MB7INT</name>
              <description>the interrupt  from the exact TBTT time for P0 MBSSID7.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TBTT0_MB6INT</name>
              <description>the interrupt  from the exact TBTT time for P0 MBSSID6.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TBTT0_MB5INT</name>
              <description>the interrupt  from the exact TBTT time for P0 MBSSID5.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TBTT0_MB4INT</name>
              <description>the interrupt  from the exact TBTT time for P0 MBSSID4.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TBTT0_MB3INT</name>
              <description>the interrupt  from the exact TBTT time for P0 MBSSID3.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TBTT0_MB2INT</name>
              <description>the interrupt  from the exact TBTT time for P0 MBSSID2.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TBTT0_MB1INT</name>
              <description>the interrupt  from the exact TBTT time for P0 MBSSID1.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TBTT0_INT</name>
              <description>the interrupt  from the exact TBTT time for P0 MBSSID0.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FE3IMR</name>
          <addressOffset>0x00001128</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FS_FE1ISR_INT_EN</name>
              <description>FE1ISR Indicator (FE1ISR and FE1IMR are true, this bit is set to 1)</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_FE2ISR_INT_EN</name>
              <description>FE2ISR Indicator (FE2ISR and FE2IMR are true, this bit is set to 1)</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_FE4ISR_INT_EN</name>
              <description>FE4ISR Indicator (FE4ISR and FE4IMR are true, this bit is set to 1)</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_FE5ISR_INT_EN</name>
              <description>FE5ISR Indicator (FE5ISR and FE5IMR are true, this bit is set to 1)</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_FE6ISR_INT_EN</name>
              <description>FE6ISR Indicator (FE6ISR and FE6IMR are true, this bit is set to 1)</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_FISR_INT_EN</name>
              <description>FISR Indicator (FISR and FIMR are true, this bit is set to 1)</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_FISR1_INT_EN</name>
              <description>FISR1 Indicator (FISR1 and FIMR1 are true, this bit is set to 1)</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_BCNELY2_AGGR_INT_EN</name>
              <description>port 2 Beacon early aggregation interrupt</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_BCNELY1_AGGR_INT_EN</name>
              <description>port 1 Beacon early aggregation interrupt</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_BCNELY0_AGGR_INT_EN</name>
              <description>port 0 Beacon early aggregation interrupt</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_on_SCK_INT_EN</name>
              <description>This interrupt is issued at the time set by ALL DRVERLYINT register before TBTT time.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_BCNERLY2_INT_EN</name>
              <description>This interrupt is issued at the time set by DRVERLYINT register before TBTT2 time.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_BCNERLY1_INT_EN</name>
              <description>This interrupt is issued at the time set by DRVERLYINT register before TBTT1 time.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_BCNERLY0_MB7INT_EN</name>
              <description>This interrupt is issued at the time set by DRVERLYINTregister before TBTT0_MB7 time.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_BCNERLY0_MB6INT_EN</name>
              <description>This interrupt is issued at the time set by DRVERLYINT register before TBTT0_MB6 time.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_BCNERLY0_MB5INT_EN</name>
              <description>This interrupt is issued at the time set by DRVERLYINT register before TBTT0_MB5 time.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_BCNERLY0_MB4INT_EN</name>
              <description>This interrupt is issued at the time set by DRVERLYINTregister before TBTT0_MB4 time.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_BCNERLY0_MB3INT_EN</name>
              <description>This interrupt is issued at the time set by DRVERLYINT register before TBTT0_MB3 time.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_BCNERLY0_MB2INT_EN</name>
              <description>This interrupt is issued at the time set by DRVERLYINT register before TBTT0_MB2 time.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_BCNERLY0_MB1INT_EN</name>
              <description>This interrupt is issued at the time set by DRVERLYINTregister before TBTT0_MB1 time.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_BCNERLY0_INT_EN</name>
              <description>This interrupt is issued at the time set by DRVERLYINT register before TBTT0_MB0 time.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FE3ISR</name>
          <addressOffset>0x0000112C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FS_FE1ISR_INT</name>
              <description>FE1ISR Indicator (FE1ISR and FE1IMR are true, this bit is set to 1)</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_FE2ISR_INT</name>
              <description>FE2ISR Indicator (FE2ISR and FE2IMR are true, this bit is set to 1)</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_FE4ISR_INT</name>
              <description>FE4ISR Indicator (FE4ISR and FE4IMR are true, this bit is set to 1)</description>
              <bitRange>[29:29]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_FE5ISR_INT</name>
              <description>FE5ISR Indicator (FE5ISR and FE5IMR are true, this bit is set to 1)</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_FE6ISR_INT</name>
              <description>FE6ISR Indicator (FE6ISR and FE6IMR are true, this bit is set to 1)</description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_FISR_INT</name>
              <description>FISR Indicator (FISR and FIMR are true, this bit is set to 1)</description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_FISR1_INT</name>
              <description>FISR1 Indicator (FISR1 and FIMR1 are true, this bit is set to 1)</description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_BCNELY2_AGGR_INT</name>
              <description>port 2 Beacon early aggregation interrupt</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_BCNELY1_AGGR_INT</name>
              <description>port 1 Beacon early aggregation interrupt</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_BCNELY0_AGGR_INT</name>
              <description>port 0 Beacon early aggregation interrupt</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_on_SCK_INT</name>
              <description>This interrupt is issued at the time set by ALL DRVERLYINT register before TBTT time.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_BCNERLY2_INT</name>
              <description>This interrupt is issued at the time set by DRVERLYINT register before TBTT2 time.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_BCNERLY1_INT</name>
              <description>This interrupt is issued at the time set by DRVERLYINT register before TBTT1 time.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_BCNERLY0_MB7INT</name>
              <description>This interrupt is issued at the time set by DRVERLYINTregister before TBTT0_MB7 time.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_BCNERLY0_MB6INT</name>
              <description>This interrupt is issued at the time set by DRVERLYINT register before TBTT0_MB6 time.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_BCNERLY0_MB5INT</name>
              <description>This interrupt is issued at the time set by DRVERLYINT register before TBTT0_MB5 time.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_BCNERLY0_MB4INT</name>
              <description>This interrupt is issued at the time set by DRVERLYINTregister before TBTT0_MB4 time.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_BCNERLY0_MB3INT</name>
              <description>This interrupt is issued at the time set by DRVERLYINT register before TBTT0_MB3 time.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_BCNERLY0_MB2INT</name>
              <description>This interrupt is issued at the time set by DRVERLYINT register before TBTT0_MB2 time.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_BCNERLY0_MB1INT</name>
              <description>This interrupt is issued at the time set by DRVERLYINTregister before TBTT0_MB1 time.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_BCNERLY0_INT</name>
              <description>This interrupt is issued at the time set by DRVERLYINT register before TBTT0_MB0 time.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FE4IMR</name>
          <addressOffset>0x00001130</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FS_PCIE_BCNDMAERR_INT_EN</name>
              <description>PCIE BCN DMA error interrupt</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_BCNDMA1_INT_EN</name>
              <description>When BCNDMA interval arrives before TBTT1, this interrupt informs MCU to prepare related beacon tasks.</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_BCNDMA0_MB7_INT_EN</name>
              <description>When BCNDMA interval arrives before TBTT0_MB7, this interrupt informs MCU to prepare related beacon tasks.</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_BCNDMA0_MB6_INT_EN</name>
              <description>When BCNDMA interval arrives before TBTT0_MB6, this interrupt informs MCU to prepare related beacon tasks.</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_BCNDMA0_MB5_INT_EN</name>
              <description>When BCNDMA interval arrives before TBTT0_MB5, this interrupt informs MCU to prepare related beacon tasks.</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_BCNDMA0_MB4_INT_EN</name>
              <description>When BCNDMA interval arrives before TBTT0_MB4, this interrupt informs MCU to prepare related beacon tasks.</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_BCNDMA0_MB3_INT_EN</name>
              <description>When BCNDMA interval arrives before TBTT0_MB3, this interrupt informs MCU to prepare related beacon tasks.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_BCNDMA0_MB2_INT_EN</name>
              <description>When BCNDMA interval arrives before TBTT0_MB2, this interrupt informs MCU to prepare related beacon tasks.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_BCNDMA0_MB1_INT_EN</name>
              <description>When BCNDMA interval arrives before TBTT0_MB1, this interrupt informs MCU to prepare related beacon tasks.</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_BCNDMA0_INT_EN</name>
              <description>When BCNDMA interval arrives before TBTT0_MB0, this interrupt informs MCU to prepare related beacon tasks.</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_BCNDMA2_INT_EN</name>
              <description>When BCNDMA interval arrives before TBTT2, this interrupt informs MCU to prepare related beacon tasks.</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PORT0_PKTIN_INT_EN</name>
              <description>port 0 packet assign to queue interrupt</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PORT1_PKTIN_INT_EN</name>
              <description>port 1 packet assign to queue interrupt</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PORT1_RXUCMD0_OK_INT_EN</name>
              <description>port 1 rx unicast packet with more data = 0 ok
interrupt</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PORT1_RXUCMD1_OK_INT_EN</name>
              <description>port 1 rx unicast packet with more data = 1 ok
interrupt</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PORT1_RXBCMD0_OK_INT_EN</name>
              <description>port 1 rx broadcast packet with more data = 0 ok
interrupt</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PORT1_RXBCMD1_OK_INT_EN</name>
              <description>port 1 rx broadcast packet with more data = 1 ok
interrupt</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FE4ISR</name>
          <addressOffset>0x00001134</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FS_PCIE_BCNDMAERR_INT</name>
              <description>PCIE BCN DMA error interrupt</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_BCNDMA1_INT</name>
              <description>When BCNDMA interval arrives before TBTT1, this interrupt informs MCU to prepare related beacon tasks.</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_BCNDMA0_MB7_INT</name>
              <description>When BCNDMA interval arrives before TBTT0_MB7, this interrupt informs MCU to prepare related beacon tasks.</description>
              <bitRange>[29:29]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_BCNDMA0_MB6_INT</name>
              <description>When BCNDMA interval arrives before TBTT0_MB6, this interrupt informs MCU to prepare related beacon tasks.</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_BCNDMA0_MB5_INT</name>
              <description>When BCNDMA interval arrives before TBTT0_MB5, this interrupt informs MCU to prepare related beacon tasks.</description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_BCNDMA0_MB4_INT</name>
              <description>When BCNDMA interval arrives before TBTT0_MB4, this interrupt informs MCU to prepare related beacon tasks.</description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_BCNDMA0_MB3_INT</name>
              <description>When BCNDMA interval arrives before TBTT0_MB3, this interrupt informs MCU to prepare related beacon tasks.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_BCNDMA0_MB2_INT</name>
              <description>When BCNDMA interval arrives before TBTT0_MB2, this interrupt informs MCU to prepare related beacon tasks.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_BCNDMA0_MB1_INT</name>
              <description>When BCNDMA interval arrives before TBTT0_MB1, this interrupt informs MCU to prepare related beacon tasks.</description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_BCNDMA0_INT</name>
              <description>When BCNDMA interval arrives before TBTT0_MB0, this interrupt informs MCU to prepare related beacon tasks.</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_BCNDMA2_INT</name>
              <description>When BCNDMA interval arrives before TBTT2, this interrupt informs MCU to prepare related beacon tasks.</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PORT0_PKTIN_INT</name>
              <description>port 0 packet assign to queue interrupt</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PORT1_PKTIN_INT</name>
              <description>port 1 packet assign to queue interrupt</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PORT1_RXUCMD0_OK_INT</name>
              <description>port 1 rx unicast packet with more data = 0 ok
interrupt</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PORT1_RXUCMD1_OK_INT</name>
              <description>port 1 rx unicast packet with more data = 1 ok
interrupt</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PORT1_RXBCMD0_OK_INT</name>
              <description>port 1 rx broadcast packet with more data = 0 ok
interrupt</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PORT1_RXBCMD1_OK_INT</name>
              <description>port 1 rx broadcast packet with more data = 1 ok
interrupt</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FT1IMR</name>
          <addressOffset>0x00001138</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_RXFTMREQ_INT_EN</name>
              <description>If BIT_RXFTMREQ_INT_EN =1. When HW receive FTMREQ packet, it will generate interrupt to firmware.</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_RXFTM_INT_EN</name>
              <description>If BIT_RXFTM_INT_EN =1. When HW receive FTM and transmit ACK frame successfully, the BB generate FTM report. It will generate interrupt to firmware.</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TXFTM_INT_EN</name>
              <description>If BIT_TXFTM_INT_EN =1. When HW transmit FTM and receive ACK frame successfully, the BB generate FTM report. It will generate interrupt to firmware.</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_RXTMREQ_INT_EN</name>
              <description>If BIT_RXTMREQ_INT_EN =1. When HW receive TMREQ packet, it will generate interrupt to firmware.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_RXTM_INT_EN</name>
              <description>If BIT_RXTM_INT_EN =1. When HW receive TM and transmit ACK frame successfully. It will generate interrupt to firmware.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TXTM_INT_EN</name>
              <description>If BIT_TXTM_INT_EN =1. When HW transmit TM and receive ACK frame successfully. It will generate interrupt to firmware.</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_CTWEnd2_INT_EN</name>
              <description>CTWindow End NOA2 interrupt.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_CTWEnd1_INT_EN</name>
              <description>CTWindow End NOA1 interrupt.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_CTWEnd0_INT_EN</name>
              <description>CTWindow End NOA0 interrupt.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TX_NULL1_P0_INT_EN</name>
              <description>TX null 1 packet done interrupt</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TX_NULL0_P0_INT_EN</name>
              <description>TX null 0 packet done interrupt</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_NOA0_TSF_BIT32_INT_EN</name>
              <description>NOA unit0 TSFT bit 32 toggle interrupt</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_P2P_RFON2_INT_EN</name>
              <description>P2P NoA RF on time indication 2 interrupt</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_P2P_RFOFF2_INT_EN</name>
              <description>P2P NoA RF off time indication 2 interrupt</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_P2P_RFON1_INT_EN</name>
              <description>P2P NoA RF on time indication 1 interrupt</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_P2P_RFOFF1_INT_EN</name>
              <description>P2P NoA RF off time indication 1 interrupt</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_P2P_RFON0_INT_EN</name>
              <description>P2P NoA RF on time indication 0 interrupt</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_P2P_RFOFF0_INT_EN</name>
              <description>P2P NoA RF off time indication 0 interrupt</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_RX_UAPSDMD1_INT_EN</name>
              <description>Setting this bit indicates Rx pkt is matched with one of below:
1.) QoS Unicast data frame with MD=1, UAPSD=0
2.) NonQoS Unicast data frame with MD=1</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_RX_UAPSDMD0_INT_EN</name>
              <description>Setting this bit indicates Rx pkt is matched with one of below:
1.) QoS Unicast data frame with MD=0, UAPSD=0
2.) NonQoS Unicast data frame with MD=0</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TRIGGER_PKT_INT_EN</name>
              <description>tx TRIGGER_PKT interrupt</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_EOSP_INT_EN</name>
              <description>EOSP_INT interrupt mask</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FT1ISR</name>
          <addressOffset>0x0000113C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_RXFTMREQ_INT</name>
              <description>If BIT_RXFTMREQ_INT_EN =1. When HW receive FTMREQ packet, it will generate interrupt to firmware.</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_RXFTM_INT</name>
              <description>If BIT_RXFTM_INT_EN =1. When HW receive FTM and transmit ACK frame successfully, the BB generate FTM report. It will generate interrupt to firmware.</description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TXFTM_INT</name>
              <description>If BIT_TXFTM_INT_EN =1. When HW transmit FTM and receive ACK frame successfully, the BB generate FTM report. It will generate interrupt to firmware.</description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_RXTMREQ_INT</name>
              <description>If BIT_RXTMREQ_INT_EN =1. When HW receive TMREQ packet, it will generate interrupt to firmware.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_RXTM_INT</name>
              <description>If BIT_RXTM_INT_EN =1. When HW receive TM and transmit ACK frame successfully. It will generate interrupt to firmware.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TXTM_INT</name>
              <description>If BIT_TXTM_INT_EN =1. When HW transmit TM and receive ACK frame successfully. It will generate interrupt to firmware.</description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_CTWEnd2_INT</name>
              <description>CTWindow End NOA2 interrupt.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_CTWEnd1_INT</name>
              <description>CTWindow End NOA1 interrupt.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_CTWEnd0_INT</name>
              <description>CTWindow End NOA0 interrupt.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TX_NULL1_P0_INT</name>
              <description>TX null 1 packet done interrupt</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TX_NULL0_P0_INT</name>
              <description>TX null 0 packet done interrupt</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_NOA0_TSF_BIT32_INT</name>
              <description>NOA unit0 TSFT bit 32 toggle interrupt</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_P2P_RFON2_INT</name>
              <description>P2P NoA RF on time indication 2 interrupt</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_P2P_RFOFF2_INT</name>
              <description>P2P NoA RF off time indication 2 interrupt</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_P2P_RFON1_INT</name>
              <description>P2P NoA RF on time indication 1 interrupt</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_P2P_RFOFF1_INT</name>
              <description>P2P NoA RF off time indication 1 interrupt</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_P2P_RFON0_INT</name>
              <description>P2P NoA RF on time indication 0 interrupt</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_P2P_RFOFF0_INT</name>
              <description>P2P NoA RF off time indication 0 interrupt</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_RX_UAPSDMD1_INT</name>
              <description>Setting this bit indicates Rx pkt is matched with one of below:
1.) QoS Unicast data frame with MD=1, UAPSD=0
2.) NonQoS Unicast data frame with MD=1</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_RX_UAPSDMD0_INT</name>
              <description>Setting this bit indicates Rx pkt is matched with one of below:
1.) QoS Unicast data frame with MD=0, UAPSD=0
2.) NonQoS Unicast data frame with MD=0</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TRIGGER_PKT_INT</name>
              <description>tx TRIGGER_PKT interrupt</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_EOSP_INT</name>
              <description>EOSP_INT interrupt mask</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TWT_CTRL</name>
          <addressOffset>0x00001140</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RX_ACKMD_EN</name>
              <description>Enable ACK/BA/MU-BA frame more data interrupt</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RX_MORE_TF_EN</name>
              <description>Enable trigger frame more TF field interrupt</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FE5IMR</name>
          <addressOffset>0x00001168</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FS_ZIGBEE2WLAN_MAILBOX_MSK</name>
              <description>Mailbox INT from  ZIGBEE CPU</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[30:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_EXT_INTF4_EN_MSK</name>
              <description>ext bt mailbox int,mailbox_outempty_int| mailbox_in_rdy_int</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_gnt_bt_bb_fall_MSK</name>
              <description>ext Mailbox INT from btcoex</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_gnt_bt_bb_rise_MSK</name>
              <description>ext Mailbox INT from btcoex</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_bt2wl_sts_INT_MSK</name>
              <description>ext scoreboard INT from BT</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_bt_mailbox_i2c_MSK</name>
              <description>Mailbox INT from I2C</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_I2C_INTF4_EN_MSK</name>
              <description>bt mailbox int,mailbox_outempty_int| mailbox_in_rdy_int form I2C</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FE5ISR</name>
          <addressOffset>0x0000116C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FS_ZIGBEE2WLAN_MAILBOX</name>
              <description>Mailbox INT from  ZIGBEE CPU</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[30:6]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_FS_EXT_INTF4_EN</name>
              <description>ext bt mailbox int,mailbox_outempty_int| mailbox_in_rdy_int</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_gnt_bt_bb_fall</name>
              <description>ext Mailbox INT from btcoex</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_gnt_bt_bb_rise</name>
              <description>ext Mailbox INT from btcoex</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_bt2wl_sts_INT</name>
              <description>ext Mailbox INT from BT</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_bt_mailbox_i2c</name>
              <description>Mailbox INT from I2C</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_I2C_INTF4_EN</name>
              <description>bt mailbox int,mailbox_outempty_int| mailbox_in_rdy_int form I2C</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FE6IMR</name>
          <addressOffset>0x00001170</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[31:10]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_FS_PORT0_RXUCMD0_ACK_INT_EN</name>
              <description>port 0 rx unicast ACK/BA/MBA with more data = 0 ok
interrupt</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PORT0_RXUCMD1_ACK_INT_EN</name>
              <description>port 0 rx unicast ACK/BA/MBA with more data = 1 ok
interrupt</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PORT0_RXBCMD0_ACK_INT_EN</name>
              <description>port 0 rx broadcast ACK/BA/MBA with more data = 0 ok
interrupt</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PORT0_RXBCMD1_ACK_INT_EN</name>
              <description>port 0 rx broadcast ACK/BA/MBA with more data = 1 ok
interrupt</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PORT1_RXUCMD0_ACK_INT_EN</name>
              <description>port 1 rx unicast ACK/BA/MBA with more data = 0 ok
interrupt</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PORT1_RXUCMD1_ACK_INT_EN</name>
              <description>port 1 rx unicast ACK/BA/MBA with more data = 1 ok
interrupt</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PORT1_RXBCMD0_ACK_INT_EN</name>
              <description>port 1 rx broadcast ACK/BA/MBA with more data = 0 ok
interrupt</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PORT1_RXBCMD1_ACK_INT_EN</name>
              <description>port 1 rx broadcast ACK/BA/MBA with more data = 1 ok
interrupt</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_RX_MORE_TF0_INT_EN</name>
              <description>interrupt source from trigger frame with more TF field = 0 not addressed to us</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_RX_MORE_TF1_INT_EN</name>
              <description>Interrupt source from receiving trigger frame with more TF field = 1 not addressed to us</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FE6ISR</name>
          <addressOffset>0x00001174</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[31:10]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_FS_PORT0_RXUCMD0_ACK_INT</name>
              <description>port 0 rx unicast ACK/BA/MBA with more data = 0 ok
interrupt</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PORT0_RXUCMD1_ACK_INT</name>
              <description>port 0 rx unicast ACK/BA/MBA with more data = 1 ok
interrupt</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PORT0_RXBCMD0_ACK_INT</name>
              <description>port 0 rx broadcast ACK/BA/MBA with more data = 0 ok
interrupt</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PORT0_RXBCMD1_ACK_INT</name>
              <description>port 0 rx broadcast ACK/BA/MBA with more data = 1 ok
interrupt</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PORT1_RXUCMD0_ACK_INT</name>
              <description>port 1 rx unicast ACK/BA/MBA with more data = 0 ok
interrupt</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PORT1_RXUCMD1_ACK_INT</name>
              <description>port 1 rx unicast ACK/BA/MBA with more data = 1 ok
interrupt</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PORT1_RXBCMD0_ACK_INT</name>
              <description>port 1 rx broadcast ACK/BA/MBA with more data = 0 ok
interrupt</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PORT1_RXBCMD1_ACK_INT</name>
              <description>port 1 rx broadcast ACK/BA/MBA with more data = 1 ok
interrupt</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_RX_MORE_TF0_INT</name>
              <description>interrupt source from trigger frame with more TF field = 0 not addressed to us</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_RX_MORE_TF1_INT</name>
              <description>Interrupt source from receiving trigger frame with more TF field = 1 not addressed to us</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ext_queue_register</name>
          <addressOffset>0x0000117C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>dummy</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXBUF_WKCAM_OFFSET</name>
              <description>the offset of WOL pattern stored in txpktbuffer, unit is 8byte</description>
              <bitRange>[15:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>h2cq_pri</name>
              <description></description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_BT_MAILBOX_OUT_LOW</name>
          <addressOffset>0x00001190</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>i2c_mailbox_data_51to81_l</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_BT_MAILBOX_OUT_HIGH</name>
          <addressOffset>0x00001194</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>i2c_mailbox_data_51to81_h</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_BT_Mailbox_control</name>
          <addressOffset>0x00001198</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>i2c_mailbox_in_rdy_inten</name>
              <description></description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>i2c_mailbox_in_rdy</name>
              <description></description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>i2c_mailbox_outempty_inten</name>
              <description></description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>i2c_mailbox_out_vld</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_BT_MAILBOX_IN_LOW</name>
          <addressOffset>0x0000119C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>i2c_mailbox_data_81to51_l</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_BT_MAILBOX_IN_HIGH</name>
          <addressOffset>0x000011A0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>i2c_mailbox_data_81to51_h</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EXT_BT_MAILBOX_OUT_LOW</name>
          <addressOffset>0x000011A4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ext_mailbox_data_51to81_l</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EXT_BT_MAILBOX_OUT_HIGH</name>
          <addressOffset>0x000011A8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ext_mailbox_data_51to81_h</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EXT_BT_Mailbox_control</name>
          <addressOffset>0x000011AC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ext_mailbox_in_rdy_inten</name>
              <description>Mailbox IN ready interrupt enable</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ext_mailbox_in_rdy</name>
              <description>Mailbox ready BT2Wifi</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ext_mailbox_outempty_inten</name>
              <description>Mailbox OUT empty interrupt enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ext_mailbox_out_vld</name>
              <description>Mailbox ACK Wifi2BT</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EXT_BT_MAILBOX_IN_LOW</name>
          <addressOffset>0x000011B0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ext_mailbox_data_81to51_l</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EXT_BT_MAILBOX_IN_HIGH</name>
          <addressOffset>0x000011B4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ext_mailbox_data_81_to51_h</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FWIMR1</name>
          <addressOffset>0x000011C0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FS_TXBCNOK_PORT1_INT_EN</name>
              <description>ENABLE PORT1 TX beacon OK interrupt</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNERR_PORT1_INT_EN</name>
              <description>ENABLE PORT1 TX beacon Error interrupt</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNOK_PORT2_INT_EN</name>
              <description>PORT2 TX beacon OK interrupt</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNERR_PORT2_INT_EN</name>
              <description>PORT2 TX beacon Error interrupt</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_EVTQ_TXDONE_INT_EN</name>
              <description></description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_EVTQ_START_INT_EN</name>
              <description></description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_DWWIN_END_INT_EN</name>
              <description></description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_BCN_IE_0_HIT_INT_EN</name>
              <description>rx bcn with ie0 hit</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_BCN_IE_1_HIT_INT_EN</name>
              <description>rx bcn with ie1 hit</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_RXBCN_NAN_RPT_OK_EN</name>
              <description>port2 rxbcn rpt and write to txrptbuf ok</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TIM_NO_HIT_INT_EN</name>
              <description>when no my aid or aid is 0(0x16DC[8]) or my bssid is not in tim element(0x16DB[31]),generate this interrupt</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_BC_TWT_PARA_CHG_INT_EN</name>
              <description>RX broadcast twt with parameter changing,notify fw to read twt report</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_TIM_HIT_INT_EN</name>
              <description>when my aid or aid is 0 (0x16DC[8]) or my bssid is in tim element,generate this interrupt</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_HIOE_CHN0_INT_EN</name>
              <description>hioe_chn0 done interrupt</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_HIOE_CHN1_INT_EN</name>
              <description>hioe_chn1 done interrupt</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_HIOE_CHN_ON_INT_EN</name>
              <description>hioe_chn_on done interrupt</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_HIOE_CHN_OFF_INT_EN</name>
              <description>hioe_chn_off done interrupt</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_CHINFO_SEG_DONE_INT_NE</name>
              <description>indicate one channel info segment is received ok</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_DFS_PKT_INT_EN</name>
              <description>enable interrupt when receiving dfs pkt and about to reach threshold of given pkt number or timeout</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_RX_PHYSTS_DONE_INT__EN</name>
              <description>indicate physts is successfully write into physts_mem</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_OPS_TIM_HIT_INT_EN</name>
              <description>when my aid or my bssid is in tim frame/ops frame,generate this interrupt</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[10:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FWISR1</name>
          <addressOffset>0x000011C4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FS_TXBCNOK_PORT1_INT</name>
              <description>PORT1 TX beacon OK interrupt</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNERR_PORT1_INT</name>
              <description>PORT1 TX beacon Error interrupt</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNOK_PORT2_INT</name>
              <description>PORT2 TX beacon OK interrupt</description>
              <bitRange>[29:29]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TXBCNERR_PORT2_INT</name>
              <description>PORT2 TX beacon Error interrupt</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_EVTQ_TXDONE_INT</name>
              <description>event queue done interrupt for NAN</description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_EVTQ_START_INT</name>
              <description>event queue start interrupt for NAN</description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_DWWIN_END_INT</name>
              <description>discovery window end interrupt for NAN</description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_BCN_IE_0_HIT_INT</name>
              <description>rx bcn with ie0 hit</description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_BCN_IE_1_HIT_INT</name>
              <description>rx bcn with ie1 hit</description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_RXBCN_NAN_RPT_OK</name>
              <description>port2 rxbcn rpt and write to txrptbuf ok</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TIM_NO_HIT_INT</name>
              <description>when no my aid or aid is 0(0x16DC[8]) or my bssid is not in tim element(0x16DB[31]),generate this interrupt</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_BC_TWT_PARA_CHG_INT</name>
              <description>RX broadcast twt with parameter changing,notify fw to read twt report</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TIM_HIT_INT</name>
              <description>when my aid or aid is 0 (0x16DC[8]) or my bssid is in tim element,generate this interrupt</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_HIOE_CHN0_INT</name>
              <description>hioe_chn0 done interrupt</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_HIOE_CHN1_INT</name>
              <description>hioe_chn1 done interrupt</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_HIOE_CHN_ON_INT</name>
              <description>hioe_chn_on done interrupt</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_HIOE_CHN_OFF_INT</name>
              <description>hioe_chn_off done interrupt</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_CHINFO_SEG_DONE_INT</name>
              <description>indicate one channel info segment is received ok</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_DFS_PKT_INT</name>
              <description>enable interrupt when receiving dfs pkt and about to reach threshold of given pkt number or timeout</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_RX_PHYSTS_DONE_INT</name>
              <description>indicate physts is successfully write into physts_mem</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_OPS_TIM_HIT_INT</name>
              <description>when my aid or my bssid is in tim frame/ops frame,generate this interrupt</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[10:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_LPSOFFLOAD_IMR</name>
          <addressOffset>0x000011C8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[31:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LPS_RXBCN_TSF_GT_THRES_INT_EN</name>
              <description>The interrupt is issued when difference of tsft in beacon frame of port0 is greater than threshold</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LPS_RX_PHYSTS_DONE_INT_EN</name>
              <description>indicate physts is successfully write into physts_mem</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LPS_HIOE_CHN_ON_INT_EN</name>
              <description>hioe_chn_on done interrupt</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LPS_HIOE_CHN_OFF_INT_EN</name>
              <description>hioe_chn_off done interrupt</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LPS_TIM_NO_HIT_INT_EN</name>
              <description>when no my aid or aid is 0(0x16DC[8]) or my bssid is not in tim element(0x16DB[31]),generate this interrupt</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LPS_BCNERLY0_INT_EN</name>
              <description>This interrupt is issued at the time set by DRVERLYINT register before TBTT0_MB0 time.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LPS_BCNELY0_AGGR_INT_EN</name>
              <description>port 0 Beacon early aggregation interrupt</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LPS_TBTT0_INT_EN</name>
              <description>the interrupt  from the exact TBTT time for P0 MBSSID0.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LPS_RX_BCN_P0_INT_EN</name>
              <description>When this bit is enable, the interrupt is issued when RX beacon frame occurs in port0.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LPS_RX_BCN_ERR_P0_INT_EN</name>
              <description>When this bit is enable, the interrupt is issued when RX beacon frame with fcs error occurs in port0.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LPS_RXBCN_TIMEUP_INT_EN</name>
              <description>When this bit is enable, the interrupt is issued when RX beacon frame timeout occurs in port0.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FT2IMR</name>
          <addressOffset>0x000011E0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FS_PORT1_RX_UCMD1_UAPSD0_OK_INT_EN</name>
              <description>PORT1 rx unicast packet ok interrupt
 with more data =1 &amp; UAPSD =0</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PORT1_RX_UCMD0_UAPSD0_OK_INT_EN</name>
              <description>PORT1 rx unicast packet ok interrupt
 with more data =0 &amp; UAPSD =0</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PORT1_TRIPKT_OK_INT_EN</name>
              <description>PORT1 trigger packet assign to queue or release interrupt</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PORT1_RX_EOSP_OK_INT_EN</name>
              <description>PORT1 RX packet with EOSP =1 ok interrupt</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[15:11]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_FS_TXPRPT_CNT_FULL_INT_EN</name>
              <description>txrpt buffer full interrupt</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_NOA2_TSFT_BIT32_INT_EN</name>
              <description>NOA unit2 TSFT bit 32 toggle interrupt</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_NOA1_TSFT_BIT32_INT_EN</name>
              <description>NOA unit1 TSFT bit 32 toggle interrupt</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PORT1_TX_NULL1_DONE_INT_EN</name>
              <description>PORT1 TX NULL1 packet ok interrupt</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FS_PORT1_TX_NULL0_DONE_INT_EN</name>
              <description>PORT1 TX NULL0 packet ok interrupt</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FT2ISR</name>
          <addressOffset>0x000011E4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FS_PORT1_RX_UCMD1_UAPSD0_OK_INT</name>
              <description>PORT1 rx unicast packet ok interrupt
 with more data =1 &amp; UAPSD =0</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PORT1_RX_UCMD0_UAPSD0_OK_INT</name>
              <description>PORT1 rx unicast packet ok interrupt
 with more data =0 &amp; UAPSD =0</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PORT1_TRIPKT_OK_INT</name>
              <description>PORT1 trigger packet assign to queue or release interrupt</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PORT1_RX_EOSP_OK_INT</name>
              <description>PORT1 RX packet with EOSP =1 ok interrupt</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[15:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_TXPRPT_CNT_FULL_INT</name>
              <description>txrpt buffer full interrupt</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_NOA2_TSFT_BIT32_INT</name>
              <description>NOA unit2 TSFT bit 32 toggle interrupt</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_NOA1_TSFT_BIT32_INT</name>
              <description>NOA unit1 TSFT bit 32 toggle interrupt</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PORT1_TX_NULL1_DONE_INT</name>
              <description>PORT1 TX NULL1 packet ok interrupt</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FS_PORT1_TX_NULL0_DONE_INT</name>
              <description>PORT1 TX NULL0 packet ok interrupt</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MSG2</name>
          <addressOffset>0x000011F0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FW_MSG2</name>
              <description>fw message 2</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MSG3</name>
          <addressOffset>0x000011F4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FW_MSG3</name>
              <description>fw message 3</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MSG4</name>
          <addressOffset>0x000011F8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FW_MSG4</name>
              <description>fw message 4</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MSG5</name>
          <addressOffset>0x000011FC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FW_MSG5</name>
              <description>fw message 5</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>page2</name>
      <groupName>WIFI</groupName>
      <baseAddress>0x40000000</baseAddress>
      <size>0x00000300</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00000300</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>REG_RQPN_CTRL_HLPQ</name>
          <addressOffset>0x00000200</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_LOAD_R_PGNUM</name>
              <description>Write 1 to set RQPN bit[79:0] value to page numbers for initialization</description>
              <bitRange>[31:31]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EPQ_PUBLIC_DIS</name>
              <description>When this bit is set, Extra queue available Tx page size excludes the public queue.
Otherwise, Extra queue available Tx page size includes public queue</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_NPQ_PUBLIC_DIS</name>
              <description>When this bit is set, Normal queue available Tx page size excludes the public queue.
Otherwise, Normal queue available Tx page size includes public queue</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LPQ_PUBLIC_DIS</name>
              <description>When this bit is set, Low queue available Tx page size excludes the public queue.
Otherwise, Low queue available Tx page size includes public queue</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HPQ_PUBLIC_DIS</name>
              <description>When this bit is set, High queue available Tx page size excludes the public queue.
Otherwise,  High queue available Tx page size includes public queue</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PUBQ</name>
              <description>Public Reserved Page Number</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LPQ</name>
              <description>Low Priority Queue Reserved Page Number</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HPQ</name>
              <description>High Priority Queue Reserved Page Number</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FIFOPAGE_INFO</name>
          <addressOffset>0x00000204</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TXPKTNUM</name>
              <description>Packet number in TXPKTBUF (Normal/Low)</description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_PUBQ_AVAL_PG</name>
              <description>Available Public Queue Page Number</description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_LPQ_AVAL_PG</name>
              <description>Available Low Priority Queue Page Number</description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HPQ_AVAL_PG</name>
              <description>Available High Priority Queue Page Number</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DWBCN0_CTRL</name>
          <addressOffset>0x00000208</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0000F610</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>bit_llt_free_page</name>
              <description>RSVD</description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RSVD_BYTE1</name>
              <description>RSVD</description>
              <bitRange>[23:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BCN_VALID</name>
              <description>When this bit is set, the beacon packet has finished to write to txpktbuffer.
Clear by SW</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BCN_HEAD</name>
              <description>The head page of packet of Bcnq which is Tx DMA filled Bcnq packet from</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BLK_DESC_NUM</name>
              <description>The Most Number of Tx Descriptor per Bulk Out Only for USB</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[3:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BLK_DESC_OPT</name>
              <description>option to select usb descriptor number(according to 0x208[7:4])
1 : usb_desc_num = 2 * r_blk_desc_num
0 : usb_desc_num = 4 * r_blk_desc_num</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TXDMA_OFFSET_CHK</name>
          <addressOffset>0x0000020C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00FD0000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_EN_CHKERR_FINISH</name>
              <description>Let checksum offload statemachine finish if checksum parser error</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_DMA_PERMU_P</name>
              <description>Enable every dma latch fifo ptr for pcie as usb mode as one pkt trans in permu</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_TXQUE_CLR</name>
              <description>Enable tx queue clear tx pkt in tde in usb mode</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_PCIE_FIFO</name>
              <description>Enable pcie fifo store forward txdesc as before mode</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PG_UNDER_TH</name>
              <description>Page threshold value is check by Tx DMA engine.</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DSC_CHKSUM_EN</name>
              <description>Enable SDIO checksum</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RST_RDPTR</name>
              <description>Reset the read pointer of sync FIFO</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RST_WRPTR</name>
              <description>Reset the write pointer of sync FIFO</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CHK_PG_TH_EN</name>
              <description>Enable Tx DMA to check total pages if it is under page threshold</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DROP_DATA_EN</name>
              <description>Enable Tx DMA to drop the redundant data of packet</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CHECK_OFFSET_EN</name>
              <description>Enable Tx DMA to check offset value</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CHK_OFFSET</name>
              <description>Offset value is check by Tx DMA engine</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TXDMA_STATUS</name>
          <addressOffset>0x00000210</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[31:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HI_OQT_UDN</name>
              <description>High Priority Queue_Tx OQT underflow</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HI_OQT_OVF</name>
              <description>High Priority Queue_Tx OQT overflow</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_PAYLOAD_CHKSUM_ERR</name>
              <description>Payload checksum error</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_PAYLOAD_UDN</name>
              <description>Payload is under the packet length of Tx descriptor. Clear by SW.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_PAYLOAD_OVF</name>
              <description>Payload is over the packet length of Tx descriptor. Clear by SW.</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_DSC_CHKSUM_FAIL</name>
              <description>Tx descriptor checksum error. Clear by SW.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_UNKNOWN_QSEL</name>
              <description>An unknown QSEL of Tx descriptor is detected. Clear by SW.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_EP_QSEL_DIFF</name>
              <description>Tx Endpoint is unmatched with the QSEL of descriptor. Clear by SW.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_TX_OFFS_UNMATCH</name>
              <description>Tx offset is unmatched. Clear by SW.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_TXOQT_UDN</name>
              <description>TXOQT Underflow. Clear by SW.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_TXOQT_OVF</name>
              <description>TXOQT Overflow. Clear by SW.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SFF_UDN</name>
              <description>TXDMA Sync FIFO Underflow. Clear by SW.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SFF_OVF</name>
              <description>TXDMA Sync FIFO Overflow. Clear by SW.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FREE_PG_FF</name>
              <description>TXDMA reads NULL page. Clear by SW.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_PAGE_UNDER</name>
              <description>Total pages included PTCL un-return pages are under the total reserved
pages minus the page threshold. Clear by SW.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_PAGE_OVER</name>
              <description>Total pages included PTCL un-return pages are over the total reserved pages. Clear by SW.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_PG_UDN</name>
              <description>TXFF page underflow in TDE page controller. Clear by SW.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_PG_OVF</name>
              <description>TXFF page overflow in TDE page controller.. Clear by SW.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RQPN_NPQ</name>
          <addressOffset>0x00000214</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_EPQ_PGNUM</name>
              <description>Extra Queue Page Number</description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_EPQ_R_PGNUM</name>
              <description>Extra Queue Reserved Page Number</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_NPQ_PGNUM</name>
              <description>Normal Priority Queue Page Number</description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_NPQ_R_PGNUM</name>
              <description>Normal Priority Queue Reserved Page Number</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TQPNT1</name>
          <addressOffset>0x00000218</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_NPQ_HIGH_TH</name>
              <description>For SDIO,  Normal Priority Queue Page Number High Threshold</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_NPQ_LOW_TH</name>
              <description>For SDIO, Normal Priority Queue Page Number Low Threshold</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HPQ_HIGH_TH</name>
              <description>For SDIO, High Priority Queue Page Number High Threshold</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HPQ_LOW_TH</name>
              <description>For SDIO, High Priority Queue Page Number Low Threshold</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TQPNT2</name>
          <addressOffset>0x0000021C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_EXQ_HIGH_TH</name>
              <description>For SDIO,  Extra Priority Queue Page Number High Threshold</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EXQ_LOW_TH</name>
              <description>For SDIO,  Extra Priority Queue Page Number Low Threshold</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LPQ_HIGH_TH</name>
              <description>For SDIO,  Low Priority Queue Page Number High Threshold</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LPQ_LOW_TH</name>
              <description>For SDIO,  Low Priority Queue Page Number Low Threshold</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TDE_DEBUG</name>
          <addressOffset>0x00000220</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TDE_DEBUG</name>
              <description>tde debug port register.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AUTO_LLT</name>
          <addressOffset>0x00000224</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TXPKTNUM_H</name>
              <description>Packet number in TXPKTBUF (High and Extra)</description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_TDE_DBG_SEL</name>
              <description>debug signals selection of Tx DMA</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MASK_QSEL_DIFF</name>
              <description>Mask the error bit(tx endpoint is unmatched with qsel, 0x210[10])</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[21:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_Auto_Init_LLT</name>
              <description>Write 1 to enable HW init LLT, driver need polling to 0 meaning init success</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_Tx_OQT_HE_free_space</name>
              <description>High and Extra priority queue</description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_Tx_OQT_NL_free_space</name>
              <description>Normal and low priority queue</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DWBCN1_CTRL</name>
          <addressOffset>0x00000228</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFA00F800</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BCN_HEAD_2</name>
              <description>The head page of packet of Bcnq which is Tx DMA filled Bcnq packet from.</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SW_BCN_SEL</name>
              <description>Bcnq head selection from SW setting
2'b01 : r_bcn_head_1
2'b10 : r_bcn_head_2</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BCN_VALID_2</name>
              <description>When this bit is set, the beacon packet has finished to write to txpktbuffer.
Clear by SW.</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SW_BCN_SEL_EN</name>
              <description>Enable Bcnq head selection from SW setting</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BCN_VALID_1</name>
              <description>When this bit is set, the beacon packet has finished to write to txpktbuffer.
Clear by SW.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BCN_HEAD_1</name>
              <description>The head page of packet of Bcnq which is Tx DMA filled Bcnq packet from.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_Max_tx_pkt</name>
              <description>Unit : packet number
Max_tx_pkt_for_USB_and_SDIO</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TX_ALIGNMENT_CTRL</name>
          <addressOffset>0x0000022C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ADJUSTABLE_SIZE_EN</name>
              <description>Enable tx alignment for sdio.
SW can assign the alignment size of blocks in an aggregated-packet.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ALIGNMENT_SIZE</name>
              <description>The alignment size of blocks in an aggregated-packet.
Unit: Byte</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TDE_GCK_CTRL</name>
          <addressOffset>0x00000230</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0000003F</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[31:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TDE_GCLK_DLY_CNT</name>
              <description>when start trigger of clk gating happens, count for several cycles then disable clk,default:16 cycles</description>
              <bitRange>[6:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DMA_WAIT_MORE_CYCLE</name>
              <description>enable this bit,tde_ctl will wait for 16 dma_clk when host dma last data to tde_sync_fifo
1:used for 20M mac clk
0:used for 40M/80M mac clk(will wait for 12 dma_clk)</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TDE_GCLK_EN</name>
              <description>enable this bit,txdma engine will use gated clk</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TQPNT3_V1</name>
          <addressOffset>0x00000234</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_H2C_HEAD</name>
          <addressOffset>0x00000244</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RXDMA_AGG_PG_TH</name>
          <addressOffset>0x00000280</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00002003</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RXDMA_STORE</name>
              <description>usb rx dma old mode store pkt and forward</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_PRE_CALC</name>
              <description>0: rde start rxdma when aggregated length over specified threshold;
1: rde start rxdma when next packet, if aggregated, will cause the total length over specified threshold</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[28:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PKT_NUM_WOL</name>
              <description>In wol mode, 8051 should refer this packet counter in RXFF</description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_DMA_TIMEOUT_TH</name>
              <description>dma agg timeout time : unit : 32us</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXDMA_AGG_PG_TH</name>
              <description>rxdma agg length threshold 
if sdio : unit 1K, others unit is 4K
if use RXDMA_AGG_OLD_MOD in use, unit is 1K</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RXPKT_NUM</name>
          <addressOffset>0x00000284</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RXPKT_QUEUED</name>
              <description>The number of packets in RXPKTBUF.</description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[23:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXDMA_REQ</name>
              <description>rxdma has request</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FW_RELEASE_EN</name>
              <description>When this bit is set, RXDMA will enter this mode after on-going RXDMA packet to host completed, 
and stop DMA packet to host. RXDMA will then report</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXDMA_IDLE</name>
              <description>When RXMA finishes on-going DMA operation, RXMDA will report idle state in this bit. 
FW can start releasing packets after RXDMA entering idle mode.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RXPKT_RELEASE_POLL</name>
              <description>When this bit is set, RXDMA will decrease RX PKT counter by one. Before this bit is polled, 
FW shall update RXFF_RD_PTR first.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FW_UPD_RXPKT_RDPTR</name>
              <description>FW shall update this register before FW write RXPKT_RELEASE_POLL to 1.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RXDMA_STATUS</name>
          <addressOffset>0x00000288</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[31:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_C2H_PKT_OVF</name>
              <description>CH2 pkt overflow. Clr by SW</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_AGG_CONFGI_ISSUE</name>
              <description>rxdma agg config error. Clr by SW</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FW_POLL_ISSUE</name>
              <description>FW Release Poll Error. Clear by SW.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RX_DATA_UDN</name>
              <description>FW Release Poll Error. Clear by SW.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RX_SFF_UDN</name>
              <description>RX Sync FIFO Underflow. Clear by SW.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RX_SFF_OVF</name>
              <description>RX Sync FIFO Overflow. Clear by SW.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPKT_OVF</name>
              <description>When RX Packet is more than 255 packets remaining in FF. Clear by SW.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RXDMA_DPR</name>
          <addressOffset>0x0000028C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RDE_DBG</name>
              <description>rde debug port register.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RXDMA_MODE</name>
          <addressOffset>0x00000290</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000044</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[31:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXDMA_GCLK_EN</name>
              <description>rxdma_engine clock gating control,1:enable clock gating;0:disable clock gating</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BURST_SIZE</name>
              <description>Every burst pkt len
2'b00 : 1KB
2'b01 : 512B
2'b10 : 64B
Others : 64B
P.S. USB 3.0 must set : 0x00
        USB 2.0 High-speed must set : 0x01
        USB 2.0 Full-speed must set : 0x10</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BURST_CNT</name>
              <description>Burst number in dma mode, support at most 4burst(2'b11)
P.S, DD suggest 0x11</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DMA_MODE</name>
              <description>For usb use dma mode; for pcie clr this bit ; for SDIO use Rx DMA Aggregation mode</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MASK_RX_PKT_PS</name>
              <description>RSVD</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_C2H_PKT</name>
          <addressOffset>0x00000294</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[31:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_R_C2H_PKT_REQ</name>
              <description>C2h packet dma request</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_R_C2H_STR_ADDR</name>
              <description>C2h packet start address</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DUMMY_P2</name>
          <addressOffset>0x00000298</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>dummy</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>page3</name>
      <groupName>WIFI</groupName>
      <baseAddress>0x40000000</baseAddress>
      <size>0x00001310</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00001310</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>REG_AXI_CTRL</name>
          <addressOffset>0x00000300</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x33008000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MAX_RXDMA</name>
              <description>RXDMA Burst Size selection default 3.
0: 4bytes; 1: 16bytes; 2: 32bytes; 3: 64bytes</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MAX_TXDMA</name>
              <description>TXDMA Burst Size selection default 3.
0: 4bytes; 1: 16bytes; 2: 32bytes; 3: 64bytes.</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_REG_TXDMA_FAIL_PS</name>
              <description>Write 1 to cause a txdma fail ps</description>
              <bitRange>[21:21]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_MBSSID_ENSWBCN_BACKDOOR</name>
              <description>MBSSID enable software becon</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_WT_RXTAG</name>
              <description>Display Dword0[32:16] type of Rx buffer descriptor
0: TotalLen
1: Rxtag</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_STOPBCN</name>
              <description>BCNQ DMA STOP</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_STOPMG</name>
              <description>MGQ DMA STOP</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_STOPVO</name>
              <description>VOQ DMA STOP</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_STOPVI</name>
              <description>VIQ DMA STOP</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_STOPBE</name>
              <description>BEQ DMA STOP</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_STOPBK</name>
              <description>BKQ DMA STOP</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_STOPRX</name>
              <description>RX DMA STOP</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MQ_STOP</name>
              <description>Stop MQ DMA</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_INT_MIG</name>
          <addressOffset>0x00000304</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TTMRMIT</name>
              <description>When the number of timer matched condition exceeds this setting, then interrupt is issued.</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TNUMMIT</name>
              <description>When the buffered TX packet number is matched, the interrupt is then issued</description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RTMRMIT</name>
              <description>When the number of timer matched condition exceeds this setting, then interrupt is issued.</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RNUMMIT</name>
              <description>When the buffered RX packet number is matched, the interrupt is then issued</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MIGRATE_TIMER</name>
              <description>Timer for setting Interrupt Migration time, only use [2:0]
3'b000: 64 us
3'b001: 128 us
3'b010: 256 us
3'b011: 512 us
3'b100: 1024 us
3'b101: 2048 us
3'b110: 4096 us
3'b111: 8192 us</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BCNQ_TXBD_DESA</name>
          <addressOffset>0x00000308</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BPQDESA</name>
              <description>Buffer Descriptor Base Address for Beacon Queue</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MGQ_TXBD_DESA</name>
          <addressOffset>0x00000310</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MGQDESA</name>
              <description>Buffer Descriptor Base Address for Manage Queue</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_VOQ_TXBD_DESA</name>
          <addressOffset>0x00000318</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_VOQDESA</name>
              <description>Buffer Descriptor Base Address for VO Queue</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_VIQ_TXBD_DESA</name>
          <addressOffset>0x00000320</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_VIQDESA</name>
              <description>Buffer Descriptor Base Address for VI Queue</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BEQ_TXBD_DESA</name>
          <addressOffset>0x00000328</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BEQDESA</name>
              <description>Buffer Descriptor Base Address for BE Queue</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BKQ_TXBD_DESA</name>
          <addressOffset>0x00000330</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BKQDESA</name>
              <description>Buffer Descriptor Base Address for BK Queue</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RXQ_RXBD_DESA</name>
          <addressOffset>0x00000338</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RXNRML_DESA</name>
              <description>Buffer Descriptor Base Address for RX</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MQ0_TXBD_DESA</name>
          <addressOffset>0x00000340</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MQ0DESA</name>
              <description>Buffer Descriptor Base Address for M0 Queue</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MQ1_TXBD_DESA</name>
          <addressOffset>0x00000348</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MQ1DESA</name>
              <description>Buffer Descriptor Base Address for M1 Queue</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MQ2_TXBD_DESA</name>
          <addressOffset>0x00000350</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MQ2DESA</name>
              <description>Buffer Descriptor Base Address for M2 Queue</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MQ3_TXBD_DESA</name>
          <addressOffset>0x00000358</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MQ3DESA</name>
              <description>Buffer Descriptor Base Address for M3 Queue</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MQ4_TXBD_DESA</name>
          <addressOffset>0x00000360</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MQ4DESA</name>
              <description>Buffer Descriptor Base Address for M4 Queue</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MQ5_TXBD_DESA</name>
          <addressOffset>0x00000368</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MQ5DESA</name>
              <description>Buffer Descriptor Base Address for M5 Queue</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MQ6_TXBD_DESA</name>
          <addressOffset>0x00000370</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MQ6DESA</name>
              <description>Buffer Descriptor Base Address for M6 Queue</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MQ7_TXBD_DESA</name>
          <addressOffset>0x00000378</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MQ7DESA</name>
              <description>Buffer Descriptor Base Address for M7 Queue</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MGQ_TXBD_RX_RXBD_NUM</name>
          <addressOffset>0x00000380</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x01000100</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BCNQ_DESC_MODE</name>
              <description>BCNQ descriptor mode :
0 : 2 segments each descriptor
1 : 4 segments each descriptor
2 : 8 segments each descriptor</description>
              <bitRange>[30:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BCNQ_FLAG</name>
              <description>BCNQ FLAGing bit
Read : BCNQ work
Write : BCNQ Polling</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXDES_NUM</name>
              <description>RX queue descriptor's number</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGQ_FLAG</name>
              <description>MGQ FLAGing bit, read result will be bpqflag</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_MGQ_DESC_MODE</name>
              <description>MGQ descriptor mode :
0 : 2 segments each descriptor
1 : 4 segments each descriptor
2 : 8 segments each descriptor</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGQDES_NUM</name>
              <description>MG queue descriptor's number</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_VOQ_VIQ_TXBD_NUM</name>
          <addressOffset>0x00000384</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x01000100</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_VIQ_FLAG</name>
              <description>VIQ, read result will be viqflag</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_VIQ_DESC_MODE</name>
              <description>VIQ descriptor mode :
0 : 2 segments each descriptor
1 : 4 segments each descriptor
2 : 8 segments each descriptor</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_VIQDES_NUM</name>
              <description>VI queue descriptor's number</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_VOQ_FLAG</name>
              <description>VOQ, read result will be voqflag</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_VOQ_DESC_MODE</name>
              <description>VOQ descriptor mode :
0 : 2 segments each descriptor
1 : 4 segments each descriptor
2 : 8 segments each descriptor</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_VOQDES_NUM</name>
              <description>VO queue descriptor's number</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BEQ_BKQ_TXBD_NUM</name>
          <addressOffset>0x00000388</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x01000100</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BKQ_FLAG</name>
              <description>BKQ, read result will be bkqflag</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BKQ_DESC_MODE</name>
              <description>BKQ descriptor mode :
0 : 2 segments each descriptor
1 : 4 segments each descriptor
2 : 8 segments each descriptor</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BKQDES_NUM</name>
              <description>BK queue descriptor's number</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BEQ_FLAG</name>
              <description>BEQ, read result will be beqflag</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BEQ_DESC_MODE</name>
              <description>BEQ descriptor mode :
0 : 2 segments each descriptor
1 : 4 segments each descriptor
2 : 8 segments each descriptor</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BEQDES_NUM</name>
              <description>BE queue descriptor's number</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MQ0_MQ1_TXBD_NUM</name>
          <addressOffset>0x0000038C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x01000100</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MQ1_FLAG</name>
              <description>MQ1, read result will be MQ1flag</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_MQ1_DESC_MODE</name>
              <description>MQ1 descriptor mode :
0 : 2 segments each descriptor
1 : 4 segments each descriptor
2 : 8 segments each descriptor</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MQ1DES_NUM</name>
              <description>M1 queue descriptor's number</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MQ0_FLAG</name>
              <description>MQ0, read result will be MQ0flag</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_MQ0_DESC_MODE</name>
              <description>MQ0 descriptor mode :
0 : 2 segments each descriptor
1 : 4 segments each descriptor
2 : 8 segments each descriptor</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MQ0DES_NUM</name>
              <description>M0 queue descriptor's number</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MQ2_MQ3_TXBD_NUM</name>
          <addressOffset>0x00000390</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x01000100</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MQ3_FLAG</name>
              <description>MQ3, read result will be MQ3flag</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_MQ3_DESC_MODE</name>
              <description>MQ3 descriptor mode :
0 : 2 segments each descriptor
1 : 4 segments each descriptor
2 : 8 segments each descriptor</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MQ3DES_NUM</name>
              <description>M3 queue descriptor's number</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MQ2_FLAG</name>
              <description>MQ2, read result will be MQ2flag</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_MQ2_DESC_MODE</name>
              <description>MQ2 descriptor mode :
0 : 2 segments each descriptor
1 : 4 segments each descriptor
2 : 8 segments each descriptor</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MQ2DES_NUM</name>
              <description>M2 queue descriptor's number</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MQ4_MQ5_TXBD_NUM</name>
          <addressOffset>0x00000394</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x01000100</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MQ5_FLAG</name>
              <description>MQ5, read result will be MQ5flag</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_MQ5_DESC_MODE</name>
              <description>MQ5 descriptor mode :
0 : 2 segments each descriptor
1 : 4 segments each descriptor
2 : 8 segments each descriptor</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MQ5DES_NUM</name>
              <description>M5 queue descriptor's number</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MQ4_FLAG</name>
              <description>MQ4, read result will be MQ4flag</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_MQ4_DESC_MODE</name>
              <description>MQ4 descriptor mode :
0 : 2 segments each descriptor
1 : 4 segments each descriptor
2 : 8 segments each descriptor</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MQ4DES_NUM</name>
              <description>M4 queue descriptor's number</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MQ6_MQ7_TXBD_NUM</name>
          <addressOffset>0x00000398</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x01000100</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MQ7_FLAG</name>
              <description>MQ7, read result will be MQ7flag</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_MQ7_DESC_MODE</name>
              <description>MQ7 descriptor mode :
0 : 2 segments each descriptor
1 : 4 segments each descriptor
2 : 8 segments each descriptor</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MQ7DES_NUM</name>
              <description>M7 queue descriptor's number</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MQ6_FLAG</name>
              <description>MQ6, read result will be MQ6flag</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_MQ6_DESC_MODE</name>
              <description>MQ6 descriptor mode :
0 : 2 segments each descriptor
1 : 4 segments each descriptor
2 : 8 segments each descriptor</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MQ6DES_NUM</name>
              <description>M6 queue descriptor's number</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BD_RWPTR_CLR</name>
          <addressOffset>0x0000039C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0000C000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_CLR_MQ7_HW_IDX</name>
              <description>Clear MQ7 hardware index, write 1 and hardware auto clear</description>
              <bitRange>[29:29]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_CLR_MQ6_HW_IDX</name>
              <description>Clear MQ6 hardware index, write 1 and hardware auto clear</description>
              <bitRange>[28:28]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_CLR_MQ5_HW_IDX</name>
              <description>Clear MQ5 hardware index, write 1 and hardware auto clear</description>
              <bitRange>[27:27]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_CLR_MQ4_HW_IDX</name>
              <description>Clear MQ4 hardware index, write 1 and hardware auto clear</description>
              <bitRange>[26:26]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_CLR_MQ3_HW_IDX</name>
              <description>Clear MQ3 hardware index, write 1 and hardware auto clear</description>
              <bitRange>[25:25]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_CLR_MQ2_HW_IDX</name>
              <description>Clear MQ2 hardware index, write 1 and hardware auto clear</description>
              <bitRange>[24:24]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_CLR_MQ1_HW_IDX</name>
              <description>Clear MQ1 hardware index, write 1 and hardware auto clear</description>
              <bitRange>[23:23]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_CLR_MQ0_HW_IDX</name>
              <description>Clear MQ0 hardware index, write 1 and hardware auto clear</description>
              <bitRange>[22:22]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_CLR_BKQ_HW_IDX</name>
              <description>Clear BKQ hardware index, write 1 and hardware auto clear</description>
              <bitRange>[21:21]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_CLR_BEQ_HW_IDX</name>
              <description>Clear BEQ hardware index, write 1 and hardware auto clear</description>
              <bitRange>[20:20]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_CLR_VIQ_HW_IDX</name>
              <description>Clear VIQ hardware index, write 1 and hardware auto clear</description>
              <bitRange>[19:19]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_CLR_VOQ_HW_IDX</name>
              <description>Clear VOQ hardware index, write 1 and hardware auto clear</description>
              <bitRange>[18:18]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_CLR_MGQ_HW_IDX</name>
              <description>Clear MGQ hardware index, write 1 and hardware auto clear</description>
              <bitRange>[17:17]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_CLR_RXQ_HW_IDX</name>
              <description>Clear RXQ hardware index, write 1 and hardware auto clear</description>
              <bitRange>[16:16]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_SRST_TX_N</name>
              <description>Reset tx dma</description>
              <bitRange>[15:15]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_SRST_RX_N</name>
              <description>Reset rx dma</description>
              <bitRange>[14:14]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_CLR_MQ7_HOST_IDX</name>
              <description>Clear MQ7 host index, write 1 and hardware auto clear</description>
              <bitRange>[13:13]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_CLR_MQ6_HOST_IDX</name>
              <description>Clear MQ6 host index, write 1 and hardware auto clear</description>
              <bitRange>[12:12]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_CLR_MQ5_HOST_IDX</name>
              <description>Clear MQ5 host index, write 1 and hardware auto clear</description>
              <bitRange>[11:11]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_CLR_MQ4_HOST_IDX</name>
              <description>Clear MQ4 host index, write 1 and hardware auto clear</description>
              <bitRange>[10:10]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_CLR_MQ3_HOST_IDX</name>
              <description>Clear MQ3 host index, write 1 and hardware auto clear</description>
              <bitRange>[9:9]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_CLR_MQ2_HOST_IDX</name>
              <description>Clear MQ2 host index, write 1 and hardware auto clear</description>
              <bitRange>[8:8]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_CLR_MQ1_HOST_IDX</name>
              <description>Clear MQ1 host index, write 1 and hardware auto clear</description>
              <bitRange>[7:7]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_CLR_MQ0_HOST_IDX</name>
              <description>Clear MQ0 host index, write 1 and hardware auto clear</description>
              <bitRange>[6:6]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_CLR_BKQ_HOST_IDX</name>
              <description>Clear MQ host index, write 1 and hardware auto clear</description>
              <bitRange>[5:5]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_CLR_BEQ_HOST_IDX</name>
              <description>Clear BEQ host index, write 1 and hardware auto clear</description>
              <bitRange>[4:4]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_CLR_VIQ_HOST_IDX</name>
              <description>Clear VIQ host index, write 1 and hardware auto clear</description>
              <bitRange>[3:3]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_CLR_VOQ_HOST_IDX</name>
              <description>Clear VOQ host index, write 1 and hardware auto clear</description>
              <bitRange>[2:2]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_CLR_MGQ_HOST_IDX</name>
              <description>Clear MGQ host index, write 1 and hardware auto clear</description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_CLR_RXQ_HOST_IDX</name>
              <description>Clear RXQ host index, write 1 and hardware auto clear</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_VOQ_TXBD_IDX</name>
          <addressOffset>0x000003A0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_VOQ_HW_IDX</name>
              <description>VO queue descriptor's hardware index</description>
              <bitRange>[27:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_VOQ_HOST_IDX</name>
              <description>VO queue descriptor's host index</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_VIQ_TXBD_IDX</name>
          <addressOffset>0x000003A4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_VIQ_HW_IDX</name>
              <description>VI queue descriptor's hardware index</description>
              <bitRange>[27:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_VIQ_HOST_IDX</name>
              <description>VI queue descriptor's host index</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BEQ_TXBD_IDX</name>
          <addressOffset>0x000003A8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BEQ_HW_IDX</name>
              <description>BE queue descriptor's hardware index</description>
              <bitRange>[27:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BEQ_HOST_IDX</name>
              <description>BE queue descriptor's host index</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BKQ_TXBD_IDX</name>
          <addressOffset>0x000003AC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BKQ_HW_IDX</name>
              <description>BK queue descriptor's hardware index</description>
              <bitRange>[27:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BKQ_HOST_IDX</name>
              <description>BK queue descriptor's host index</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MGQ_TXBD_IDX</name>
          <addressOffset>0x000003B0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MGQ_HW_IDX</name>
              <description>MG queue descriptor's hardware index</description>
              <bitRange>[27:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_MGQ_HOST_IDX</name>
              <description>MG queue descriptor's host index</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RXQ_RXBD_IDX</name>
          <addressOffset>0x000003B4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RXNRML_HW_IDX</name>
              <description>RX queue descriptor's hardware index</description>
              <bitRange>[27:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RXNRML_HOST_IDX</name>
              <description>RX queue descriptor's host index</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MQ0_TXBD_IDX</name>
          <addressOffset>0x000003B8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MQ0_HW_IDX</name>
              <description>MQ0 queue descriptor's hardware index</description>
              <bitRange>[27:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_MQ0_HOST_IDX</name>
              <description>MQ0 queue descriptor's host index</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MQ1_TXBD_IDX</name>
          <addressOffset>0x000003BC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MQ1_HW_IDX</name>
              <description>MQ1 queue descriptor's hardware index</description>
              <bitRange>[27:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_MQ1_HOST_IDX</name>
              <description>MQ1 queue descriptor's host index</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MQ2_TXBD_IDX</name>
          <addressOffset>0x000003C0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MQ2_HW_IDX</name>
              <description>MQ2 queue descriptor's hardware index</description>
              <bitRange>[27:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_MQ2_HOST_IDX</name>
              <description>MQ2 queue descriptor's host index</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MQ3_TXBD_IDX</name>
          <addressOffset>0x000003C4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MQ3_HW_IDX</name>
              <description>MQ3 queue descriptor's hardware index</description>
              <bitRange>[27:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_MQ3_HOST_IDX</name>
              <description>MQ3 queue descriptor's host index</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MQ4_TXBD_IDX</name>
          <addressOffset>0x000003C8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MQ4_HW_IDX</name>
              <description>MQ4 queue descriptor's hardware index</description>
              <bitRange>[27:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_MQ4_HOST_IDX</name>
              <description>MQ4 queue descriptor's host index</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MQ5_TXBD_IDX</name>
          <addressOffset>0x000003CC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MQ5_HW_IDX</name>
              <description>MQ5 queue descriptor's hardware index</description>
              <bitRange>[27:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_MQ5_HOST_IDX</name>
              <description>MQ5 queue descriptor's host index</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MQ6_TXBD_IDX</name>
          <addressOffset>0x000003D0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MQ6_HW_IDX</name>
              <description>MQ6 queue descriptor's hardware index</description>
              <bitRange>[27:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_MQ6_HOST_IDX</name>
              <description>MQ6 queue descriptor's host index</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MQ7_TXBD_IDX</name>
          <addressOffset>0x000003D4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MQ7_HW_IDX</name>
              <description>MQ7 queue descriptor's hardware index</description>
              <bitRange>[27:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_MQ7_HOST_IDX</name>
              <description>MQ7 queue descriptor's host index</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AXI_CTRL2</name>
          <addressOffset>0x000003D8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000004</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_DEBUG_REG2</name>
              <description>Debug Selection Register</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DEBUG_REG1</name>
              <description>Write:hps_clkr_ahb[3]
Read:Debug Selection Register</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HPS_CLKR_AHB</name>
              <description>The Registers are used to prevent the deadlock whenever HW or FW turn off ANACLK or SYSCLK, which the HW or FW could not resume by themself. Currently they are not used in normal control flow. They might be helpful when Driver would like to handle whole  Suspned &amp; Resume flow by itself
hps_clkr_ahb[2:1]</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_INT_WLMAC</name>
              <description>Write:hps_clkr_ahb[0]
Read:Interrupt.Write clear.</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DEBUG_REG0</name>
              <description>Write:Debug Selection Register
Read:3'b000</description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DEBUG_REG3</name>
              <description>Debug Selection Register</description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DRVIER_TO_FIRMWARE_INFO</name>
          <addressOffset>0x000003E0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_DRV2FW_AHB</name>
              <description>DRIVER TO FIRMWARE MESSAGE</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FIRMWARE_TO_DRIVER_INFO</name>
          <addressOffset>0x000003E4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FW2DRV_AHB</name>
              <description>FIRMWARE TO DRIVER MESSAGE</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AXI_INTERRUPT</name>
          <addressOffset>0x000003E8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_SETBCNERR7</name>
              <description>setbcnderr7, beacon queue error, mbssid=7</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SETBCNERR6</name>
              <description>setbcnderr6, beacon queue error, mbssid=6</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SETBCNERR5</name>
              <description>setbcnderr5, beacon queue error, mbssid=5</description>
              <bitRange>[29:29]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SETBCNERR4</name>
              <description>setbcnderr4, beacon queue error, mbssid=4</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SETBCNERR3</name>
              <description>setbcnderr3, beacon queue error, mbssid=3</description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SETBCNERR2</name>
              <description>setbcnderr2, beacon queue error, mbssid=2</description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SETBCNERR1</name>
              <description>setbcnderr1, beacon queue error, mbssid=1</description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SETBCNERR0</name>
              <description>setbcnderr0, beacon queue error, mbssid=0</description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SETBCNOK7</name>
              <description>setbcndok7, beacon queue ok, mbssid=7</description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SETBCNOK6</name>
              <description>setbcndok6, beacon queue ok, mbssid=6</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SETBCNOK5</name>
              <description>setbcndok5, beacon queue ok, mbssid=5</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SETBCNOK4</name>
              <description>setbcndok4, beacon queue ok, mbssid=4</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SETBCNOK3</name>
              <description>setbcndok3, beacon queue ok, mbssid=3</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SETBCNOK2</name>
              <description>setbcndok2, beacon queue ok, mbssid=2</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SETBCNOK1</name>
              <description>setbcndok1, beacon queue ok, mbssid=1</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SETBCNOK0</name>
              <description>setbcndok0, beacon queue ok, mbssid=0</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SETHIGHDOK</name>
              <description>sethighdok, high queue ok</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SETH2CDOK</name>
              <description>seth2cdok, h2c queue ok</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SETMGDOK</name>
              <description>setmgdok, manage queue ok</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SETBKDOK</name>
              <description>setbkdok, bk queue ok</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SETBEDOK</name>
              <description>setbedok, be queue ok</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SETVIDOK</name>
              <description>setvidok, vi queue ok</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SETVODOK</name>
              <description>setvodok, vo queue ok</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SET_RDY</name>
              <description>set_rdu, rx descriptor unavailable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SETRXOK</name>
              <description>setrxok, rx dma ok</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AXI_INTERRUPT_MASK</name>
          <addressOffset>0x000003EC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_SETBCNERR7_EN</name>
              <description>setbcnderr7, beacon queue error, mbssid=7</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SETBCNERR6_EN</name>
              <description>setbcnderr6, beacon queue error, mbssid=6</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SETBCNERR5_EN</name>
              <description>setbcnderr5, beacon queue error, mbssid=5</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SETBCNERR4_EN</name>
              <description>setbcnderr4, beacon queue error, mbssid=4</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SETBCNERR3_EN</name>
              <description>setbcnderr3, beacon queue error, mbssid=3</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SETBCNERR2_EN</name>
              <description>setbcnderr2, beacon queue error, mbssid=2</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SETBCNERR1_EN</name>
              <description>setbcnderr1, beacon queue error, mbssid=1</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SETBCNERR0_EN</name>
              <description>setbcnderr0, beacon queue error, mbssid=0</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SETBCNOK7_EN</name>
              <description>setbcndok7, beacon queue ok, mbssid=7</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SETBCNOK6_EN</name>
              <description>setbcndok6, beacon queue ok, mbssid=6</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SETBCNOK5_EN</name>
              <description>setbcndok5, beacon queue ok, mbssid=5</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SETBCNOK4_EN</name>
              <description>setbcndok4, beacon queue ok, mbssid=4</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SETBCNOK3_EN</name>
              <description>setbcndok3, beacon queue ok, mbssid=3</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SETBCNOK2_EN</name>
              <description>setbcndok2, beacon queue ok, mbssid=2</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SETBCNOK1_EN</name>
              <description>setbcndok1, beacon queue ok, mbssid=1</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SETBCNOK0_EN</name>
              <description>setbcndok0, beacon queue ok, mbssid=0</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SETHIGHDOK_EN</name>
              <description>sethighdok, high queue ok</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SETH2CDOK_EN</name>
              <description>seth2cdok, h2c queue ok</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SETMGDOK_EN</name>
              <description>setmgdok, manage queue ok</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SETBKDOK_EN</name>
              <description>setbkdok, bk queue ok</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SETBEDOK_EN</name>
              <description>setbedok, be queue ok</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SETVIDOK_EN</name>
              <description>setvidok, vi queue ok</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SETVODOK_EN</name>
              <description>setvodok, vo queue ok</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SET_RDY_EN</name>
              <description>set_rdu, rx descriptor unavailable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SETRXOK_EN</name>
              <description>setrxok, rx dma ok</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TRXDMA_STUCK</name>
          <addressOffset>0x000003F0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RXDMA_STUCK</name>
              <description>rx dma stuck</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_TXDMA_STUCK</name>
              <description>tx dma stuck</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_MST_BUSY</name>
              <description>axi master write/read busy</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RXBUF_ZERO_ERR</name>
              <description>rx pkt size equal to 0 when caculate buffer size</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HD_SIZE_ERR</name>
              <description>tx dma header size less than TXDESC_SIZE(40d)</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_EN_DBG_STUCK</name>
              <description>enable trx dma stuck</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DUMMY_P3</name>
          <addressOffset>0x000003F4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>dummy</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_LBC_WATCHDOG</name>
          <addressOffset>0x000003F8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_WATCH_DOG_RECORD</name>
              <description>Time out register address</description>
              <bitRange>[23:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_R_IO_TIMEOUT_FLAG</name>
              <description>Lbc timeout flag.Write "1" to clear.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_EN_WATCH_DOG</name>
              <description>Enable lbc timeout watchdog</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ENABLE_DUMMY_READ</name>
          <addressOffset>0x000003FC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000040</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_R_DEBUG</name>
              <description>Debug Selection Register</description>
              <bitRange>[23:22]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_EN_OUT_STD</name>
              <description>cpl multi tag enable</description>
              <bitRange>[6:6]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_H2CQ_TXBD_DESA</name>
          <addressOffset>0x00001300</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_H2CQDESA</name>
              <description>Buffer Descriptor Base Address for H2C Queue</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_H2CQ_TXBD_NUM</name>
          <addressOffset>0x00001304</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000100</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_H2CQ_FLAG</name>
              <description>H2CQ, read result will be H2CQflag</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_H2CQ_DESC_MODE</name>
              <description>H2CQ descriptor mode :
0 : 2 segments each descriptor
1 : 4 segments each descriptor
2 : 8 segments each descriptor</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_H2CQDES_NUM</name>
              <description>H2C queue descriptor's number</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_H2CQ_TXBD_IDX</name>
          <addressOffset>0x00001308</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_H2CQ_HW_IDX</name>
              <description>H2C queue descriptor's hardware index</description>
              <bitRange>[27:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_H2CQ_HOST_IDX</name>
              <description>H2C queue descriptor's host index</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_H2CQ_CSR</name>
          <addressOffset>0x0000130C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_H2CQ_FULL</name>
              <description>Indicate H2CQ full. Write 1 to clear the bit.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_CLR_H2CQ_HOST_IDX</name>
              <description>Write 1 to clear H2CQ host index, and then hardware auto clear the bit</description>
              <bitRange>[2:2]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_CLR_H2CQ_HW_IDX</name>
              <description>Write 1 to clear H2CQ hardware index, and then hardware auto clear the bit</description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_STOPH2C</name>
              <description>Stop h2c queue dma</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>page4</name>
      <groupName>WIFI</groupName>
      <baseAddress>0x40000000</baseAddress>
      <size>0x000014A4</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x000014A4</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>REG_Q0_INFO</name>
          <addressOffset>0x00000400</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x007F80FF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_QueueMacID_Q0_V1</name>
              <description>MacID of head pkt</description>
              <bitRange>[31:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_QueueAC_Q0_V1</name>
              <description>AC type of Queue 0.</description>
              <bitRange>[24:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_Tail_PKT_Q0_V1</name>
              <description>The head page of the last packet of Queue 0.</description>
              <bitRange>[22:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_PKT_Num_Q0_V1</name>
              <description>The total Queue 0 pkt number in TxPktbuffer</description>
              <bitRange>[14:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_Head_PKT_Q0</name>
              <description>The head page of the first packet of Queue 0.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_Q1_INFO</name>
          <addressOffset>0x00000404</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x007F80FF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_QueueMacID_Q1_V1</name>
              <description>MacID of head pkt</description>
              <bitRange>[31:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_QueueAC_Q1_V1</name>
              <description>AC type of Queue 1.</description>
              <bitRange>[24:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_Tail_PKT_Q1_V1</name>
              <description>The head page of the last packet of Queue 1.</description>
              <bitRange>[22:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_PKT_Num_Q1_V1</name>
              <description>The total Queue 1 pkt number in TxPktbuffer</description>
              <bitRange>[14:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_Head_PKT_Q1</name>
              <description>The head page of the first packet of Queue 1.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_Q2_INFO</name>
          <addressOffset>0x00000408</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x007F80FF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_QueueMacID_Q2_V1</name>
              <description>MacID of head pkt</description>
              <bitRange>[31:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_QueueAC_Q2_V1</name>
              <description>AC type of Queue 2.</description>
              <bitRange>[24:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_Tail_PKT_Q2_V1</name>
              <description>The head page of the last packet of Queue 2.</description>
              <bitRange>[22:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_PKT_Num_Q2_V1</name>
              <description>The total Queue 2 pkt number in TxPktbuffer</description>
              <bitRange>[14:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_Head_PKT_Q2</name>
              <description>The head page of the first packet of Queue 2.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_Q3_INFO</name>
          <addressOffset>0x0000040C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x007F80FF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_QueueMacID_Q3_V1</name>
              <description>MacID of head pkt</description>
              <bitRange>[31:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_QueueAC_Q3_V1</name>
              <description>AC type of Queue 3.</description>
              <bitRange>[24:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_Tail_PKT_Q3_V1</name>
              <description>The head page of the last packet of Queue 3.</description>
              <bitRange>[22:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_PKT_Num_Q3_V1</name>
              <description>The total Queue 3 pkt number in TxPktbuffer</description>
              <bitRange>[14:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_Head_PKT_Q3</name>
              <description>The head page of the first packet of Queue 3.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MGQ_INFO</name>
          <addressOffset>0x00000410</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x007F80FF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_QueueMacID_MGQ_V1</name>
              <description>MacID of head pkt</description>
              <bitRange>[31:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_QueueAC_MGQ_V1</name>
              <description>AC type of management Queue.</description>
              <bitRange>[24:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_Tail_PKT_MGQ_V1</name>
              <description>The head page of the last packet of MGQ.</description>
              <bitRange>[22:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_PKT_Num_MGQ_V1</name>
              <description>The total MGQ pkt number in TxPktbuffer</description>
              <bitRange>[14:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_Head_PKT_MGQ</name>
              <description>The head page of the first packet of MGQ.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_HIQ_INFO</name>
          <addressOffset>0x00000414</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x007F80FF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_QueueMacID_HIQ_V1</name>
              <description>MacID of head pkt</description>
              <bitRange>[31:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_QueueAC_HIQ_V1</name>
              <description>AC type of High Queue.</description>
              <bitRange>[24:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_Tail_PKT_HIQ_V1</name>
              <description>The head page of the last packet of HIQ.</description>
              <bitRange>[22:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_PKT_Num_HIQ_V1</name>
              <description>The total HIQ pkt number in TxPktbuffer</description>
              <bitRange>[14:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_Head_PKT_HIQ</name>
              <description>The head page of the first packet of HIQ.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_QUE_EMPTY_BCNQ_INFO</name>
          <addressOffset>0x00000418</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFF00F6</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BCNQ_EMPTY_P2</name>
              <description>When this bit is raised, beacon queue of PORT2 is empty. Report by MAC.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BCNQ_EMPTY_P1</name>
              <description>When this bit is raised, beacon queue of PORT1 is empty. Report by MAC.</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BCNQ_EMPTY_P0</name>
              <description>When this bit is raised, beacon queue of PORT0 is empty. Report by MAC.</description>
              <bitRange>[29:29]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_EVTQ_EMPTY</name>
              <description>When this bit is raised, event queue is empty. Report by MAC.</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BCNQ_EMPTY</name>
              <description>When this bit is raised, beacon queue is empty. Report by MAC.</description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HQQ_EMPTY</name>
              <description>When this bit is raised, High queue is empty. Report by MAC.</description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_MQQ_EMPTY</name>
              <description>When this bit is raised, MGQ queue is empty. Report by MAC.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_MGQ_cpu_EMPTY</name>
              <description>When this bit is raised, MGQ queue poll by cpu is empty. Report by MAC.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_AC7Q_EMPTY</name>
              <description>When this bit is raised, AC7 queue is empty. Report by MAC.</description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_AC6Q_EMPTY</name>
              <description>When this bit is raised, AC6 queue is empty. Report by MAC.</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_AC5Q_EMPTY</name>
              <description>When this bit is raised, AC5 queue is empty. Report by MAC.</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_AC4Q_EMPTY</name>
              <description>When this bit is raised, AC4 queue is empty. Report by MAC.</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_AC3Q_EMPTY</name>
              <description>When this bit is raised, AC3 queue is empty. Report by MAC.</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_AC2Q_EMPTY</name>
              <description>When this bit is raised, AC2 queue is empty. Report by MAC.</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_AC1Q_EMPTY</name>
              <description>When this bit is raised, AC1 queue is empty. Report by MAC.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_AC0Q_EMPTY</name>
              <description>When this bit is raised, AC0 queue is empty. Report by MAC.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_PKT_Num_BCNQ</name>
              <description>The total BcnQ pkt number in TxPktbuffer</description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BCNQ_HEAD_PG</name>
              <description>The head page of the first packet of Bcnq</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CPU_MGQ_INFO</name>
          <addressOffset>0x0000041C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x000000F6</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BCN_POLL2</name>
              <description>Polling BCN Queue2 Packet. Not used in 8723F</description>
              <bitRange>[31:31]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_BCN_POLL1</name>
              <description>Polling BCN Queue1 Packet</description>
              <bitRange>[30:30]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_CPUMGT_POLL_SET</name>
              <description>Polling to set CPU MGT Queue packet</description>
              <bitRange>[29:29]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_BCN_POLL</name>
              <description>Polling BCN Queue Packet</description>
              <bitRange>[28:28]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_CPUMGT_POLL_CLR</name>
              <description>Polling to clear CPU MGT Queue packet</description>
              <bitRange>[27:27]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_EVTQ_VLD</name>
              <description>SW set to 1, HW clear to 0 when evtq timeout or tx_finish</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CMDQ_POLL</name>
              <description>polling CMD packet</description>
              <bitRange>[24:24]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_CPUMGQ_FW_NUM</name>
              <description>The total cpu mgq fw number in TxPktbuffer</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_CPUMGQ_HEAD_PG</name>
              <description>The head page of CPU MGQ</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FWHW_TXQ_HWSSN_CTRL</name>
          <addressOffset>0x00000420</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00743F87</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_HW_SSN_EN</name>
              <description>HW update the SSN [7:0],
When this bit enable and EN_HWSEQ of TXDESC, MAC will overwrite MACHDR SEQ according to TXDESC QSEL
[0] BIT_HWSEQ_VO_EN
[1] BIT_HWSEQ_VI_EN
[2] BIT_HWSEQ_BE_EN
[3] BIT_HWSEQ_BK_EN
[4] BIT_HWSEQ_MGT_EN
[5] BIT_HWSEQ_HI_EN
[6] BIT_HWSEQ_BCN_EN,don't care  EN_HWSEQ of TXDESC
[7] BIT_HWSEQ_CPUM_EN</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RTS_LIMIT_IN_OFDM</name>
              <description>Rts rate will not down to cck rate</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_BCNQ_DL</name>
              <description>1: ptcl consider there is bcn pkt in TXBUF when bcn pkt first be transferd in;
0: mask bcn pkt num in bcn queue</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_RD_RESP_NAV_BK</name>
              <description>Control the RD responder NAV criteria for TX.
When this bit is clear, RD responder may aggregates only according to the number of MPDUs existing in the TXPKTBUF, the limit of aggregation size and number, and also the break time. When this bit is set, RD responder will be under the RX NAV criteria for RD response sequence. No excess NAV is allowed</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_WR_FREE_TAIL</name>
              <description>1: Drive write Bcnq_boundary, Hw will set free_tail in Boundary-1
0: no update</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXRPT_DIS</name>
              <description>when this bit is enabled, HW will not generate txrpt for driver's fixed rate packets</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXFAILRPT_DIS</name>
              <description>when this bit is enabled, HW will not generate txrpt for tx failed packets</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_RTY_BC</name>
              <description>When this bit is enabled, retry the broadcast packet</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_RTY_BK_COND</name>
              <description>AMPDU aggregation mode with retry MPDUs and new MPDUs.
When this bit is enabled, if new MPDU's data rate is not the same as retry MPDUs' fallback data rate, the aggregation will be broken.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_QUEUE_RPT</name>
              <description>8723A/8812
1: HW will report tx_status  0: no report
BIT0: BK Queue
BIT1: BE Queue
BIT2: VI Queue
BIT3: VO Queue
BIT4: MGT Queue
BIT5: HI Queue
BIT6: BCN Queue
BIT7: CPU_MGT Queue</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_RTY_BK</name>
              <description>AMPDU aggregation mode with retry MPDUs and new MPDUs.
When this bit is clear enabled, an AMPDU aggregates retried MPDU and new MPDU. All the aggregation criteria is still the same with normal AMPDU operation.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_USE_INI_RAT</name>
              <description>0: If Txdesc's USE RATE = 0 and this field is equal to 0, the datarate of TXRPT SRAM is used as tx pkt's datarate. (ECO flow)
1: TXInfo's datarate is used as tx pkt's datarate.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_RTS_NAV_BK</name>
              <description>Control The RTS NAV criteria for TX.
When this bit is clear, TX may aggregates only according to the number of MPDUs existing in the TXPKTBUF, the limit of aggregation size and number, and also the break time. 
When this bit is set, TX will be under the RTS NAV criteria. No excess RTS NAV is allowed.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_SSN_CHECK</name>
              <description>Disable checker the SSN rule when generating AMPDU TX cmd.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MACID_MATCH_RTS</name>
              <description>Enable the packet that follow the RTS have same MACID</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_BCN_TXRPT</name>
              <description>1: HW will report bcn tx_status  0: no report</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_FTM_RPT</name>
              <description>When this bit asserted, HW will report FTM rpt</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PROTECT_BMC_NAV</name>
              <description>Enable the NAV protection when transmit broadcast/multicast</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BNDY_LIFETIME_TAIL</name>
          <addressOffset>0x00000424</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xF510F6F6</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FW_Free_Tail</name>
              <description>Free Tail Page Number</description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BT_INT_TYPE</name>
              <description>BT Interrupt type
01: PTA
10: CPU</description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HW_SSN_EN_EVTQ</name>
              <description>HW update the SSN [8] for eventq</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RTYBIT_CTRL_EN</name>
              <description>1: Enable Retry Count
0: Disable</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LIFETIME_BK_EN</name>
              <description>Enable BK queue lifetime function</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LIFETIME_BE_EN</name>
              <description>Enable BE queue lifetime function</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LIFETIME_VI_EN</name>
              <description>Enable VI queue lifetime function</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LIFETIME_VO_EN</name>
              <description>Enable VO queue lifetime function</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGQ_PGBNDY</name>
              <description>TXDMA will pull CPU MGQ Pkt in this address.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BCNQ_PGBNDY</name>
              <description>TXDMA will pull BCNQ Pkt in this address.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RETRY_LIMIT_SIFS</name>
          <addressOffset>0x00000428</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x2020100A</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description></description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SRL</name>
              <description>Short Retry Limit</description>
              <bitRange>[29:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LRL</name>
              <description>Long Retry Limit</description>
              <bitRange>[21:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SPEC_SIFS_OFDM_PTCL</name>
              <description>The spec SIFS value for duration calculation</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SPEC_SIFS_CCK_PTCL</name>
              <description>The spec SIFS value for duration calculation</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TXBF_CTRL</name>
          <addressOffset>0x0000042C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0000C000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_r_enable_ndpa</name>
              <description>Set '1' for MAC to enable sending NDPA or NDP Announcement MPDU</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_use_ndpa_parameter</name>
              <description>1: NDPA rate and BW use reg0x45f settings
0: NDPA rate and BW use NDP settings in Tx descriptor</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_en_ndpa_int</name>
              <description>1: enable ndpa interrupt; 0: disable ndpa interrupt</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_txbf1_80M</name>
              <description>TxBF status of beamformee1 @BW=80M.</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_txbf1_40M</name>
              <description>TxBF status of beamformee1 @BW=40M</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_txbf1_20M</name>
              <description>TxBF status of beamformee1 @BW=20M</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_txbf1_aid</name>
              <description>P_AID[8:0] of the associated beamformee1</description>
              <bitRange>[24:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_NDP_BFEN_DIS</name>
              <description>1: disable beamforming with NDP</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BCN_NOBLOCK_NDP</name>
              <description>beacon packet will not block NDP packet</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_txbf0_80M</name>
              <description>TxBF status of beamformee0 @BW=80M</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_txbf0_40M</name>
              <description>TxBF status of beamformee0 @BW=40M</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_txbf0_20M</name>
              <description>TxBF status of beamformee0 @BW=20M</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_txbf0_aid</name>
              <description>P_AID[8:0] of the associated beamformee0</description>
              <bitRange>[8:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DARFRC0_L</name>
          <addressOffset>0x00000430</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x04030201</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_DATA_FALLBACK_RC4</name>
              <description>Data Auto Rate Fallback Retry Count
After the number of retry, HW will fall back the rate to the next enabled MAC in ARFR.</description>
              <bitRange>[28:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATA_FALLBACK_RC3</name>
              <description>Data Auto Rate Fallback Retry Count
After the number of retry, HW will fall back the rate to the next enabled MAC in ARFR.</description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATA_FALLBACK_RC2</name>
              <description>Data Auto Rate Fallback Retry Count
After the number of retry, HW will fall back the rate to the next enabled MAC in ARFR.</description>
              <bitRange>[12:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATA_FALLBACK_RC1</name>
              <description>Data Auto Rate Fallback Retry Count
After the number of retry, HW will fall back the rate to the next enabled MAC in ARFR.</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DARFRC0_H</name>
          <addressOffset>0x00000434</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x08070605</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_DATA_FALLBACK_RC8</name>
              <description>Data Auto Rate Fallback Retry Count
After the number of retry, HW will fall back the rate to the next enabled MAC in ARFR.</description>
              <bitRange>[28:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATA_FALLBACK_RC7</name>
              <description>Data Auto Rate Fallback Retry Count
After the number of retry, HW will fall back the rate to the next enabled MAC in ARFR.</description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATA_FALLBACK_RC6</name>
              <description>Data Auto Rate Fallback Retry Count
After the number of retry, HW will fall back the rate to the next enabled MAC in ARFR.</description>
              <bitRange>[12:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATA_FALLBACK_RC5</name>
              <description>Data Auto Rate Fallback Retry Count
After the number of retry, HW will fall back the rate to the next enabled MAC in ARFR.</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RARFRC_L</name>
          <addressOffset>0x00000438</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x04030201</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_CTRL_FALLBACK_RC4</name>
              <description>RTS Auto Rate Fallback Retry Count
After the number of retry, HW will fall back the rate to the next enabled MAC in ARFR.</description>
              <bitRange>[28:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTRL_FALLBACK_RC3</name>
              <description>RTS Auto Rate Fallback Retry Count
After the number of retry, HW will fall back the rate to the next enabled MAC in ARFR.</description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTRL_FALLBACK_RC2</name>
              <description>RTS Auto Rate Fallback Retry Count
After the number of retry, HW will fall back the rate to the next enabled MAC in ARFR.</description>
              <bitRange>[12:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTRL_FALLBACK_RC1</name>
              <description>RTS Auto Rate Fallback Retry Count
After the number of retry, HW will fall back the rate to the next enabled MAC in ARFR.</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RARFRC_H</name>
          <addressOffset>0x0000043C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x08070605</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_CTRL_FALLBACK_RC8</name>
              <description>RTS Auto Rate Fallback Retry Count
After the number of retry, HW will fall back the rate to the next enabled MAC in ARFR.</description>
              <bitRange>[28:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTRL_FALLBACK_RC7</name>
              <description>RTS Auto Rate Fallback Retry Count
After the number of retry, HW will fall back the rate to the next enabled MAC in ARFR.</description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTRL_FALLBACK_RC6</name>
              <description>RTS Auto Rate Fallback Retry Count
After the number of retry, HW will fall back the rate to the next enabled MAC in ARFR.</description>
              <bitRange>[12:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTRL_FALLBACK_RC5</name>
              <description>RTS Auto Rate Fallback Retry Count
After the number of retry, HW will fall back the rate to the next enabled MAC in ARFR.</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RRSR</name>
          <addressOffset>0x00000440</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00600011</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description></description>
              <bitRange>[31:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RRSR_RSC</name>
              <description>Response frame sub-channel configuration.
Response frames (CTS, ACK, BA) are transmitted in the following condition.
00: Primary 20Mhz BW(0x483[3:0] = 0x8AC[5:2]).
01: Follow Rx packet BW mode.
10: Duplicate mode.</description>
              <bitRange>[24:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_RATE_CTRL_TABLE</name>
              <description>Data Rate Control Table Register 
BitMap to indicate the response/protection/expected_response rate to use in this BSS. All management and control response frames should obey the rates set in the bitmap. Each bit is mapped as the following: 

Bit[0:3] = {1M, 2M, 5.5M, 11M }
Bit[4:11] = {6M, 9M, 12M, 18M, 24M, 36M, 48M, 54M}
Bit[12:19] = HT MCS0~MCS7

Response rate must be less than or equal to the rate of the initiating frame. If none of the bits are set, no response is generated by Rtl8712.
If both the legacy rates and HT rates are defined as Basic Rates, fill in only the legacy portion of the bitmap. If only HT rates are defined as Basic Rates, fill in both the legacy and HT portion of the bitmap.</description>
              <bitRange>[19:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BCN_AMPDU_CTCL</name>
          <addressOffset>0x00000454</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xF664F605</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BCNQ1_HEAD</name>
              <description>TXDMA will pull BCNQ1 Pkt in this address. Port1 &amp; VAP 1/3/5/7 of port0</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_AMPDU_MAX_TIME</name>
              <description>AMPDU duration limit in the unit of 32us.</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BCNQ2_HEAD</name>
              <description>TXDMA will pull BCNQ2 Pkt in this address. Port2, NAN</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CHECK_CCK_EN</name>
              <description>If this bit is set, HW check Tx pkt's data rate. When data rate is CCK rate, modify the rate to NON_CCK_RATE.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_BCN_PKT_REL</name>
              <description>If this bit is set, the BCN pkt will be set to non-valid after BCN TX.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BCN_PORT_SEL</name>
              <description>This bit use to select BCN on port 1 or port 0. This just useful in USB/SDIO interface.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MOREDATA_BYPASS</name>
              <description>If this bit is set, the moredata bit will controlled by DES, otherwise controlled by PTCL according TXPKTBUF status.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_CLR_CMD_REL_BCN_PKT</name>
              <description>If this bit is set, the BCN pkt will be set to non-valid when scheduler clear TX BCN CMD even non-TX.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_SET_MOREDATA</name>
              <description>1: Enable HW set the more data bit of the PKT that MACID release function tx.
0: Disable HW set the more data bit of the PKT that MACID release function tx.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_CLEAR_MACID_RELEASE</name>
              <description>1: HW No clear MACID Release bit after release the pkt.
0: HW will clear MACID Release bit after release the pkt.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_MACID_RELEASE</name>
              <description>1: Enable MACID Release function. (same as MACID DROP)
0: Disable MACID Release function.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AMPDU_MAX_LENGTH</name>
          <addressOffset>0x00000458</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_AMPDU_MAX_LENGTH</name>
              <description>AMPDU length limit</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_NDPA_CTRL_LBK_ACQ_STOP</name>
          <addressOffset>0x0000045C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0008F600</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_r_ndpa_bw</name>
              <description>NDPA bandwidth setting
3: 160M
2: 80M
1: 40M
0: 20M</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_SIGTA_BW</name>
              <description>Enable signaling TA in duplicate BW, valid if EN_SIGTA = 1 in TX DESC</description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_SIGTA_BAR</name>
              <description>Enable BAR signaling TA in duplicate BW</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_EOF_EN</name>
              <description>when set to 1, enable eof packet qos packet,but also need set agg_en to 0 in tx_desc</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_en_gnt_bt_awake</name>
              <description>Enable pollute bit function.(C card ECO item, modify hardware circuit and add two options)
0: Disable
1: Enable When (GNT_BT option/LTE_RX option/(GNT_WL==0)) == 1, retry count can't increase if Tx fail.  One or more packets will record in polluted bit field of txreport when txreport generates in Tx ok or tx drop.</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_RELEASE_RETRY</name>
              <description>when release one packet for a macid, retry should happen on the same ACQ. Set 1 to remove this requirement</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_OQT_BLOCK</name>
              <description>If this bit is set, the OQT will not block by all AC queues occupied by other MACID.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_Search_Queue_en</name>
              <description>Search queue request enable in ptcl idle:0 disable; 1 enable</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_LBK_BUF_HEAD</name>
              <description>In delay MAC LBK mode, this register indicate the LBK BUF head page. When this buffer size is not enough for LBK packet length, LBK test may fail.

In ARP/NS mode, this register indicate the ARP/NS response packet head page.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_AC7Q_STOP</name>
              <description>When this bit is raised, AC7 queue is stop. Report by MAC.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_AC6Q_STOP</name>
              <description>When this bit is raised, AC6 queue is stop. Report by MAC.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_AC5Q_STOP</name>
              <description>When this bit is raised, AC5 queue is stop. Report by MAC.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_AC4Q_STOP</name>
              <description>When this bit is raised, AC4 queue is stop. Report by MAC.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_AC3Q_STOP</name>
              <description>When this bit is raised, AC3 queue is stop. Report by MAC.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_AC2Q_STOP</name>
              <description>When this bit is raised, AC2 queue is stop. Report by MAC.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_AC1Q_STOP</name>
              <description>When this bit is raised, AC1 queue is stop. Report by MAC.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_AC0Q_STOP</name>
              <description>When this bit is raised, AC0 queue is stop. Report by MAC.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RD_RESP_PKT_TH</name>
          <addressOffset>0x00000460</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x03000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description></description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RD_RESP_PKT_TH</name>
              <description>When RD_CTRL responder enables, and the granted AC queue packet number is beyond this threshold, then responder will carry More PPDU =1 and piggyback data frames back.</description>
              <bitRange>[29:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dummy</name>
              <description></description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CMDQ_INFO</name>
          <addressOffset>0x00000464</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00FF00FF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_PKT_Num_CMDQ_V2</name>
              <description>The total CMD Queue pkt number in TxPktbuffer</description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_Tail_PKT_CMDQ</name>
              <description>The head page of the last packet of Queue 4.</description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_PKT_Num_CMDQ</name>
              <description>The total Queue 4 pkt number in TxPktbuffer</description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_Head_PKT_CMDQ</name>
              <description>The head page of the first packet of Queue 4.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_Q4_INFO</name>
          <addressOffset>0x00000468</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x007F80FF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_QueueMacID_Q4_V1</name>
              <description>MacID of head pkt</description>
              <bitRange>[31:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_QueueAC_Q4_V1</name>
              <description>AC type of Queue 4.</description>
              <bitRange>[24:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_Tail_PKT_Q4_V1</name>
              <description>The head page of the last packet of Queue 4.</description>
              <bitRange>[22:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_PKT_Num_Q4_V1</name>
              <description>The total Queue 4 pkt number in TxPktbuffer</description>
              <bitRange>[14:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_Head_PKT_Q4</name>
              <description>The head page of the first packet of Queue 4.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_Q5_INFO</name>
          <addressOffset>0x0000046C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x007F80FF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_QueueMacID_Q5_V1</name>
              <description>MacID of head pkt</description>
              <bitRange>[31:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_QueueAC_Q5_V1</name>
              <description>AC type of Queue 5.</description>
              <bitRange>[24:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_Tail_PKT_Q5_V1</name>
              <description>The head page of the last packet of Queue 5.</description>
              <bitRange>[22:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_PKT_Num_Q5_V1</name>
              <description>The total Queue 5 pkt number in TxPktbuffer</description>
              <bitRange>[14:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_Head_PKT_Q5</name>
              <description>The head page of the first packet of Queue5.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_Q6_INFO</name>
          <addressOffset>0x00000470</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x007F80FF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_QueueMacID_Q6_V1</name>
              <description>MacID of head pkt</description>
              <bitRange>[31:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_QueueAC_Q6_V1</name>
              <description>AC type of Queue 6.</description>
              <bitRange>[24:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_Tail_PKT_Q6_V1</name>
              <description>The head page of the last packet of Queue 6.</description>
              <bitRange>[22:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_PKT_Num_Q6_V1</name>
              <description>The total Queue 6 pkt number in TxPktbuffer</description>
              <bitRange>[14:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_Head_PKT_Q6</name>
              <description>The head page of the first packet of Queue 6.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_Q7_INFO</name>
          <addressOffset>0x00000474</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x007F80FF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_QueueMacID_Q7_V1</name>
              <description>MacID of head pkt</description>
              <bitRange>[31:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_QueueAC_Q7_V1</name>
              <description>AC type of Queue 7.</description>
              <bitRange>[24:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_Tail_PKT_Q7_V1</name>
              <description>The head page of the last packet of Queue 7.</description>
              <bitRange>[22:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_PKT_Num_Q7_V1</name>
              <description>The total Queue 7 pkt number in TxPktbuffer</description>
              <bitRange>[14:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_Head_PKT_Q7</name>
              <description>The head page of the first packet of Queue 7.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_GCLK_CFG</name>
          <addressOffset>0x00000478</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000003</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_CLR_TXRPT_RW_PTR</name>
              <description>Write 1 to clear BIT_AMPDU_TXRPT_W_PTR &amp; BIT_AMPDU_TXRPT_R_PTR (0x47C / 0x47D)</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_QUEUE_RPT_B8</name>
              <description>[8] of BIT_EN_QUEUE_RPT, 
BIT8: EVENT Queue</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_PTCL_GCLK</name>
              <description>1: enable clock gating</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TXRPT_CTRL</name>
          <addressOffset>0x0000047C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x10010000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_AMPDU_TXRPT_TIME_THRS</name>
              <description>Time threshold of ampdu txrpt</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_AMPDU_TXRPT_LEN_THRS</name>
              <description>Length threshold of ampdu txrpt</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_AMPDU_TXRPT_R_PTR</name>
              <description>Read pointer of ampdu txrpt</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_AMPDU_TXRPT_W_PTR</name>
              <description>Write pointer of ampdu txrpt</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CFEND_RATE_SC_CTRL</name>
          <addressOffset>0x00000480</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00400100</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TXSC_40M</name>
              <description>Value of Data frame Tx sub-carrier mode 40MHz</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXSC_20M</name>
              <description>Value of Data frame Tx sub-carrier mode 20MHz</description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_STBC_CFEND_RATE</name>
              <description>The initial rate for STBC CFEND frame transmitted as EDCA originator.
The response control frame shall be selected by the definition of 802.11n. MCS0</description>
              <bitRange>[23:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_Basic_CFEND_RATE</name>
              <description>The initial rate for basic CFEND frame transmitted as EDCA originator. The response control frame shall be selected by the definition of 802.11n. OFDM6M</description>
              <bitRange>[14:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LEAG_RTS_BW_DUP</name>
              <description>If this bit is set, leag rate RTS use Duplicate in 40M BW / 80M BW.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MACID_SLEEP3</name>
          <addressOffset>0x00000484</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MACID127_96_PKTSLEEP</name>
              <description>Macid 127~Macid 96 Packet Sleep (per bit controlled)</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MACID_SLEEP1</name>
          <addressOffset>0x00000488</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MACID63_32_PKTSLEEP</name>
              <description>Macid 63~Macid 32 Packet Sleep (per bit controlled)</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TXRPT_START_OFFSET</name>
          <addressOffset>0x000004AC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000005</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_rptfifo_1k</name>
              <description>select the size of rptfifo</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MACID_CTRL_OFFSET</name>
              <description>offset of macid control: ctrl_info in the start of txrptbuf</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_AMPDU_TXRPT_OFFSET</name>
              <description>offset of AMPDU txrpt</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PTA_WL_PRI_MASK</name>
          <addressOffset>0x000004B4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_pta_wl_pri_mask_CPU_MGQ</name>
              <description>PTCL send wl_pri to PTA when pktbuf has CPU_MGQ packet</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_pta_wl_pri_mask_BCNQ</name>
              <description>PTCL send wl_pri to PTA when pktbuf has BCNQ packet</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_pta_wl_pri_mask_HIQ</name>
              <description>PTCL send wl_pri to PTA when pktbuf has HIQ packet</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_pta_wl_pri_mask_MGQ</name>
              <description>PTCL send wl_pri to PTA when pktbuf has MGQ packet</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_pta_wl_pri_mask_BK</name>
              <description>PTCL send wl_pri to PTA when pktbuf has BKQ packet</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_pta_wl_pri_mask_BE</name>
              <description>PTCL send wl_pri to PTA when pktbuf has BEQ packet</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_pta_wl_pri_mask_VI</name>
              <description>PTCL send wl_pri to PTA when pktbuf has VIQ packet</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_pta_wl_pri_mask_VO</name>
              <description>PTCL send wl_pri to PTA when pktbuf has VOQ packet</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_EVTQ_RPT</name>
          <addressOffset>0x000004B8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_evtq_tx_rpt</name>
              <description>*000: nothing
*100: pktok
*010: pktfail / timeout
*001: evtq_tx_area_75</description>
              <bitRange>[29:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_pta_wl_pri_mask_EVT</name>
              <description>PTCL send wl_pri to PTA when pktbuf has EVTQ packet</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SW_AMPDU_BURST_MODE_CTRL</name>
          <addressOffset>0x000004BC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xF60400C0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_EVTQ_HEAD</name>
              <description>TXDMA will pull eventq Pkt in this address. NAN</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DMA_THIS_QUEUE</name>
              <description>scheduler enable</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TOTAL_LEN_THRS</name>
              <description>aggregation  length over threshold then fetch pad packet in early mode</description>
              <bitRange>[19:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_wep_pretx_en</name>
              <description>Enable pretx for WEP/TKIP, to allow a slower security clock</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_pre_tx_cmd</name>
              <description>enable pre tx cmd to use aggr more packet</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_Num_scl_en</name>
              <description>SW MPDU Burst mode select
00: each length field for 1 MPDU
01: each length field is the summation of 2 MPDUs
10: each length field is the summation of 3 MPDUs
11: each length field is the summation of 4 MPDUs

Note: the total MPDU number is no more than 15.</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_bk_en</name>
              <description>AMPDU burst mode enable for AC_BK queue</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_be_en</name>
              <description>AMPDU burst mode enable for AC_BE queue</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_vi_en</name>
              <description>AMPDU burst mode enable for AC_VI queue</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_vo_en</name>
              <description>AMPDU burst mode enable for AC_VO queue</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PKT_LIFE_TIME</name>
          <addressOffset>0x000004C0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x10001000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_PKT_LIFTIME_BEBK</name>
              <description>BE/BK packet lifetime unit: 256us</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PKT_LIFTIME_VOVI</name>
              <description>VO/VI packet lifetime unit: 256us</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PTA_STBC_CTRL</name>
          <addressOffset>0x000004C4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00040340</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_EN_SINGLE_APMDU</name>
              <description>If this bit is set, Enable single sub-frame APMDU.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FORCE_RND_PRI</name>
              <description>queue select priority control
1:old round robin method
0:depend on last selected queue</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_pta_edcca_en</name>
              <description>0 : wl_tx signal to PTA does not consider EDCCA
1 : wl_tx signal to PTA consider EDCCA</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_pta_wl_tx_en</name>
              <description>enable WL PTA (should be set in init MAC)</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_use_data_bw</name>
              <description>1 : Use des2_data_bw for this packet
0 : when des1_cca_rts = 2'b10, update_bw depend on ch_bw_status</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TRI_PKT_STATUS</name>
              <description></description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TRI_PKT_PKTIN</name>
              <description>If trigger frame is transmitted into txpktbuf, HW generates interrupt
1: Enable
0: Disable</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ACQ_MODE_SEL</name>
              <description>1: Enable 88C 4AC Mode
0: Enable 8723 ACQ0~7 Mode</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_Cdend_txtime_H</name>
              <description>Cfend packet txtime bit[8:4]</description>
              <bitRange>[12:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_Cdend_txtime_L</name>
              <description>Cfend packet txtime bit[3:0]</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_NESS</name>
              <description>NESS</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_STBC_CFEND</name>
              <description>CFEND STBC</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PROT_MODE_CTRL</name>
          <addressOffset>0x000004C8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0C140101</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RTS_MAX_AGG_NUM</name>
              <description>In RTS frame exchange sequence, the maximum aggregation packet number limit is defined by this register, unit is byte</description>
              <bitRange>[29:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MAX_AGG_NUM</name>
              <description>the maximum aggregation packet number limit,unit is byte</description>
              <bitRange>[21:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RTS_TXTIME_TH</name>
              <description>RTS packet txtime threshold, unit is 64 us</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RTS_LEN_TH</name>
              <description>RTS packet Length threshold, unit is 128 bytes</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BAR_MODE_CTRL</name>
          <addressOffset>0x000004CC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0102FF7F</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RTY_PKT_LMT</name>
              <description>retry packet limit</description>
              <bitRange>[29:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BAR_RTY_LMT</name>
              <description>BAR retry limit</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BAR_PKTTIME_THRS</name>
              <description>BAR packet time thrs</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BAR_PKTNUM_TH_V1</name>
              <description>BAR Pktnum Thrs</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MACID_SLEEP2</name>
          <addressOffset>0x000004D0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MACID95_64PKTSLEEP</name>
              <description>Macid 95~Macid 64 Packet Sleep (per bit controlled)</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MACID_SLEEP</name>
          <addressOffset>0x000004D4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MACID31_0_PKTSLEEP</name>
              <description>Macid31 ~ Macid 0Packet Sleep. (per bit controlled)</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_HW_SEQ0_1</name>
          <addressOffset>0x000004D8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_HW_SSN_SEQ1</name>
              <description>When TXDESC HWSEQEN is set, MAC will overwrite SEQ control by this register. Before DRV hand over the SEQ control to HW, DRV may set the current SEQ to this register. When DRV will take back the SEQ control from HW, DRV may get the current sequence from this register.</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HW_SSN_SEQ0</name>
              <description>When TXDESC HWSEQEN is set, MAC will overwrite SEQ control by this register. Before DRV hand over the SEQ control to HW, DRV may set the current SEQ to this register. When DRV will take back the SEQ control from HW, DRV may get the current sequence from this register.</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_HW_SEQ2_3</name>
          <addressOffset>0x000004DC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_HW_SSN_SEQ3</name>
              <description>When TXDESC HWSEQEN is set, MAC will overwrite SEQ control by this register. Before DRV hand over the SEQ control to HW, DRV may set the current SEQ to this register. When DRV will take back the SEQ control from HW, DRV may get the current sequence from this register.</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HW_SSN_SEQ2</name>
              <description>When TXDESC HWSEQEN is set, MAC will overwrite SEQ control by this register. Before DRV hand over the SEQ control to HW, DRV may set the current SEQ to this register. When DRV will take back the SEQ control from HW, DRV may get the current sequence from this register.</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PTCLERR_NULLPKT_STATUS</name>
          <addressOffset>0x000004E0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_PTCL_TOTAL_PG0_7</name>
              <description>Total Page in PTCL</description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_PTCL_TOTAL_PG_8</name>
              <description>Total Page in PTCL</description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_PTCL_RATE_TABLE_INVALID</name>
              <description>during rate fallback process, if the all rate table is invalid, then assert ERROR FLAG</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RD_TXHANG_ERR</name>
              <description>Indicates the txhang error in RDG mode</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RD_STATUS_ERR</name>
              <description>Indicates the status error in RDG mode</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RD_CTN_ERR</name>
              <description>Indicates the cnt error in RDG mode</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RD_PKTIN_ERR</name>
              <description>Indicates the pktin error in RDG mode</description>
              <bitRange>[18:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RD_FTMT2R_ERR</name>
              <description>Indicates the timeout error in FTM t2r report</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_P1_TX_NULL_1</name>
              <description>Port 1 Tx Null 1 packet ok indicator</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_P1_TX_NULL_0</name>
              <description>Port 1 Tx Null 0 packet ok indicator</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_P0_TX_NULL_1</name>
              <description>Port 0 Tx Null 1 packet ok indicator</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_P0_TX_NULL_0</name>
              <description>Port 0 Tx Null 0 packet ok indicator</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PRETX_DROP_CTRL</name>
          <addressOffset>0x000004E4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00F88C00</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_COLLI_DETEC_TIME_MAX</name>
              <description>0~15: The field indicated collision detect time for broadcast or Beacon packet.(unit: us)</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PRETX_AGGR_EN</name>
              <description>1: enable PRETX function, default is enable
0: disable PRETX function</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PRETX_AGGR_TIME_MAX</name>
              <description>If BIT_PRETX_AGGR_EN = 1, the bits will count down after PHYTXON signal asserting every transmission in pre-tx mode.(Default: 23F, mac_clk = 20MHz, 3us;Smart,mac_clk = 40MHz, 3.5us)</description>
              <bitRange>[18:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HGQ_DEL_EN</name>
              <description>1: HGQ packet will be dropped when enable macid delete function; 0: HGQ packet cannot be dropped</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGQ_DEL_EN</name>
              <description>1: MGQ packet will be dropped when enable macid delete function; 0: MGQ packet cannot be dropped</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BT_POLLUTE_PKT_CNT</name>
          <addressOffset>0x000004E8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_bt_rxpollute_pkt_cnt</name>
              <description>count the tx fail pkt caused by bt RX pollute, write 0x4E8[31] will clear the counter</description>
              <bitRange>[31:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_bt_txpollute_pkt_cnt</name>
              <description>count the tx fail pkt caused by bt TX pollute, write 0x4E8[15] will clear the counter</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DROP_PKT_NUM</name>
          <addressOffset>0x000004EC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_LIFE_DROP_NUM</name>
              <description>TIE 0 in 8723F</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DROP_PKT_NUM</name>
              <description>Statistic the number of dropped packets</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CPUMGQ_TIMER_CTRL</name>
          <addressOffset>0x000004F4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MGQ_TRI_HEAD</name>
              <description>The head page of the CPUMGQ pkt If the CPUMGQ is triggered by TX TIMER.</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CPUMGQ_TRI_LIFETIME_EN</name>
              <description>When this bit is set, enable the lifetime function.
This lifetime threshold only affect CPUMGQ trigger from Tx_Timer.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CPUMGQ_TRI_LIFETIME</name>
              <description>LIFETIME Threshold: Unit = 256us.
When CPU MgntQ is triggered, 
If BIT_CPUMGQ_TRI_LIFETIME_EN = 1,  count down. 
If BIT_CPUMGQ_TRI_LIFETIME_EN = 0, do nothing.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BCN_RPT_CFG</name>
          <addressOffset>0x000004FC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFF0000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_DUMMY_REG_1</name>
              <description>dummy reg</description>
              <bitRange>[31:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_BCN_TRXRPT</name>
              <description>If this bit is set, PTCL will write BCN TRXRPT when BCNOK/BCNERR INT. 
FW have clear this bit before enter LPS 32K mode.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DUMMY_REG_0</name>
              <description>dummy reg</description>
              <bitRange>[16:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AESIV_SETTING</name>
          <addressOffset>0x00001424</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000003</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_AESIV_OFFSET</name>
              <description>aesiv offset in txrpt buffer (Unit:128Bytes).</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BF0_TIME_SETTING</name>
          <addressOffset>0x00001428</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0FFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_bf0_timer_set</name>
              <description>write 1 to set beamforming 0 timer to BIT_bf0_lifetime</description>
              <bitRange>[31:31]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_bf0_timer_clr</name>
              <description>write 1 to clear beamforming 0 timer to 0</description>
              <bitRange>[30:30]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_EN_BF0_UPDATE</name>
              <description>1: when tx ndp ok/fail, enable to update beamforming 0 timer</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_BF0_TIMER</name>
              <description>beamforming 0 timer enable</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BF0_PRETIME_OVER</name>
              <description>beamforming 0 pre timeout time</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BF0_LIFETIME</name>
              <description>beamforming 0 life time</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BF1_TIME_SETTING</name>
          <addressOffset>0x0000142C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0FFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_bf1_timer_set</name>
              <description>write 1 to set beamforming 1 timer to BIT_bf1_lifetime</description>
              <bitRange>[31:31]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_bf1_timer_clr</name>
              <description>write 1 to clear beamforming 1 timer to 0</description>
              <bitRange>[30:30]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_EN_BF1_UPDATE</name>
              <description>1: when tx ndp ok/fail, enable to update beamforming 1 timer</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_BF1_TIMER</name>
              <description>beamforming 1 timer enable</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BF1_PRETIME_OVER</name>
              <description>beamforming 1 pre timeout time</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BF1_LIFETIME</name>
              <description>beamforming 1 life time</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BF_TIMEOUT_EN</name>
          <addressOffset>0x00001430</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000303</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_EN_VHT_LDPC</name>
              <description>1: enable ldpc in vht rate mode</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_HT_LDPC</name>
              <description>1: enable ldpc in ht rate  mode</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_bf1_timeout_en</name>
              <description>1: when beamforming 1 timer count to 0,then disable beamforming 0</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_bf0_timeout_en</name>
              <description>1: when beamforming 0 timer count to 0,then disable beamforming 0</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MACID_RELEASE0</name>
          <addressOffset>0x00001434</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MACID31_0_RELEASE</name>
              <description>Macid31~Macid0 Release(per bit controlled)</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MACID_RELEASE1</name>
          <addressOffset>0x00001438</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MACID63_32_RELEASE</name>
              <description>Macid63~Macid32 Release(per bit controlled)</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MACID_RELEASE2</name>
          <addressOffset>0x0000143C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MACID95_64_RELEASE</name>
              <description>Macid95~Macid64 Release (per bit controlled)</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MACID_RELEASE3</name>
          <addressOffset>0x00001440</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MACID127_96_RELEASE</name>
              <description>Macid127~Macid96 Release (per bit controlled)</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MACID_RELEASE_SETTING</name>
          <addressOffset>0x00001444</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_macid_value</name>
              <description>write this field to set REG_macid_release[BIT_macid_offset] = BIT_macid_value</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_macid_offset</name>
              <description>write this field to set REG_macid_release[BIT_macid_offset] = BIT_macid_value</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FAST_EDCA_VOVI_SETTING</name>
          <addressOffset>0x00001448</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x08040804</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_VI_FAST_EDCA_TO</name>
              <description>vi queue fast edca timeout value</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_VI_THRESHOLD_SEL</name>
              <description>1: use all vi queue pktnum compare to pktnum_threshold;
0: use single macid pktnum compare to pktnum_threshold;</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_VI_FAST_EDCA_PKT_TH</name>
              <description>vi queue fast edca pkt number threshold</description>
              <bitRange>[22:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_VO_FAST_EDCA_TO</name>
              <description>vo queue fast edca timeout value</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_VO_THRESHOLD_SEL</name>
              <description>1: use all vo queue pktnum compare to pktnum_threshold;
0: use single macid pktnum compare to pktnum_threshold;</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_VO_FAST_EDCA_PKT_TH</name>
              <description>vo queue fast edca pkt number threshold</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FAST_EDCA_BEBK_SETTING</name>
          <addressOffset>0x0000144C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x08040804</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BK_FAST_EDCA_TO</name>
              <description>bk queue fast edca timeout value</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BK_THRESHOLD_SEL</name>
              <description>1: use all bk queue pktnum compare to pktnum_threshold;
0: use single macid pktnum compare to pktnum_threshold;</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BK_FAST_EDCA_PKT_TH</name>
              <description>bk queue fast edca pkt number threshold</description>
              <bitRange>[22:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BE_FAST_EDCA_TO</name>
              <description>be queue fast edca timeout value</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BE_THRESHOLD_SEL</name>
              <description>1: use all be queue pktnum compare to pktnum_threshold;
0: use single macid pktnum compare to pktnum_threshold;</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BE_FAST_EDCA_PKT_TH</name>
              <description>be queue fast edca pkt number threshold</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MACID_DROP0</name>
          <addressOffset>0x00001450</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MACID31_0_DROP</name>
              <description>Macid31~Macid0 Drop (per bit controlled)</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MACID_DROP1</name>
          <addressOffset>0x00001454</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MACID63_32_DROP</name>
              <description>Macid63~Macid32 Drop (per bit controlled)</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MACID_DROP2</name>
          <addressOffset>0x00001458</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MACID95_64_DROP</name>
              <description>Macid95~Macid64 Drop (per bit controlled)</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MACID_DROP3</name>
          <addressOffset>0x0000145C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MACID127_96_DROP</name>
              <description>Macid127~Macid96 Drop (per bit controlled)</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_r_macid_release_success_0</name>
          <addressOffset>0x00001460</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_r_macid_release_success_0</name>
              <description>macid0~31</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_r_macid_release_success_1</name>
          <addressOffset>0x00001464</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_r_macid_release_success_1</name>
              <description>macid32~63</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_r_macid_release_success_2</name>
          <addressOffset>0x00001468</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_r_macid_release_success_2</name>
              <description>macid64~95</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_r_macid_release_success_3</name>
          <addressOffset>0x0000146C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_r_macid_release_success_3</name>
              <description>macid96~127</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MGQ_FIFO_CTRL</name>
          <addressOffset>0x00001470</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x10000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MGQ_FIFO_EN</name>
              <description>1: Enable MGQ FIFO Function.
0: Disable MGQ FIFO Function.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGQ_FIFO_PG_SIZE</name>
              <description>The page size of MGQ FIFO PKTs.</description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGQ_FIFO_START_PG</name>
              <description>The start page of MGQ FIFO.</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGQ_FIFO_SIZE</name>
              <description>2'b00 : FIFO size 4 pkts.
2'b01 : FIFO size 8 pkts.
2'b1x : FIFO size 16 pkts.</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGQ_FIFO_PAUSE</name>
              <description>1: use all vo queue pktnum compare to pktnum_threshold;
0: use signle macid pktnum compare to pktnum_threshold;</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGQ_FIFO_RPTR</name>
              <description>The read pointer of the MGQ FIFO.(clear when disable MGQ FIFO function)</description>
              <bitRange>[12:8]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_MGQ_FIFO_OV</name>
              <description>1: MGQ FIFO overflow.
0: NO MGQ FIFO overflow.</description>
              <bitRange>[7:7]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_MGQ_FIFO_WPTR_ERR</name>
              <description>1: Error of MGQ FIFO write pointer setting.
0: No error of MGQ FIFO write pointer setting. (clear when disable MGQ FIFO function)</description>
              <bitRange>[6:6]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_CPUM_LIFETIME_EN</name>
              <description>1: Enable Lifetime function of the MGQ FIFO pkts.
0: Disable Lifetime function of the MGQ FIFO pkts.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGQ_FIFO_WPTR</name>
              <description>The write pointer of the MGQ FIFO</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MGQ_FIFO_RELEASE_INT</name>
          <addressOffset>0x00001474</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MGQ_FIFO_INT_FLAG</name>
              <description>The flag of the MGQ FIFO PKT release interrupt, write one clear.</description>
              <bitRange>[31:16]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_MGQ_FIFO_INT_MASK</name>
              <description>The mask of the MGQ FIFO PKT release interrupt.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MGQ_FIFO_LIFETIME_VALID</name>
          <addressOffset>0x00001478</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x10000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MGQ_FIFO_LIFETIME</name>
              <description>MGQ FIFO packet lifetime unit: 256us</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGQ_FIFO_VALID_CLR_1</name>
              <description>Clear the valid map of the MGQ FIFO PKT, high [15:8] bits</description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_MGQ_FIFO_VALID_CLR_0</name>
              <description>Clear the valid map of the MGQ FIFO PKT, low [7:0] bits</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_r_macid_release_success_clear_offset</name>
          <addressOffset>0x0000147C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_r_macid_release_success_clear_offset</name>
              <description>HW will set 0x2460~0x246C if one packet was released successfully for a given macid. SW use this register to reset the status.</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_RESP_RRSR</name>
          <addressOffset>0x00001480</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00050100</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description></description>
              <bitRange>[31:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RRSR_CCK</name>
              <description>Response rate BIT[3:0] = {(msb) CCK11, ..., CCK1}</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RRSR_RATE_EN</name>
              <description>Enabled response rate mode BIT[2:0] = {(msb) HE rate, VHT rate, HT rate, CCK_OFDM rate}</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_rate_sel</name>
              <description>New ARFR (REG 0x1484) rate group selection:
0: CCK1M - OFDM18M
1: OFDM24MRSVDOFDM54 , other no use
2: HT MCS0~MCS7
3: HT others, not use
4: VHT1SS/ MCS0~MCS7
5: VHT1SS/ MCS8~MCS9,other no use
6: HE 1SS / MCS0~MCS7
7: HE 1SS / MCS8~MCS9 ,other no use</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_ARFR_WEIGHTING_TABLE</name>
          <addressOffset>0x00001484</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x32112111</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_rate7_weighting</name>
              <description>Weighting value of the corresponding data rate with respect to rate_sel in reg 0x1480[2:0]
0: disable fallback to the rate
1~15: valid weighting value
default is OFDM18M</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_rate6_weighting</name>
              <description>Weighting value of the corresponding data rate with respect to rate_sel in reg 0x1480[2:0]
0: disable fallback to the rate
1~15: valid weighting value
default is OFDM12M</description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_rate5_weighting</name>
              <description>Weighting value of the corresponding data rate with respect to rate_sel in reg 0x1480[2:0]
0: disable fallback to the rate
1~15: valid weighting value
default is OFDM9M</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_rate4_weighting</name>
              <description>Weighting value of the corresponding data rate with respect to rate_sel in reg 0x1480[2:0]
0: disable fallback to the rate
1~15: valid weighting value
default is OFDM6M</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_rate3_weighting</name>
              <description>Weighting value of the corresponding data rate with respect to rate_sel in reg 0x1480[2:0]
0: disable fallback to the rate
1~15: valid weighting value
default is CCK11M</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_rate2_weighting</name>
              <description>Weighting value of the corresponding data rate with respect to rate_sel in reg 0x1480[2:0]
0: disable fallback to the rate
1~15: valid weighting value
default is CCK5_5M</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_rate1_weighting</name>
              <description>Weighting value of the corresponding data rate with respect to rate_sel in reg 0x1480[2:0]
0: disable fallback to the rate
1~15: valid weighting value
default is CCK2M</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_rate0_weighting</name>
              <description>Weighting value of the corresponding data rate with respect to rate_sel in reg 0x1480[2:0]
0: disable fallback to the rate
1~15: valid weighting value
default is CCK1M</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DARFRC1_L</name>
          <addressOffset>0x00001488</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x04030201</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_DATA_FALLBACK1_RC4</name>
              <description>Data Auto Rate Fallback Retry Count
After the number of retry, HW will fall back the rate to the next enabled MAC in ARFR.</description>
              <bitRange>[28:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATA_FALLBACK1_RC3</name>
              <description>Data Auto Rate Fallback Retry Count
After the number of retry, HW will fall back the rate to the next enabled MAC in ARFR.</description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATA_FALLBACK1_RC2</name>
              <description>Data Auto Rate Fallback Retry Count
After the number of retry, HW will fall back the rate to the next enabled MAC in ARFR.</description>
              <bitRange>[12:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATA_FALLBACK1_RC1</name>
              <description>Data Auto Rate Fallback Retry Count
After the number of retry, HW will fall back the rate to the next enabled MAC in ARFR.</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DARFRC1_H</name>
          <addressOffset>0x0000148C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x08070605</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_DATA_FALLBACK1_RC8</name>
              <description>Data Auto Rate Fallback Retry Count
After the number of retry, HW will fall back the rate to the next enabled MAC in ARFR.</description>
              <bitRange>[28:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATA_FALLBACK1_RC7</name>
              <description>Data Auto Rate Fallback Retry Count
After the number of retry, HW will fall back the rate to the next enabled MAC in ARFR.</description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATA_FALLBACK1_RC6</name>
              <description>Data Auto Rate Fallback Retry Count
After the number of retry, HW will fall back the rate to the next enabled MAC in ARFR.</description>
              <bitRange>[12:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATA_FALLBACK1_RC5</name>
              <description>Data Auto Rate Fallback Retry Count
After the number of retry, HW will fall back the rate to the next enabled MAC in ARFR.</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TB_CTRL</name>
          <addressOffset>0x00001490</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x01F00000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_EN_TB_TXRPT</name>
              <description>When this bit is set, enable generate report for TB PPDU</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_CHK_TB_AC</name>
              <description>When this bit is set, don't care the AC of DATA</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_TB_PRETX</name>
              <description>When this bit is set, enable pretx function of TB PPDU, assert txen before gen_cmd_rdy.</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_UPD_TB_RETRY</name>
              <description>enable write retrybit in MH and add retrycnt when TB PPDU TX fail.</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_TB_SIFS_BK</name>
              <description>If sifs_timeout_tb_ref (from trxptcl) asserted, break the aggr process of TB PPDU</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HW_SSN_EN_TB</name>
              <description>HW update the SSN [9] for TB PPDU</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TB_BYPASS_TXPOWER</name>
              <description>1: NOT abort TB PPDU even the txpwr_abort_tx_idx(from txpwr_ctrl) is illegal
0: enable tx power abort TB</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TB_DEL_EN</name>
              <description>Enable TB PPDU packet delete: 1) pkt_ageout; 2) macid_delete</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TB_EN_LIFETIME</name>
              <description>When this bit is set, enable the lifetime function of TB PPDU.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TB_PKT_LIFE_TIME</name>
              <description>LIFETIME Threshold: Unit = 256us.
When TB PPDU is triggered, 
If BIT_TB_EN_LIFETIME = 1,  count down. 
If BIT_TB_EN_LIFETIME = 0, do nothing.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_OTHER_CFG</name>
          <addressOffset>0x00001494</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x01200002</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_gi_ltf_fb_sel</name>
              <description>0: no GI_LTF fallback
1: GI_LTF fallback option 1 enabled (downgrade GI_LTF first from init. rate)
Others RSVD</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ndpa_rate</name>
              <description>NDPA tx rate setting, from CCK 1M to VHT NSS2 MCS9</description>
              <bitRange>[30:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_A_CTRL_BREAK</name>
              <description>1: break the AGGR process when the a_ctrl field in TXDESC is different</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RTS_TXOP_THRS</name>
              <description>unit:32us, valid when BIT_EN_TXOP_BASE_RTS = 1</description>
              <bitRange>[12:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_TXOP_BASE_RTS</name>
              <description>enable TXOP duration-based RTS/CTS</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_BT_POLLUTE_RX</name>
              <description>enable write BT Polluted field during RX RESP</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_SR_CTS2S</name>
              <description>enable send cts2s frame during SR</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RRSR_RATE_CFG</name>
          <addressOffset>0x00001498</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000015</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RRSR_HE</name>
              <description>Response rate BIT[35:28]={(msb) HE MCS7, MCS6, ..., MCS0}</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RRSR_VHT</name>
              <description>Response rate BIT[27:20] = { (msb)  VHT MCS7, MCS6, ..., MCS0}</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RRSR_HT</name>
              <description>Response rate BIT[19:12]={(msb) HT MCS7, MCS6, ..., MCS0}</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RRSR_OFDM</name>
              <description>Response rate BIT[11:4] = { (msb) OFDM54, OFDM48, ...,OFDM6}</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_NDP_RATE</name>
          <addressOffset>0x0000149C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0F000204</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TXPKT_CNT_SEL</name>
              <description>Select the counter to show in 0X14A0 BIT_TXPKT_CNT_RPT.
0: r_TX_OK_RTY0
1: r_TX_OK_RTY1
2: r_TX_OK_RTY2
3: r_TX_OK_RTY3
4: r_TX_OK_RTY4
5: r_RTY_DROP
6: r_LT_DROP
7: r_BMC_TXOK
8: r_TOTAL_PKT_CNT 
9: r_RTS_DROP
10: r_RTS_OK</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_REF_MACID</name>
              <description>if BIT_REF_MACID = 0xF, count all eligible frames and ignore MACID;
else, only count the frames whose MACID = BIT_REF_MACID
BMC packet ignore MACID.</description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TX_CNT_CLR</name>
              <description>Write 1 to clear the counters.</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_USE_NDP_PARAMETER</name>
              <description>1: select NDP rate from CR 0X149C[8:0]</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_NDP_RATE</name>
              <description>NDPA tx rate setting, from CCK 1M to VHT NSS2 MCS9</description>
              <bitRange>[8:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TXPKT_CNT</name>
          <addressOffset>0x000014A0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TXPKT_CNT_RPT</name>
              <description>The results of TXPKT counter. Depends on BIT_TXPKT_CNT_SEL.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>page5</name>
      <groupName>WIFI</groupName>
      <baseAddress>0x40000000</baseAddress>
      <size>0x000015AC</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x000015AC</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>REG_EDCA_VO_PARAM</name>
          <addressOffset>0x00000500</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x002F3224</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TXOPLIMIT_VO</name>
              <description>TXOP Limit
An unsigned integer in units of 32 microseconds. Value of zero indicates that a single MSDU or MMPDU in addition to a protection frame exchange can be transmitted at any rate.
Default: BK = 0h; BE = 0h; VI = 5Eh; VO = 2Fh.</description>
              <bitRange>[26:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CW_VO</name>
              <description>ECWmin and ECWmax encode the values of Cwmin and Cwmax respectively in an exponent form. Ex: Cwmax = 2^(ECWmax)-1
Default: BK = Ah/5h; BE = Ah/5h; VI = 5h/4h; VO = 4h/3h.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_AIFS_VO</name>
              <description>Arbitrary Inter frame space
In unit of microsecond. AIFS indicates the time a non-AP QSTA should defer before either invoking a backoff or starting a transmission
Default: BK = 49h; BE = 25h; VI = 1Ch; VO = 1Ch.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_EDCA_VI_PARAM</name>
          <addressOffset>0x00000504</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x005E4326</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TXOPLIMIT_VI</name>
              <description>TXOP Limit
An unsigned integer in units of 32 microseconds. Value of zero indicates that a single MSDU or MMPDU in addition to a protection frame exchange can be transmitted at any rate.
Default: BK = 0h; BE = 0h; VI = 5Eh; VO = 2Fh.</description>
              <bitRange>[26:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CW_VI</name>
              <description>ECWmin and ECWmax encode the values of Cwmin and Cwmax respectively in an exponent form. Ex: Cwmax = 2^(ECWmax)-1
Default: BK = Ah/5h; BE = Ah/5h; VI = 5h/4h; VO = 4h/3h.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_AIFS_VI</name>
              <description>Arbitrary Inter frame space
In unit of microsecond. AIFS indicates the time a non-AP QSTA should defer before either invoking a backoff or starting a transmission
Default: BK = 49h; BE = 25h; VI = 1Ch; VO = 1Ch.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_EDCA_BE_PARAM</name>
          <addressOffset>0x00000508</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0000A42B</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TXOPLIMIT_BE</name>
              <description>TXOP Limit
An unsigned integer in units of 32 microseconds. Value of zero indicates that a single MSDU or MMPDU in addition to a protection frame exchange can be transmitted at any rate.
Default: BK = 0h; BE = 0h; VI = 5Eh; VO = 2Fh.</description>
              <bitRange>[26:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CW_BE</name>
              <description>ECWmin and ECWmax encode the values of Cwmin and Cwmax respectively in an exponent form. Ex: Cwmax = 2^(ECWmax)-1
Default: BK = Ah/5h; BE = Ah/5h; VI = 5h/4h; VO = 4h/3h.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_AIFS_BE</name>
              <description>Arbitrary Inter frame space
In unit of microsecond. AIFS indicates the time a non-AP QSTA should defer before either invoking a backoff or starting a transmission
Default: BK = 49h; BE = 25h; VI = 1Ch; VO = 1Ch.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_EDCA_BK_PARAM</name>
          <addressOffset>0x0000050C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0000A549</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TXOPLIMIT_BK</name>
              <description>TXOP Limit
An unsigned integer in units of 32 microseconds. Value of zero indicates that a single MSDU or MMPDU in addition to a protection frame exchange can be transmitted at any rate.
Default: BK = 0h; BE = 0h; VI = 5Eh; VO = 2Fh.</description>
              <bitRange>[26:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CW_BK</name>
              <description>ECWmin and ECWmax encode the values of Cwmin and Cwmax respectively in an exponent form. Ex: Cwmax = 2^(ECWmax)-1
Default: BK = Ah/5h; BE = Ah/5h; VI = 5h/4h; VO = 4h/3h.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_AIFS_BK</name>
              <description>Arbitrary Inter frame space
In unit of microsecond. AIFS indicates the time a non-AP QSTA should defer before either invoking a backoff or starting a transmission
Default: BK = 49h; BE = 25h; VI = 1Ch; VO = 1Ch.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BCN_CFG_PIFS</name>
          <addressOffset>0x00000510</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x281C4413</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RDG_PIFS</name>
              <description>PIFS time. It is only used in RDG mode and in units of us.</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PIFS</name>
              <description>PIFS time. It is only used in AP mode and in units of us.</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BCNCW_MAX</name>
              <description>Beacon Contention Window MAX
Defines the contention window value for back off before transmitting beacon frame. This field is set to 0 in AP mode to indicate no back off window. In ad hoc mode, its default value is 6. 26-1 = 63 time slots.</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BCNCW_MIN</name>
              <description>Beacon Contention Window
Defines the contention window value for back off before transmitting beacon frame. This field is set to 0 in AP mode to indicate no back off window. In ad hoc mode, its default value is 6. 26-1 = 63 time slots.</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BCNIFS</name>
              <description>Beacon Interframe Space
In units of microseconds, this register defines the medium idle time required before transmitting beacon (AP mode) or entering random back off window.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SIFS</name>
          <addressOffset>0x00000514</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0E0A0E0A</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_SIFS_OFDM_TRX</name>
              <description>This register sets the SIFS time required in NAV protection period after receiving any immediate response.
for example Ack-Data or RTS/CTS-Data. It is in unit of us.</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SIFS_CCK_TRX</name>
              <description>This register sets the SIFS time required in NAV protection period after receiving any immediate response.
for example Ack-Data or RTS/CTS-Data. It is in unit of us.</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SIFS_OFDM_CTX</name>
              <description>This register sets the SIFS time required for consecutive TX events for example CTS2S-Data, or broadcast bursting. It is in unit of us.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SIFS_CCK_CTX</name>
              <description>This register sets the SIFS time required for consecutive TX events for example CTS2S-Data, or broadcast bursting. It is in unit of us.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TSFT_SYN_OFFSET_SLOT</name>
          <addressOffset>0x00000518</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x09140640</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_SLOTTIME</name>
              <description>This register sets the slot time value mentioned in 802.11 specification. It is in units of us.
Default: 0x9</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_AGGR_BK_TIME</name>
              <description>Hw will break aggr. In sifs condition</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TSFTR_SYNC_OFFSET</name>
              <description>tsft sync. Offset (bcn0 sync to bcn1 offset or bcn1 sync to bcn0 offset). 
Unit : 32us, default is 50ms</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PS_NOA_ERLY_TIME</name>
          <addressOffset>0x0000051C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000500</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description></description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_NOA_OFF_ERLY_TIME</name>
              <description>NOA off early interval, Time unit is TU.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_NOA_ON_ERLY_TIME</name>
              <description>not valid. NOA on early interval, Time unit is TU.
PS: This function has some issue, so it's value must be 0</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TXPAUSE_TXPTCL_DISTXREQ_CTRL</name>
          <addressOffset>0x00000520</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00003F0F</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_DIS_BT_CCA</name>
              <description>Disable BT_CCA.  (NOT USED, SEE 0x1594)</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_TXREQ_CLR_CPUMGQ</name>
              <description>1: if this queue can't own channel ,txcmd will be cleared
0:Only TX_finish can clear txreq</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_TXREQ_CLR_HI</name>
              <description>0: if this queue can't own channel ,txcmd will be cleared
1:Only TX_finish can clear txreq</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_TXREQ_CLR_MGQ</name>
              <description>1: if this queue can't own channel ,txcmd will be cleared
0:Only TX_finish can clear txreq</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_TXREQ_CLR_BK</name>
              <description>0: if this queue can't own channel ,txcmd will be cleared
1:Only TX_finish can clear txreq</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_TXREQ_CLR_BE</name>
              <description>0: if this queue can't own channel ,txcmd will be cleared
1:Only TX_finish can clear txreq</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_TXREQ_CLR_VI</name>
              <description>0: if this queue can't own channel ,txcmd will be cleared
1:Only TX_finish can clear txreq</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_TXREQ_CLR_VO</name>
              <description>0: if this queue can't own channel ,txcmd will be cleared
1:Only TX_finish can clear txreq</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_STOP_CPUMGQ</name>
              <description>To control CPUMGQ queues contention circuit.
1: CPUMGQ queues all stop.
0: Enable CPUMGQ queues contention circuit</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MAC_STOPBCNQ</name>
              <description>Stop BCNQ Queue
Write a 1 to this bit via software to immediately stop the transmission of packet from this queue including retry attempts.</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MAC_STOPHIQ</name>
              <description>Stop High Queue
Write a 1 to this bit via software to immediately stop the transmission of packet from this queue including retry attempts.</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MAC_STOPMGQ</name>
              <description>Stop Management Queue
Write a 1 to this bit via software to immediately stop the transmission of packet from this queue including retry attempts.</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MAC_STOPBK</name>
              <description>Stop BK Queue
Write a 1 to this bit via software to immediately stop the transmission of packet from this queue including retry attempts.</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MAC_STOPBE</name>
              <description>Stop BE Queue
Write a 1 to this bit via software to immediately stop the transmission of packet from this queue including retry attempts.</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MAC_STOPVI</name>
              <description>Stop VI Queue
Write a 1 to this bit via software to immediately stop the transmission of packet from this queue including retry attempts.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MAC_STOPVO</name>
              <description>Stop VO Queue
Write a 1 to this bit via software to immediately stop the transmission of packet from this queue including retry attempts.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_EDCCA</name>
              <description>Disable EDCCA function.  (NOT USED, SEE 0x1594)
0: PHY_EDCCA can block TX (default)
1: PHY_EDCCA cannot block TX
OK -&gt; TX beacon; X -&gt; cannot TX beacon
0x528[7] 0x520[15] 0x520[14]      TX bcn                TX bcn
                                               (OFDMCCA=0,     (OFDMCCA=1, 
                                                 EDCCA=1)        EDCCA=1) 
0                 0                   0           X                 X
0                 0                   1           X                 X
0                 1                   0          OK                 X
0                 1                   1          OK                 OK
1                 0                   0           X                 X
1                 0                   1           X                 X
1                 1                   0          OK                 X
1                 1                   1          OK                 OK</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_CCA</name>
              <description>Disable CCA.  (NOT USED, SEE 0x1594)</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LSIG_TXOP_TXCMD_NAV</name>
              <description>Set LSIG_TXOP from TXCMD_NAV field</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SIFS_BK_EN</name>
              <description>SIFS Break Check Criteria enable for AMPDU aggregation</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXQ_NAV_MSK</name>
              <description>1: Queue BKF must wait TX Nav finished 
0: Queue not need wait</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_CW</name>
              <description>When this bit is set, disable CW.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_NAV_END_TXOP</name>
              <description>1: In txop mode, Nav protect all txop 
0: In txop mode, Nav protect to next pkt</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RDG_END_TXOP</name>
              <description>1: In tx RDG mode, Nav protect all txop 
0: In tx RDG mode, Nav protect to next pkt</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGTQ_TXOP_EN</name>
              <description>When this bit is set, MGTQ may sent packets by using ACQ TXOP.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGTQ_RTSMF_EN</name>
              <description>When this bit is set, MTGQ will be TX, not wait until RTS or MF transaction finished.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HIQ_RTSMF_EN</name>
              <description>When this bit is set, HIQ will be TX, not wait until RTS or MF transaction finished.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BCN_RTSMF_EN</name>
              <description>When this bit is set, BCNQ will be TX, not wait until RTS or MF transaction finished.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_NOA0_MBSSID_RD_CTRL</name>
          <addressOffset>0x00000524</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x01FF880F</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_P2P_NOA0_ALLSTASLEEP</name>
              <description>It indicates that the state from CTWindow End to BcnEarly
1: Sleep 
0: Wake</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P2P_NOA0_DISTX_EN</name>
              <description>1: Hw will disable TX in P2P_off period
0: Do Nothing</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P2P_NOA0_PWR_MGT_EN</name>
              <description>A main switch for P2P PowerSaving
1: Enable
0: Disable</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P2P_NOA0_EN</name>
              <description>The condition that noa_unit0, [1]-NOA1, [0]-NOA0
1: Enable
0: Disable</description>
              <bitRange>[28:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P2P_NOA0_UNIT_SEL</name>
              <description>The selector for the source of noa unit0.
0 for port 0, 1 for port 1,2 for port2</description>
              <bitRange>[26:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_TSFBIT32_RST_NOA0</name>
              <description>when enable, if tsft_bit32_int is asserted, reset power_cs of noa_unit0</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MBID_BCNQ7_EN</name>
              <description>When enable, auto MBSSID for virtual interface 7 is enable.</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MBID_BCNQ6_EN</name>
              <description>When enable, auto MBSSID for virtual interface 6 is enable.</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MBID_BCNQ5_EN</name>
              <description>When enable, auto MBSSID for virtual interface 5 is enable.</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MBID_BCNQ4_EN</name>
              <description>When enable, auto MBSSID for virtual interface 4 is enable.</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MBID_BCNQ3_EN</name>
              <description>When enable, auto MBSSID for virtual interface 3 is enable.</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MBID_BCNQ2_EN</name>
              <description>When enable, auto MBSSID for virtual interface 2 is enable.</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MBID_BCNQ1_EN</name>
              <description>When enable, auto MBSSID for virtual interface 1 is enable.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MBID_BCNQ0_EN</name>
              <description>When enable, auto MBSSID for root interface is enable.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_CLR_TXREQ_INCCA</name>
              <description>not valid.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_TX_OVER_BCNQ</name>
              <description>1: Tx Packet with ignoring Beacon Area time
0: Disable</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_BCNERR_INCCCA</name>
              <description>eneble force tx becon ignore CCA in disable contention area</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_BCNERR_INEDCCA</name>
              <description>eneble force tx becon ignore EDCCA in disable contention area</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EDCCA_MSK_CNTDOWN_EN</name>
              <description>1: disable EDCCA count down, 0: enable EDCCA count down
AC backoff 是否需要參考PHY_EDCCA
0: 不參考PHY_EDCCA
1: 參考PHY_EDCCA (default, PHY_EDCCA=1時停止backoff)</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_TXOP_CFE</name>
              <description>Disable TXOP_CFE function</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_LSIG_CFE</name>
              <description>Disable LSIG_TXOP CF-END function</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_STBC_CFE</name>
              <description>Disable STBC CF-END function</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BKQ_RD_INIT_EN</name>
              <description>Enable BKQ RD initiator function</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BEQ_RD_INIT_EN</name>
              <description>Enable BEQ RD initiator function</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_VIQ_RD_INIT_EN</name>
              <description>Enable VIQ RD initiator function</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_VOQ_RD_INIT_EN</name>
              <description>Enable VOQ RD initiator function</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BKQ_RD_RESP_EN</name>
              <description>Enable BKQ RD responder function</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BEQ_RD_RESP_EN</name>
              <description>Enable BEQ RD responder function</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_VIQ_RD_RESP_EN</name>
              <description>Enable VIQ RD responder function</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_VOQ_RD_RESP_EN</name>
              <description>Enable VOQ RD responder function</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_NOA0_PKT_LIFETIME_CTRL</name>
          <addressOffset>0x00000528</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x004C0A8F</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_POWER_STATE_0</name>
              <description>1: On, 0: Off. 
(It is including early time. )</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_CTWINDOW_ON_0</name>
              <description>Spec time and Beacon Early Time to TBTT Time. 
(It is including early time. )</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BEACON_AREA_ON_0</name>
              <description>The time is from HOLD Time to BeaconTx or Timeout.
(It is including early time. )</description>
              <bitRange>[29:29]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_CTWIN_EARLY_DISTX_0</name>
              <description>ctwin_early_distx. 
(It is including early time. )</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_NOA1_OFF_PERIOD_0</name>
              <description>Spec time but exclude BCNDMATIM time for wake. 
(It is including early time. )</description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FORCE_DOZE1_0</name>
              <description>If NoA_Count == 1, this value is 1. else 0.
(It is including early time. )</description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_NOA0_OFF_PERIOD_0</name>
              <description>Spec time but exclude BCNDMATIM time for wake. 
(It is including early time. )</description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FORCE_DOZE0_0</name>
              <description>If NoA_Count == 1, this value is 1. else 0. 
(It is including early time. )</description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_CHANGE_POW_BCN_AREA</name>
              <description>select real_ctwindow &amp; real_bcnq_area for noa_unit</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_BKF_CLR_TXREQ</name>
              <description>when gen tx command done, while will backoff is invalid, then tx command will be cleared</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_BCN_TX_BTCCA</name>
              <description>1: Enable Beacon Tx at TBTT if BT_CCA is enabled
0: Disable</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_PKT_TX_ATIM</name>
              <description>1: Disable AC Queue Packet Tx in ATIM (only valid at Nettype: Adhoc/AP)
0: Enable AC Queue packet Tx in ATIM</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_BCN_DIS_CTN</name>
              <description>Disable the Beacon queue disable contention,when set to 0 enable the force
beacon function.</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_NAVEND_RST_TXOP</name>
              <description>When set this bit, TXOP will be reset while NAV end.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_FILTER_CCA</name>
              <description>Enable CCA filter threshold</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CCA_FILTER_THRS</name>
              <description>If PHY_CCA signal width is bigger than this threshold, this PHY_CCA
signal is valid for MAC.
Unit: us</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EDCCA_THRS</name>
              <description>EDCCA threshold value, edcca over this threshold will cause bkf_rst
Bit[7]: PHY_EDCCA為1時,當timer timeout時擋住TX
Bit[6:0]: timer (單位:32us)</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_P2PON_DIS_TXTIME</name>
          <addressOffset>0x00000530</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_P2PON_DIS_TXTIME</name>
              <description>The time of the disable TX period after the P2P RF on interrupt occur. Unit: 64us.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_NAN_SETTING_2</name>
          <addressOffset>0x00000534</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000168</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description></description>
              <bitRange>[31:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SYNC_BCN_DELAY</name>
              <description>r_HC * r_SLOTTIME * 8'd40 (unit:us)
default: r_HC = 1, r_SLOTTIME = 9, =&gt; 360us
max is 16ms (DW)</description>
              <bitRange>[13:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_QUEUE_INCOL_THR</name>
          <addressOffset>0x00000538</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BK_QUEUE_THR</name>
              <description>0: Disable this BK queue condition.
Otherwise: When internal collision number of queue equal threshold, the priority of queue enhance. But have more 2 queues which satisfy each queue threshold, the priority will follow VO&gt;VI&gt;BE&gt;BK.</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BE_QUEUE_THR</name>
              <description>0: Disable this BE queue condition.
Otherwise: When internal collision number of queue equal threshold, the priority of queue enhance. But have more 2 queues which satisfy each queue threshold, the priority will follow VO&gt;VI&gt;BE&gt;BK.</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_VI_QUEUE_THR</name>
              <description>0: Disable this VI queue condition.
Otherwise: When internal collision number of queue equal threshold, the priority of queue enhance. But have more 2 queues which satisfy each queue threshold, the priority will follow VO&gt;VI&gt;BE&gt;BK.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_VO_QUEUE_THR</name>
              <description>0: Disable this VO queue condition.
Otherwise: When internal collision number of queue equal threshold, the priority of queue enhance. But have more 2 queues which satisfy each queue threshold, the priority will follow VO&gt;VI&gt;BE&gt;BK.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_QUEUE_INCOL_EN</name>
          <addressOffset>0x0000053C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00100000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_DIS_ZGBCCA</name>
              <description>Disable zigbee CCA (NOT USED, SEE 0x1594)</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXOP_FAILBREAK_CNT</name>
              <description>if BIT_TXOP_FAIL_BREAK = 1, counter the times of txfail break TXOP</description>
              <bitRange>[29:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_TXOP_FAIL_BREAK</name>
              <description>1: if tx pkt fail in txop, then tx cfend to end txop</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_TBTT_AREA_BLK_4AC</name>
              <description>When set this bit, 4AC backoff is disabled on TBTT setup period</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ENABLE_RANDOM_SHIFT_TX</name>
              <description>When this bit set 1, enable random shift TX function</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ENABLE_EDCA_REF_FUNCTION</name>
              <description>When this bit set 1, enable EDCA REF function</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ENABLE_INTERCOL_EDCA_REF</name>
              <description>When this bit set 1, enable inter-collision edca_ref</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ACQ_MAX_INCOL_EN</name>
              <description>1:Enable 0 :Disable</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BK_TRIGGER_NUM</name>
              <description>The number is triggered by bkq inter collision</description>
              <bitRange>[15:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BE_TRIGGER_NUM</name>
              <description>The number is triggered by beq inter collision</description>
              <bitRange>[11:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_VI_TRIGGER_NUM</name>
              <description>The number is triggered by viq inter collision</description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_VO_TRIGGER_NUM</name>
              <description>The number is triggered by voq inter collision</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_NOA0_TBTT_PROHIBIT</name>
          <addressOffset>0x00000540</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0000C812</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_SPEC_POWER_STATE_0</name>
              <description>1: On, 0: Off</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SPEC_CTWINDOW_ON_0</name>
              <description>The time from TBTT &lt;-&gt; CTWEND (with BCNDMATIM early time)</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SPEC_BEACON_AREA_ON_0</name>
              <description>The time is from TBTT to BeaconTx or Timeout</description>
              <bitRange>[29:29]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SPEC_CTWIN_EARLY_DISTX_0</name>
              <description>ctwin_early_distx</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SPEC_NOA1_OFF_PERIOD_0</name>
              <description>Spec time</description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SPEC_FORCE_DOZE1_0</name>
              <description>If NoA_Count == 1, this value is 1. else 0.</description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SPEC_NOA0_OFF_PERIOD_0</name>
              <description>Spec time</description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SPEC_FORCE_DOZE0_0</name>
              <description>If NoA_Count == 1, this value is 1. else 0.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>dummy</name>
              <description></description>
              <bitRange>[23:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_TBTT_AREA_FOR_BB</name>
              <description>enable notify bb that mac p0 is in tbtt area</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TBTT_HOLD_TIME</name>
              <description>TBTT_prohibit_hold time for AP mode, unit is 32 us</description>
              <bitRange>[19:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TBTT_HOLD_TIME_INFRA</name>
              <description>TBTT_prohibit_hold time for infrastructure mode , unit is 2 ms</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TBTT_PROHIBIT_SETUP</name>
              <description>TBTT_prohibit_setup, unit is 32us</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_NAV_CTRL</name>
          <addressOffset>0x00000544</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00400180</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_NAV_PROT_LEN</name>
              <description>In TXOP mode ,NAV setting which protects next packets</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RD_NAV_PROT_NXT</name>
              <description>In RDG mode ,NAV setting which protects next packets</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FTM_CTRL</name>
          <addressOffset>0x00000548</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FTM_TSF_R2T_PORT</name>
              <description>0:R2T latch count sync tsf of port 0
1: R2T latch count sync tsf of port 1</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FTM_TSF_T2R_PORT</name>
              <description>0:T2R latch count sync tsf of port 0
1: T2R latch count sync tsf of port 1</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FTM_PTT_PORT</name>
              <description>0: sync tsf of port 0
1: sync tsf of port 1</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FTM_PTT</name>
              <description>partial tsf timer setting</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FTM_TSF_CNT</name>
          <addressOffset>0x0000054C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FTM_TSF_R2T</name>
              <description>R2T latch count sync tsf timer</description>
              <bitRange>[31:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FTM_TSF_T2R</name>
              <description>T2R latch count sync tsf timer</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TSTRST_P2PRST_BCN_CTRL_PORT0_1</name>
          <addressOffset>0x00000550</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00001414</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_P2P_PWR_RST1</name>
              <description>rst p2p circuit NOA 1, noa_unit0</description>
              <bitRange>[30:30]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_SCHEDULER_RST</name>
              <description>Write this bit reset scheduler, ioreg_txfail</description>
              <bitRange>[29:29]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_P2P_PWR_RST0</name>
              <description>rst p2p circuit NOA 0, noa_unit0</description>
              <bitRange>[28:28]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_TSFTR1_SYNC_EN</name>
              <description>write this bit,  bcn1 will sync to bcn0 with TSFTF_SYN_OFFSET</description>
              <bitRange>[27:27]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_TSFTR_SYNC_EN</name>
              <description>write this bit,  bcn0 will sync to bcn1 with TSFTF_SYN_OFFSET</description>
              <bitRange>[26:26]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_TSFTR1_RST</name>
              <description>write this bit , bcn1  tsft will auto reset</description>
              <bitRange>[25:25]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_TSFTR_RST</name>
              <description>write this bit , bcn0  tsft will auto reset</description>
              <bitRange>[24:24]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_P2P_PWR_RST5</name>
              <description>rst p2p circuit NOA 5, noa_unit2</description>
              <bitRange>[23:23]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_P2P_PWR_RST4</name>
              <description>rst p2p circuit NOA 4, noa_unit2</description>
              <bitRange>[22:22]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_P2P_PWR_RST3</name>
              <description>rst p2p circuit NOA 3, noa_unit1</description>
              <bitRange>[21:21]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_P2P_PWR_RST2</name>
              <description>rst p2p circuit NOA 2, noa_unit1</description>
              <bitRange>[20:20]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_EN_PRE_DL_BEACON</name>
              <description>If set 1, hw will enable pre_download beacon</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MBID_BCN_NUM</name>
              <description>The number of virtual interface number excluding the root number.</description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P1_RXBCN_RPT_ENABLE</name>
              <description>When this bit asserted, RXBCNOK report is issued</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P1_DIS_RX_BSSID_FIT</name>
              <description>0:HW will handle rx_beacon 1:HW will ignore rx_beacon_pk</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P1_TXBCN_RPT_ENABLE</name>
              <description>When this bit and BIT_P1_EN_BCN_RPT are set, then TXBCN ERROR report is issued</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P1_DIS_TSF_UDT</name>
              <description>When set, disable clint 0 TSF update when beacon frames or probe response frames are received.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P1_EN_BCN_FUNCTION</name>
              <description>When this bit is set, TSF and other beacon related functions are then enabled.
0x700(MACID1)的enable開關</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P1_EN_BCN_RPT</name>
              <description>When this bit asserted, txbcnok_int and txbcnerr_int will valid.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P1_ENP2P_CTWINDOW</name>
              <description>1: Enable P2P CTN WINDOWS function. 0: Disable P2P CTN WINDOWS function.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P1_ENP2P_BCNQ_AREA</name>
              <description>1: Enable P2P BCN area on function. 0 : Disable P2P BCN area on function.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P0_RXBCN_RPT_ENABLE</name>
              <description>When this bit asserted, RXBCNOK report is issued</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P0_DIS_RX_BSSID_FIT</name>
              <description>0:HW will handle rx_beacon 1:HW will ignore rx_beacon_pk</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P0_TXBCN_RPT_ENABLE</name>
              <description>When this bit and BIT_P0_EN_BCN_RPT are set, then TXBCN ERROR report is issued</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P0_DIS_TSF_UDT</name>
              <description>When set, disable port 0 TSF update when beacon frames or probe response frames are received.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P0_EN_BCN_FUNCTION</name>
              <description>When this bit is set, TSF and other beacon related functions are then enabled.
0x610(MACID)的enable開關</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P0_EN_BCN_RPT</name>
              <description>When this bit asserted, txbcnok_int and txbcnerr_int will valid.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P0_EN_P2P_CTWINDOW</name>
              <description>1: Enable P2P CTN WINDOWS function. 0: Disable P2P CTN WINDOWS function.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P0_EN_P2P_BCNQ_AREA</name>
              <description>1: Enable P2P BCN area on function. 0 : Disable P2P BCN area on function.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PORT0_BCN_SPACE</name>
          <addressOffset>0x00000554</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00640064</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BCN_SUB_SPACE_PORT0</name>
              <description>Unit is ms. The sub-beacon interval of the port 0.(valid if mbssid function is enable)</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BCN_SPACE_PORT0</name>
              <description>Unit is ms. When MBSSID is disable, this field is the beacon interval. When MBSSID is enable, this register is the beacon space of root.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ATIMWND0_P0_BCN_ERLY_DMA_CTRL</name>
          <addressOffset>0x00000558</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00020305</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_ATIMWND0</name>
              <description>ATIM window width of root VAP in units of TU.</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BCNDMATIM_P0</name>
              <description>Indicates the time before TBTT to perform beacon queue DMA. This register is shared by the time to assert ATIM window end interrupt. Measured in units of "TU" before TBTT and before ATIM window end.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DRVERLYITV_P0</name>
              <description>Time to send interrupt to notify driver to change beacon content. Time unit is TU.
The register also is shared by P2P-CTW and P2P-NoA (from NoA-Absent to NoA-On). It is used to wake up early at DriverEarlyTime</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BCNERR_TSF_CTRL</name>
          <addressOffset>0x0000055C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0F0F1028</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_OFDM_RXTSF_OFFSET</name>
              <description>The Datapath of  OFDM RX_tsf</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CCK_RXTSF_OFFSET</name>
              <description>The Datapath of  CCK RX_tsf</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BCN_MAX_ERR</name>
              <description>When beacon TX error counter goes over this threshold, Beacon will transmit within PIFS.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_USTIME_TSF</name>
              <description>Set the microsecond time unit used by MAC TSF clock. 
0x14 - 20MHz    0x28 - 40MHz    0x50 - 80MHz</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_P0_TSFTR_L</name>
          <addressOffset>0x00000560</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_P0_TSF_TIMER_L</name>
              <description>low 32bits of port0's tsft</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_P0_TSFTR_H</name>
          <addressOffset>0x00000564</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_P0_TSF_TIMER_H</name>
              <description>high 32bits of port0's tsft</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_P1_TSFTR_L</name>
          <addressOffset>0x00000568</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_P1_TSF_TIMER_L</name>
              <description>low 32bits of port1's tsft</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_P1_TSFTR_H</name>
          <addressOffset>0x0000056C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_P1_TSF_TIMER_H</name>
              <description>high 32bits of port1's tsft</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BCN_ERLY_CTW_CTRL</name>
          <addressOffset>0x00000570</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x7F0A0002</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BCNIVLCUNT_P0</name>
              <description>Be used in multiple BCNIVL early INT. When this counter =1, multiple BCNIVL early INT will be triggered.</description>
              <bitRange>[30:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_CTWND_P0</name>
              <description>CTWindow width in units of TU. PORT0</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ATIMWND1</name>
              <description>ATIM window width of VAP1 in units of TU.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BCNDROP_TO_MISC_CTRL</name>
          <addressOffset>0x00000574</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00FF1000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TSF_TIMER_0_SEL</name>
              <description>genarete tsfime_int[0]
00: PORT0's tsft
01: PORT1's tsft
10:PORT2's tsft
11: FREERUN CUT</description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TSF_TIMER_1_SEL</name>
              <description>genarete tsfime_int[1]
00: PORT0's tsft
01: PORT1's tsft
10:PORT2's tsft
11: FREERUN CUT</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TSF_TIMER_2_SEL</name>
              <description>genarete tsfime_int[2]
00: PORT0's tsft
01: PORT1's tsft
10:PORT2's tsft
11: FREERUN CUT</description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXCMD_TIMEOUT_PERIOD</name>
              <description>When 40M/80M TX CMD ready and secondary_CCA_20/secondary_CCA_40 set for this period, then the TX CMD will be cleared.  TU: 1us</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HGQ_TIMEOUT_PERIOD</name>
              <description>When hgq empty for this period, close atim window. And this will block hgq dma for pcie, unless 0x524[12] set enable. TU: 32us</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BEACON_DROP_EN</name>
              <description>enable beacon drop function</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BEACON_DROP_IVL</name>
              <description>indicate the timeout of beacon drop</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_P2_TSFTR_L</name>
          <addressOffset>0x00000578</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_P2_TSF_TIMER_L</name>
              <description>low 32bits of port2's tsft</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_P2_TSFTR_H</name>
          <addressOffset>0x0000057C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_P2_TSF_TIMER_H</name>
              <description>high 32bits of port2's tsft</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TSF_TIMER1</name>
          <addressOffset>0x00000580</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TSTTIMER1</name>
              <description>When the lower 4 bytes of TSFTR matches the content of this register, the FW tsftime_int[0] interrupt is issued.</description>
              <bitRange>[31:5]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TSF_TIMER2</name>
          <addressOffset>0x00000584</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TSTTIMER2</name>
              <description>When the lower 4 bytes of TSFTR matches the content of this register, the FW tsftime_int[1] interrupt is issued.</description>
              <bitRange>[31:5]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TSF_TIMER3</name>
          <addressOffset>0x00000588</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TSTTIMER3</name>
              <description>When the lower 4 bytes of TSFTR matches the content of this register, the FW tsftime_int[2] interrupt is issued.</description>
              <bitRange>[31:5]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BCN_IFS_TBTT_CTN</name>
          <addressOffset>0x0000058C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x06200060</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_PRE_BCN_DMATIM</name>
              <description>when 0x552[3] is set, hw will enable pre_download beacon. this register Indicates the time before TBTT to perform beacon queue DMA.</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FORCE_BCN_IFS</name>
              <description>when 0x528 Bit18 set to 0 and TBTT contention area end,force tx beacon use this IFS</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TBTT_CTN_AREA</name>
              <description>TBTT contention area,Time unit is 32us,for PORT 0 / 1 / 2</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TXOP_CTRL_PRE_BKF</name>
          <addressOffset>0x00000590</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xB00F000F</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_NOPKT_END_RTSMF</name>
              <description>1: enable exit rts hold mode when there is no corresponding ac pkt to tx</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PRETX_US</name>
              <description>For wep/tkip, enable security engine earlier than mactx by this amount of time. Unit is microsecond (us)</description>
              <bitRange>[30:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DTIM_BYPASS</name>
              <description>1: dtim counter will keep 0</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RTS_NAV_TXOP</name>
              <description>enable RTS NAV protect all txop</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_NOT_CROSS_TXOP</name>
              <description>1:tx pkt cross tbtt is prohibited 0:tx pkt cross tbtt is permitted</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PRE_BKF_TIME</name>
              <description>when bkf timer count down this value, sel queue and gen txcmd will start</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_NAV_BLK_HGQ</name>
              <description>rxnav block HGQ</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_NAV_BLK_MGQ</name>
              <description>rxnav block MGQ</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXOP_MIN</name>
              <description>if txop counter is more than this value, than tx pkt is considered not cross tbtt</description>
              <bitRange>[13:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FREERUN_CNT_L</name>
          <addressOffset>0x00000594</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FREERUN_CNT_TIMER_L</name>
              <description>LOW 32bits of freerun cnt</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FREERUN_CNT_H</name>
          <addressOffset>0x00000598</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FREERUN_CNT_TIMER_H</name>
              <description>high 32bits of freerun cnt</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BCN_ERLY_CTW_CTRL_P1_2</name>
          <addressOffset>0x0000059C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x7F0A7F0A</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BCNIVLCUNT_P2</name>
              <description>Be used in multiple BCNIVL early INT. When this counter =1, multiple BCNIVL early INT will be triggered.</description>
              <bitRange>[30:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_CTWND_P2</name>
              <description>CTWindow width in units of TU. PORT2</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BCNIVLCUNT_P1</name>
              <description>Be used in multiple BCNIVL early INT. When this counter =1, multiple BCNIVL early INT will be triggered.</description>
              <bitRange>[14:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_CTWND_P1</name>
              <description>CTWindow width in units of TU. PORT1</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ATIMWND2_5</name>
          <addressOffset>0x000005A0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x02020202</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_ATIMWND5</name>
              <description>ATIM window width of VAP5 in units of TU.</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ATIMWND4</name>
              <description>ATIM window width of VAP4 in units of TU.</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ATIMWND3</name>
              <description>ATIM window width of VAP3 in units of TU.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ATIMWND2</name>
              <description>ATIM window width of VAP2 in units of TU.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ATIMWND6_7_URGENT_NOLIMTHGQ</name>
          <addressOffset>0x000005A4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00010202</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_HIQ_NO_LMT_EN_VAP7</name>
              <description>1: Packet in Hi Queue Tx immediately (No constraint for ATIM Period)
0: Disable</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HIQ_NO_LMT_EN_VAP6</name>
              <description>1: Packet in Hi Queue Tx immediately (No constraint for ATIM Period)
0: Disable</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HIQ_NO_LMT_EN_VAP5</name>
              <description>1: Packet in Hi Queue Tx immediately (No constraint for ATIM Period)
0: Disable</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HIQ_NO_LMT_EN_VAP4</name>
              <description>1: Packet in Hi Queue Tx immediately (No constraint for ATIM Period)
0: Disable</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HIQ_NO_LMT_EN_VAP3</name>
              <description>1: Packet in Hi Queue Tx immediately (No constraint for ATIM Period)
0: Disable</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HIQ_NO_LMT_EN_VAP2</name>
              <description>1: Packet in Hi Queue Tx immediately (No constraint for ATIM Period)
0: Disable</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HIQ_NO_LMT_EN_VAP1</name>
              <description>1: Packet in Hi Queue Tx immediately (No constraint for ATIM Period)
0: Disable</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HIQ_NO_LMT_EN_ROOT</name>
              <description>1: Packet in Hi Queue Tx immediately (No constraint for ATIM Period)
0: Disable</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ATIM_URGENT</name>
              <description>Indicates the time before ATIM Window end . When BSSID[n] (n=0~7) has HIQ packet to send, HW only DMA BSSID[n]'s HIQ packet in this interval.
(unit : TU)</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ATIMWND7</name>
              <description>ATIM window width of VAP7 in units of TU.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ATIMWND6</name>
              <description>ATIM window width of VAP6 in units of TU.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DTIM_COUNT_0_3</name>
          <addressOffset>0x000005A8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_DTIM_COUNT_VAP3</name>
              <description></description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DTIM_COUNT_VAP2</name>
              <description></description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DTIM_COUNT_VAP1</name>
              <description></description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DTIM_COUNT_ROOT</name>
              <description></description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DTIM_COUNT_4_7</name>
          <addressOffset>0x000005AC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_DTIM_COUNT_VAP7</name>
              <description></description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DTIM_COUNT_VAP6</name>
              <description></description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DTIM_COUNT_VAP5</name>
              <description></description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DTIM_COUNT_VAP4</name>
              <description></description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DISATIM_BCNERLY_TBTTHOLD_BCNCS</name>
          <addressOffset>0x000005B0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00020000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TSFTR3_SYNC_EN</name>
              <description>write this bit,  PORT3 will sync to PORT2 with TSFTF_SYN_OFFSET</description>
              <bitRange>[31:31]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_TSFTR2_SYNC_EN</name>
              <description>write this bit,  PORT2 will sync to PORT3 with TSFTF_SYN_OFFSET</description>
              <bitRange>[29:29]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_TSFTR2_RST</name>
              <description>write this bit , bcn2  tsft will auto reset</description>
              <bitRange>[28:28]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_MULTI_BCN_CS</name>
              <description>indicate which port is tx beacon</description>
              <bitRange>[27:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_DIS_BCN_P2</name>
              <description>set 1 to mask the beacon early interrupt of port2</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_BCN_P1</name>
              <description>set 1 to mask the beacon early interrupt of port1</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_BCN_P0</name>
              <description>set 1 to mask the beacon early interrupt of port0</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TBTT_HOLD_PREDICT_P1</name>
              <description>the predicted hold time after tbtt for beacon tx of port1, unit is 32us</description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EARLY_128US_P1</name>
              <description>the BCN EARLY interrupt find tune with unit 128us. The Total Early time of BCN early interrupt is the 0x558 x 1ms + EARLY_128us x 128us. For port 1</description>
              <bitRange>[13:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EARLY_128US_P0</name>
              <description>the BCN EARLY interrupt find tune with unit 128us. The Total Early time of BCN early interrupt is the 0x558 x 1ms + EARLY_128us x 128us.</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_ATIM_VAP7</name>
              <description></description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_ATIM_VAP6</name>
              <description></description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_ATIM_VAP5</name>
              <description></description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_ATIM_VAP4</name>
              <description></description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_ATIM_VAP3</name>
              <description></description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_ATIM_VAP2</name>
              <description></description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_ATIM_VAP1</name>
              <description></description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_ATIM_ROOT</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FREERUN_CNT_P2POFF_DIS_TXTIME</name>
          <addressOffset>0x000005B4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_P2POFF_DIS_TXTIME</name>
              <description>The time of the disable TX period after the P2P RF off interrupt occur. Unit: 64us.</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_FREECNT</name>
              <description>enable freerun tsft</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RESET_FREECNT_P</name>
              <description>reset pulse of freerun tsft</description>
              <bitRange>[12:12]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>dummy</name>
              <description></description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PTA_TRXBCN_CTRL</name>
          <addressOffset>0x000005B8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xE600D064</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_PTA_RXBCN_PRI_MASK</name>
              <description></description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PTA_RXBCN_EN</name>
              <description></description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PTA_RXBCN_DIR</name>
              <description></description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PTA_RXBCN_DUR</name>
              <description></description>
              <bitRange>[28:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PTA_RXBCN_TIME</name>
              <description></description>
              <bitRange>[19:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PTA_PRETX_EN</name>
              <description></description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PTA_PRETX_TIME</name>
              <description>WIFI TX shall wait settle time when antenna is switched from BT to WIFI, if the BT use the same RFAFE as WIFI.
Unit: 1us</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_P2P_NOA1_CTRL_STATE</name>
          <addressOffset>0x000005BC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_POWER_STATE_1</name>
              <description>1: On, 0: Off. 
(It is including early time. )</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_CTWINDOW_ON_1</name>
              <description>Spec time and Beacon Early Time to TBTT Time. 
(It is including early time. )</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BEACON_AREA_ON_1</name>
              <description>The time is from HOLD Time to BeaconTx or Timeout.
(It is including early time. )</description>
              <bitRange>[29:29]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_CTWIN_EARLY_DISTX_1</name>
              <description>ctwin_early_distx. 
(It is including early time. )</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_NOA1_OFF_PERIOD_1</name>
              <description>Spec time but exclude BCNDMATIM time for wake. 
(It is including early time. )</description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FORCE_DOZE1_1</name>
              <description>If NoA_Count == 1, this value is 1. else 0.
(It is including early time. )</description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_NOA0_OFF_PERIOD_1</name>
              <description>Spec time but exclude BCNDMATIM time for wake. 
(It is including early time. )</description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FORCE_DOZE0_1</name>
              <description>If NoA_Count == 1, this value is 1. else 0. 
(It is including early time. )</description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SPEC_POWER_STATE_1</name>
              <description>1: On, 0: Off</description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SPEC_CTWINDOW_ON_1</name>
              <description>The time from TBTT &lt;-&gt; CTWEND (with BCNDMATIM early time)</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SPEC_BEACON_AREA_ON_1</name>
              <description>The time is from TBTT to BeaconTx or Timeout</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SPEC_CTWIN_EARLY_DISTX_1</name>
              <description>ctwin_early_distx</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SPEC_NOA1_OFF_PERIOD_1</name>
              <description>Spec time</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SPEC_FORCE_DOZE1_1</name>
              <description>If NoA_Count == 1, this value is 1. else 0.</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SPEC_NOA0_OFF_PERIOD_1</name>
              <description>Spec time</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SPEC_FORCE_DOZE0_1</name>
              <description>If NoA_Count == 1, this value is 1. else 0.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_P2P_NOA1_ALLSTASLEEP</name>
              <description>It indicates that the state from CTWindow End to BcnEarly
1: Sleep 
0: Wake</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P2P_NOA1_DISTX_EN</name>
              <description>1: Hw will disable TX in P2P_off period
0: Do Nothing</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P2P_NOA1_PWR_MGT_EN</name>
              <description>A main switch for P2P PowerSaving
1: Enable
0: Disable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P2P_NOA1_EN</name>
              <description>The condition that noa_unit0, [1]-NOA1, [0]-NOA0
1: Enable
0: Disable</description>
              <bitRange>[4:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P2P_NOA1_UNIT_SEL</name>
              <description>The selector for the source of noa unit0.
0 for port 0, 1 for port 1</description>
              <bitRange>[2:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_TSFBIT32_RST_NOA1</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ACMHWCTRL</name>
          <addressOffset>0x000005C0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_AVGPERIOD</name>
              <description>In unit of 32 us. It is the value Dot11EDCAAveragingPeriod in SPEC. HW will recalculate used_time every this period.
Max is 2 sec</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BE_ACM_RESET_USED_TIME</name>
              <description>When HwEn is enabled, software set this bit to inform hardware to reset used_time to 0. Read this bit is always 0.</description>
              <bitRange>[10:10]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_VI_ACM_RESET_USED_TIME</name>
              <description>When HwEn is enabled, software set this bit to inform hardware to reset used_time to 0. Read this bit is always 0.</description>
              <bitRange>[9:9]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_VO_ACM_RESET_USED_TIME</name>
              <description>When HwEn is enabled, software set this bit to inform hardware to reset used_time to 0. Read this bit is always 0.</description>
              <bitRange>[8:8]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_BEQ_ACM_STATUS</name>
              <description>This bit indicates if the used_time &gt;= admitted_time of AC BE when HW ACM.
0: BEQ ACM Not Exceed.
1: BEQ ACM Exceed.
Default: 0h</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_VIQ_ACM_STATUS</name>
              <description>This bit indicates if the used_time &gt;= admitted_time of AC VI when HW ACM.
0: VIQ ACM Not Exceed.
1: VIQ ACM Exceed.
Default: 0h</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_VOQ_ACM_STATUS</name>
              <description>This bit indicates if the used_time &gt;= admitted_time of AC VO when HW ACM.
0: VOQ ACM Not Exceed.
1: VOQ ACM Exceed.
Default: 0h</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BEQ_ACM_EN</name>
              <description>Set this bit to enable ACM of BE queue.
1: Enable
0: Disable
Default: 0h</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_VIQ_ACM_EN</name>
              <description>Set this bit to enable ACM of VI queue.
1: Enable
0: Disable
Default: 0h.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_VOQ_ACM_EN</name>
              <description>Set this bit to enable ACM of VO queue.
1: Enable
0: Disable
Default: 0h.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ACMHWEN</name>
              <description>Set this bit to enable hardware to take control of ACM.
1: Hardware Control
0: Software Control
Default: 0h.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_VO_VI_ADMTIME</name>
          <addressOffset>0x000005C4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_VI_ADMITTED_TIME</name>
              <description>Admitted_time of VI queue. In unit of 32 microsecond. 
Calculated and set by driver.</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_VO_ADMITTED_TIME</name>
              <description>Admitted_time of VO queue. In unit of 32 microsecond. 
Calculated and set by driver.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BE_ADMTIME</name>
          <addressOffset>0x000005C8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description></description>
              <bitRange>[31:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_NDPA_NAV_CHK</name>
              <description>1--&gt;tx NDPA/NDP can cross TBTT,0--&gt;tx NDPA/NDP can't cross TBTT</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MHDR_NAV_OFFSET</name>
              <description>NDPA NAV compensation value</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BE_ADMITTED_TIME</name>
              <description>Admitted_time of BE queue. In unit of 32 microsecond. 
Calculated and set by driver.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_NOACMD_SEL_EDCA_RANDOM_GEN</name>
          <addressOffset>0x000005CC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x01E21051</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_NOA_SEL</name>
              <description>TX NoA parameter select (noa_unit0~2,parameter0~5)
0: NoA0 , 1:NoA1, 2:NoA2, 3:NoA3, 4:NoA4, default: NoA5
To control the register setting for which NOA. (register 0x05E0[103:0])</description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXCMD_SEG_SEL</name>
              <description>[HW Debug Info]To select which one TXCMD Segment.
For example,
可以在0x5CF[3:0]填 0 or 6  讀取
0x5F8[7:0] : Tx Agg
0x5F9[7:0] : Tx Rate</description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RANDOM_GEN</name>
              <description>Random number generator polynomial</description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TXPAUSE_CFG</name>
          <addressOffset>0x000005D0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000005</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TSF_DIFF_P1P2</name>
              <description>the difference of beacon count down value between port0 and port1, unit is TU</description>
              <bitRange>[31:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_TXPAUSE1</name>
              <description>same as 0x522[7:0], allow FW/DR to control pause jointly</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DRVERLYITV_P2</name>
              <description>Time to send interrupt to notify driver to change beacon content. Time unit is TU.  It is used to wake up early at DriverEarlyTime. For port 2</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_NAN_SETTING</name>
          <addressOffset>0x000005D4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x84010514</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_EN_MULTI_BCN</name>
              <description>enable multiple beacons of port0~port2</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ENP2P_DW_AREA</name>
              <description>DW condition for P2P,for port2</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TBTT_PROHIBIT_HOLD_P2</name>
              <description>the predicted hold time after tbtt for beacon tx of port2, unit is 32us</description>
              <bitRange>[29:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BCN_PORT_PRI</name>
              <description>the priority of port0 and port2. 10: port2 has higher priority than port0; 01:port0 has higher priority than port2. 00: port0 and port2 have the same priority</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DRVERLYITV_P1</name>
              <description>Time to send interrupt to notify driver to change beacon content. Time unit is TU.  It is used to wake up early at DriverEarlyTime.  For port1</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P2_RXBCN_RPT_ENABLE</name>
              <description>When this bit asserted, RXBCNOK report is issued</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P2_DIS_RX_BSSID_FIT</name>
              <description>0:HW will handle rx_beacon 1:HW will ignore rx_beacon_pk</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P2_TXBCN_RPT_ENABLE</name>
              <description>When this bit asserted, then TXBCN ERROR report is issued</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P2_DIS_TSF_UDT</name>
              <description>When set, disable clint 2 TSF update when beacon frames or probe response frames are received.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P2_EN_BCN_FUNCTION</name>
              <description>When this bit is set, TSF and other beacon related functions are then enabled.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P2_EN_BCN_RPT</name>
              <description>When this bit asserted, txbcnok_int and txbcnerr_int will valid.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P2_ENP2P_CTWINDOW</name>
              <description>1: Enable P2P CTN WINDOWS function. 0: Disable P2P CTN WINDOWS function.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P2_ENP2P_BCNQ_AREA</name>
              <description>1: Enable P2P BCN area on function. 0 : Disable P2P BCN area on function.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BCN_SPACE_PORT1_2</name>
          <addressOffset>0x000005D8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x02000064</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BCN_SPACE4</name>
              <description>sync beacon space of port2</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BCN_SPACE3</name>
              <description>sync beacon space of port1</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_NAN_SETTING_1</name>
          <addressOffset>0x000005DC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000020</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_SYNCBCN_RXNUM</name>
              <description>if DW is permitted to end early, the number of rx sync beacons is defined in this register</description>
              <bitRange>[31:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DW_END_EARLY</name>
              <description>when set, the DW window end earlier than spec definition. 
When sync bcn and SDF had tx, and rx enough sync bcns defined by 0x5DC[31:27]. DW can early end</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_NAN_ROLE</name>
              <description>the role of NAN device, including  master, no-master sync, and no-master no-sync.</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_mSLOT_EVTQ</name>
              <description>evtq packet will tx in the m-th SLOT of the m-th DWs</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_mDW_EVTQ</name>
              <description>evtq packet will tx in the m-th SLOT of the m-th DWs</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EVTQ_EARLY</name>
              <description>the early time of evtq tx window. unit is TU</description>
              <bitRange>[7:5]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_NOA_PARAM_V1</name>
          <addressOffset>0x000005E0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00001000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_NOA_DURATION_V1</name>
              <description>The maximum duration in units of microseconds that the P2P Group Owner shall remain absent following the start of a Notice of Absence interval.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_NOA_PARAM_V2</name>
          <addressOffset>0x000005E4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00003000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_NOA_INTERVAL_V2</name>
              <description>The length of the Notice of Absence interval in units of microseconds.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_NOA_PARAM_V3</name>
          <addressOffset>0x000005E8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00001000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_NOA_START_TIME_V3</name>
              <description>The start time for the schedule expressed in terms of the lower 4 bytes of the TSF timer.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_NOA_PARAM_4</name>
          <addressOffset>0x000005EC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000003</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_NOA_COUNT_V4</name>
              <description>indicates the number of absence intervals</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SCHEDULER_DBG</name>
          <addressOffset>0x000005F4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_DBG_SCHEDULER</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SCH_TXCMD</name>
          <addressOffset>0x000005F8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_SCH_TXCMD</name>
              <description>Scheduler TXCMD Content</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PAGE5_DUMMY</name>
          <addressOffset>0x000005FC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xFFFF0000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_DUMMY</name>
              <description>Dummy</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PS_TIMER_A_L</name>
          <addressOffset>0x00001500</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_PS_TIMER_A_L</name>
              <description>When the TSF (that select by reg 0x1520 [25:24]) matches the content of this register, the PS_TIMER_A_INT interrupt is issued</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PS_TIMER_A_H</name>
          <addressOffset>0x00001504</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_PS_TIMER_A_H</name>
              <description>When the  TSF (that select by reg 0x1520 [25:24]) matches the content of this register, the PS_TIMER_A_INT interrupt is issued</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PS_TIMER_B_L</name>
          <addressOffset>0x00001508</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_PS_TIMER_B_L</name>
              <description>When the TSF (that select by reg 0x1520 [29:28]) matches the content of this register, the PS_TIMER_B_INT interrupt is issued</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PS_TIMER_B_H</name>
          <addressOffset>0x0000150C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_PS_TIMER_B_H</name>
              <description>When the TSF(that select by reg 0x1520 [29:28]) matches the content of this register, the PS_TIMER_B_INT interrupt is issued</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PS_TIMER_C_L</name>
          <addressOffset>0x00001510</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_PS_TIMER_C_L</name>
              <description>When the TSF(that select by reg 0x1520 [21:20]) matches the content of this register, the PS_TIMER_C_INT interrupt is issued</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PS_TIMER_C_H</name>
          <addressOffset>0x00001514</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_PS_TIMER_C_H</name>
              <description>When the TSF(that select by reg 0x1520 [21:20]) matches the content of this register, the PS_TIMER_C_INT interrupt is issued</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CPUMGQ_PARAMETER</name>
          <addressOffset>0x00001518</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00003224</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_PS_Timer_E_Early</name>
              <description>It is used to wake up early at PS_Timer_E_Early Time. 
Time unit is TU.</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dummy</name>
              <description></description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CW</name>
              <description>ECWmin and ECWmax encode the values of Cwmin and Cwmax respectively in an exponent form. Ex: Cwmax = 2^(ECWmax)-1
Default: BK = Ah/5h; BE = Ah/5h; VI = 5h/4h; VO = 4h/3h.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_AIFS</name>
              <description>Arbitrary Inter frame space
In unit of microsecond. AIFS indicates the time a non-AP QSTA should defer before either invoking a backoff or starting a transmission
Default: BK = 49h; BE = 25h; VI = 1Ch; VO = 1Ch</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PS_Timer_Early</name>
          <addressOffset>0x0000151C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_PS_Timer_D_Early</name>
              <description>It is used to wake up early at PS_Timer_D_Early Time. 
Time unit is TU.</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PS_Timer_C_Early</name>
              <description>It is used to wake up early at PS_Timer_C_Early Time. 
Time unit is TU.</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PS_Timer_B_Early</name>
              <description>It is used to wake up early at PS_Timer_B_Early Time. 
Time unit is TU.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PS_Timer_A_Early</name>
              <description>It is used to wake up early at PS_Timer_A_Early Time. 
Time unit is TU.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PS_TIMER_TWT_CRTL</name>
          <addressOffset>0x00001520</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_PS_TIMER_A_EN</name>
              <description>Enable PS_TIMER_B</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PS_TIMER_A_TSF_SEL</name>
              <description>0 for port 0, 1 for port1, 2 for port2, 3 for freerun</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PS_TIMER_B_EN</name>
              <description>Enable PS_TIMER_A</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PS_TIMER_B_TSF_SEL</name>
              <description>0 for port 0, 1 for port1, 2 for port2, 3 for freerun</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PS_TIMER_C_EN</name>
              <description>Enable PS_TIMER_C</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PS_TIMER_C_TSF_SEL</name>
              <description>0 for port 0, 1 for port1, 2 for port2, 3 for freerun</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PS_TIMER_D_EN</name>
              <description>Enable PS_TIMER_D</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PS_TIMER_D_TSF_SEL</name>
              <description>0 for port 0, 1 for port1, 2 for port2, 3 for freerun</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PS_TIMER_E_EN</name>
              <description>Enable PS_TIMER_E</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PS_TIMER_E_TSF_SEL</name>
              <description>0 for port 0, 1 for port1, 2 for port2, 3 for freerun</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_GET_TSFT_OFFSET_EN</name>
              <description>1: Enable Enable get TSFT offset function</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXBCN_TIME_PORT</name>
              <description>select port for report the TSFT
0: port0     1: port1   default is port0.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RX_TSFT_DIFF</name>
          <addressOffset>0x00001524</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RXBCN_TIME_VLD</name>
              <description>1: indicate [30:0] is valid. Write 1 to clear this bit</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RXBCN_TIME_DIFF_DIR</name>
              <description>1: wmac_rx_tsf &gt; TSFT
0: wmac_rx_tsf &lt;= TSFT</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RXBCN_TIME_DIFF</name>
              <description>unit:1us
wmac_rx_tsf - TSFT (selected by 0x1520[0]). [30] is the sign bit</description>
              <bitRange>[29:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RXBCN_TSFT_STATISTIC</name>
          <addressOffset>0x00001528</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x80000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_UPD_TSFT_EARLY</name>
              <description>0: don't update TSFT when the following scenarios occur: tim_no_hit, |TSFT - rxbcn.timestamp| &lt;= BIT_RXBCN_TSFT_THRES, and r_wait_rxbcn_finish = 1
1: update TSFT</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dummy</name>
              <description></description>
              <bitRange>[30:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXBCN_TSFT_THRES</name>
              <description>used for LPS MAC, if |TSFT - rxbcn.timestamp| &gt; BIT_RXBCN_TSFT_THRES, need to wait fcsok. Else, update TSFT at wmac_rxtsf_rdy (before fcsok)
unit is 1us,max is 8ms</description>
              <bitRange>[28:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_RXBCN_GT_THRES_CNT</name>
              <description>enable the counter of BIT_RXBCN_GT_THRES_CNT</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CLR_RXBCN_GT_THRES_CNT</name>
              <description>clear the BIT_RXBCN_GT_THRES_CNT to 0</description>
              <bitRange>[6:6]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_RXBCN_GT_THRES_CNT</name>
              <description>valid when BIT_EN_RXBCN_GT_THRES_CNT = 1. 
counter the number of beacon with the |TSFT - rxbcn.timestamp| exceed the threshold</description>
              <bitRange>[5:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_P2P_NOA2_CTRL_STATE</name>
          <addressOffset>0x0000152C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_POWER_STATE_2</name>
              <description>1: On, 0: Off. 
(It is including early time. )</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_CTWINDOW_ON_2</name>
              <description>Spec time and Beacon Early Time to TBTT Time. 
(It is including early time. )</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BEACON_AREA_ON_2</name>
              <description>The time is from HOLD Time to BeaconTx or Timeout.
(It is including early time. )</description>
              <bitRange>[29:29]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_CTWIN_EARLY_DISTX_2</name>
              <description>ctwin_early_distx. 
(It is including early time. )</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_NOA1_OFF_PERIOD_2</name>
              <description>Spec time but exclude BCNDMATIM time for wake. 
(It is including early time. )</description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FORCE_DOZE1_2</name>
              <description>If NoA_Count == 1, this value is 1. else 0.
(It is including early time. )</description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_NOA0_OFF_PERIOD_2</name>
              <description>Spec time but exclude BCNDMATIM time for wake. 
(It is including early time. )</description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_FORCE_DOZE0_2</name>
              <description>If NoA_Count == 1, this value is 1. else 0. 
(It is including early time. )</description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SPEC_POWER_STATE_2</name>
              <description>1: On, 0: Off</description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SPEC_CTWINDOW_ON_2</name>
              <description>The time from TBTT &lt;-&gt; CTWEND (with BCNDMATIM early time)</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SPEC_BEACON_AREA_ON_2</name>
              <description>The time is from TBTT to BeaconTx or Timeout</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SPEC_CTWIN_EARLY_DISTX_2</name>
              <description>ctwin_early_distx</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SPEC_NOA1_OFF_PERIOD_2</name>
              <description>Spec time</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SPEC_FORCE_DOZE1_2</name>
              <description>If NoA_Count == 1, this value is 1. else 0.</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SPEC_NOA0_OFF_PERIOD_2</name>
              <description>Spec time</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SPEC_FORCE_DOZE0_2</name>
              <description>If NoA_Count == 1, this value is 1. else 0.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_P2P_NOA2_ALLSTASLEEP</name>
              <description>It indicates that the state from CTWindow End to BcnEarly
1: Sleep 
0: Wake</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P2P_NOA2_DISTX_EN</name>
              <description>1: Hw will disable TX in P2P_off period
0: Do Nothing</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P2P_NOA2_PWR_MGT_EN</name>
              <description>A main switch for P2P PowerSaving
1: Enable
0: Disable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P2P_NOA2_EN</name>
              <description>The condition that noa_unit0, [1]-NOA1, [0]-NOA0
1: Enable
0: Disable</description>
              <bitRange>[4:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P2P_NOA2_UNIT_SEL</name>
              <description>The selector for the source of noa unit0.
0 for port 0, 1 for port 1, 2 for port 2</description>
              <bitRange>[2:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_TSFBIT32_RST_NOA2</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TM_CFG</name>
          <addressOffset>0x00001530</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TM_TSFT_PORT_SEL</name>
              <description>selected TM timer port
0: port0; 1: port1; 2: port2; 3: freerun</description>
              <bitRange>[4:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXTM_EN</name>
              <description>1: HW will parsing rx packet, to find TM frame</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXTMREQ_EN</name>
              <description>1: HW will parsing rx packet, to find TM request frame</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TM_FUNC_EN</name>
              <description>1: Enable Timing Measurement function</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TM_TSFT_T1</name>
          <addressOffset>0x00001534</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TM_TSFT_T1</name>
              <description>Latch tsft timer of Tx TM frame, unit: 1us</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TM_TSFT_T2</name>
          <addressOffset>0x00001538</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TM_TSFT_T2</name>
              <description>Latch tsft timer of Rx TM frame, unit: 1us</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TM_TSFT_T3</name>
          <addressOffset>0x0000153C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TM_TSFT_T3</name>
              <description>Latch tsft timer of Tx ACK frame, unit: 1us</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TM_TSFT_T4</name>
          <addressOffset>0x00001540</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TM_TSFT_T4</name>
              <description>Latch tsft timer of Rx ACK frame, unit: 1us</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TM_TIMER_OFFSET</name>
          <addressOffset>0x00001544</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TM_TX_PATH_TIME_OFFSET</name>
              <description>Compensate the time, from PHYTXON rising edge to transmit antenna connector. unit: 1us</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TM_RX_PATH_TIME_OFFSET</name>
              <description>Compensate the time, from receive antenna connector to DATAON rising edge. unit: 1us</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BCN_ELY_ADJ</name>
          <addressOffset>0x00001548</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description></description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BCN_ELY_ADJ</name>
              <description>beacon early time adjust, unit is 32us</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PS_TIMER_D_L</name>
          <addressOffset>0x0000154C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_PS_TIMER_D_L</name>
              <description>When the TSF(that select by reg 0x1520 [16:17]) matches the content of this register, the PS_TIMER_D_INT interrupt is issued</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PS_TIMER_D_H</name>
          <addressOffset>0x00001550</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_PS_TIMER_D_H</name>
              <description>When the TSF(that select by reg 0x1520 [16:17]) matches the content of this register, the PS_TIMER_D_INT interrupt is issued</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PS_TIMER_E_L</name>
          <addressOffset>0x00001554</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_PS_TIMER_E_L</name>
              <description>When the TSF (that select by reg 0x1520 [13:12]) matches the content of this register, the PS_TIMER_E_INT interrupt is issued</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PS_TIMER_E_H</name>
          <addressOffset>0x00001558</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_PS_TIMER_E_H</name>
              <description>When the TSF (that select by reg 0x1520 [13:12]) matches the content of this register, the PS_TIMER_E_INT interrupt is issued</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_MUEDCA_VO_PARAM</name>
          <addressOffset>0x00001580</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0000431C</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_muedca_vo_param_timer</name>
              <description>MU EDCA TIMER, in units of 32 us
Note: SPEC: The MU EDCA Timer field (8b) indicates the duration of time, in units of 8 TUs</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_muedca_vo_param_cw</name>
              <description>ECWmin and ECWmax encode the values of Cwmin and Cwmax respectively in an exponent form. Ex: Cwmax = 2^(ECWmax)-1
Default: BK = Ah/5h; BE = Ah/5h; VI = 5h/4h; VO = 4h/3h.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_muedca_vo_param_aifs</name>
              <description>Arbitrary Inter frame space
In unit of microsecond. AIFS indicates the time a non-AP QSTA should defer before either invoking a backoff or starting a transmission
Default: BK = 49h; BE = 25h; VI = 1Ch; VO = 1Ch.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_MUEDCA_VI_PARAM</name>
          <addressOffset>0x00001584</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0000541C</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_muedca_vi_param_timer</name>
              <description>MU EDCA TIMER, in units of 32 us
Note: SPEC: The MU EDCA Timer field (8b) indicates the duration of time, in units of 8 TUs</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_muedca_vi_param_cw</name>
              <description>ECWmin and ECWmax encode the values of Cwmin and Cwmax respectively in an exponent form. Ex: Cwmax = 2^(ECWmax)-1
Default: BK = Ah/5h; BE = Ah/5h; VI = 5h/4h; VO = 4h/3h.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_muedca_vi_param_aifs</name>
              <description>Arbitrary Inter frame space
In unit of microsecond. AIFS indicates the time a non-AP QSTA should defer before either invoking a backoff or starting a transmission
Default: BK = 49h; BE = 25h; VI = 1Ch; VO = 1Ch.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_MUEDCA_BE_PARAM</name>
          <addressOffset>0x00001588</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0000A525</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_muedca_be_param_timer</name>
              <description>MU EDCA TIMER, in units of 32 us
Note: SPEC: The MU EDCA Timer field (8b) indicates the duration of time, in units of 8 TUs</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_muedca_be_param_cw</name>
              <description>ECWmin and ECWmax encode the values of Cwmin and Cwmax respectively in an exponent form. Ex: Cwmax = 2^(ECWmax)-1
Default: BK = Ah/5h; BE = Ah/5h; VI = 5h/4h; VO = 4h/3h.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_muedca_be_param_aifs</name>
              <description>Arbitrary Inter frame space
In unit of microsecond. AIFS indicates the time a non-AP QSTA should defer before either invoking a backoff or starting a transmission
Default: BK = 49h; BE = 25h; VI = 1Ch; VO = 1Ch.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_MUEDCA_BK_PARAM</name>
          <addressOffset>0x0000158C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0000A549</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_muedca_bk_param_timer</name>
              <description>MU EDCA TIMER, in units of 32 us
Note: SPEC: The MU EDCA Timer field (8b) indicates the duration of time, in units of 8 TUs</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_muedca_bk_param_cw</name>
              <description>ECWmin and ECWmax encode the values of Cwmin and Cwmax respectively in an exponent form. Ex: Cwmax = 2^(ECWmax)-1
Default: BK = Ah/5h; BE = Ah/5h; VI = 5h/4h; VO = 4h/3h.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_muedca_bk_param_aifs</name>
              <description>Arbitrary Inter frame space
In unit of microsecond. AIFS indicates the time a non-AP QSTA should defer before either invoking a backoff or starting a transmission
Default: BK = 49h; BE = 25h; VI = 1Ch; VO = 1Ch.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_TB_MUEDCA_CTRL</name>
          <addressOffset>0x00001590</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xA2000005</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TB_TIMER_CNT_INT</name>
              <description>the initial value of th_timer, unit: us</description>
              <bitRange>[31:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HE_TB_PPSU_ONLY_EN</name>
              <description>asserted if the TWT is trigger-enabled TWT</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TB_TXPAUSE</name>
              <description>valid if BIT_HE_TB_PPSU_ONLY_EN = 1; select pause edca or not during TWT-SP; default is 1, pause.
A TWT requesting STA should not transmit frames to the TWT responding STA outside of negotiated TWT SPs and should not transmit frames that are not contained within HE TB PPDUs to the TWT responding STA within trigger-enabled TWT SPs</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>dummy</name>
              <description></description>
              <bitRange>[24:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_UPD_BEAM_CHG</name>
              <description>1: txcmd_beam_change TIE 0
0: first PPDU in TXOP will assert txcmd_beam_change</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_set_muedcatimer_tf</name>
              <description>1: enable HW updating MUEDCATimer after Tx HE TB PPDU
0: disable HW updating MUEDCATimer after Tx HE TB PPDU</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_muedca_en</name>
              <description>1: enable HW updating MUEDCATimer
0: disable HW updating MUEDCATimer</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CCA_NAV_CHK</name>
          <addressOffset>0x00001594</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00FF1F7F</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TB_CHK_EDCCA_PER20_BITMAP_SIFS</name>
              <description>When TF CS required = 1 and EDCCA_PER20_BITMAP_SIFS assert in the SIFS before HE TB PPDU TX
0: Can TX
1: Cannot TX</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TB_CHK_BASIC_NAV</name>
              <description>When TF CS required = 1 and BAISC NAV &gt; 0 , in the SIFS before HE TB PPDU TX
0: Can TX
1: Cannot TX</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TB_CHK_ZGBTCCA</name>
              <description>When TF CS required = 1 and ~GNT_WL(BT/ZigBee) assert in the SIFS before HE TB PPDU TX
0: Can TX
1: Cannot TX</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TB_CHK_EDCCA</name>
              <description>When TF CS required = 1 and EDCCA assert in the SIFS before HE TB PPDU TX
0: Can TX
1: Cannot TX</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TB_CHK_CCA_S80</name>
              <description>When TF CS required = 1 and SECONDARY_CCA_80 assert in the SIFS before HE TB PPDU TX
0: Can TX
1: Cannot TX</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TB_CHK_CCA_S40</name>
              <description>When TF CS required = 1 and SECONDARY_CCA_40 assert in the SIFS before HE TB PPDU TX
0: Can TX
1: Cannot TX</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TB_CHK_CCA_S20</name>
              <description>When TF CS required = 1 and SECONDARY_CCA_20 assert in the SIFS before HE TB PPDU TX
0: Can TX
1: Cannot TX</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TB_CHK_CCA_P20</name>
              <description>When TF CS required = 1 and CCA assert in the SIFS before HE TB PPDU TX
0: Can TX
1: Cannot TX</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SR_CTN_CHK__NAV</name>
              <description>When BASIC or INTRA NAV &gt; 0  in the AIFS/Backoff before active TX
0: Can backoff, can TX
1: Cannot backoff, cannot TX</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SR_CTN_CHK_ZGBTCCA</name>
              <description>When  ~GNT_WL(BT/ZigBee)  assert in the AIFS/Backoff before active TX
0: Can backoff, can TX
1: Cannot backoff, cannot TX</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SR_CTN_CHK_EDCCA</name>
              <description>When EDCCA assert in the AIFS/Backoff before active TX
0: Can backoff, can TX
1: Cannot backoff, cannot TX</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SR_CTN_CHK_CCA_S40</name>
              <description>When SECONDARY_CCA_40 assert in the AIFS/Backoff before active TX
0: Can backoff, can TX
1: Can backoff, cannot TX</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SR_CTN_CHK_CCA_S20</name>
              <description>When SECONDARY_CCA_20 assert in the AIFS/Backoff before active TX
0: Can backoff, can TX
1: Can backoff, cannot TX</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTN_CHK_INTRA_NAV</name>
              <description>When INTRA NAV &gt; 0  in the AIFS/Backoff before active TX
0: Can backoff, can TX
1: Cannot backoff, cannot TX</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTN_CHK_BASIC_NAV</name>
              <description>When BASIC NAV &gt; 0  in the AIFS/Backoff before active TX
0: Can backoff, can TX
1: Cannot backoff, cannot TX</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTN_CHK_ZGBTCCA</name>
              <description>When ~GNT_WL(BT/ZigBee) assert in the AIFS/Backoff before active TX
0: Can backoff, can TX
1: Cannot backoff, cannot TX</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTN_CHK_EDCCA</name>
              <description>When EDCCA assert in the AIFS/Backoff before active TX
0: Can backoff, can TX
1: Cannot backoff, cannot TX</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTN_CHK_CCA_S40</name>
              <description>When SECONDARY_CCA_40 assert in the AIFS/Backoff before active TX
0: Can backoff, can TX
1: Can backoff, cannot TX</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTN_CHK_CCA_S20</name>
              <description>When SECONDARY_CCA_20 assert in the AIFS/Backoff before active TX
0: Can backoff, can TX
1: Can backoff, cannot TX</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTN_CHK_CCA_P20</name>
              <description>When CCA assert in the AIFS/Backoff before active TX
0: Can backoff, can TX
1: Cannot backoff, cannot TX</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TSFT_HIOE_RFON_L</name>
          <addressOffset>0x00001598</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TSFT_AT_HIOE_RFON_L</name>
              <description>when hioe_int_chn_on asserted, latch the tsft[31:0] (select port by 0x1520[0])</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TSFT_HIOE_RFON_H</name>
          <addressOffset>0x0000159C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TSFT_AT_HIOE_RFON_H</name>
              <description>when hioe_int_chn_on asserted, latch the tsft[63:32] (select port by 0x1520[0])</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TSFT_BCN_CCAUP_L</name>
          <addressOffset>0x000015A0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TSFT_AT_BCN_CCA_UP_L</name>
              <description>when CCA asserted, latch the tsft[31:0] (select port by 0x1520[0]).
 updated to this register after judging that it is a beacon frame</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TSFT_BCN_CCAUP_H</name>
          <addressOffset>0x000015A4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TSFT_AT_BCN_CCA_UP_H</name>
              <description>when CCA asserted, latch the tsft[63:32] (select port by 0x1520[0]).
 updated to this register after judging that it is a beacon frame</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_POF_BCNELY_AGG_TBTT</name>
          <addressOffset>0x000015A8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000003</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_EN_P0_TBTT_CNT</name>
              <description>enable the tbtt counter function.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P0_TBTT_CNT_THRS</name>
              <description>P0's TBTT counter threshold . Valid when  BIT_EN_P0_TBTT_CNT = 1. when tbtt_cnt &gt;= BIT_P0_TBTT_CNT_THRS, assert p0_tbtt_agg_int.</description>
              <bitRange>[23:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_POF_ELY_AGG</name>
              <description>update bcn_ely_agg initial value of P0 to BIT_INI_POF_ELY_AGG_CNT
1: enable
0: disable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_INI_POF_ELY_AGG_CNT</name>
              <description>bcn_ely_agg initial value of P0. Valid when BIT_EN_POF_ELY_AGG = 1</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>page6</name>
      <groupName>WIFI</groupName>
      <baseAddress>0x40000000</baseAddress>
      <size>0x00001700</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00001700</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>REG_WMAC_CR</name>
          <addressOffset>0x00000600</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x04000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TXPWR_CTL_CLK_EN</name>
              <description>IF set to 1, txpwr_ctrl clock enable, only work when BIT_TXPWR_CTL_ENGCLK set to 1,</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXPWR_CTL_ENGCLK</name>
              <description>If set to 1, enable txpwr_ctrl clock gating function.</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WLAN_RX_REQ_SIFS_CLR</name>
              <description>When set, enable sifs clear wlan_rx_req</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_WAIT_HE_SIGB</name>
              <description>When set, will not wait and check he mu sigb and ndp info</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_20MHZBW</name>
              <description></description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_M11J</name>
              <description></description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATA_FW_STS_FILTER</name>
              <description>When this bit is set,Accept data frame in partial length condition.
It will take effect when RxFilter3-5 is disabled and RxFilter 0-2 is enabled.</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTRL_FW_STS_FILTER</name>
              <description>When this bit is set,Accept control frame in partial length condition.
It will take effect when RxFilter3-5 is disabled and RxFilter 0-2 is enabled.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGNT_FW_STS_FILTER</name>
              <description>When this bit is set,Accept management frame in partial length condition.
It will take effect when RxFilter3-5 is disabled and RxFilter 0-2 is enabled.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FWRX_EN</name>
              <description>Enable to receive pkt into FWFF, default 1'b0. When Fw needs to receive pkt, this bit must be set to 1'b1</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PHYSTS_PKT_CTRL</name>
              <description>If set to 1,HW will send interrupt (0x124[26]) only when there is phy status valid fwsts pkt written into FWFF</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_APPHDR_MIDSRCH_FAIL</name>
              <description>If set to 1, Hw will append 16 bytes MAC header into FWFF when MACID search fail</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FWPARSING_EN</name>
              <description>If set to 1, mac header and rx desc of the pkt into rx buff are also received into FWFF.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_APPEND_MHDR_LEN</name>
              <description>Appended MAC header length, unit in 32 bytes</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_APSDOFF</name>
              <description>1:MAC issue sleep signal to disable BB/AFE/RF TRX function. After MAC has finished, APSDOFF_STATUS will report"1".
0:MAC issue wakeup signal to recall BB/AFE/RF back to RX idle mode. After MAC has finished,APSDOFF _STATUS will report "0".</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_rxtrig_tx_chk</name>
              <description>when set to 1,when tx type is tb,will chk fcs of trigger frame and if phy_rst is high when sifs reach,set 0 will not check</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_rxtrig_dis_upd_aid</name>
              <description>1:will only update aid_fit info when the first trigger in a ppdu is parsered
0:will update aid_fit info every time when two or more trigger aggregate in a ppdu</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_rxtrig_dis_chk_a1</name>
              <description>1:will not check if A1 of trigger frame is my unicast or broadcast address
0:will check if A1 of trigger frame is my unicast or broadcast address</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_dis_chk_new_tbreq</name>
              <description>1:rxtrig req_in will assert every time when aid fit if two or more trigger aggregate in a ppdu
0:rxtrig req_in will not assert again when there is already a correct trigger received</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_dis_abort_tb_ely</name>
              <description>1:will abort ptcl generating tb data when macrx_active is low
0:will abort ptcl generating tb data when new rxtrig req_in is assert</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_IC_MACPHY_M</name>
              <description>To make ASIC become BB+RF only, and put out the MAC_PHY interface</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TCR</name>
          <addressOffset>0x00000604</addressOffset>
          <size>32</size>
          <description>Transmission Configuration Register</description>
          <resetValue>0x28300000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_WMAC_EN_RTS_ADDR</name>
              <description>when set to 1, enable change RTS multicast address</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_DISABLE_CCK</name>
              <description>when set to 1, disable cck rate packet</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_RAW_LEN</name>
              <description>1: use raw ppdu_len
0: use 4byte alignment ppdu_len</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_NOTX_IN_RXNDP</name>
              <description>1: block original tx when receiving NDP packet</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_EN_EOF</name>
              <description>when set to 1, enable single ampdu for qos packet. In  early mode,not set to 1.</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_BF_SEL</name>
              <description>1: set ndp_rx_standby when rx ppdu of ndpa end;
0: set ndp_rx_standby when rx ndpa packet fcs end;</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_ANTMODE_SEL</name>
              <description>0:4x1 mode, 1:8x1 mode</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_TCRPWRMGT_HWCTL</name>
              <description>If this bit is set to 1, MAC will overwrite power bit of frame control according to 
PWR_ST.  (only for RTS/CTS/ACK/CFEND/BA/BAR frames)</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_SMOOTH_VAL</name>
              <description>smooth value of plcp header HTSIG2</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_EN_SCRAM_INC</name>
              <description>Increase 1 in service field scrambler seed per tx end</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_UNDERFLOWEN_CMPLEN_SEL</name>
              <description>compare length selector for enable condition of underflow, consider plcp header when set 1</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FETCH_MPDU_AFTER_WSECRDY</name>
              <description>If set to 1,mactx_mpdu_gen will fetch mpdu after wsec is ready when sectype is not tkip/wep40/wep104</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_TCR_EN_20MST</name>
              <description>when set to 1, enable ndpa signaling TA when BW =20MHz</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_DIS_SigTa</name>
              <description>when set to 1, disable signaling TA information for response packet</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_DIS_A2B0</name>
              <description>when set to 1, not check bit 0 of rx a2</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_MSK_SIGBCRC</name>
              <description>when set to 1, mask sigb crc in service field  for vht packet</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_TCR_ERRSTEN_3</name>
              <description>Use phytxend_ps to reset mactx state machine</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_TCR_ERRSTEN_2</name>
              <description>If txd fifo underflow when txtype is cmpba, reset mactx state machine</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_TCR_ERRSTEN_1</name>
              <description>If txd fifo underflow, reset mactx state machine</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_TCR_ERRSTEN_0</name>
              <description>Phytxend_ps comes but mactx still active, reset mactx state machine</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_TCR_TXSK_PERPKT</name>
              <description>Search key for each mpdu</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_TCR_ICV</name>
              <description>Integrity Check Value. This bit indicates the existence of an ICV appended to an encipherment packet.
1: No ICV appended
0: ICV appended</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_CFENDFOR</name>
              <description>CF-End Frame Format.The Address 2 field of CF-End is defined to be the address of the STA contained in the AP, but in 802.11n a STA can also send CF-End.The Address 2 field is not specified clearly in this case. This register chooses between MAC ID of the STA or BSSID of the network.
0: BSSID
1: MAC ID</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_TCR_CRC</name>
              <description>Append 32-bit Cyclic Redundancy Check. This bit indicates the existence of a CRC32 appended to a packet.
1: No CRC32 appended
0: A CRC32 is appended</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_TCR_PWRMGT_CTL</name>
              <description>If this bit is set to 1, MAC will overwrite power bit of frame control according to PWR_ST. (only for data frame)</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_TCR_PWRMGT_VAL</name>
              <description>MAC will overwrite power bit of frame control according to PWR_ST.(only for data frame)</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_TCR_UPD_TIMIE</name>
              <description>when set to 1, enable hw to update beacon's time field</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_TCR_UPD_HGQMD</name>
              <description>when set to 1, enable HGQ  set moredata bit in Frame control field</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_TCR_VHTSIGA1_TXPS</name>
              <description>This bit controls TXOP_PS_NOT_ALLOWED bit value of VHT-SIG-A1 field in TX VHT packets
1: TXOP_PS_NOT_ALLOWED is set to 1
0: TXOP_PS_NOT_ALLOWED is set to 0</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_TCR_PADSEL</name>
              <description>AMPDU Padding pattern selection
0: 32-bit Zero padding, 
1: Zero length delimiter.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_TCR_DISGCLK</name>
              <description>when set to 1,disable MACTX clock gating control.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RCR</name>
          <addressOffset>0x00000608</addressOffset>
          <size>32</size>
          <description>Receive Configuration Register</description>
          <resetValue>0x04000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_APP_FCS</name>
              <description>When set, wmac RX will append FCS after payload.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_APP_MIC</name>
              <description>When this bit is set to 1, MACRX will retain the MIC at the bottom of the packet. Otherwise, MIC will be removed and reported the status in RXDESC. When a MPDU is encrypted with TKIP without MIC, MACRX will ignore this option, that is, MIC must be remained in back of the plain text.</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_APP_ICV</name>
              <description>When this bit is set to 1, MACRX will retain the ICV at the bottom of the packet. Otherwise, MIC will be removed and reported the status in RXDESC.</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_APP_PHYSTS</name>
              <description>Append RXFF0 PHY Status Enable
When this bit is set, then PHY Status is appended before RX packet in RXFF. When this bit is set, the RX_DRV_INFO_SZ shall be set to include PHY Status report.</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_APP_BASSN</name>
              <description>Append SSN of previous TXBA Enable
When this bit is set, then SSN of previous TXBA is appended as after original RXDESC as the 4-th DW of RXDESC.</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_VHT_DACK</name>
              <description>This bit to control response type for vht single mpdu data packet.
1: ACK as response
0: BA as response</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TCPOFLD_EN</name>
              <description>When set,Enable TCP checksum offload</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ENMBID</name>
              <description>Enable Multiple Bssid.
1: Enable. Only response ACK to the packets whose DID(A1) matching to the addresses in the MBSSID CAM Entries.
0: Disable.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LSIGEN</name>
              <description>Enable LSIG TXOP Protection function.
1: Enable. Search KEYCAM for each rx packet to check if LSIGEN bit is set. If LSIGEN is set, then sender support LSIG TXOP protection and we need send response with LSIG TXOP protection
0: Disable</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MFBEN</name>
              <description>Enable immediate MCS Feedback function
1: Enable. When Rx packet with MRQ = 1"b1, then search KEYCAM to find sender"s MCS Feedback function and send response
0: Disable</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DISCHKPPDLLEN</name>
              <description>When set,do not check PPDU while the PPDU length is smaller than 14 byte.</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PKTCTL_DLKEN</name>
              <description>When set,while rx path dead lock occurs, reset rx path</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DISGCLK</name>
              <description>When set,disable macrx clock gating control</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TIMPSR_EN</name>
              <description>When set, enable RX Beacon TIM Parser</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BCMDINT_EN</name>
              <description>Broadcast data packet interrupt enable. When this bit is set, this bit is auto
clear by MAC. As long as a data type broadcast packet is received, this bit
will be set.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_UCMDINT_EN</name>
              <description>Unicast data packet with FC.MD = 1 interrupt enable. When this bit is set, this bit is auto clear by MAC. As long as a data type unicast packet is received, this bit will be set.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXSK_PERPKT</name>
              <description>Executing key search per MPDU</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HTCBFMC</name>
              <description>1: HTC -&gt; MFC
0: MFC-&gt; HTC</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CHK_PREVTXA2</name>
              <description>When set,enable check rxa1 with txa2.</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ACK_CBSSID</name>
              <description>The field effects behavior of response frame,except TB.                                                                                       0:Only A1 match to send response frame.                                                                                                1:A1 match and satisfy BSSID condition will send response frame.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CHKTA_MGNT</name>
              <description>Check Transmitter_BCN
When set to 1, MAC will check the Transmitter Address (A2) of RX beacon or Probe response to determine if this packet belongs to this Transmitter Address (Address 2) . Both in  Infrastructure mode and  Ad-hoc mode.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DISDECNMYPKT</name>
              <description>This bit determines whether hw need to do decryption.
1: If A1 match or broadcast, do decryption.
0: Do decryption.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_AICV</name>
              <description>Accept Integrity Check Value Error packets. This bit determines whether packets with ICV errors will be accepted or rejected.
1: Accept
0: Reject</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ACRC32</name>
              <description>Accept CRC32 Error packets.
When set to 1, packets with CRC32 errors will be accepted. When set to 0,
packets with CRC32 errors will be rejected.
1: Accept
0: Reject</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CBSSID_MGNT</name>
              <description>Check BSSID_BCN
When set to 1, MAC will check the BSSID of RX beacon or Probe
response to determine if this packet belongs to this BSSID.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CBSSID_DATA</name>
              <description>Check BSSID_DATA, To DS, From DS Match Packet.
When set to 1, MAC will check the Rx data type frame"s BSSID, To DS,
and From DS fields, to determine if it is set to Link OK in an Infrastructure
or Ad hoc network. Note this setting is independent of nettype. Driver must
set this bit in ad hoc mode and client mode.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_APWRMGT</name>
              <description>Accept Power Management Packet.
This bit determines whether the RTL8192D will accept or reject packets
with the power management bit set.
1: Accept
0: Reject</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ADD3</name>
              <description>Accept Address 3 Match Packets.
Set this bit to 1 to accept broadcast/multicast data type frames that Address
3 matching RTL8190"s MAC address. This bit is valid only when NETYPE
(bit 3-2, MSR) is set to Link OK on an Infrastructure network.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_AB</name>
              <description>Accept Broadcast packets.
This bit determines whether broadcast packets will be accepted or rejected.
1: Accept
0: Reject</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_AM</name>
              <description>Accept Multicast packets.
This bit determines whether multicast packets will be accepted or rejected.
1: Accept
0: Reject</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_APM</name>
              <description>Accept Physical Match packets.
This bit determines whether physical match packets will be accepted or
rejected.
1: Accept
0: Reject</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_AAP</name>
              <description>Accept Destination Address packets.
This bit determines whether packets with a destination address will be
accepted or rejected. 
1: Accept
0: Reject</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RXPKT_CTL</name>
          <addressOffset>0x0000060C</addressOffset>
          <size>32</size>
          <description>RX Packet Control Register</description>
          <resetValue>0x04000410</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_APP_PHYSTS_PER_SUBMPDU</name>
              <description>When this bit is set to 1,append phy status for each mpdu if phy status is valid. Otherwise,append phy status for each ppdu.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_APP_MH_SHIFT_VAL</name>
              <description>When this bit is set to 1,append MAC header shift value in rx descriptor,otherwise, not append</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_ENSHIFT</name>
              <description>MAC header shift function enable signal in MACRX</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RX_DRVINFO_SZ</name>
              <description>RX DESC Driver Info Size: For RXPKTBUF layout, this field indicates the offset starting from the end of RXDESC to the beginning of RX packet. The unit is 8-byte. This value will be copied to DRV_INFO_SIZE field in RXDESC.</description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MBID_EN</name>
              <description></description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MBID_BCNNO</name>
              <description></description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RX_DLK_TIME</name>
              <description>macrx dead lock timer timeout value (unit in 4us). As data_on is deasserted and no RXD is received but macrx still waits coming RXD, the deadlock timer will be enabled in this case</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPKTLMT</name>
              <description>RX PKT Upper Limit. The unit is 512 bytes. When "0", no RX limit is forced.</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MACID</name>
          <addressOffset>0x00000610</addressOffset>
          <size>32</size>
          <description>MAC ID Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MACID_V1</name>
              <description>MAC Identification Number Register BIT[31:0]</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MACID_H</name>
          <addressOffset>0x00000614</addressOffset>
          <size>32</size>
          <description>MAC ID Register</description>
          <resetValue>0x00030000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_AP_BSSID_FIT_UC</name>
              <description>When set1,bssid fit when AP port0 rx unciast data packet</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_PORT1</name>
              <description>When set1,enable PORT1</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_PORT0</name>
              <description>When set1,enable PORT0</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MACID_H</name>
              <description>MAC Identification Number Register BIT[47:32]</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BSSID</name>
          <addressOffset>0x00000618</addressOffset>
          <size>32</size>
          <description>BSSID Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BSSID_V1</name>
              <description>Basic Station Set Identification BIT[31:0]</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BSSID_H</name>
          <addressOffset>0x0000061C</addressOffset>
          <size>32</size>
          <description>BSSID Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BSSID_H</name>
              <description>Basic Station Set Identification BIT[47:32]</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MAR</name>
          <addressOffset>0x00000620</addressOffset>
          <size>32</size>
          <description>Multicast Address Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MAR_V1</name>
              <description>Multicast Address Register BIT[31:0]. The value of this register is written by the driver to specify the type of multicast address supported by RTL8192D. The value is created by a hashed calculation that is also implemented by the hardware for multicast address filtering.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MAR_H</name>
          <addressOffset>0x00000624</addressOffset>
          <size>32</size>
          <description>Multicast Address Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MAR_H</name>
              <description>Multicast Address Register BIT[63:32].The value of this register is written by the driver to specify the type of multicast address supported by RTL8192D. The value is created by a hashed calculation that is also implemented by the hardware for multicast address filtering.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MBIDCAMCFG_1</name>
          <addressOffset>0x00000628</addressOffset>
          <size>32</size>
          <description>MBSSID CAM Configuration Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MBIDCAM_WDATA_L</name>
              <description>BSSID[31:0]</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MBIDCAM_CFG</name>
          <addressOffset>0x0000062C</addressOffset>
          <size>32</size>
          <description>MBSSID CAM Configuration Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MBIDCAM_POLL</name>
              <description>Pooling bit.</description>
              <bitRange>[31:31]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_MBIDCAM_WT_EN</name>
              <description>Write Enable.</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MBIDCAM_DA_EN</name>
              <description>CAM Direct Acess Enable</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MBIDCAM_ADDR_V1</name>
              <description>CAM Address</description>
              <bitRange>[28:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MBIDCAM_VALID</name>
              <description>CAM Valid bit.</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LSIC_TXOP_EN</name>
              <description>LSIG TXOP enable</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTS_EN</name>
              <description>Dual CTS/CFE enable</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MBIDCAM_RWDATA_H</name>
              <description>BSSID[47:32]</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WMAC_TCR_CTL</name>
          <addressOffset>0x00000630</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x08860450</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_ZLD_NUM</name>
              <description>Fetch zero length delimiter number(unit : 4bytes) when mactx underflow</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_UDF_THSD_V1</name>
              <description>BIT_UDF_THSD[7]=1,enable underflow recovery;r_UDF_THSD[7]=0,disable underflow recovery;
BIT_UDF_THSD[6:0]: when mac_wrptr - PHY_rdptr is less than this value, set underflow;</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_UDF_THSD_VALUE</name>
              <description>Underflow threshold</description>
              <bitRange>[22:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_TCR_TSFT_OFS</name>
              <description>BIT_WMAC_TCR_TSFT_OFS[7:0] is for cck stamp time offset; 
BIT_WMAC_TCR_TSFT_OFS[15:8] is for ofdm rate time offset;</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_STMP_THSD</name>
          <addressOffset>0x00000634</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000802</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_WMAC_TCR_E_TSFT_OFS</name>
              <description>BIT_WMAC_TCR_TSFT_OFS[7:0] is for ht/vht/he stamp time offset;</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_STMP_THSD</name>
              <description>when PHY_rdptr is greater than this value, then latch STMP value from TSFT</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_USTIME_EDCA</name>
          <addressOffset>0x00000638</addressOffset>
          <size>32</size>
          <description>US Time Tuning for EDCA Register</description>
          <resetValue>0x100A0028</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_SPEC_SIFS_OFDM</name>
              <description>The spec SIFS value for duration calculation</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SPEC_SIFS_CCK</name>
              <description>The spec SIFS value for duration calculation</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_USTIME_EDCA</name>
              <description>Sets the microsecond time unit used by MAC EDCA clock.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RESP_SIFS_CCK</name>
          <addressOffset>0x0000063C</addressOffset>
          <size>32</size>
          <description>Response SIFS for CCK Register</description>
          <resetValue>0x0007E02D</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_ACKTO_CCK</name>
              <description>This register sets the Ack time out value after Tx unicast packet with CCK rate. It is in units of us.</description>
              <bitRange>[23:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ACKTO_OFDM</name>
              <description>This register sets the Ack time out value after Tx unicast packet. It is in units of us.</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ACKTO</name>
          <addressOffset>0x00000640</addressOffset>
          <size>32</size>
          <description>ACK Timeout Register</description>
          <resetValue>0x013A002D</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_EIFS</name>
              <description>This register sets the EIFS value mentioned in 802.11 specification. It is in
units of us. To receive 1Mbps ACK frame, EIFS = SIFS + 144us (preamble
length) + 48us (PLCP header length) + 112us (14 bytes of data) = 314us.</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_resp_ersu_disuse_rx</name>
              <description>0:rx er su will response tx er su</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_resp_dcm_disuse_rx</name>
              <description>0:rx dcm will response tx dcm when ctrl info is valid and inf0_dcm=1</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTS2TO</name>
              <description>This register sets the CTS2 time out value after CTS1 in Dual CTS sequence. It is in units of us.</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_NAV_THRSHOLD</name>
          <addressOffset>0x00000650</addressOffset>
          <size>32</size>
          <description>NAV Threshold Register</description>
          <resetValue>0x00000426</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_NAV_UPBDY</name>
              <description>When NAV update is beyond this value, then NAV update is aborted. When this field is 0x00, NAV_UPPER function is disable. The unit is 128us.</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RxMyRTS_NAV</name>
              <description>RX my RTS NAV. As rx my unicast RTS and RxMyRTS_NAV is not equal to zero, then rx NAV is set to wait response transition time and RxMyRTS_NAV to avoid contention with the TXOP originator. If RxMyRTS_NAV is equal to zero, this mechanism is disabled</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RTS_RST_DUR</name>
              <description>RTS NAV Reset Time. This is the value in us, not including the time of CTS frame, to reset the NAV set by an RTS frame if no PHY indication occurred during this time. Refer to 802.11 1999 Section 9.2.5.4 for detailed description.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BACAMCMD</name>
          <addressOffset>0x00000654</addressOffset>
          <size>32</size>
          <description>Block ACK CAM Command Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BACAM_POLL</name>
              <description>Polling bit BA CAM</description>
              <bitRange>[31:31]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_BACAM_RST</name>
              <description>Set 1 to reset BA CAM. Hardware will set the invalid bit for all entries. After reset is finished this bit is reset to 0.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BACAM_RW</name>
              <description>Set 1 = Write, set 0 = Read</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXSBMPMOD</name>
              <description>Bit[15]: if macrx_dma idle, grant txsbmp_req
Bit[14]: if macrx is idle, grant txsbmp_req
00: If FSM is idle, grant txsbmp_req
01: If FSM and mac rx is idle, grant txsbmp_req
10: If FSM and macrx_dma is idle, grant txsbmp_req
11: if FSM, macrx and macrx_dma is idle, grant txsbmp_req</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXBACAM_DA_EN</name>
              <description>CAM Direct Acess enable</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BACAM_AD</name>
              <description>BA CAM address. Memory is double-word access.</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BACAM_WD</name>
          <addressOffset>0x00000658</addressOffset>
          <size>32</size>
          <description>Block ACK CAM Content Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BA_CONTENT_L</name>
              <description>Used for CAM content read and write access register. Because BA CAM is 64 bit access, the double word (32-bit) responds to the lower 32 bits of CAM content.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BACAM_WD_H</name>
          <addressOffset>0x0000065C</addressOffset>
          <size>32</size>
          <description>Block ACK CAM Content Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BA_CONTENT_H</name>
              <description>Used for CAM content read and write access register. Because BA CAM is 64 bit access, the double word (32-bit) responds to the upper 32 bits of CAM content.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_LBK_DLY</name>
          <addressOffset>0x00000660</addressOffset>
          <size>32</size>
          <description>Loopback Delay Register</description>
          <resetValue>0x00000019</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BITMAP_FLAG_VO</name>
              <description>When BIT_BITMAP_VO = 1, 
HW will check received packet's sequence number by BIT_BITMAP_CONDITION, and clear the bit after occur one time which received the correct sequence number.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BITMAP_FLAG_VI</name>
              <description>When BIT_BITMAP_VI = 1, 
HW will check received packet's sequence number by BIT_BITMAP_CONDITION, and clear the bit after occur one time which received the correct sequence number.</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BITMAP_FLAG_BE</name>
              <description>When BIT_BITMAP_BE = 1, 
HW will check received packet's sequence number by BIT_BITMAP_CONDITION, and clear the bit after occur one time which received the correct sequence number.</description>
              <bitRange>[29:29]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BITMAP_FLAG_BK</name>
              <description>When BIT_BITMAP_BK = 1, 
HW will check received packet's sequence number by BIT_BITMAP_CONDITION, and clear the bit after occur one time which received the correct sequence number.</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BITMAP_CONDITION</name>
              <description>ADDBA condition:
0: HW start sequence - 64.
1: HW start sequence - 128.
2: HW start sequence - 256.
3: HW start sequence - 512.</description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BITMAP_SSNBK_COUNTER_CLR</name>
              <description>Clear BIT_BITMAP_SSNBK_COUNTER.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BITMAP_FORCE</name>
              <description>Under the BIT_BITMAP_EN = 1 condition.
1: Rx's packet always checks sequence number by BIT_BITMAP_CONDITION.
0: Disable</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPKT_TYPE</name>
              <description>The type and subtype field of frame control of rx packet</description>
              <bitRange>[23:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_TXACT_IND</name>
              <description>Indicate MAC/PHY is busy to tx packet</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RXACT_IND</name>
              <description>Indicate MAC is busy to rx packet</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BITMAP_SSNBK_COUNTER</name>
              <description>Count the sequence number out of BITMAP condition (0x663[3:2]).</description>
              <bitRange>[15:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BITMAP_EN</name>
              <description>1:Enable of counter and WMAC_BITMAP_CTL(0x663)
0:Disable function</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BACAM_RPMEN</name>
              <description>1:Enable repeat mode
0:Disable function</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LBK_DLY</name>
              <description>Loopback Delay. In unit of 'us'; indicates the delay after which the tdrdy_mac starts. In wep/tkip mode,
the delay should be larger than 15, because the initial delay of security is about 1320 cycles, approximately to 16.5 us.</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RXERR_RPT</name>
          <addressOffset>0x00000664</addressOffset>
          <size>32</size>
          <description>RX Error Report Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RXERR_RPT_SEL_V1_3_0</name>
              <description>Rx packet counter report selection bit3~bit0
RXERR_RPT_SEL[25,26,31:28]: Counter description
6'd0: OFDM MPDU OK counter
6'd1: OFDM MPDU Fail counter
6'd2: OFDM False Alarm counter
6'd3: CCK MPDU OK counter
6'd4: CCK MPDU Fail counter
6'd5: CCK False Alarm counter;
6'd6: HT MPDU OK counter
6'd7: HT MPDU Fail counter
6'd8: HT PPDU PLCP ok counter
6'd9: HT False Alarm counter
6'd10: Rx full drop packet counter
6'd11: RSVD
6'd12: user define 0 counter
6'd13: user define 1 counter
6'd14: user define 2 counter
6'd15: user define 3 counter
6'd16: VHT SU MPDU OK counter
6'd17: VHT SU MPDU Fail counter
6'd18: VHT SU PPDU plcp ok counter
6'd19: VHT SU False Alarm counter
6'd20: invalid_pkt counter
6'd21: VHT MU MPDU OK counter
6'd22: VHT MU MPDU Fail counter
6'd23: VHT MU PPDU plcp ok counter
6'd24: VHT MU False Alarm counter
6'd25: HE SU MPDU OK counter
6'd26: HE SU MPDU Fail counter
6'd27: HE SU PPDU plcp ok counter
6'd28: HE SU False Alarm counter
6'd29: HE MU MPDU OK counter
6'd30: HE MU MPDU Fail counter
6'd31: HE MU PPDU plcp ok counter
6'd32: HE MU False Alarm counter
6'd33: drop packet counter</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXERR_RPT_RST</name>
              <description>Write "1" to set the counter to zero. One pulse</description>
              <bitRange>[27:27]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_RXERR_RPT_SEL_V1_4</name>
              <description>Rx packet counter report selection bit4</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXERR_RPT_SEL_V1_5</name>
              <description>Rx packet counter report selection bit5</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_UD_Select_BSSID_1</name>
              <description>{24,22} Select matched BSSID:
2'b0: Port 0
2'b1: Port 1
otherwise, do not care bssid match or not</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_W1S</name>
              <description>Write One Setting, it is only valid for RXERR_RPT_SEL (4'd12 ~ 4'd15)</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_UD_Select_BSSID_0</name>
              <description>Select BSSID bit0</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_UD_Sub_Type</name>
              <description>User defined: SubType</description>
              <bitRange>[21:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_UD_Type</name>
              <description>User defined: Type</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RPT_COUNTER</name>
              <description>The reported counter value corresponding to Report type selected.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WMAC_TRXPTCL_CTL</name>
          <addressOffset>0x00000668</addressOffset>
          <size>32</size>
          <description>WMAC TX/RX Protocol Control Register</description>
          <resetValue>0x0EA01000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BLK_EDCA_BBSLP</name>
              <description>Block EDCA Tx while BB in sleep state</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BLK_EDCA_BBSBY</name>
              <description>Block EDCA Tx while BB in standby state</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_STOP_UPDNAV</name>
              <description>When this bit set 1. If RX packet with EDCA_REF is low, not update NAV.</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RST_EDCA_ACKTO</name>
              <description>While in ACKTO duration, reset scheduler top to TX</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RST_EDCA_EIFS</name>
              <description>While in EIFS duration, reset scheduler top to TX</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PLCPCHK_RST_EIFS</name>
              <description>Reset EIFS counter while receive correct PLCP.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CCA_RST_EIFS</name>
              <description>Reset EIFS counter while CCA on</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_UPD_MYRXPKTNAV</name>
              <description>Do not update NAV, while receiving my packet.</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EARLY_TXBA</name>
              <description>While phyrxon down, mac_rxactive on. Ignore mac rx busy, respond BA immediately.</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RESP_CHNBUSY</name>
              <description>Define channel busy condition in responder to determine RX busy
1: PHYRXON (OFDM_VBON/CCKCCA)
0: CCA (CCKCCA/OFDMCCA)</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RESP_DCTS_EN</name>
              <description>Enable responder send dual CTS for responding Rx RTS</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RESP_DCFE_EN</name>
              <description>Enable responder send dual CF-END for responding RX CF-END</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RESP_SPLCPEN</name>
              <description>Enable responder send SPLCP CCK response for acknowledging Rx SPLCP CCK
packet</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RESP_SGIEN</name>
              <description>Enable responder send SGI HT-OFDM response for acknowledging Rx SGI
HT-OFDM packet</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RESP_LDPC_EN</name>
              <description>if rxpkt with ldpc, response pkt with ldpc</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_RESP_ACKINCCA</name>
              <description>Disable to response ack when cca goes high after SIFS</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_RESP_CTSINCCA</name>
              <description>8812
Disable to response cts when cca goes high after SIFS</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SECOND_CCA_TIMER</name>
              <description>8812
The maximum time interval in us that secondary cca is pull high
before primary cca When receive duplicated rts. When station
response with cts, if the time that secondary cca pull high before
primary cca is larger than this threshold, then secondary cca is judged
to be interference, otherwise it is judged to the received RTS frame.
default: 3"b0</description>
              <bitRange>[12:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RFMOD</name>
              <description>8812
RF_BW indication, Used to decide response duplicated cts txsc
2"b00: 20M, 2"b01: 40M, 2"b10: 80M
e.g: when RF_BW= 80M, duplicated cts BW= 40M, txsc = 9 or 10
when RF_BW = 40M, duplicated cts BW = 40M, txsc = 0</description>
              <bitRange>[8:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RESP_CTS_DYNBW_SEL</name>
              <description>8812 Response cts bw selection when dynamic rts frame is received
00: current maximum bw indicated by secondary cca
01: bw fall back by one level based on bw in 2"b00 if not reach 20M
10: bw fall back by one level based on bw in 2"b01 if not reach 20M
11: bw fall back by one level based on bw in 2"b10 if not reach 20M
e.g, current maximum bw indicated by secondary_cca is 80M, when set to 2"b00, the response cts bw is 80M, when set to 2"b01, cts bw is 40M, when set to 2"b10 or 2"b11 , cts bw is 20M</description>
              <bitRange>[6:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DLY_TX_WAIT_RXANTSEL</name>
              <description>8188E/8812
In some Cases, the phy status may be received too late to be used in the response
frame. Enable this bit to postpone the tx of response frame until the phy status is
obtained. Otherwise, If the phy status unavailable for its delay, The IOREG value of
0x06D8[6] will be used as before.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXRESP_BY_RXANTSEL</name>
              <description>8188E/8812
Enable responder send the response frame with the antenna selection information
which from the phy status of the previous rx frame.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ORIG_DCTS_CHK</name>
              <description>Txok condition for dual CTS frame exchange:
00: Either one Rx ok
01: 1st one Rx ok
10: 2nd one Rx ok
11: both Rx ok</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WMAC_TRXPTCL_CTL_H</name>
          <addressOffset>0x0000066C</addressOffset>
          <size>32</size>
          <description>WMAC TX/RX Protocol Control Register Higher Bit</description>
          <resetValue>0x00042007</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_ACKBA_TYPSEL</name>
              <description>Determine response type for RX BA, and the definition as the bellow
0: NAV
1: Send ACK
ACKBA_TYPESEL[0]: used for Basic BA
ACKBA_TYPESEL[1]: used for Compression BA
ACKBA_TYPESEL[2]: RSVD
ACKBA_TYPESEL[3]: used for MTID BA</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ACKBA_ACKPCHK</name>
              <description>If set 1, then check ACK Policy of BA control field to determine whether send response or not. When this bit set to 1 and
a. ACK Policy of Rx BA control field is 0, then response type is controlled by ACLBA_TYPESEL.
b. ACK Policy of Rx BA control field is 1, then don't send response
If set 0, then ignore the ACK policy of RX BA control field and response type controlled by ACKBA_TYPESEL
ACKBA_ACKPCHK[0]: used for Basic BA
ACKBA_ACKPCHK[1]: used for Compression BA
ACKBA_ACKPCHK[2]: RSVD
ACKBA_ACKPCHK[3]: used for MTID BA</description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ACKBAR_TYPESEL</name>
              <description>Determine response type for RX BAR, and the definition as the bellow
00: NAV
01: Send BA
10: Send ACK
ACKBAR_TYPESEL[1:0]: used for Basic BAR
ACKBAR_TYPESEL[3:2]: used for Compression BAR
ACKBAR_TYPESEL[5:4]: RSVD
ACKBAR_TYPESEL[7:6]: used for MTID BAR</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ACKBAR_ACKPCHK</name>
              <description>If set 1, then check ACK Policy of BAR control field to determine whether send response or not. When this bit set to 1 and
a. ACK Policy of Rx BAR control field is 0, then response type is controlled by ACLBAR_TYPESEL.
b. ACK Policy of Rx BAR control field is 1, then don't send response
If set 0, then ignore the ACK policy of RX BAR control field and response type
controlled by ACKBA_TYPESEL
ACKBA_ACKPCHK[0]: used for Basic BAR
ACKBA_ACKPCHK[1]: used for Compression BAR
ACKBA_ACKPCHK[2]: RSVD
ACKBA_ACKPCHK[3]: used for MTID BAR</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXBA_IGNOREA2_V1</name>
              <description>Disable check A2 field of RX BA</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_SAVE_ALL_TXOPADDR_V1</name>
              <description></description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_TXCTS_TO_TXOPOWNER_INRXNAV_V1</name>
              <description>together with bit41, implement 802.11ac txop owner function</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_TXBA_AMPDUFCSERR_V1</name>
              <description>Disable to send BA for responding RX AMPDU with FCS error subframe</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_TXBA_RXBARINFULL_V1</name>
              <description>Disable to send BA for responding RX control wrapper BAR dropped by rxpkbuffer full</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_TXCFE_INFULL_V1</name>
              <description>Disable to send CF-END for responding RX control wrapper CF-END dropped by rxpktbuffer full. This bit is valid when RESP_DCFE_EN is set to 1</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_TXCTS_INFULL_V1</name>
              <description>Disable to send CTS for responding RX control wrapper RTS dropped by rxpktbuffer full</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_TXACKBA_INTX_RDG_V1</name>
              <description>If this bit is set, then MAC will Tx ACK/BA to respond  previous rx my unicast packets send by another STA during TX RDG</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_TXACKBA_INTXOP_V1</name>
              <description>If this bit is set, then MAC will Tx ACK/BA to respond previous rx my unitcast packets send by another STA during my TXOP</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_TXCTS_INRXNAV_V1</name>
              <description>Enable to send CTS in Rx NAV</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_TXCTS_INTXOP_V1</name>
              <description>Enable to send CTS for responding RX RTS during our TXOP period</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEYCAMCMD</name>
          <addressOffset>0x00000670</addressOffset>
          <size>32</size>
          <description>CAM Command Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_KEYCAM_POLLING</name>
              <description>Security CAM Polling</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_KEYCAM_CLEAR</name>
              <description>Set to 1 to clear all valid bits in CAM. After reset will self clear to 0.</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_MFBCAM_CLEAR</name>
              <description>Write 1 to clear all MFB value in CAM to 7'h7F. After reset will self clear to 0</description>
              <bitRange>[29:29]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_KEYCAM_DA_EN</name>
              <description>Security CAM Direct Acess Enable</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SECCAM_WE</name>
              <description>Security CAM Write Enable</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_KEYCAM_AD</name>
              <description>Security CAM Address Offset
CAM address is organized into 8 double-words/entry.</description>
              <bitRange>[9:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_KEYCAM_WD</name>
          <addressOffset>0x00000674</addressOffset>
          <size>32</size>
          <description>Security CAM Content Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_KEYCAM_WDATA</name>
              <description>Security CAM Write Content</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CAMREAD</name>
          <addressOffset>0x00000678</addressOffset>
          <size>32</size>
          <description>CAM Read Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_CAMR_DATA</name>
              <description>Security CAM Read Content</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CAMDBG</name>
          <addressOffset>0x0000067C</addressOffset>
          <size>32</size>
          <description>CAM Debug Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_KEYCAM_DBGSEL</name>
              <description>Select TX/RX CAM Information.
Set to 1 to retrieve latest Tx search result.
Set to 0 to retrieve latest Rx search result.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SEC_KEYFOUND_V1</name>
              <description>Security Key Found in CAM
0: key not found
1: key found</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_CAMDBG_SEC_TYPE_V1</name>
              <description>Found security key type</description>
              <bitRange>[14:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_EXT_SECTYPE</name>
              <description>Found security key ext_sectype</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_CAMDBG_MIC_KEY_IDX_V3</name>
              <description>Mic KEY INDEX</description>
              <bitRange>[9:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_CAMDBG_SEC_KEY_IDX_V2</name>
              <description>Security KEY INDEX</description>
              <bitRange>[4:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SECCFG</name>
          <addressOffset>0x00000680</addressOffset>
          <size>32</size>
          <description>Security Configuration Register</description>
          <resetValue>0x0000000C</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RXFILTER_ACTION_1</name>
              <description>Configured by FW, Refer to 0x68E[10] to decide accepting this frame or not</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXFILTER_CATEGORY_1</name>
              <description>Configured by FW, Refer to 0x68E[10] to decide accepting this frame or not</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_GCLK_WAPI</name>
              <description>Disable gated clock control for WAPI engine</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_GCLK_AES</name>
              <description>Disable gated clock control for AES engine.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_GCLK_TKIP</name>
              <description>Disable gated clock control for WEP/TKIP engine.</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_AES_SEL_QC_1</name>
              <description>1: use QC[7] to compute mic
0: not use QC[7] to compute mic</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_AES_SEL_QC_0</name>
              <description>1:use QC[7] to compute ctr
0: not use QC[7] to compute ctr</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_CKECK_BMC</name>
              <description>If this bit is set to 1, key search engine need to check if broadcast/multicast bit matched.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CHK_KEYID</name>
              <description>If this bit is set to 1, key search engine need to check if key ID matched. If this bit is
set to 0, then key ID table must be filled with 2"b00.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXBCUSEDK</name>
              <description>Force RX Broadcast packets Use Default Key
If this bit is set to 1, use default key for RX key search when received packet is broadcast and multicast.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXBCUSEDK</name>
              <description>Force Tx Broadcast packets Use Default Key
If this bit is set to 1, use default key for TX key search when transmitted packet is broadcast and multicast.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_NOSKMC</name>
              <description>No Key Search for Multicast
Setting 1 to disable key search for multicast frames. Used in MBSSID AP mode. Software should manage security encryption and decryption.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SKBYA2</name>
              <description>Search Key by A2
Setting 1 to search security CAM by address 2 for TX and search CAM by address 1 for RX. Setting 0 to search security CAM by address 1 for TX and search CAM by address 2 for RX. Used in MBSSID client mode.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXDEC</name>
              <description>Enable Rx Decryption
Setting 1 to enable Rx hardware decryption.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXENC</name>
              <description>Enable Tx Encryption
Setting to 1 to enable Tx hardware encryption.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXUHUSEDK</name>
              <description>Force RX Unicast Use Default Key
If this bit is set to 1, use default key for RX key search when pairwise key is not found.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXUHUSEDK</name>
              <description>Force Tx Unicast Use Default Key
If this bit is set to 1, use default key for TX key search when pairwise key is not found.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RXFILTER_CATEGORY_ACTION</name>
          <addressOffset>0x00000684</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RXFILTER_ACTION_3</name>
              <description>Configured by FW, Refer to 0x68E[15] to decide accepting this frame or not</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXFILTER_CATEGORY_3</name>
              <description>Configured by FW, Refer to 0x68E[15] to decide accepting this frame or not</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXFILTER_ACTION_2</name>
              <description>Configured by FW, Refer to 0x68E[11] to decide accepting this frame or not</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXFILTER_CATEGORY_2</name>
              <description>Configured by FW, Refer to 0x68E[11] to decide accepting this frame or not</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RXFLTMAP3</name>
          <addressOffset>0x00000688</addressOffset>
          <size>32</size>
          <description>RX Filter Map Group 0</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_CTRLFLT15En_FW</name>
              <description>When set, frames with type=01 and subtype=1111 are received into FWFF.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTRLFLT14En_FW</name>
              <description>When set, frames with type=01 and subtype=1110 are received into FWFF.</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTRLFLT13En_FW</name>
              <description>When set, frames with type=01 and subtype=1101 are received into FWFF.</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTRLFLT12En_FW</name>
              <description>When set, frames with type=01 and subtype=1100 are received into FWFF.</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTRLFLT11En_FW</name>
              <description>When set, frames with type=01 and subtype=1011 are received into FWFF.</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTRLFLT10En_FW</name>
              <description>When set, frames with type=01 and subtype=1010 are received into FWFF.</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTRLFLT9En_FW</name>
              <description>When set, frames with type=01 and subtype=1001 are received into FWFF.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTRLFLT8En_FW</name>
              <description>When set, frames with type=01 and subtype=1000 are received into FWFF.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTRLFLT7En_FW</name>
              <description>When set, frames with type=01 and subtype=0111 are received into FWFF.</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTRLFLT6En_FW</name>
              <description>When set, frames with type=01 and subtype=0110 are received into FWFF.</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTRLFLT5En_FW</name>
              <description>When set, frames with type=01 and subtype=0101 are received into FWFF.</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTRLFLT4En_FW</name>
              <description>When set, frames with type=01 and subtype=0100 are received into FWFF.</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTRLFLT3En_FW</name>
              <description>When set, frames with type=01 and subtype=0011 are received into FWFF.</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTRLFLT2En_FW</name>
              <description>When set, frames with type=01 and subtype=0010 are received into FWFF.</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTRLFLT1En_FW</name>
              <description>When set, frames with type=01 and subtype=0001 are received into FWFF.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTRLFLT0En_FW</name>
              <description>When set, frames with type=01 and subtype=0000 are received into FWFF.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGTFLT15En_FW</name>
              <description>When set, frames with type=00 and subtype=1111 are received into FWFF.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGTFLT14En_FW</name>
              <description>When set, all the frames with type=00 and subtype=1110 are received into FWFF. When set to 0, refer to 0x68E[15:12] for deciding which action noack frames will be accepted</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGTFLT13En_FW</name>
              <description>When set, all the frames with type=00 and subtype=1101 are received into FWFF. When set to 0, refer to 0x68E[11:0] for deciding which action frames will be accepted</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGTFLT12En_FW</name>
              <description>When set, frames with type=00 and subtype=1100 are received into FWFF.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGTFLT11En_FW</name>
              <description>When set, frames with type=00 and subtype=1011 are received into FWFF.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGTFLT10En_FW</name>
              <description>When set, frames with type=00 and subtype=1010 are received into FWFF.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGTFLT9En_FW</name>
              <description>When set, frames with type=00 and subtype=1001 are received into FWFF.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGTFLT8En_FW</name>
              <description>When set, frames with type=00 and subtype=1000 are received into FWFF.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGTFLT7En_FW</name>
              <description>When set, frames with type=00 and subtype=0111 are received into FWFF.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGTFLT6En_FW</name>
              <description>When set, frames with type=00 and subtype=0110 are received into FWFF.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGTFLT5En_FW</name>
              <description>When set, frames with type=00 and subtype=0101 are received into FWFF.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGTFLT4En_FW</name>
              <description>When set, frames with type=00 and subtype=0100 are received into FWFF.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGTFLT3En_FW</name>
              <description>When set, frames with type=00 and subtype=0011 are received into FWFF.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGTFLT2En_FW</name>
              <description>When set, frames with type=00 and subtype=0010 are received into FWFF.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGTFLT1En_FW</name>
              <description>When set, frames with type=00 and subtype=0001 are received into FWFF.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGTFLT0En_FW</name>
              <description>When set, frames with type=00 and subtype=0000 are received into FWFF.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RXFLTMAP5</name>
          <addressOffset>0x0000068C</addressOffset>
          <size>32</size>
          <description>RX Filter Map Group 1</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_ACTIONFLT15EN_FW</name>
              <description>When set, Action noack frame with category = r_RXFILTER_CATEGORY_3(0x686[7:0]) and action = r_RXFILTER_ACTION_3(0x687[7:0]) will be received into FWFF</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ACTIONFLT14EN_FW</name>
              <description>When set, VHT compressed beamforming frame will be received into FWFF.</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ACTIONFLT13EN_FW</name>
              <description>When set, HT compressed beamforming frame will be received into FWFF.</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ACTIONFLT12EN_FW</name>
              <description>When set, CSI frame will be received into FWFF.</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ACTIONFLT11EN_FW</name>
              <description>When set, Action frame with category = r_RXFILTER_CATEGORY_2(0x684[7:0]) and action = r_RXFILTER_ACTION_2(0x685[7:0]) will be received into FWFF</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ACTIONFLT10EN_FW</name>
              <description>When set, Action frame with category = r_RXFILTER_CATEGORY_1(0x682[7:0]) and action = r_RXFILTER_ACTION_1(0x683[7:0]) will be received into FWFF</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ACTIONFLT9EN_FW</name>
              <description>When set, Operating mode notification frame will be received into FWFF.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ACTIONFLT8EN_FW</name>
              <description>When set, Group ID Management frame will be received into FWFF.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ACTIONFLT7EN_FW</name>
              <description>When set, Notify channel width frame will be received into FWFF.</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ACTIONFLT6EN_FW</name>
              <description>When set, DELBA frame will be received into FWFF.</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ACTIONFLT5EN_FW</name>
              <description>When set, ADDBA Response frame will be received into FWFF.</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ACTIONFLT4EN_FW</name>
              <description>When set, ADDBA Request frame will be received into FWFF.</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ACTIONFLT3EN_FW</name>
              <description>When set, DELTS frame will be received into FWFF.</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ACTIONFLT2EN_FW</name>
              <description>When set, ADDTS Response frame will be received into FWFF.</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ACTIONFLT1EN_FW</name>
              <description>When set, ADDTS Request frame will be received into FWFF.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ACTIONFLT0EN_FW</name>
              <description>When set, Channel Switch Announcement frame will be received into FWFF.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATAFLT15En_FW</name>
              <description>When set, frames with type=10 and subtype=1111 are received into FWFF.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATAFLT14En_FW</name>
              <description>When set, frames with type=10 and subtype=1110 are received into FWFF.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATAFLT13En_FW</name>
              <description>When set, frames with type=10 and subtype=1101 are received into FWFF.</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATAFLT12En_FW</name>
              <description>When set, frames with type=10 and subtype=1100 are received into FWFF.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATAFLT11En_FW</name>
              <description>When set, frames with type=10 and subtype=1011 are received into FWFF.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATAFLT10En_FW</name>
              <description>When set, frames with type=10 and subtype=1010 are received into FWFF.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATAFLT9En_FW</name>
              <description>When set, frames with type=10 and subtype=1001 are received into FWFF.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATAFLT8En_FW</name>
              <description>When set, frames with type=10 and subtype=1000 are received into FWFF.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATAFLT7En_FW</name>
              <description>When set, frames with type=10 and subtype=0111 are received into FWFF.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATAFLT6En_FW</name>
              <description>When set, frames with type=10 and subtype=0110 are received into FWFF.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATAFLT5En_FW</name>
              <description>When set, frames with type=10 and subtype=0101 are received into FWFF.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATAFLT4En_FW</name>
              <description>When set, frames with type=10 and subtype=0100 are received into FWFF.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATAFLT3En_FW</name>
              <description>When set, frames with type=10 and subtype=0011 are received into FWFF.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATAFLT2En_FW</name>
              <description>When set, frames with type=10 and subtype=0010 are received into FWFF.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATAFLT1En_FW</name>
              <description>When set, frames with type=10 and subtype=0001 are received into FWFF.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATAFLT0En_FW</name>
              <description>When set, frames with type=10 and subtype=0000 are received into FWFF.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WOW_NAN_CTRL</name>
          <addressOffset>0x00000690</addressOffset>
          <size>32</size>
          <description>Wake On WLAN and NAN Control Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_WMMPS_UAPSD_TID7</name>
              <description>Disable interrupt 8051 when rx WMMPS UAPSD Qos data with TID7</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMMPS_UAPSD_TID6</name>
              <description>Disable interrupt 8051 when rx WMMPS UAPSD Qos data with TID6</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMMPS_UAPSD_TID5</name>
              <description>Disable interrupt 8051 when rx WMMPS UAPSD Qos data with TID5</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMMPS_UAPSD_TID4</name>
              <description>Disable interrupt 8051 when rx WMMPS UAPSD Qos data with TID4</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMMPS_UAPSD_TID3</name>
              <description>Disable interrupt 8051 when rx WMMPS UAPSD Qos data with TID3</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMMPS_UAPSD_TID2</name>
              <description>Disable interrupt 8051 when rx WMMPS UAPSD Qos data with TID2</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMMPS_UAPSD_TID1</name>
              <description>Disable interrupt 8051 when rx WMMPS UAPSD Qos data with TID1</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMMPS_UAPSD_TID0</name>
              <description>Disable interrupt 8051 when rx WMMPS UAPSD Qos data with TID0</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PORTSEL_PS_RX_INFO</name>
              <description>The selector for the source of PS RX information (0x692[4:0]). 
0 for port 0, 1 for clint0, 2 for clint1, 3 for clint2, 4 for clint3.</description>
              <bitRange>[23:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXCTRLIN0</name>
              <description>It is set to 1 if NIC received control frame with correct DA.</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RXMGTIN0</name>
              <description>It is set to 1 if NIC received management frame with correct BSSID and DA (including unicast and BMC).</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RXDATAIN2</name>
              <description>It is set to 1 if NIC received data frame with correct BSSID and DA (including unicast and BMC).</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RXDATAIN1</name>
              <description>It is set to 1 if NIC received data frame with correct BSSID and DA (including unicast and BMC).</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RXDATAIN0</name>
              <description>It is set to 1 if NIC received data frame with correct BSSID and DA (including unicast and BMC).</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_NAN_RX_CHKTA</name>
              <description>Enable bit for check TSF filter
When set to 1, the TSF address filter will enable.
When set to 0, the TSF address filter will disable.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_NAN_RX_CHKBSSID</name>
              <description>Check BSSID_BCN for TSF
When set to 1, MAC will check the BSSID (A3) of RX beacon or Probe
to determine if this packet  will sync TSF or not</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_NAN_RX_FILTER_EN</name>
              <description>When set to 1, the TSF address filter will enable.
When set to 0, the TSF address filter will disable.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PSF_BSSIDSEL_H</name>
              <description>Bit 1,2 of Select to check the MACID of which port for the WMAC PSF NSARP
function.
0: to check the MACID of port0;
1: to check the MACID of port1.
2: to check the MACID of port2.
3: to check the MACID of port3.
4: to check the MACID of port4.</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WOWHCI</name>
              <description>This bit is set to allow wake host as wake on wlan event occurring</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PSF_BSSIDSEL_L</name>
              <description>Bit 0 of Select to check the MACID of which port for the WMAC PSF NSARP
function.
0: to check the MACID of port0;
1: to check the MACID of port1.
2: to check the MACID of port2.
3: to check the MACID of port3.
4: to check the MACID of port4.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_UWF</name>
              <description>Unicast Packet.
1: Enable to check packet"s DA match MAC address or not.
0: Disable. (default value)</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MAGIC</name>
              <description>Magic Packet.
This bit is valid when the PMEn bit of the PMR register is set. The
RTL8192 will assert the PMEB signal to wakeup the operating system when
a Magic Packet is received.
Once the RTL8192 has been enabled for Magic Packet wakeup, it scans
incoming packets addressed to the node for a data sequence. The correct
sequence indicates to the controller that this is a Magic Packet frame. A
Magic Packet frame must also meet the basic requirements: Frame Control
+ Duration/ID + Destination address + Address 2 + Address 3 + Sequence
Control + data + CRC.
The destination address may be the node ID of the receiving station or a
multicast address, including the broadcast address.
The specific sequence consists of 16 duplications of 6 byte ID registers,
with no breaks or interrupts. This sequence can be located anywhere within
the packet, but must be preceded by a synchronization stream, 6 bytes of
FFh. The device will also accept a multicast address, as long as the 16
duplications of the IEEE address match the address of the ID registers.
If the Node ID is 11h 22h 33h 44h 55h 66h, then the magic frame"s format is
as follows:
Frame Control + Duration/ID + Destination address + Address 2 + Address
3 + Sequence Control + MISC + FF FF FF FF FF FF + MISC + 11 22 33
44 55 66 + 11 22 33 44 55 66 + 11 22 33 44 55 66 + 11 22 33 44 55 66 + 11
22 33 44 55 66 + 11 22 33 44 55 66 + 11 22 33 44 55 66 + 11 22 33 44 55
66 + 11 22 33 44 55 66 + 11 22 33 44 55 66 + 11 22 33 44 55 66 + 11 22 33
44 55 66 + 11 22 33 44 55 66 + 11 22 33 44 55 66 + 11 22 33 44 55 66 + 11
22 33 44 55 66 + MISC + CRC.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WFMSK</name>
              <description>WoW function on or off.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_LPNAV_CTRL</name>
          <addressOffset>0x00000694</addressOffset>
          <size>32</size>
          <description>Low Power NAV Control Register</description>
          <resetValue>0x000A0200</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_LPNAV_EN</name>
              <description>Low Power NAV Mode Enable. When this bit is set, enable MAC low power NAV mode</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LPNAV_EARLY</name>
              <description>When in LPNAV mode, MAC will recall BB and RF into RX idle mode. The unit is us.</description>
              <bitRange>[30:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LPNAV_THR</name>
              <description>When protected NAV in the received frame is greater than this threshold value, then MAC enters into LPNAV mode. The time unit is 16us.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WKFMCAM_CMD</name>
          <addressOffset>0x00000698</addressOffset>
          <size>32</size>
          <description>Wakeup Frame CAM Number Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_WKFMCAM_WE</name>
              <description>CAM Write Enable</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WKFMCAM_AD</name>
              <description>Entry address</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CAM_NUM</name>
              <description>CAM Entry Number</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WKFMCAM_WD</name>
          <addressOffset>0x0000069C</addressOffset>
          <size>32</size>
          <description>Wakeup Frame CAM CONTENT Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_WKFMCAM_WD</name>
              <description>CAM Write Data</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RXFLTMAP0</name>
          <addressOffset>0x000006A0</addressOffset>
          <size>32</size>
          <description>RX Filter Map Group 0</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_CTRLFLT15En</name>
              <description>When set, frames with type=01 and subtype=1111 are received into RXFF</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTRLFLT14En</name>
              <description>When set, frames with type=01 and subtype=1110 are received into RXFF</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTRLFLT13En</name>
              <description>When set, frames with type=01 and subtype=1101 are received into RXFF.</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTRLFLT12En</name>
              <description>When set, frames with type=01 and subtype=1100 are received into RXFF.</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTRLFLT11En</name>
              <description>When set, frames with type=01 and subtype=1011 are received into RXFF</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTRLFLT10En</name>
              <description>When set, frames with type=01 and subtype=1010 are received into RXFF.</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTRLFLT9En</name>
              <description>When set, frames with type=01 and subtype=1001 are received into RXFF</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTRLFLT8En</name>
              <description>When set, frames with type=01 and subtype=1000 are received into RXFF</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTRLFLT7En</name>
              <description>When set, frames with type=01 and subtype=0111 are received into RXFF</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTRLFLT6En</name>
              <description>When set, frames with type=01 and subtype=0110 are received into RXFF.</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTRLFLT5En</name>
              <description>When set, frames with type=01 and subtype=0101 are received into RXFF.</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTRLFLT4En</name>
              <description>When set, frames with type=01 and subtype=0100 are received into RXFF.</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTRLFLT3En</name>
              <description>When set, frames with type=01 and subtype=0011 are received into RXFF.</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTRLFLT2En</name>
              <description>When set, frames with type=01 and subtype=0010 are received into RXFF.</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTRLFLT1En</name>
              <description>When set, frames with type=01 and subtype=0001 are received into RXFF.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTRLFLT0En</name>
              <description>When set, frames with type=01 and subtype=0000 are received into RXFF.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGTFLT15En</name>
              <description>When set, frames with type=00 and subtype=1111 are received into RXFF.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGTFLT14En</name>
              <description>When set, frames with type=00 and subtype=1110 are received into RXFF.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGTFLT13En</name>
              <description>When set, frames with type=00 and subtype=1101 are received into RXFF.</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGTFLT12En</name>
              <description>When set, frames with type=00 and subtype=1100 are received into RXFF.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGTFLT11En</name>
              <description>When set, frames with type=00 and subtype=1011 are received into RXFF.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGTFLT10En</name>
              <description>When set, frames with type=00 and subtype=1010 are received into RXFF</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGTFLT9En</name>
              <description>When set, frames with type=00 and subtype=1001 are received into RXFF.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGTFLT8En</name>
              <description>When set, frames with type=00 and subtype=1000 are received into RXFF</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGTFLT7En</name>
              <description>When set, frames with type=00 and subtype=0111 are received into RXFF.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGTFLT6En</name>
              <description>When set, frames with type=00 and subtype=0110 are received into RXFF.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGTFLT5En</name>
              <description>When set, frames with type=00 and subtype=0101 are received into RXFF</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGTFLT4En</name>
              <description>When set, frames with type=00 and subtype=0100 are received into RXFF.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGTFLT3En</name>
              <description>When set, frames with type=00 and subtype=0011 are received into RXFF</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGTFLT2En</name>
              <description>When set, frames with type=00 and subtype=0010 are received into RXFF</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGTFLT1En</name>
              <description>When set, frames with type=00 and subtype=0001 are received into RXFF</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGTFLT0En</name>
              <description>When set, frames with type=00 and subtype=0000 are received into RXFF</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RXFLTMAP</name>
          <addressOffset>0x000006A4</addressOffset>
          <size>32</size>
          <description>RX Filter Map Group 1</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_DATAFLT15En</name>
              <description>When set, frames with type=10 and subtype=1111 are received into RXFF</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATAFLT14En</name>
              <description>When set, frames with type=10 and subtype=1110 are received into RXFF</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATAFLT13En</name>
              <description>When set, frames with type=10 and subtype=1101 are received into RXFF.</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATAFLT12En</name>
              <description>When set, frames with type=10 and subtype=1100 are received into RXFF.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATAFLT11En</name>
              <description>When set, frames with type=10 and subtype=1011 are received into RXFF.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATAFLT10En</name>
              <description>When set, frames with type=10 and subtype=1010 are received into RXFF.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATAFLT9En</name>
              <description>When set, frames with type=10 and subtype=1001 are received into RXFF</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATAFLT8En</name>
              <description>When set, frames with type=10 and subtype=1000 are received into RXFF</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATAFLT7En</name>
              <description>When set, frames with type=10 and subtype=0111 are received into RXFF.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATAFLT6En</name>
              <description>When set, frames with type=10 and subtype=0110 are received into RXFF</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATAFLT5En</name>
              <description>When set, frames with type=10 and subtype=0101 are received into RXFF</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATAFLT4En</name>
              <description>When set, frames with type=10 and subtype=0100 are received into RXFF.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATAFLT3En</name>
              <description>When set, frames with type=10 and subtype=0011 are received into RXFF</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATAFLT2En</name>
              <description>When set, frames with type=10 and subtype=0010 are received into RXFF.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATAFLT1En</name>
              <description>When set, frames with type=10 and subtype=0001 are received into RXFF.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATAFLT0En</name>
              <description>When set, frames with type=10 and subtype=0000 are received into RXFF.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BCN_PSR_RPT0</name>
          <addressOffset>0x000006A8</addressOffset>
          <size>32</size>
          <description>Beacon Parser Report Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_DTIM_CNT0</name>
              <description>The DTIM count field of the TIM element of Rx beacon</description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_DTIM_PERIOD0</name>
              <description>The DTIM period field of the TIM element of Rx beacon</description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HAS_MY_BC0</name>
              <description>Indicate BC/MC packets are buffered in transmitted BSSID or AP</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HAS_MY_BSSID0</name>
              <description>Indicate BC/MC packets are buffered in nontransmitted BSSID, SW need check crespponding dtim count field in multiple bssid index field</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HAS_MYAID0</name>
              <description>Indicate has my unicast packet</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RPT_VALID0</name>
              <description>when set to 1, indicate the tim report is valid</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_PS_AID_0</name>
              <description>AID0 for MACID</description>
              <bitRange>[10:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_FLC_CTRL</name>
          <addressOffset>0x000006AC</addressOffset>
          <size>32</size>
          <description>FW LPS Condition PKT Counter</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_FLC_RPCT_V1</name>
              <description>When write "1" to this bit, FLC_TRPC will be enabled.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FLC_MODSL</name>
              <description>1:Timer Mode
0:Counter Mode</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TORRD</name>
              <description>It specifies the time-out duration. (unit: 32 ms)</description>
              <bitRange>[29:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FLC_CMFEN</name>
              <description>Count Management Frame (1: Enable, 0:Disable)</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FLC_CCFEN</name>
              <description>Count Control Frame (1: Enable, 0:Disable)</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FLC_CDFEN</name>
              <description>Count Data Frame (1: Enable, 0:Disable)</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FLC_PKTTH</name>
              <description>Rx PKT number threshold</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FLC_RPC</name>
              <description>Number of Rx PKT in the interval which is specified by FLC_TRPC.
The Rx PKT type is specified by 0x6AE[2:0]</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RXPKTMON_CTRL</name>
          <addressOffset>0x000006B0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RXBKQPKT_SEQ</name>
              <description>The expected Rx BKQ packet index</description>
              <bitRange>[23:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RXBEQPKT_SEQ</name>
              <description>The expected Rx BEQ packet index</description>
              <bitRange>[19:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RXVIQPKT_SEQ</name>
              <description>The expected Rx VIQ packet index</description>
              <bitRange>[15:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RXVOQPKT_SEQ</name>
              <description>The expected Rx VOQ packet index</description>
              <bitRange>[11:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RXBKQPKT_ERR</name>
              <description>Indicate monitor find the Rx BKQ packet without incremental index</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RXBEQPKT_ERR</name>
              <description>Indicate monitor find the Rx BEQ packet without incremental index</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RXVIQPKT_ERR</name>
              <description>Indicate monitor find the Rx VIQ packet without incremental index</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RXVOQPKT_ERR</name>
              <description>Indicate monitor find the Rx VOQ packet without incremental index</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RXDMA_MON_EN</name>
              <description>Enable packet loss monitor function for Rx DMA. If this bit is set to 1, then MACRX append the incremental index to fragment field of sequence number field of rxmpdu restored to rxpkbuffer successfully</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPKT_MON_EN</name>
              <description>Enable packet loss monitor function for Rx packets. If this bit is set to 1, then MACRX uses fragment field of sequence number field of rxmpdu as the mpdu index and check if the index is incremental.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_STATE_MON</name>
          <addressOffset>0x000006B4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_STATE_SEL</name>
              <description>WMAC read and write FSM selection:
000,001:read mactx status
010,011:read mactx status
100:read response status
00xxx: write [6:0]to mactx fsm when [7] valid
01xxx:write [6:0]to macrx fsm when [7] valid
100xx: write [6:0]to response fsm when [7] valid</description>
              <bitRange>[28:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CUR_STATE1</name>
              <description>when BIT_WRITE_FSM_EN is valid,is rsvd. When BIT_WRITE_FSM_EN is not valid, means read status</description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_WRITE_FSM_EN</name>
              <description>when set 1, generate write pulse, otherwise means read status</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_CUR_STATE0</name>
              <description>when BIT_WRITE_FSM_EN is valid,Indicate the FSM current state to write. When BIT_WRITE_FSM_EN is not valid, means read status</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ERROR_EVT_CTL</name>
          <addressOffset>0x000006B8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_CSIRPT_LEN_BB_MORE_THAN_MAC</name>
              <description>Indicate MAC Rx csi rxd number overflow</description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_CSI_CHKSUM_ERROR</name>
              <description>Indicate MAC Rx csi rpt checksum error</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_MACRX_ERR_4</name>
              <description>Indicate last MPDU length of AMPDU or PPDU length is error.</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_MACRX_ERR_3</name>
              <description>Indicate rxfifo or mac phy interface fifo overflow</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_MACRX_ERR_2</name>
              <description>Indicate MAC Rx occurs internal halt event</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_MACRX_ERR_1</name>
              <description>Indicate Rx packet length &gt;= 12K bytes</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_MACRX_ERR_0</name>
              <description>Indicate MAC Rx occurs halt event</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_PRETX_ERRHDL_EN</name>
              <description>Pre tx error block enable signal</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MACTX_ERR_3</name>
              <description>Indicate PHY fetch plcp before it is ready</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_MACTX_ERR_2</name>
              <description>phy_txen is set ,but wait phy_phytxon time out</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_MACTX_ERR_1</name>
              <description>Indicate TXD FIFO underflow,ppdu fetch zld</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_MACTX_ERR_0</name>
              <description>Indicate TXD FIFO underflow,mpdu fetch zld</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SEARCH_MACID</name>
          <addressOffset>0x000006BC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x01500000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_EN_TXRPTBUF_CLK</name>
              <description>when set to 1,keep txrptbuf sram always have clock</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_INFO_INDEX_OFFSET</name>
              <description>Pre-macid information index address offset.</description>
              <bitRange>[28:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_SRCH_FIFOFULL</name>
              <description>when set to 1, when fifofull, stop macid search;</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_INFOSRCH</name>
              <description>when set to 1,disable to search information</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DISABLE_B0</name>
              <description>when set to 1,disable to check a2[0]</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_INFO_ADDR_OFFSET</name>
              <description>per-macid information address offset (Unit:8bytes).</description>
              <bitRange>[12:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BT_COEX_TABLE_V1</name>
          <addressOffset>0x000006C0</addressOffset>
          <size>32</size>
          <description>BT Coexistence Control register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_COEX_TABLE_1</name>
              <description>coexistence table, used at dual antenna &amp; out of band</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BT_COEX_TABLE2_V1</name>
          <addressOffset>0x000006C4</addressOffset>
          <size>32</size>
          <description>BTCoexistence Control register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_COEX_TABLE_2</name>
              <description>coexistence table, used at dual antenna &amp; in band or single antenna</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BT_COEX_BREAK_TABLE</name>
          <addressOffset>0x000006C8</addressOffset>
          <size>32</size>
          <description>BT Coexistence Control register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BREAK_TABLE_2</name>
              <description>Table used to break BT activity, when new WLAN request is coming and BT
is on transmitting or receiving</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BREAK_TABLE_1</name>
              <description>Table used to break WLAN activity, when new BT request is coming and
WLAN is on transmitting or receiving</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BT_COEX_TABLE_H_V1</name>
          <addressOffset>0x000006CC</addressOffset>
          <size>32</size>
          <description>BT Coexistence Control register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_PRI_MASK_RX_RESP_V1</name>
              <description>Priority Mask for RX Response Packet</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PRI_MASK_RXOFDM_V1</name>
              <description>Priority Mask for RX OFDM</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PRI_MASK_RXCCK_V1</name>
              <description>Priority Mask for RX CCK</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PRI_MASK_TXAC</name>
              <description>Priority Mask for Tx Queue</description>
              <bitRange>[27:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PRI_MASK_NAV</name>
              <description>Priority Mask for Tx NAV</description>
              <bitRange>[20:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PRI_MASK_CCK_V1</name>
              <description>Priority Mask for Tx CCK</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PRI_MASK_OFDM_V1</name>
              <description>Priority Mask for Tx OFDM</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PRI_MASK_RTY_V1</name>
              <description>Priority Mask for Tx Retry Packet</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PRI_MASK_NUM</name>
              <description>Priority Mask for Tx packet number</description>
              <bitRange>[9:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PRI_MASK_TYPE</name>
              <description>Priority Mask for Tx packet type
[98]: Rx response
[99]: Tx response
[100]: beacon</description>
              <bitRange>[5:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_OOB_V1</name>
              <description>out of band indication (0: in band ; 1 : out of band)</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ANT_SEL_V1</name>
              <description>single or dual antenna selection (0: single; 1 : dual)</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RXCMD_0</name>
          <addressOffset>0x000006D0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RXCMD_EN</name>
              <description>RXCMD function enable</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXCMD_INFO</name>
              <description>The Information is send to rxpktbuffer for host SW</description>
              <bitRange>[30:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RXCMD_1</name>
          <addressOffset>0x000006D4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RXCMD_PRD</name>
              <description>Define the period unit in us to send the RXCMD_INFO to rxpktbuffer for host SW</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RESP_TXINFO_CFG</name>
          <addressOffset>0x000006D8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0000003F</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RESP_MFB</name>
              <description>MFB information in register for response packet</description>
              <bitRange>[31:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ANTINF_SEL</name>
              <description>Antsel information for response frame in register or ctrl info
00: Antsel_en always disable, 01:Antsel_en field follow ctrl info 1X:Antsel_en always enable</description>
              <bitRange>[24:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ANTSEL_SEL</name>
              <description>antenna select
0: use rx phystatus antsel information;
1: use tx report antsel information; other: use register antsel information.</description>
              <bitRange>[22:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RESP_TXPOWER</name>
              <description>tx power setting when send response packet</description>
              <bitRange>[20:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RESP_TXANT</name>
              <description>tx antenna information</description>
              <bitRange>[17:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CSI_CTRL</name>
          <addressOffset>0x000006DC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x40000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_CTL_IDLE_CLR_CSI_RPT_V1</name>
              <description>ckr csi report request if response fsm idle</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_USE_NDPARATE</name>
              <description>1: use ndpa rx rate to decide csi report rate
0: use ndp rx rate to decide csi report rate</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_CSI_RATE_FORCE_EN</name>
              <description>0: disable CSI force rate. Refer to RRSR bitmask
1: CSI frame Tx rate refers to 0x6DC[29:24]</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_CSI_RSC_FORCE</name>
              <description>If csi_force_rate_en = 1, CSI frame sub-channel configuration
00: Primary 20Mhz BW(0x483[3:0])
01: Follow Rx packet BW.
10: Duplicate mode.
11: Reserved</description>
              <bitRange>[14:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CSI_GID_SEL</name>
              <description>SIG-A content
1 :  group id=0, 0 :  group id=63</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RDCSIMD_FLAG_TRIG_SEL</name>
              <description>0: Trigger read csi mode flag raising when mac_csi_granted &amp; ndp_valid positive edge
1: Trigger read csi mode flag raising when mac_csi_granted positive edge</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_NDPVLD_POS_RST_FFPTR_DIS_V1</name>
              <description>0: Reset rx_fifo read/wrtie pointer when ndp_valid positive edge
1: Not reset rx_fifo read/wrtie pointer when ndp_valid positive edge</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_NDPVLD_PROTECT_RDRDY_DIS</name>
              <description>0: Protect write enable of rx_fifo when ndp_valid =1 
1: Not Protect write enable of rx_fifo when ndp_valid =1</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CSIRD_EMPTY_APPZERO</name>
              <description>0: Not append zero data when rx_fifo read csi data to empty. If csi data length of BB transmitted is smaller than MAC expected, Tx CSI report would be FCS error.
1: Append zero data when rx_fifo read csi data to empty. If csi data length of BB transmitted is smaller than MAC expected, there would be zero before FCS field of Tx CSI report pkt and the CSI report pkt would be FCS ok</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMC_CSI_RATE_FB_EN</name>
              <description>Enable CSI frame rate fallback (only one step in CSI RRSR)
This bit is set to 1 to enable MAC to use previous latched csi resp rate for retry pkt.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXFIFO_WRPTR_WO_CHKSUM</name>
              <description>This bit is set to 1 when rx_fifo don't enable csi data checksum.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_P2P_RX_BCN_NOA</name>
          <addressOffset>0x000006E0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_P2P_NOA_PARSER_EN</name>
              <description>NoA Parser enabled.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P2P_BSSID_SEL_V1</name>
              <description>When this valueis 0/1/2/3/4, then beacon with matched BSSID0/1/2/3/4 is parsed.</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_P2P_OUI_TYPE</name>
              <description>NOA OUI Type</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ASSOCIATED_BFMER0_INFO</name>
          <addressOffset>0x000006E4</addressOffset>
          <size>32</size>
          <description>Associated Beamformer0 Info Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_r_WMAC_SOUNDING_RXADD_R0_V1</name>
              <description>MACID of the associated beamformer0 bit[31:0]</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SOUNDING_CFG1</name>
          <addressOffset>0x000006E8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_r_WMAC_TXCSI_AID0</name>
              <description>P_AID of the associated bemaformer0</description>
              <bitRange>[24:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_SOUNDING_RXADD_R0_H</name>
              <description>MACID of the associated beamformer0 bit[47:32]</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SOUNDING_CFG2</name>
          <addressOffset>0x000006EC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_r_WMAC_SOUNDING_RXADD_L</name>
              <description>MACID of the associated beamformer1 bit[31:0]</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SOUNDING_CFG3</name>
          <addressOffset>0x000006F0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_r_WMAC_TXCSI_AID1</name>
              <description>P_AID of the associated bemaformer1</description>
              <bitRange>[24:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_SOUNDING_RXADD_H</name>
              <description>MACID of the associated beamformer1 bit[15:0]</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SOUNDING_CFG0</name>
          <addressOffset>0x000006F4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_r_WMAC_BFINFO_20M_1</name>
              <description>BF Info of the associated beamformer1 at BW=20M
bit[18:16]: Nc index
bit[21:19]: Nr index
bit[23:22]: grouping
bit[25:24]: codebook info
bit[27:26]: coefficient size</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_BFINFO_20M_0</name>
              <description>BF Info of the associated beamformer0 at BW=20M
bit[2:0]: Nc index
bit[5:3]: Nr index
bit[7:6]: grouping
bit[9:8]: codebook info
bit[11:10]: coefficient size</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ANTCD_INFO</name>
          <addressOffset>0x000006F8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_WMAC_RESP_ANTD</name>
              <description>used for antenna select d value  BIT_WMAC_RESP_ANTCD[3:2], used for antsel_d value;</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_RESP_ANTC</name>
              <description>used for antenna select c value  BIT_WMAC_RESP_ANTCD[3:3], used for antsel_d value;</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_RESP_ANTB</name>
              <description>used for antenna select b value  BIT_WMAC_RESP_ANTCD[3:4], used for antsel_d value;</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_RESP_ANTA</name>
              <description>used for antenna select a value  BIT_WMAC_RESP_ANTCD[3:5], used for antsel_d value;</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CSI_PTR</name>
          <addressOffset>0x000006FC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_csi_raddr_latch_v2</name>
              <description>Tx_fifo read pointer latch value after Tx CSI report pkt (unit: 8B)</description>
              <bitRange>[31:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_csi_waddr_latch_v2</name>
              <description>Tx_fifo write pointer latch value at ndp_valid negative edge (unit: 8B)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BCN_PSR_RPT2</name>
          <addressOffset>0x00001600</addressOffset>
          <size>32</size>
          <description>Beacon Parser Report Register2</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_DTIM_CNT2</name>
              <description>The DTIM count field of the TIM element of Rx beacon</description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_DTIM_PERIOD2</name>
              <description>The DTIM period field of the TIM element of Rx beacon</description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HAS_MY_BC2</name>
              <description>Indicate BC/MC packets are buffered in transmitted BSSID or AP</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HAS_MY_BSSID2</name>
              <description>Indicate BC/MC packets are buffered in nontransmitted BSSID, SW need check crespponding dtim count field in multiple bssid index field</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HAS_MYAID2</name>
              <description>Indicate has my unicast packet</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RPT_VALID2</name>
              <description>when set to 1, indicate the tim report is valid</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_PS_AID_2</name>
              <description>AID0 for MACID</description>
              <bitRange>[10:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BCN_PSR_RPT3</name>
          <addressOffset>0x00001604</addressOffset>
          <size>32</size>
          <description>Beacon Parser Report Register3</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_DTIM_CNT3</name>
              <description>The DTIM count field of the TIM element of Rx beacon</description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_DTIM_PERIOD3</name>
              <description>The DTIM period field of the TIM element of Rx beacon</description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HAS_MY_BC3</name>
              <description>Indicate BC/MC packets are buffered in transmitted BSSID or AP</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HAS_MY_BSSID3</name>
              <description>Indicate BC/MC packets are buffered in nontransmitted BSSID, SW need check crespponding dtim count field in multiple bssid index field</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HAS_MYAID3</name>
              <description>Indicate has my unicast packet</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RPT_VALID3</name>
              <description>when set to 1, indicate the tim report is valid</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_PS_AID_3</name>
              <description>AID0 for MACID</description>
              <bitRange>[10:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BCN_PSR_RPT4</name>
          <addressOffset>0x00001608</addressOffset>
          <size>32</size>
          <description>Beacon Parser Report Register4</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_DTIM_CNT4</name>
              <description>The DTIM count field of the TIM element of Rx beacon</description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_DTIM_PERIOD4</name>
              <description>The DTIM period field of the TIM element of Rx beacon</description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HAS_MY_BC4</name>
              <description>Indicate BC/MC packets are buffered in transmitted BSSID or AP</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HAS_MY_BSSID4</name>
              <description>Indicate BC/MC packets are buffered in nontransmitted BSSID, SW need check crespponding dtim count field in multiple bssid index field</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_HAS_MYAID4</name>
              <description>Indicate has my unicast packet</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RPT_VALID4</name>
              <description>when set to 1, indicate the tim report is valid</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_PS_AID_4</name>
              <description>AID0 for MACID</description>
              <bitRange>[10:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_A1_ADDR_MASK</name>
          <addressOffset>0x0000160C</addressOffset>
          <size>32</size>
          <description>A1 Addr Mask Register</description>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_A1_ADDR_MASK</name>
              <description>mask rx A1 addr [39:8] for test</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RXPSF_CTRL</name>
          <addressOffset>0x00001610</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x000400C0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RXGCK_FIFOTHR_EN</name>
              <description>1: enable RXGCK fifo threshold 
0: disable RXGCK fifo threshold (ignore fifo threshold)
Should be 0 if MAC loopback mode</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXGCK_VHT_FIFOTHR</name>
              <description>VHT rate RXGCK fifo threshold
If RXVHT = 1 and RXGCK fifo write pointer &gt;= this threshold, MAC_RX clock will stop gating.
0: 0
1: 1 (minimum RDRDY threshold for avoiding false alarm), can work at all situation.
2: 3 (number of RDRDY before receiving MAC header - 1), may cause error at some situation.
3: 4 (number of RDRDY before receiving MAC header), may cause error at some situation.</description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXGCK_HT_FIFOTHR</name>
              <description>HT rate RXGCK fifo threshold
If RXHT = 1 and RXGCK fifo write pointer &gt;= this threshold, MAC_RX clock will stop gating.
0: 0
1: 1 (minimum RDRDY threshold for avoiding false alarm), can work at all situation.
2: 2 (number of RDRDY before receiving MAC header - 1), may cause error at some situation.
3: 3 (number of RDRDY before receiving MAC header), may cause error at some situation.</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXGCK_OFDM_FIFOTHR</name>
              <description>OFDM rate RXGCK fifo threshold
If OFDM_VBON = 1 and RXGCK fifo write pointer &gt;= this threshold, MAC_RX clock will stop gating.
0: 0
1: 1 (number of RDRDY before receiving MAC header = minimum RDRDY threshold for avoiding false alarm), can work at all situation.
2: 2, may cause error at some situation.
3: 3 (minimum RDRDY number within one packet), may cause error at some situation.</description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXGCK_CCK_FIFOTHR</name>
              <description>CCK rate RXGCK fifo threshold
If CCKCCA = 1 and RXGCK fifo write pointer &gt;= this threshold, MAC_RX clock will stop gating.
0: 0
1: 1 (minimum RDRDY threshold for avoiding false alarm), can work at all situation.
2: 8, may cause error at some situation.
3: 15 (number of RDRDY before receiving MAC header), may cause error at some situation.</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXGCK_ENTRY_DELAY</name>
              <description>MAC_RX wait some time to gate clock after making the decision (about gating clock).
Unit: T (MAC clock cycle)
0: 0
1: 2
2: 4
3: 8
4: 16
5: 32
6: 64
7: 128</description>
              <bitRange>[19:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXGCK_OFDMCCA_EN</name>
              <description>This bit is set to 1 to let OFDMCCA be one of the signals that can wakeup MAC from Rx_idle</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_PKTLENTHR</name>
              <description>Packet length threshold
3'd0:  16 Bytes
3'd1:  32 Bytes
3'd2:  64 Bytes
3'd3:  128 Bytes
3'd4:  256 Bytes
3'd5:  512 Bytes
3'd6:  1024 Bytes
3'd7:  2048 Bytes
Only the packet which packet length is longer than this threshold will trigger an invalid_pkt pulse.</description>
              <bitRange>[15:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_CTRLEN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet Type=01.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_VHTCHKEN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet rate = VHT</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_HTCHKEN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet rate = HT</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_OFDMCHKEN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet rate = OFDM</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_CCKCHKEN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet rate = CCK</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_OFDMRST</name>
              <description>This bit is set to 1 to reset MAC Rx before sending OFDM (include OFDM, HT, VHT) packet triggered invalid_pkt pulse
(0 for debug)</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_CCKRST</name>
              <description>This bit is set to 1 to reset MAC Rx before sending CCK packet triggered invalid_pkt pulse(0 for debug)</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_MHCHKEN</name>
              <description>This bit is set to 1 to enable MAC to inform BB enter power saving mode as rx unmatch my MACID unicast or unmatch my BSSID Broadcast/Mutlicast packets (including aggrigation and non-aggrigation)</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_CONT_ERRCHKEN</name>
              <description>This bit is set to 1 to enable MAC to inform BB enter power saving mode as continuous rx FCS error packets number in a PPDU is large than the FCS error packet threshold defined by BBPSF_ERRTHR. This function is independent from rate, type and IDs.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_ALL_ERRCHKEN</name>
              <description>This bit is set to 1 to enable MAC to inform BB enter power saving mode as rx FCS error packets number in a PPDU is larger than the FCS error packet threshold defined by BBPSF_ERRTHR. This function is independent from rate, type and IDs.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_ERRTHR</name>
              <description>FCS error packet threshold
3'd0: 1 packet
3'd1: 4 packets
3'd2: 8 packets
3'd3: 12 packets
3'd4: 16 packets
3'd5: 20 packets
3'd6: 24 packets
3'd7: 28 packets</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RXPSF_TYPE_CTRL</name>
          <addressOffset>0x00001614</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RXPSF_DATA15EN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet Type=10 and subtype=1111.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_DATA14EN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet Type=10 and subtype=1110.</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_DATA13EN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet Type=10 and subtype=1101.</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_DATA12EN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet Type=10 and subtype=1100.</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_DATA11EN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet Type=10 and subtype=1011.</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_DATA10EN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet Type=10 and subtype=1010.</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_DATA9EN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet Type=10 and subtype=1001.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_DATA8EN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet Type=10 and subtype=1000.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_DATA7EN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet Type=10 and subtype=0111.</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_DATA6EN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet Type=10 and subtype=0110.</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_DATA5EN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet Type=10 and subtype=0101.</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_DATA4EN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet Type=10 and subtype=0100.</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_DATA3EN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet Type=10 and subtype=0011.</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_DATA2EN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet Type=10 and subtype=0010.</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_DATA1EN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet Type=10 and subtype=0001.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_DATA0EN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet Type=10 and subtype=0000.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_MGT15EN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet Type=00 and subtype=1111.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_MGT14EN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet Type=00 and subtype=1110.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_MGT13EN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet Type=00 and subtype=1101.</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_MGT12EN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet Type=00 and subtype=1100.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_MGT11EN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet Type=00 and subtype=1011.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_MGT10EN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet Type=00 and subtype=1010.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_MGT9EN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet Type=00 and subtype=1001.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_MGT8EN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet Type=00 and subtype=1000.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_MGT7EN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet Type=00 and subtype=0111.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_MGT6EN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet Type=00 and subtype=0110.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_MGT5EN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet Type=00 and subtype=0101.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_MGT4EN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet Type=00 and subtype=0100.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_MGT3EN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet Type=00 and subtype=0011.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_MGT2EN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet Type=00 and subtype=0010.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_MGT1EN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet Type=00 and subtype=0001.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXPSF_MGT0EN</name>
              <description>This bit is set to 1 to enable MAC to consider trigging invalid_pkt as rx packet Type=00 and subtype=0000.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WAIT_PHYSTS_CTL</name>
          <addressOffset>0x00001618</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000024</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BB_RST_RESP</name>
              <description>When set to 1,enable bb/rdrdy_err/cca_spoofing to reset mac and will not tx response</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CCA_SPOOFING_EN</name>
              <description>When set to 1,enable cca_spoofing reset macrx</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RDRDY_NUM_CHK_EN</name>
              <description>When set, enable check rdrdy number is enough or not. If number is not enough will rst macrx</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WAIT_PHYSTS_EN</name>
              <description>When set to 1,enable wait physts rpt valid function</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WAIT_PHYSTS_TIME</name>
              <description>Wait physts rpt timeout ,unit us(6us is the recommeded value)</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MACID2</name>
          <addressOffset>0x00001620</addressOffset>
          <size>32</size>
          <description>MAC ID2 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MACID2_V1</name>
              <description>MAC Identification Number 2 Register</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MACID2_H</name>
          <addressOffset>0x00001624</addressOffset>
          <size>32</size>
          <description>MAC ID2 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MACID2_H_V1</name>
              <description>MAC Identification Number 2 Register</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BSSID2</name>
          <addressOffset>0x00001628</addressOffset>
          <size>32</size>
          <description>BSSID2 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BSSID2_V1</name>
              <description>Basic Station Set Identification 2</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BSSID2_H</name>
          <addressOffset>0x0000162C</addressOffset>
          <size>32</size>
          <description>BSSID2 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BSSID2_H_V1</name>
              <description>Basic Station Set Identification 2</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MACID3</name>
          <addressOffset>0x00001630</addressOffset>
          <size>32</size>
          <description>MAC ID3 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MACID3_V1</name>
              <description>MAC Identification Number 3 Register</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MACID3_H</name>
          <addressOffset>0x00001634</addressOffset>
          <size>32</size>
          <description>MAC ID3 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MACID3_H_V1</name>
              <description>MAC Identification Number 3 Register</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BSSID3</name>
          <addressOffset>0x00001638</addressOffset>
          <size>32</size>
          <description>BSSID3 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BSSID3_V1</name>
              <description>Basic Station Set Identification 3</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BSSID3_H</name>
          <addressOffset>0x0000163C</addressOffset>
          <size>32</size>
          <description>BSSID3 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BSSID3_H_V1</name>
              <description>Basic Station Set Identification 3</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MACID4</name>
          <addressOffset>0x00001640</addressOffset>
          <size>32</size>
          <description>MAC ID4 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MACID4_V1</name>
              <description>MAC Identification Number 4 Register</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MACID4_H</name>
          <addressOffset>0x00001644</addressOffset>
          <size>32</size>
          <description>MAC ID4 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MACID4_H_V1</name>
              <description>MAC Identification Number 4 Register</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BSSID4</name>
          <addressOffset>0x00001648</addressOffset>
          <size>32</size>
          <description>BSSID4 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BSSID4_V1</name>
              <description>Basic Station Set Identification 4</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BSSID4_H</name>
          <addressOffset>0x0000164C</addressOffset>
          <size>32</size>
          <description>BSSID4 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BSSID4_H_V1</name>
              <description>Basic Station Set Identification 4</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_NOA_REPORT</name>
          <addressOffset>0x00001650</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>NOA_RPT</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_NOA_REPORT_1</name>
          <addressOffset>0x00001654</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>NOA_RPT_1</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_NOA_REPORT_2</name>
          <addressOffset>0x00001658</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>NOA_RPT_2</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_NOA_REPORT_3</name>
          <addressOffset>0x0000165C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>NOA_RPT_3</name>
              <description></description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PWRBIT_SETTING</name>
          <addressOffset>0x00001660</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_CLI3_PWRBIT_OW_EN</name>
              <description>For client3 (port4). If this bit is set to 1, MAC will overwrite power bit of frame control according to CLI3_PWR_ST. (only for data frame)</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CLI3_PWR_ST</name>
              <description>For client3 (port4). MAC will overwrite power bit of frame control according to CLI3_PWR_ST.(only for data frame)</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CLI2_PWRBIT_OW_EN</name>
              <description>For client2 (port3). If this bit is set to 1, MAC will overwrite power bit of frame control according to CLI2_PWR_ST. (only for data frame)</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CLI2_PWR_ST</name>
              <description>For client2 (port3). MAC will overwrite power bit of frame control according to CLI2_PWR_ST.(only for data frame)</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CLI1_PWRBIT_OW_EN</name>
              <description>For client1 (port2). If this bit is set to 1, MAC will overwrite power bit of frame control according to CLI1_PWR_ST. (only for data frame)</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CLI1_PWR_ST</name>
              <description>For client1 (port2). MAC will overwrite power bit of frame control according to CLI1_PWR_ST.(only for data frame)</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CLI0_PWRBIT_OW_EN</name>
              <description>For client0 (port1). If this bit is set to 1, MAC will overwrite power bit of frame control according to CLI0_PWR_ST. (only for data frame)</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CLI0_PWR_ST</name>
              <description>For client0 (port1). MAC will overwrite power bit of frame control according to CLI0_PWR_ST.(only for data frame)</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_GENERAL_OPTION</name>
          <addressOffset>0x00001664</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_EXT_DBGSEL</name>
              <description>enable extend dbg port sel</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXSERV_FIELD_SEL</name>
              <description></description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RXAI_CTRL</name>
          <addressOffset>0x00001668</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RXAI_PRTCT_REL</name>
              <description>If MAC_reset_protect is set to 0 by MAC decision circuit (address/A-MPDU checking), set this bit to 1.
Reset by BIT_RXAI_INFO_RST = 1</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RXAI_PRTCT_VIO</name>
              <description>If MAC gets BB_reset_MAC pulse when MAC_reset_protect = 1, set this bit to 1.
Reset by BIT_RXAI_INFO_RST = 1</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RXAI_PRTCT_SEL</name>
              <description>MAC_reset_protect rises at
0: DATA_ON rises
1: PLCP check OK (OFDM/CCK) or receiving 3rd/2nd (VHT/HT) RDRDY</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXAI_AGG_CHKEN</name>
              <description>This bit is only workable when BIT_RXAI_ADDR_CHKEN = 1.
1: if and only if the receiving address matched PPDU is A-MPDU and is not VHT single MPDU, then MAC inform BB not doing reCCA.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXAI_ADDR_CHKEN</name>
              <description>This bit is set to 1 to enable MAC to inform BB not doing reCCA during receiving the address matched PPDU.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RX_BCN_TM</name>
          <addressOffset>0x0000166C</addressOffset>
          <size>32</size>
          <description>rx beacon timer</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RX_BCN_TIMER</name>
              <description>indicate rx beacon timer from cca up to fcs ok, units us</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CSI_RRSR</name>
          <addressOffset>0x00001678</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_CSI_LDPC_EN</name>
              <description>Enable LDPC in Tx CSI Frame</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CSI_STBC_EN</name>
              <description>Enable STBC in Tx CSI Frame</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CSI_RRSC_BITMAP</name>
              <description>BitMap to indicate the CSI frame rate in this BSS. Each bit is mapped as the following: 
Bit[4:11] = {6M, 9M, 12M, 18M, 24M, 36M, 48M, 54M}
Bit[12:19] = HT MCS0~MCS7
BIT[27:20] = VHT 1SSMCS0~7
The modulation of response rate must be less than or equal to the rate of the initiating frame. If none of the bits are set, no response is generated by Rtl8712.
If both legacy rates and HT rates are defined as Basic Rates, fill in only the legacy portion of the bitmap. If only HT rates are defined as Basic Rates, fill in both the legacy and HT portion of the bitmap.</description>
              <bitRange>[27:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_OFDM_LEN_TH</name>
              <description>CSI frame length threshold for using legacy OFDM (unit: 128B). 0 means disabled.
If CSI frame length &gt; threshold, search from VHT or HT bitmap
If CSI frame length &lt; threshold, search from legacy OFDM bitmap</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MU_BF_OPTION</name>
          <addressOffset>0x0000167C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x1F2A4800</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>WMAC_NOCHK_BFPOLL_BMP</name>
              <description>Set this bit to ignore retransmission bitmap of rx beamforming report poll</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WMAC_CSI_PARA_RDY_DLYCNT</name>
              <description>1:Cycle number from txctl state machine IDLE(VBON falling) to CSI_standby falling.
2:Half of this value is txctl state machine IDLE(VBON falling) to CSI_parameter_ready rising cycle number.</description>
              <bitRange>[28:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ARB_HW_ADAPT_EN</name>
              <description>Enable hardware to arbitrate data according to rate offset of user0 and user1</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ARB_SW_EN</name>
              <description>Enable software to set initial state of MU arbiter</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ARB_SW_STATE</name>
              <description>MU arbiter software initial state</description>
              <bitRange>[21:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_PAUSE_BB_CLR_TH</name>
              <description>MAC_PAUSE_BB High to Low clear threshold of csidma syncff read-write pointer</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_RESP_NONSTA1_DIS</name>
              <description>Disable response BA when receive non-STA1 user position MU PPDU</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_MU_BFEE_PORT_SEL</name>
              <description>Enable software to set initial state of MU arbiter</description>
              <bitRange>[3:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_MU_BFEE_DIS</name>
              <description>If set to 1, HW will be SU only beamformee and not response to NDPA or Beamforming report poll.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WMAC_MU_BF_CTL</name>
          <addressOffset>0x00001680</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BFRPT_PARA_USERID_SEL_V1</name>
              <description>User ID of associated Bfee, MU: 2~7 ,SU:0~1</description>
              <bitRange>[31:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BFRPT_PARA_V1</name>
              <description>CSI report parameter of selected user ID BFee
{bw[1:0],cb[1:0],ng[1:0],nr[2:0],nc[2:0]} ;</description>
              <bitRange>[28:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_WMAC_INVLD_BFPRT_CHK</name>
              <description>Check invalid case of received beamforming report</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_RETXBFRPTSEQ_UPD</name>
              <description>Update sequence number and not set retry bit when retransmit beamforming report.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_MU_BFRPTSEG_SEL</name>
              <description>Beamforming report segment length select
2'h00 :3895 bytes(also means csi segmentation enable),2'h01:7991bytes, 2'h10:11454bytes</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_MU_BF_MYAID</name>
              <description>When I'm one of Bfees, my AID12 to identify STA_info in NDPA</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WMAC_ASSOCIATED_MU_BFMEE2</name>
          <addressOffset>0x00001684</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_status_bfee3</name>
              <description>beamforming report status of beamformee3
0: fail, 
1: success</description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_WMAC_MU_BFEE3_EN</name>
              <description>If enabled, NDPA/BF-rpt-poll would be sent to beamformee3, and CSI rpt of beamformee3  can be read  from 0x1682[11:0] when 0x1682[14:12] is 3</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_MU_BFEE3_AID</name>
              <description>P_AID of the target beamformee3</description>
              <bitRange>[24:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_status_bfee2</name>
              <description>beamforming report status of beamformee2 
0: fail, 
1: success</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_WMAC_MU_BFEE2_EN</name>
              <description>If enabled, NDPA/BF-rpt-poll would be sent to beamformee2, and CSI rpt of beamformee2 can be read from 0x1682[11:0] when 0x1682[14:12] is 2</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_MU_BFEE2_AID</name>
              <description>P_AID of the target beamformee2</description>
              <bitRange>[8:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WMAC_ASSOCIATED_MU_BFMEE4</name>
          <addressOffset>0x00001688</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_WMAC_MU_BFEE5_EN</name>
              <description>If enabled, NDPA/BF-rpt-poll would be sent to beamformee5, and CSI rpt of beamformee5  can be read  from 0x1682[11:0] when 0x1682[14:12] is 5</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_MU_BFEE5_AID</name>
              <description>P_AID of the target beamformee5</description>
              <bitRange>[24:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_MU_BFEE4_EN</name>
              <description>If enabled, NDPA/BF-rpt-poll would be sent to beamformee4, and CSI rpt of beamformee4  can be read  from 0x1682[11:0] when 0x1682[14:12] is 4</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_MU_BFEE4_AID</name>
              <description>P_AID of the target beamformee4</description>
              <bitRange>[8:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WMAC_ASSOCIATED_MU_BFMEE6</name>
          <addressOffset>0x0000168C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_WMAC_MU_BFEE7_EN</name>
              <description>If enabled, NDPA/BF-rpt-poll would be sent to beamformee7, and CSI rpt of beamformee7 can be read from 0x1682[11:0] when 0x1682[14:12] is 7</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_MU_BFEE7_AID</name>
              <description>P_AID of the target beamformee7</description>
              <bitRange>[24:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_MU_BFEE6_EN</name>
              <description>If enabled, NDPA/BF-rpt-poll would be sent to beamformee6, and CSI rpt of beamformee6 can be read from 0x1682[11:0] when 0x1682[14:12] is 6</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_MU_BFEE6_AID</name>
              <description>P_AID of the target beamformee6</description>
              <bitRange>[8:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WMAC_BB_STOP_RX_COUNTER</name>
          <addressOffset>0x00001690</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_rst_all_counter</name>
              <description>Write one to reset all counters to zero.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_abort_rx_vbon_counter</name>
              <description>Increase when mac_abort_rx_vbon trigger.
0x120[29] / 0x124[29] : BB_STOP_RX mask/interrupt 
0x0B8[0] / 0x0BC[0] : BB_STOP_RX mask/interrupt 
Interrupts will be trigger when mac detect any counter of 0x1690 increase.</description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_abort_rx_rdrdy_counter</name>
              <description>Increase when mac_abort_rx_rdrdy trigger
0x120[29] / 0x124[29] : BB_STOP_RX mask/interrupt 
0x0B8[0] / 0x0BC[0] : BB_STOP_RX mask/interrupt 
Interrupts will be trigger when mac detect any counter of 0x1690 increase.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_vbon_early_falling_counter</name>
              <description>Increase when VBON fall &amp; no rx plcp error &amp; rx_parser is waiting for rdrdy which is expected but not received .
0x120[29] / 0x124[29] : BB_STOP_RX mask/interrupt 
0x0B8[0] / 0x0BC[0] : BB_STOP_RX mask/interrupt 
Interrupts will be trigger when mac detect any counter of 0x1690 increase.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WMAC_PLCP_MONITOR</name>
          <addressOffset>0x00001694</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_WMAC_PLCP_TRX_SEL</name>
              <description>Selection of Tx/Rx plcp header
0:Rx 
1:Tx</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_PLCP_RDSIG_SEL</name>
              <description>Selection of plcp header signal field 
0:LSIG/CCK PLCP
1:HTSIG1/VHTSIGA1/HESIGA1
2:HTSIG2/VHTSIGA2/HESIGA2   
3:VHTSIGB/HESIGB, low 4bit is dummy  
4: HE USER FIELD
5: SERVICE</description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_RATE_IDX</name>
              <description>PPDU type
0:Long PLCP, 1:Short PLCP, 2: Legacy, 3: HT_MF, 4:HT_GF, 5: VHT-SU, 6: VHT-MU, 7: HE-SU, 8: HE-ER_SU, 9: HE_MU, 10: HE_TB, 11~15:RSVD  U(4,0)</description>
              <bitRange>[27:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_WMAC_PLCP_RDSIG</name>
              <description>Selected signal field to read out</description>
              <bitRange>[23:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WMAC_CSIDMA_CFG</name>
          <addressOffset>0x0000169C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0F1600F8</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_CSI_SEG_SIZE</name>
              <description>CSI data segmentation size (bytes) =
Max. MPDU length - mac hdr (24) - act type (1) - category  (1) - mimo ctrl (3) - FCS (4)(default:3862byte)</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CSI_START_PAGE</name>
              <description>The starting page number of csi buffer in TXPKTBUF</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TRANSMIT_ADDRSS_0</name>
          <addressOffset>0x000016A0</addressOffset>
          <size>32</size>
          <description>TA0 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TA0_v1</name>
              <description>Transmitter address for port 0</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TRANSMIT_ADDRSS_0_H</name>
          <addressOffset>0x000016A4</addressOffset>
          <size>32</size>
          <description>TA0 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TA0_H_V1</name>
              <description>Transmitter address for port 0</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TRANSMIT_ADDRSS_1</name>
          <addressOffset>0x000016A8</addressOffset>
          <size>32</size>
          <description>TA1 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TA1_V1</name>
              <description>Transmitter address  for port 1</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TRANSMIT_ADDRSS_1_H</name>
          <addressOffset>0x000016AC</addressOffset>
          <size>32</size>
          <description>TA1 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TA1_H_V1</name>
              <description>Transmitter address  for port 1</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TRANSMIT_ADDRSS_2</name>
          <addressOffset>0x000016B0</addressOffset>
          <size>32</size>
          <description>TA2 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TA2_V1</name>
              <description>Transmitter address for port 2</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TRANSMIT_ADDRSS_2_H</name>
          <addressOffset>0x000016B4</addressOffset>
          <size>32</size>
          <description>TA2 Register)</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TA2_H_V1</name>
              <description>Transmitter address for port 2</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TRANSMIT_ADDRSS_3</name>
          <addressOffset>0x000016B8</addressOffset>
          <size>32</size>
          <description>TA3 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TA3_V1</name>
              <description>Transmitter address  for port 3</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TRANSMIT_ADDRSS_3_H</name>
          <addressOffset>0x000016BC</addressOffset>
          <size>32</size>
          <description>TA3 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TA3_H_V1</name>
              <description>Transmitter address for port 3</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TRANSMIT_ADDRSS_4</name>
          <addressOffset>0x000016C0</addressOffset>
          <size>32</size>
          <description>TA4 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TA4_V1</name>
              <description>Transmitter address for port 4</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TRANSMIT_ADDRSS_4_H</name>
          <addressOffset>0x000016C4</addressOffset>
          <size>32</size>
          <description>TA4 Register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TA4_H_V1</name>
              <description>Transmitter address for port 4</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_NAN_FUN</name>
          <addressOffset>0x000016C8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000004</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_WMAC_ATTRI_ID1</name>
              <description>the NAN attribute whose ID is r_WMAC_ATTRI_ID1 will be written into NAN beacon report</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_WMAC_ATTRI_ID0</name>
              <description>the NAN attribute whose ID is r_WMAC_ATTRI_ID0 will be written into NAN beacon report</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_WMAC_ATTRI_IDi_VLD</name>
              <description>valid flag bitmap of r_WMAC_ATTRI_IDi</description>
              <bitRange>[12:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_TXRPT_NAN_ENTRY_NUM</name>
              <description>number of NAN beacon report entry in txrptbuffer</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_NAN_ENTRY_SIZE</name>
              <description>size of one NAN beacon report entry, unit is 8byte</description>
              <bitRange>[3:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_WMAC_RXNANPSR_EN</name>
              <description>parse enable of rx NAN sync beacon</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_NAN_CTL</name>
          <addressOffset>0x000016CC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_TXRPT_NAN_ENTRY_FLAG</name>
              <description>indicate NAN beacon report(i) in txrptbuffer is valid, it is set by HW and clear by FW</description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>r_WMAC_ATTRI_ID4</name>
              <description>the NAN attribute whose ID is r_WMAC_ATTRI_ID4 will be written into NAN beacon report</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_WMAC_ATTRI_ID3</name>
              <description>the NAN attribute whose ID is r_WMAC_ATTRI_ID3 will be written into NAN beacon report</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_WMAC_ATTRI_ID2</name>
              <description>the NAN attribute whose ID is r_WMAC_ATTRI_ID2 will be written into NAN beacon report</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_NAN_ADDR</name>
          <addressOffset>0x000016D0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000152</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_RX_NAN_ADDR_FILTER_EN</name>
              <description>enable of rx nan beacon address filter, can not used in D2 testchip</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_NAN_START_ADDR_OFFSET</name>
              <description>Start offset Location of NAN beacon report FIFO. Unit: 8bytes</description>
              <bitRange>[12:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_NAN_ADDR_FLITER</name>
          <addressOffset>0x000016D4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_RX_NAN_ADDR_FILTER</name>
              <description>nan address filter</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BCN_IEPSR0</name>
          <addressOffset>0x000016D8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_WMAC_BCN_MBSSID_MASK</name>
              <description>enable tim no hit don't check whether  BC/MC packets are buffered at nontransmitted BSSID</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_WMAC_BCN_CLR_N</name>
              <description>enable clear macbssid indicator when no multiple BSSID element is found.</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_WMAC_BCN_IE1_PSR</name>
              <description>enable parser specified ie 1 element</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_WMAC_BCN_IE0_PSR</name>
              <description>enable parser specified ie0 element</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_WMAC_BCN_MBSSID_PSR</name>
              <description>enable parser multiple BSSID element</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_WMAC_BCN_SW_MBSSID</name>
              <description>enable the MaxBSSID indicator value from SW</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_WMAC_BCN_MBSSID_N</name>
              <description>SW write the value of MaxBSSID Indicator field</description>
              <bitRange>[25:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_WMAC_BCN_ID1_EXT</name>
              <description>indicate current ie is the extend element which need to parser extend id field</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_WMAC_BCN_IE_ID1</name>
              <description>specified Element ID, set corresponding interrupt when it is parsed</description>
              <bitRange>[16:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_WMAC_BCN_ID0_EXT</name>
              <description>indicate current ie is the extend element which need to parser extend id field</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_WMAC_BCN_IE_ID0</name>
              <description>specified Element ID, set corresponding interrupt when it is parsed</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BCN_IEPSR1</name>
          <addressOffset>0x000016DC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_WMAC_BCN_MBSSID_OFS</name>
              <description>the multiple bssid element offset (byte unit) in frame body</description>
              <bitRange>[31:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>r_WMAC_BCN_N0_CHG</name>
              <description>indicate parsed maxmbssid indicator field value has changed which leads to the change of N0.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>r_WMAC_BCN_MBSSID_VAL</name>
              <description>indicate ofs and n0 change bit is valid.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>r_WMAC_OPS_PSR_EN</name>
              <description>enable parser ops frame tim elemnt and ops element</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_WMAC_TIM_TIMPSR_EN</name>
              <description>enable parser tim frame tim element</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_WMAC_BCN_BMC_MASK</name>
              <description>bcn tim hit bc/mc mask</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_WMAC_BCN_MBSSID_IDX</name>
              <description>the multiple bssid index that current sta connect with</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CHINFO_ADDR</name>
          <addressOffset>0x000016E0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_CHINFO_TX_ADDR_l</name>
              <description>low 32bit tx address for trigger channel info</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CHINFO_CFG</name>
          <addressOffset>0x000016E4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x01000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_chinfo_fcs</name>
              <description>when set to 1, will not check channel info fcs ok flag</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_CHINFO_WTM_OUT</name>
              <description>BB does't send channel info when timeout occur</description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>r_CHINFO_TIME_OUT</name>
              <description>BB send channel info length is less than report length</description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>r_CSI_BUFF_FULL</name>
              <description>Indicate rxcsibuff full occur</description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>r_CHINFO_TIMER</name>
              <description>Wait timeout value after repuest channe info, unit 4 mac clock cycles</description>
              <bitRange>[24:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_CHINFO_MODE</name>
              <description>channel info mode setting. 0: enable normal rx trigger; 1: enable ndpa trigger; note: repsonse mode decided by tx descriptor. Valid when r_CHINFO_EN is 1.</description>
              <bitRange>[18:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_CHINFO_EN</name>
              <description>enable for getting channel info from BB. When set to 0, will not trigger channel info function</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_CHINFO_TX_ADDR_h</name>
              <description>high 16bit tx address for trigger channel info</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RXCSIBUF_CFG</name>
          <addressOffset>0x000016E8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0000A4BF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_chinfo_req_size</name>
              <description>The channel info trigger request rxcsibuffer size, unit 32bytes, the actually request size = (r_chinfo_req_size + 1) * 32byte</description>
              <bitRange>[21:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_chinfo_wdfs_time</name>
              <description>Wait DFS timeout value, unit 4 mac clock cycles</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_csibuf_threshod</name>
              <description>rxcsibuffer full threshold, size must greater than or equal to csi descriptors</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_csibuf_endaddr</name>
              <description>End address of rxcsibuffer, unit 8bytes. Rxcsibuffer is 1536 bytes</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BT_ZB_COEX_TB</name>
          <addressOffset>0x000016EC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_bt_zb_coex_table</name>
              <description>bt and zigbee coexist table</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CHINFO_TRIG_TYPE0</name>
          <addressOffset>0x000016F0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_CTL_TRG_15En</name>
              <description>When set, control frames with type=01 and subtype=1111 will trigger channel info</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTL_TRG_14En</name>
              <description>When set, control frames with type=01 and subtype=1110 will trigger channel info</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTL_TRG_13En</name>
              <description>When set, control frames with type=01 and subtype=1101 will trigger channel info</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTL_TRG_12En</name>
              <description>When set, control frames with type=01 and subtype=1100 will trigger channel info</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTL_TRG_11En</name>
              <description>When set, control frames with type=01 and subtype=1011 will trigger channel info</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTL_TRG_10En</name>
              <description>When set, control frames with type=01 and subtype=1010 will trigger channel info</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTL_TRG_9En</name>
              <description>When set, control frames with type=01 and subtype=1001 will trigger channel info</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTL_TRG_8En</name>
              <description>When set, control frames with type=01 and subtype=1000 will trigger channel info</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTL_TRG_7En</name>
              <description>When set, control frames with type=01 and subtype=0111 will trigger channel info</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTL_TRG_6En</name>
              <description>When set, control frames with type=01 and subtype=0110 will trigger channel info</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTL_TRG_5En</name>
              <description>When set, control frames with type=01 and subtype=0101 will trigger channel info</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTL_TRG_4En</name>
              <description>When set, control frames with type=01 and subtype=0100 will trigger channel info</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTL_TRG_3En</name>
              <description>When set, control frames with type=01 and subtype=0011 will trigger channel info</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTL_TRG_2En</name>
              <description>When set, control frames with type=01 and subtype=0010 will trigger channel info</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTL_TRG_1En</name>
              <description>When set, control frames with type=01 and subtype=0001 will trigger channel info</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CTL_TRG_0En</name>
              <description>When set, control frames with type=01 and subtype=0000 will trigger channel info</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGT_TRG_15En</name>
              <description>When set, management frames with type=00 and subtype=1111 will trigger channel info</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGT_TRG_14En</name>
              <description>When set, management frames with type=00 and subtype=1110 will trigger channel info</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGT_TRG_13En</name>
              <description>When set, management frames with type=00 and subtype=1101 will trigger channel info</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGT_TRG_12En</name>
              <description>When set, management frames with type=00 and subtype=1100 will trigger channel info</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGT_TRG_11En</name>
              <description>When set, management frames with type=00 and subtype=1011 will trigger channel info</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGT_TRG_10En</name>
              <description>When set, management frames with type=00 and subtype=1010 will trigger channel info</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGT_TRG_9En</name>
              <description>When set, management frames with type=00 and subtype=1001 will trigger channel info</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGT_TRG_8En</name>
              <description>When set, management frames with type=00 and subtype=1000 will trigger channel info</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGT_TRG_7En</name>
              <description>When set, management frames with type=00 and subtype=0111 will trigger channel info</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGT_TRG_6En</name>
              <description>When set, management frames with type=00 and subtype=0110 will trigger channel info</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGT_TRG_5En</name>
              <description>When set, management frames with type=00 and subtype=0101 will trigger channel info</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGT_TRG_4En</name>
              <description>When set, management frames with type=00 and subtype=0100 will trigger channel info</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGT_TRG_3En</name>
              <description>When set, management frames with type=00 and subtype=0011 will trigger channel info</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGT_TRG_2En</name>
              <description>When set, management frames with type=00 and subtype=0010 will trigger channel info</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGT_TRG_1En</name>
              <description>When set, management frames with type=00 and subtype=0001 will trigger channel info</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MGT_TRG_0En</name>
              <description>When set, management frames with type=00 and subtype=0000 will trigger channel info</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CHINFO_TRIG_TYPE1</name>
          <addressOffset>0x000016F4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_txtrig_stop_sel</name>
              <description>select tx trigger stop signal for LA dump</description>
              <bitRange>[28:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_rxtrig_stop_sel</name>
              <description>select rx trigger stop signal for LA dump</description>
              <bitRange>[23:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_new_rx_rst_en</name>
              <description>when set, enable new rx rst macrx when macrx is active</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_rxd_offset_sel</name>
              <description>select 2bytes of rxd to debug port
0: 0~1 bytes; 1: 2~3 bytes; 2: 4~5 bytes; 3: 6~7 bytes;</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATA_TRG_15En</name>
              <description>When set, data frames with type=10 and subtype=1111 will trigger channel info</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATA_TRG_14En</name>
              <description>When set, data frames with type=10 and subtype=1110 will trigger channel info</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATA_TRG_13En</name>
              <description>When set, data frames with type=10 and subtype=1101 will trigger channel info</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATA_TRG_12En</name>
              <description>When set, data frames with type=10 and subtype=1100 will trigger channel info</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATA_TRG_11En</name>
              <description>When set, data frames with type=10 and subtype=1011 will trigger channel info</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATA_TRG_10En</name>
              <description>When set, data frames with type=10 and subtype=1010 will trigger channel info</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATA_TRG_9En</name>
              <description>When set, data frames with type=10 and subtype=1001 will trigger channel info</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATA_TRG_8En</name>
              <description>When set, data frames with type=10 and subtype=1000 will trigger channel info</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATA_TRG_7En</name>
              <description>When set, data frames with type=10 and subtype=0111 will trigger channel info</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATA_TRG_6En</name>
              <description>When set, data frames with type=10 and subtype=0110 will trigger channel info</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATA_TRG_5En</name>
              <description>When set, data frames with type=10 and subtype=0101 will trigger channel info</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATA_TRG_4En</name>
              <description>When set, data frames with type=10 and subtype=0100 will trigger channel info</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATA_TRG_3En</name>
              <description>When set, data frames with type=10 and subtype=0011 will trigger channel info</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATA_TRG_2En</name>
              <description>When set, data frames with type=10 and subtype=0010 will trigger channel info</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATA_TRG_1En</name>
              <description>When set, data frames with type=10 and subtype=0001 will trigger channel info</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DATA_TRG_0En</name>
              <description>When set, data frames with type=10 and subtype=0000 will trigger channel info</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DFS_CFG</name>
          <addressOffset>0x000016F8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00020000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_dfs_drop_cnt</name>
              <description>drop dfs packets number when dfsbuffer is full</description>
              <bitRange>[31:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>dfs_buff_full</name>
              <description>dfs buffer is full</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>dfs_en_intrpt</name>
              <description>When valid, enable generate dfs interrupt</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>r_dfs_en_intrpt</name>
              <description>When set to 1, enable generate DFS interrupt, one pulse</description>
              <bitRange>[16:16]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>r_dfs_pkt_len</name>
              <description>dfs packet length need Host to read, 4 bytes unit</description>
              <bitRange>[15:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>r_dfs_rst_drop_cnt</name>
              <description>When set to 1, clear r_dfs_drop_cnt, one pulse</description>
              <bitRange>[5:5]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>r_dfs_read_mode</name>
              <description>When set to 1,means host read mode for debug</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_dfs_stop</name>
              <description>When set to 1, stop to get DFS from BB and clear the DFS buffer</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DFS_AGG_TIME</name>
          <addressOffset>0x000016FC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>dummy</description>
              <bitRange>[31:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txtrig_type</name>
              <description>mapping to frame control type and subtype filed, for LA trigger select</description>
              <bitRange>[28:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_rxtrig_type</name>
              <description>mapping to frame control type and subtype filed, for LA trigger select</description>
              <bitRange>[22:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_dfs_agg_time</name>
              <description>DFS packet aggregation time. When reach the target, will inform host by interrupt, unit ms</description>
              <bitRange>[16:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_dfs_agg_num</name>
              <description>aggregation DFS packet number selection. When reach the target, will inform host by interrupt, unit 4bytes</description>
              <bitRange>[8:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>page7</name>
      <groupName>WIFI</groupName>
      <baseAddress>0x40000000</baseAddress>
      <size>0x00000800</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00000800</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>REG_MACID1</name>
          <addressOffset>0x00000700</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MACID1_0</name>
              <description>MAC Identification Number Register for port 1</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MACID1_1</name>
          <addressOffset>0x00000704</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MACID1_1</name>
              <description>MAC Identification Number Register for port 1</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BSSID1</name>
          <addressOffset>0x00000708</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BSSID1_0</name>
              <description>Basic Station Set Identification for port 1.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BSSID1_1</name>
          <addressOffset>0x0000070C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BSSID1_1</name>
              <description>Basic Station Set Identification for port 1.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BCN_PSR_RPT1</name>
          <addressOffset>0x00000710</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_DTIM_CNT1</name>
              <description>DTIM count</description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_DTIM_PERIOD1</name>
              <description>DTIM Period</description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_TIM_HAS_AID</name>
              <description>indicate BC/MC packets are buffered at the AP or transimited BSSID</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_TIM_HAS_MY_BSSID</name>
              <description>indicate BC/MC packets are buffered at nontransmitted BSSID, sw need to check corresponding dtim count field in multiple bssid index field</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_TIM_HAS_MYAID</name>
              <description>my aid in the virtual bitmap is set</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_TIM_VALID</name>
              <description>when set to 1 , indicate tim report valid</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>Dummy</name>
              <description></description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_PS_AID_1</name>
              <description>AID1 for MACID1</description>
              <bitRange>[10:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ASSOCIATED_BFMEE_SEL</name>
          <addressOffset>0x00000714</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BFMEE1_EN</name>
              <description>If enabled, NDPA would be sent to beamformee1.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BFMEE1_AID</name>
              <description>P_AID of the target beamformee1</description>
              <bitRange>[24:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BFMEE0_EN</name>
              <description>If enabled, NDPA would be sent to beamformee0.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BFMEE0_AID</name>
              <description>P_AID of the target beamformee0</description>
              <bitRange>[8:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SND_PTCL_CTRL</name>
          <addressOffset>0x00000718</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x42000280</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_ndp_rx_standby_timer</name>
              <description>A timeout value for MAC to leave NDP_Rx_standby_state and go back to normal Rx mode. (unit: 2us)</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_CHK_RPTPOLL_A2_DIS</name>
              <description>1: For any A1-matched BF Rpt Poll, send back VHT-CB
0: If A1-matched BF Rpt Poll's A2 fails to match the previous receiving NDPA's A2, do not send VHT-CB</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_CHK_UCNDPA_A2_DIS</name>
              <description>0: If A1-matched NDPA's A2 fails to match 0x6E4 or 0x6EC, use default csi parameter
1: For any receiving A1-matched NDPA, use 0x6F4[11:0] as csi parameter</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_HT_CATEGORY</name>
              <description>csi report offset for ht mode</description>
              <bitRange>[21:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_OFFSET_RPTPOLL_EN</name>
              <description>1: If previous Tx pkt is BF Rpt Poll or VHT NDP, use vht csi start offset; otherwise ht csi start offset
0: If previous Tx pkt is vht rate, use vht csi start offset; otherwise ht csi start offset</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_CSI_CHKSUM_DIS</name>
              <description>1:Disable check 16bit checksum value of csi report from BB 
 0:Enable check 16bit checksum value of csi report from BB</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_VHT_CATEGORY</name>
              <description>used as csi report  offset</description>
              <bitRange>[13:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_USE_NSTS</name>
              <description>1: use Nsts as Nr, 0: use register value as Nr</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_Disable_check_vhtsigb_crc</name>
              <description>1: disable, 0: enable</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_disable_check_vhtsiga_crc</name>
              <description>1: disable,  0: enable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_BFPARAM_SEL</name>
              <description>1: use beamforming nc/nr/ng parameter from register 0x6F4
0: use beamforming nc/nr/ng parameter from tx report buffer</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_CSISEQ_SEL</name>
              <description>By which the sequence number of CSI frame is controlled
1: non-QoS SEQ number
0: counter</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_CSI_WITHHTC_EN</name>
              <description>Set to 1, CSI frame would carry HTC in MAC header.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_HT_NDPA_EN</name>
              <description>Set to 1, MAC would inform BB of preparing to receive NDP if the received NDP Announcement MPDU is valid.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_VHT_NDPA_EN</name>
              <description>Set to 1, MAC would inform BB of preparing to receive NDP if the received NDPA is valid.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BEAMFORM_STATUS</name>
          <addressOffset>0x0000071C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_write_enable</name>
              <description>Access flag. '0' for read. '1' for write, 0x72C[15:0] must be sett before this bit is set</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_WMAC_CHECK_SOUNDING_SEQ</name>
              <description>Set to 1,MAC would check sounding sequence number of received CSI report 
and transmitted NDPA</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_vhtht_mimo_ctrl_field</name>
              <description>when 'read':
[24:1]: currently received VHT MIMO Control field 
or
[16:1]: currently received HT MIMO Control field</description>
              <bitRange>[24:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_csi_intrrupt_status</name>
              <description>sounding status: '0': fail; '1': success;</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_NSARP_CFG</name>
          <addressOffset>0x00000720</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_NSARP_RESPEN</name>
              <description>NAARP parser enable</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_NSARP_PARP</name>
              <description>when set to 1, reject ARP</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_NSARP_RIPV6</name>
              <description>when set to 1, reject IPV6</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_NSARP_MODEN</name>
              <description>r_WMAC_NSARP_MODEN[0]: when set to 1, enable arp request;
r_WMAC_NSARP_MODEN[1]: when set to 1, enable ipv6 request;</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_NSARP_RSPFTP</name>
              <description>used to select Response_type and TID</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_NSARP_RSPSEC</name>
              <description>select response packet security type</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ZB_STATISTIC_1</name>
          <addressOffset>0x00000724</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_ZB_HI_RX</name>
              <description>for statistic</description>
              <bitRange>[31:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_ZB_HI_TX</name>
              <description></description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ZB_STATISTIC_2</name>
          <addressOffset>0x00000728</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_ZB_LO_RX</name>
              <description>for statistic</description>
              <bitRange>[31:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_ZB_LO_TX</name>
              <description></description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BEAMFORMING_INFO_NSARP</name>
          <addressOffset>0x0000072C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_UPD_BFMEE_USERID</name>
              <description>Select BFMEE User ID</description>
              <bitRange>[15:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_UPD_BFMEE_FBTP</name>
              <description>Feedback Type(B11) of VHT MIMO Control field, HT is no used</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_UPD_BFMEE_BW</name>
              <description>Channel Width of VHT MIMO control field (B7-6) and (B4) when HT mode</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_UPD_BFMEE_CB</name>
              <description>Codebook Information of MIMO control field [8] for VHT (B10) and (B10-9) when HT mode</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_UPD_BFMEE_NG</name>
              <description>Grouping of MIMO control field [7:6] for VHT (B9-8) and (B6-5) when HT mode</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_UPD_BFMEE_NR</name>
              <description>Nr Index of MIMO control field [5:3] for VHT (B5-3) ,[4:3] for HT mode (B3-2)</description>
              <bitRange>[5:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_UPD_BFMEE_NC</name>
              <description>Nc Index of MIMO control field [2:0] for VHT (B2-0) , [1:0] for HT mode (B1-0)</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_IPV6_0</name>
          <addressOffset>0x00000730</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_IPV6_MYIPAD_0</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_IPV6_1</name>
          <addressOffset>0x00000734</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_IPV6_MYIPAD_1</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_IPV6_2</name>
          <addressOffset>0x00000738</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_IPV6_MYIPAD_2</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_IPV6_3</name>
          <addressOffset>0x0000073C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_IPV6_MYIPAD_3</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ZB_COEX_TABLE_1</name>
          <addressOffset>0x00000740</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_ZB_COEX_TABLE_1</name>
              <description>coexistence table between WLAN and Zigbee, 
selected by BIT_COEX_TABLE_SEL = 0</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ZB_COEX_TABLE_2</name>
          <addressOffset>0x00000744</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_ZB_COEX_TABLE_2</name>
              <description>coexistence table between WLAN and Zigbee, 
selected by BIT_COEX_TABLE_SEL = 1</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ZB_BREAK_TABLE</name>
          <addressOffset>0x00000748</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_ZB_BREAK_TABLE_2</name>
              <description>Table used to break ZB activity, when new WLAN request is coming and ZB is on transmitting or receiving</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ZB_BREAK_TABLE_1</name>
              <description>Table used to break WLAN activity, when new ZB request is coming and WLAN is on transmitting or receiving</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_EXT_ZB_DETEC_CTRL</name>
          <addressOffset>0x0000074C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x40C80000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_ZB_TRX_DETECT_TIME</name>
              <description>Valid if BIT_ZIGBEE_MODE = 1 &amp; BIT_EXT_ZIGBEE_MODE = 0 (external mode, directional PRIORITY) 
After ZB_PRI_DETECT_TIME duration, if ZB_PRIORITY is low or goes low during ZB_TRX_INIT_DETECT_TIME, Zigbee will receive packets; otherwise, if ZG_PRIORITY is high or goes high, ZB will TX data. Unit 1us.</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ZB_PRI_DETECT_TIME</name>
              <description>Valid if BIT_ZIGBEE_MODE = 1 &amp; BIT_EXT_ZIGBEE_MODE = 0 (external mode, directional PRIORITY) 
After ZB_REQUEST asserting, if ZG_PRIORITY is asserted within this ZB_PRI_DETECT_TIME duration, ZG will initiate high priority activities; otherwise, if ZB_PRIORITY is not asserted within this duration, it would be low priority activities. Units 1us. (0-255us)</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ZB_CNT_THR</name>
              <description>ZB count threshold, unit: us</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ZB_ARB_TIME</name>
              <description>8 bit timer register : Arbitration window of ZB trx request (unit: us)</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WMAC_RTX_CTX_SUBTYPE</name>
          <addressOffset>0x00000750</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000076</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_r_WMAC_CTX_SUBTYPE</name>
              <description></description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_RTX_SUBTYPE</name>
              <description></description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WMAC_RTX_SWAES_RD_1</name>
          <addressOffset>0x00000754</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>wmac_swaes_rd_0</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WMAC_RTX_SWAES_RD_2</name>
          <addressOffset>0x00000758</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>wmac_swaes_rd_1</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WMAC_RTX_SWAES_RD_3</name>
          <addressOffset>0x0000075C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>wmac_swaes_rd_2</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WMAC_SWAES_CFG</name>
          <addressOffset>0x00000760</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BTCOEX_SW_RST</name>
              <description></description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_GNT_BOTH_POL</name>
              <description>grant both choose GNT_BT  polarity:
0 : deassert GNT_BT  signal as PTA grant both WiFI and BT.
1 : assert GNT_BT signal as PTA grant both WiFi and BT.</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BT_ARB_INST_EN</name>
              <description>1: enable GNT_BT_BYPASS_PRIORITY 
0 : disable</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BT_ARB_TIME</name>
              <description>8 bit timer register : Arbitration window of bt trx request ( in the unit of us)</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SWAES_REQ</name>
              <description>software aes engine request polling</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_R_WMAC_SWAES_WE</name>
              <description>Write enable of register ro_WMAC_SWAES_RD</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_R_WMAC_SWAES_SEL</name>
              <description>When R_WMAC_SWAES_SEL =1,the content of register 0750-075F used to be
aes engine data in or data out .
When R_WMAC_SWAES_SEL =0, the content of register 0754-075F used to be
aes engine security key</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BT_COEX_ENH</name>
          <addressOffset>0x00000764</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x18021E00</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_ZIGBEE_EN</name>
              <description>Enable ZigBee function</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ZIGBEE_MODE</name>
              <description>0: SOC
1: external</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EXT_ZIGBEE_MODE</name>
              <description>The mode of external ZigBee
1: static PRIORITY
0: directional PRIORITY</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_COEX_TABLE_SEL</name>
              <description>Select coexistence table for WLAN &amp; ZB
0: BIT_COEX_TABLE_WL_ZB_1
1: BIT_COEX_TABLE_WL_ZB_2</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EXT_ZB_GNT_POLAR</name>
              <description>Select the polar of ZB_GRANT, for extarnal ZB
0: low active
1: high active</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ZB_ARB_INST_EN</name>
              <description>1: enable the time limit of ZigBee request (zb_pri | zb_rx | zb_tx), PTA is valid during ( &lt;=BIT_ZB_ARB_TIME)
0: disable 
Co-work with BIT_ZB_ARB_TIME</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ZB_CNT_THREN</name>
              <description>ZB count threshold enable, for statistics
co-work with BIT_ZB_CNT_THR</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ZB_STATISTIC_EN</name>
              <description>enable statistic of ZB</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_GNT_ZB_BB_SW_EN</name>
              <description>Enable SW control gnt_zb_bb</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_GNT_ZB_BB_SW</name>
              <description>SW value</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_GNT_ZB_RFC_SW_EN</name>
              <description>Enable SW control gnt_zb_rfc</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_GNT_ZB_RFC_SW</name>
              <description>SW value</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_GNT_ZB_EXT_SW_EN</name>
              <description>Enable SW control gnt_zb_o of external ZigBee</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_GNT_ZB_EXT_SW</name>
              <description>SW value,  external ZigBee</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EXT_ZB_REQ_POLAR</name>
              <description>Select the polar of ZB_REQUEST, for static mode external ZB
0: low active
1: high active</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_BT_DONT_CARE</name>
              <description>1: break table of BT &amp; WL can be all "1"
0: break table of BT &amp; WL cannot be all "1"</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DIS_ZB_DONT_CARE</name>
              <description>1: break table of ZB &amp; WL can be all "1"
0: break table of ZB &amp; WL cannot be all "1"</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BTG_LNA1_GAIN_SEL</name>
              <description>control by Driver
0: mask for WL
1: original BTG</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_r_gnt_bt_rfc_sw</name>
              <description>SW control BT RF</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_r_gnt_bt_rfc_sw_en</name>
              <description>SW control BT RF enable</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_r_gnt_bt_bb_sw</name>
              <description>SW control BT baseband</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_r_gnt_bt_bb_sw_en</name>
              <description>SW control BT baseband enable</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_r_bt_cnt_thren</name>
              <description>BT count threshold enable</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>bit_r_bt_cnt_thr</name>
              <description>BT count threshold</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WLAN_ACT_MASK_CTRL</name>
          <addressOffset>0x00000768</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RO_PTA_GNT_INFO</name>
              <description>[0]: gnt_wl
[1]: gnt_bt_bb
[2]: gnt_bt_rfc
[3]: gnt_zb_bb
[4]: gnt_zb_rfc</description>
              <bitRange>[31:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_CYC_PTA_EN_RFC</name>
              <description>Enable RFC clock some cycles after gnt_* signals changed. unit: 1 mac_clk</description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WACTMSK_OFF_DUR</name>
              <description>WLAN will reserve channel for BT during MASK OFF duration. Unit
0.625ms</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WACTMSK_ON_DUR</name>
              <description>WLAN can block BT during MASK On duration. Unit 0.625ms</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WLAN_ACT_MASK_CTRL_1</name>
          <addressOffset>0x0000076C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BT_STAT_DELAY</name>
              <description>For CSR, BT_PRI and BT_STAT go high form low at the same time. Thus, BT_STAT
 need delay BT_STAT_DELAY time to trigger hardware. Unit: 1us</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BT_TRX_INIT_DETECT</name>
              <description>After BT_PRI asserting for BT_TRX_INIT_DETECT us, 
if BT_STAT is low, then BT will receive packets; otherwise, if BT goes high, BT will TX data. Unit 4us.</description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BT_PRI_DETECT_TO</name>
              <description>After BT_PRI asserting, if BT_STAT is asserted within this TO duration, BT will initiate high priority activities; otherwise, if BT_STAT is not asserted within this duration, it would be low priority activities. Units 1us.</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_GRANTALL_WLMASK</name>
              <description>grant all mask</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_STATIS_BT_EN</name>
              <description>When this bit is set, the BT_ACT_STATISTICS counters starts counting</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_WL_ACT_MASK</name>
              <description>Enable WLAN_ACT Mask Function (related to 0x768h-0x76Dh)</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ENHBT</name>
              <description>Enable Enhanced BT Interface (we suggest to use with BT mode 2)</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WLRX_TER_BY_CTL_1</name>
              <description>When wlan receive a control packet without fit address, whether the signal indicating wlan rx can be terminated as soon as the address check finish is not only controlled by r_WLRX_TER_BY_AD, but also should be refereed to this bit. 
1: enable; 0: disable</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WLRX_TER_BY_AD_1</name>
              <description>When wlan receive the packet without fit address, the signal indicating wlan rx can be terminated as soon as the address check finish. This feature can be enabled by this bit. 
1: en</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ANT_DIVERSITY_SEL_1</name>
              <description>Antenna diversity for 2 antenna mode: MAC_ANT_SEL = GNT_BT ^ ANT_DIVERDITY_SEL</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ANTSEL_FOR_BT_CTRL_EN_1</name>
              <description>Enable the control of antenna selection through GNT_BT:
GNT_BT=1: ANT_SEL for BT device;
GNT_BT=0: ANT_SEL for WL device.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WLACT_LOW_GNTWL_EN_1</name>
              <description>When WLACT_LOW_GNTWL_EN = 1, the TRX of WLAN are blocked according 
to the BTCOEX table arbitration during MASK OFF duration. WLACT_LOW_GNTWL_EN = 0, the TRX of WLAN are paused during MASK OFF duration..</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WLACT_HIGH_GNTBT_EN_1</name>
              <description>When WLACT_HIGH_GNTBT_EN = 1, the TRX of WLAN are blocked according 
to the BTCOEX table arbitration during MASK ON duration. When WLACT_HIGH_ GNTBT_EN = 0, the TRX of WLAN are not paused during MASK OFF duration.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_WLACT_MASK_SYNC</name>
              <description>When NAV update is beyond this value, then NAV update is aborted. When this field
is 0x00, NAV_UPPER function is disable. The unit is 128us.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BT_ENHANCED_CTRL0</name>
          <addressOffset>0x00000770</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_STATIS_BT_31_0</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BT_ENHANCED_CTRL1</name>
          <addressOffset>0x00000774</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_STATIS_BT_63_32</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BT_PROPRI</name>
          <addressOffset>0x00000778</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BT_CMD_RPT</name>
              <description></description>
              <bitRange>[31:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_RPT_FROM_BT</name>
              <description></description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BT_HID_ISR_SET</name>
              <description>When EN_BT_PROFILE_OR_HID is set "1", hardware also need to check
this value to trigger an interrupt.
0: default, TX and RX
1: TX
2: RX
3: Reserved</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TDMA_BT_START_NOTIFY</name>
              <description>When the control of TDMA mode is firmware and firmware also receive
signal that NULL packet for BT had sent, firmware can fill this bit to notify HW PTA to pull WLAN_ACT to low and the interval is Tbt</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_Enable_TDMA_HW_Mode</name>
              <description>0: default, PTA TDMA mode is hardware mode.
1: enable firmware mode.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_Enable_PTA_TDMA_Mode</name>
              <description>0: default, disable PTA TDMA mode
1: enable
TDMA mode:
a. WLAN_ACT default is high.
b. Hardware mode:
When NULL packet for BT had sent, hardware will notify PTA to start
TDMA mode.
Firmware mode:
When NULL packet for BT had sent, hardware will trigger an interrupt to
notify firmware. Then, firmware need to set TDMA_BT_START_NOTIFY
to notify PTA to start TDMA mode.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_Enable_Coexist_Tab_In_TDMA</name>
              <description>0: default, no matter which WLAN_ACT is high or low, PTA doesn't execute
co-exist table scheme
1: enable, When WLAN_ACT is high, PTA execute xo-exist table scheme</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_GPIO2_GPIO3_EXANGE_or_NO_BT_CCA</name>
              <description>Enable GPIO2 and GPIO3 exchange. (Note: need to enable mode2 and
enhance 3 wire)
If Enable RTK BT mode, set this bit to 1 to disable granting to BT device
when arbitration</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RTK_BT_Enable</name>
              <description>Enable RTK BT mode</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BT_Status_Report_Register</name>
          <addressOffset>0x0000077C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BT_PROFILE</name>
              <description>When WLAN received CMD_ID 0x3, it will recorder to this.</description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BT_POWER</name>
              <description>When WLAN received CMD_ID 0x2, it will recorder to this</description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BT_PREDECT_STATUS</name>
              <description>When WLAN received CMD_ID 0x0, it will recorder to this</description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BT_CMD_ID</name>
              <description>command information from BT</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BT_Interrupt_Control_Register</name>
          <addressOffset>0x00000780</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_WLAN_RPT_NOTIFY</name>
              <description>When firmware had prepared packet to send to BT, it need to set this bit to
notify hardware that it can transmit.
0: There isn't a valid packet in register" WLAN_RPT_ PKT".
1: There is a valid packet in register" WLAN_RPT_ PKT".</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_WLAN_RPT_AND_BT_QUERY</name>
              <description>Enable two interrupt:
1) PTA sent the report packet successfully
2) PTA sent a query packet
0: Disable
1: Enable</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_MAC_NULL_PKT_NOTIFY</name>
              <description>When MAC had sent NULL packet for BT and firmware also set nav_for_bt
bit, hardware triggers an interrupt to notify firmware.
0: Disable
1: Enable</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_BT_STSTUS_RPT</name>
              <description>When WLAN receive cmd_id "0", hardware trigger an interrupt to notify
firmware.
0: Disable
1: Enable</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_BT_POWER</name>
              <description>When WLAN received the packet including BT Power and check register
"BT_STATUS_RPT", if data contents aren't the same, hardware can trigger
an interrupt to notify firmware.
0: Disable
1: Enable</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_BT_CHANNEL</name>
              <description>When WLAN received the packet including BT channel number, hardware
can trigger an interrupt to notify firmware.
0: Disable
1: Enable</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_BT_SLOT_CHANGE</name>
              <description>When WLAN received the packet including that BT had multi-slots,
hardware can trigger an interrupt to notify firmware.
0: Disable
1: Enable</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_BT_PROFILE_OR_HID</name>
              <description>Enable two interrupt
1) When WLAN received the packet including that WLAN specific profile
and check register "BT_STATUS_RPT", if data contents aren't the same,
hardware can trigger an interrupt to notify firmware.
2) When WLAN received the report packet including HID information,
hardware will trigger an interrupt to notify firmware.
0: Disable
1: Enable</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WLAN_RPT_DATA</name>
              <description>Data contents, When the report packet had sent, hardware will clear this
register.</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TO_BT_CMDID</name>
              <description>Command id: 0x80~FF</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BT_DATA</name>
              <description>When WLAN received the packet BT sent, hardware will place data to this register in addition to CMD_ID 0x0 ~ 0x3.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WLAN_Report_Time_Out_Control_Register</name>
          <addressOffset>0x00000784</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_ISOLATION_CHK_0</name>
              <description>0: leave PTA
1: enter PTA</description>
              <bitRange>[31:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ISOLATION_EN</name>
              <description>Isolation table enable bit.
0: disable
1: enable</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WLAN_RPT_TO</name>
              <description>When WLANＨW received query packet, HW timer counts. If timer equals
to WLAN_RPT_TO and HW can"t send packet, it will give up query packet
at this time. When BT sent another query packet, WLAN HW need to send
the previous packet and it shouldn't trigger an interrupt to firmware. Unit:
4us.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BT_Isolation_Table_Register_Register_1</name>
          <addressOffset>0x00000788</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_ISOLATION_CHK_1</name>
              <description>0: leave PTA
1: enter PTA</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BT_Interrupt_Status_Register</name>
          <addressOffset>0x0000078C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BT_HID_ISR</name>
              <description>When WLAN received the report packet including HID information,
hardware will trigger an interrupt to notify firmware</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BT_QUERY_ISR</name>
              <description>When WLAN received a query packet, hardware triggers an interrupt to
notify firmware</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_MAC_NULL_PKT_NOTIFY_ISR</name>
              <description>When MAC had sent NULL packet for BT and firmware also set nav_for_bt
bit, hardware triggers an interrupt to notify firmware</description>
              <bitRange>[29:29]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_WLAN_RPT_ISR</name>
              <description>When PTA sent the report packet successfully, hardware triggers an interrupt
to notify firmware.</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BT_POWER_ISR</name>
              <description>When WLAN received the packet including BT Power and check register "BT_STATUS_RPT", if data contents aren't the same, hardware can trigger
an interrupt to notify firmware</description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BT_CHANNEL_ISR</name>
              <description>When WLAN received the packet including BT channel number, hardware
can trigger an interrupt to notify firmware.</description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BT_SLOT_CHANGE_ISR</name>
              <description>When WLAN received the packet including that BT had multi-slots,
hardware can trigger an interrupt to notify firmware</description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BT_PROFILE_ISR</name>
              <description>When WLAN received the packet including that WLAN specific profile and check register "BT_STATUS_RPT", if data contents aren't the same, hardware can trigger an interrupt to notify firmware.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_ISOLATION_CHK_2</name>
              <description>0: leave PTA
1: enter PTA</description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BT_TDMA_Time_Register</name>
          <addressOffset>0x00000790</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_BT_TIME</name>
              <description>The time is that WLAN_ACT is low. Unit: us</description>
              <bitRange>[31:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BT_RPT_SAMPLE_RATE</name>
              <description>When wifi detected the raising edge of BT report packet, wifi need to counter
BT_RPT_SAMPLE_RATE. Then hw could detect which is high or low. Uint:
20 ns</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BT_ACT_Register</name>
          <addressOffset>0x00000794</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0000007F</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_B_AX_BT_BLE_EN</name>
              <description>Decide the GNT_BT_TX / RX 
0: GNT_BT_TX = GNT_BT &amp; BT_TX ;  GNT_BT_RX = GNT_BT &amp; BT_RX
1: GNT_BT_TX = GNT_BT &amp; (BT_TX | BT_BLE) ;  GNT_BT_RX = GNT_BT &amp; (BT_RX | BT_BLE)</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BT_EISR_EN</name>
              <description>BT eisr enable</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BT_ACT_FALLING_ISR</name>
              <description>When BT_ACT signal is falling edge, it will trigger an interrupt.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BT_ACT_RISING_ISR</name>
              <description>When BT_ACT signal is raising edge, it will trigger an interrupt</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_TDMA_TO_ISR</name>
              <description>When BT_TIME expired, it will trigger an interrupt.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_BT_CH</name>
              <description>When hardware receive cm_id "1", it will recorder to this.</description>
              <bitRange>[6:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_LTR_IDLE_LATENCY_V2</name>
          <addressOffset>0x00000798</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x04444400</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_LTR_IDLE_LATENCY</name>
              <description>LTR idle latency.</description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_OBFF_STATE</name>
              <description></description>
              <bitRange>[29:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_OBFF_CTRL_1</name>
              <description></description>
              <bitRange>[27:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_OBFF_CTRL_0</name>
              <description></description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_LTR_ACTIVE_LATENCY_V2</name>
          <addressOffset>0x0000079C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x02030405</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_LTR_ACTIVE_LATENCY</name>
              <description>LTR Active latency.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_OBFF_CTRL</name>
          <addressOffset>0x000007A0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x4A004010</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_LTR_CTRL</name>
              <description></description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LTR_IDLE_FLAG</name>
              <description></description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_LTR_ACT_FLAG</name>
              <description></description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_OBFF_CTRL</name>
              <description></description>
              <bitRange>[21:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_LTR_CTRL</name>
          <addressOffset>0x000007A4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x03ECECEC</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RX_VENDOR_ADV_EN</name>
              <description>when set, rx vendor adv function is true</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TX_VENDOR_ADV_EN</name>
              <description>when set, tx vendor adv function is true</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_OPT_SIG2</name>
              <description>For rx ofdm ppdu lsig signal filed check when rx vendor adv is true</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_OPT_SIG1</name>
              <description>For rx ofdm ppdu lsig signal filed check when rx vendor adv is true</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_INI_SIG</name>
              <description>For rx ofdm ppdu lsig signal filed check when rx vendor adv is true</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_LTR_CTRL2</name>
          <addressOffset>0x000007A8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x806088E0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_OBFF_TIMER_ID_HIGH</name>
              <description>When media rate rx packet in , delay rx dma timeout value index. 0: no
delay,1: 12.8us; 2: 102.4us; 3: 204.8us; 4: 819.2 us; 5: 1.638ms; 6: 52ms; 7:
always block until obff or cpu active window</description>
              <bitRange>[31:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HIGH_RATE_BDRY</name>
              <description>High, media, low rate boundary</description>
              <bitRange>[22:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LOW_RATE_BDRY</name>
              <description>High, media, low rate boundary</description>
              <bitRange>[15:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_HIGH_RATE_TRIGS</name>
              <description>High rate rx ltr trigger point select: 0 plcp ready;1: rx a1 latch OK; 2: fcs
ready.</description>
              <bitRange>[8:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MEDIA_RATE_TRIGS</name>
              <description>Media rate rx ltr trigger point select: 0 plcp ready;1: rx a1 latch OK; 2: fcs
ready.</description>
              <bitRange>[6:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LOW_RATE_TRIGS</name>
              <description>Low rate rx ltr trigger point select: 0 plcp ready;1: rx a1 latch OK; 2: fcs
ready.</description>
              <bitRange>[4:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RX_EXHAUST_ID</name>
              <description>When rx page less than this threshold, release obff block rx.</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ANTTRN_CTR_V1</name>
          <addressOffset>0x000007B0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TRAIN_STA_ADDR1</name>
              <description>The Address of the trained station. Only available when
ADDR2_MATCH_EN = 1</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_ANTTRN_CTR_1_V1</name>
          <addressOffset>0x000007B4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_ANTTRN_SWITCH</name>
              <description>Smart antenna use address cam or port register to search A2.
0:Use address cam
1:Use port register</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_APPEND_MACID_IN_RESP_EN</name>
              <description>Whether to append MACID in the rx descriptor of rx response packet</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ADDR2_MATCH_EN</name>
              <description>Enable the comparison of ADDR2 for the rx packet..</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_ANTTRN_EN</name>
              <description>Enable the antenna training function</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TRAIN_STA_ADDR2</name>
              <description>The Address of the trained station. Only available when
ADDR2_MATCH_EN = 1</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WMAC_PKTCNT_RWD</name>
          <addressOffset>0x000007B8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_PKTCNT_BSSIDMAP</name>
              <description>To decide this counter is for which MBSSID (16組), default :
0 for counter 0
1 for counter 1
2 for counter 2
3 for counter 3
4 for counter 4
5 for counter 5
6 for counter 6
7 for counter 7</description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_PKTCNT_CNTRST</name>
              <description>Write 1 to reset Counter  
after DRV read all counters , DRV set this bit and HW return 0 after reset</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WMAC_PKTCNT_CTRL</name>
          <addressOffset>0x000007BC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_WMAC_PKTCNT_FEN</name>
              <description>Packet counter function enable</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_PKTCNT_CFGAD</name>
              <description>Packet counter configure register read/write address</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_IQ_DUMP</name>
          <addressOffset>0x000007C0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_DUMP_OK_ADDR</name>
              <description>[31] : dump signal addr has round up
[30:16] : dump finish addr in txpktbuffer</description>
              <bitRange>[31:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_MACDBG_TRIG_IQDUMP</name>
              <description>Enable dump bb ADC signal trigger from MAC debug port which controled by r_LEVEL_PULSE_SEL.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_TRIG_TIME_SEL</name>
              <description>dump ok time to finish dump signal(unit is 1us)</description>
              <bitRange>[14:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_MAC_TRIG_SEL</name>
              <description>dump bb ADC sel mac strigger even
2'b00 : rxpkt ok trig dump ok
2'b01 : rxpkt_fauil trig dump ok
2'b10 : rxpkt cca rise edge to trig dump ok</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MAC_TRIG_REG</name>
              <description>dump bb ADC sel mac strigger even
write this reg to 1 to trig dump finish</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_LEVEL_PULSE_SEL</name>
              <description>if dump bb ADC signal :
[3] for sel mac trigger event
if dump mac dbg signal
[4:3] : 2'b00 : level signal match
[4:3] : 2'b01 : posedge match
[4:3] : 2'b10 : negdge match</description>
              <bitRange>[4:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_en_LA_MAC</name>
              <description>enable dump mac dbg signal</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_EN_IQDUMP</name>
              <description>enable dump bb ADC signal</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_IQDATA_DUMP</name>
              <description>enable data dump for txpktbuffer high 64K</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MASK_LA_MAC</name>
          <addressOffset>0x000007C4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MASK_LA_MAC</name>
              <description>used for mask one or more bits of debug port</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MATCH_REF_MAC</name>
          <addressOffset>0x000007C8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MATCH_REF_MAC</name>
              <description>used for compare with debug port</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WMAC_DBG_FTM_CTL</name>
          <addressOffset>0x000007CC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xC0000080</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_SEL_DEBUG_DATA</name>
              <description>11: data write to sram
10: data after sync_fifo
01: input data (TXD/RXD/IQ_DMA_DATA from BB)
00: RSVD</description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_TIMEOUT</name>
              <description>Set this bit to 1 to reset mdpk read pointer</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_RE_START</name>
              <description>Before setting 0x7C0[1:0] =2'b11, set this bit to 1 to enable MDPK access mode</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LA_MAC_TIMEOUT_UNIT_SEL</name>
              <description>LA mode triggered by mac debug port timeout value unit selection.
2'b00: 1us, 2'b01:32us, 2'b10: 1ms, 2'b11:RSVD</description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LA_MAC_TIMEOUT_VALUE</name>
              <description>LA mode triggered by mac debug port timeout value, available with non-zero value.</description>
              <bitRange>[25:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_LEVEL_PULSE_SEL_EXT</name>
              <description>LA mode triggered by mac debug port timeout event</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TRIG_TIME_UNIT_SEL</name>
              <description>Select trigger time unit of 0x7C0[14:8].
3'b000 : 1us , 3'b001 : 2us ,  3'b010 : 4us , 
3'b011 : 8us , 3'b100 : 16us ,  3'b101 : 32us ,
3'b110 : 64us, 3'b111 : RSV</description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_TXD_DEBUG</name>
              <description>LA MODE function.
enable mactx debug mode</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_RXD_DEBUG</name>
              <description>LA MODE function.
enable macrx debug mode</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TRX_TRIG_SEL_DEBUG</name>
              <description>LA MODE function.
*1: select trig_stop signals from debug port, in MACTX/MACRX mode</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TRX_TRIG_SEL_PATT</name>
              <description>LA MODE function. 
*1: select trig_stop signals from pattern match (see 0x17F0~0x17FC), in MACTX/MACRX mode</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_EN_IQD_LEN_BREAK</name>
              <description>LA MODE function. 
*1: after "trig_stop" signal asserted, if the iqdata's length over the BIT_IQD_LENGTH_REF, finish the iqdump process 
*0: only used TRIG_TIME finish the iqdump process</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_IQD_LENGTH_REF</name>
              <description>LA MODE function. Valid when BIT_EN_IQD_LEN_BREAK = 1
Used to finish IQDUMP, unit is (8KB + 1bit)</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TRX_TRIG_SEL_WMAC</name>
              <description>LA MODE function. 
*1: select trig_stop signals from mactx or macrx, in MACTX/MACRX mode</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXFTM_TXACK_SC</name>
              <description>When HW receive FTM pkt, HW will use RX FTM BW as response ACK TXBW.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXFTM_TXACK_BW</name>
              <description>When HW receive FTM pkt, HW will use RX FTM SC as response ACK TXSC.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXFTM_EN</name>
              <description>If BIT_FTM_TYPE = 1 &amp;&amp; BIT_RXFTM_EN=1, 
 HW will parsing rx packet, to find FTM request frame.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXFTMREQ_BYDRV</name>
              <description>If set this bit to 1,Rx FTMREQ/FTM can be receive into rxpktbuffer.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXFTMREQ_EN</name>
              <description>If BIT_FTM_TYPE = 1 &amp;&amp; BIT_RXFTMREQ_EN=1,
 HW will parsing rx packet, to find FTM request frame.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_FTM_EN</name>
              <description>Fine timing measurement function; 0: Disable 1:enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_OFDM_CCK_LEN_MASK</name>
          <addressOffset>0x000007D0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0FFF0FFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RX_OFDM_LEN_TH</name>
              <description>rx ofdm len over this len to drop pkt(not for ht/vht)</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RX_CCK_LEN_TH</name>
              <description>rx cck len over this length to drop pkt</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WMAC_OPTION_FUNCTION_1</name>
          <addressOffset>0x000007D4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x5480A000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_r_WMAC_RXFIFO_FULL_TH_1</name>
              <description>csi report mac pause bb almost full threshold</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_RX_SYNCFIFO_SYNC_1</name>
              <description></description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_RXRST_DLY_1</name>
              <description>when this bit is set 1, rxrst pulse lasts for 20 cycle of MAC clock, when this bit is set 0, rxrst pulse lasts for 10 cycle of MAC clock,</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_SRCH_TXRPT_REF_DROP_1</name>
              <description>when this bit is set 1, reference macid drop information when macid search</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_SRCH_TXRPT_UA1_1</name>
              <description>when this bit is set 1, use tx A1 to search txrpt when rx  ack/cts, when BIT_r_WMAC_SRCH_TXRPT_TYPE is set 0, BIT_r_WMAC_SRCH_TXRPT_UA1 should be set 1</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_SRCH_TXRPT_TYPE_1</name>
              <description>for rx ack/cts pkt not to search txrpt buffer macid</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_NDP_RST_1</name>
              <description>rx pkt is ndp to clr macrx_active</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_POWINT_EN_1</name>
              <description>enable rx pkt fc column power bit int for FISR</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_SRCH_TXRPT_PERPKT_1</name>
              <description>enable search txrpt buffer for macid every pkt</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_SRCH_TXRPT_MID_1</name>
              <description>enable search txrpt buffer for macid</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_PFIN_TOEN_1</name>
              <description>rx fifo fsm flush state timeout to error stage</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_FIL_SECERR_1</name>
              <description>sec len error drop(sec len is zero)</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_FIL_CTLPKTLEN_1</name>
              <description>drop the rx pkt if the rx ctrl pkt len large than r_WMAC_RX_FIL_LEN</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_FIL_FCTYPE_1</name>
              <description>drop the ofdm pkt if the rx ofdm leg pkt fc type is 2'b11</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_FIL_FCPROVER_1</name>
              <description>drop the ofdm pkt if the rx ofdm leg pkt fc version illegal</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_PHYSTS_SNIF_1</name>
              <description>append sniff info after phy status</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_PHYSTS_PLCP_1</name>
              <description>append plcp header after phy status</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_MAC_TCR_VBONF_RD_1</name>
              <description>vbon neg edge to read all data of mac rx sync fifo for rx parser</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_TCR_MPAR_NDP_1</name>
              <description>nop ok check bb ndp vld &amp; mac rx ndp check ok</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_NDP_FILTER_1</name>
              <description>mac rx ndp pkt set ppdu len to 0</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_RXLEN_SEL_1</name>
              <description>rx vht len sel lsig len
VHT PPDU length selection
0: 收到VHT PPDU PKT 會根據 VHTSIGB PPDU length 來parsing 與計算
1: 收到VHT PPDU PKT 會根據 BB 算的 LSIG length 來parsing 與計算</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_RXLEN_SEL1_1</name>
              <description>rx vht len sel lsig len if sigb len is more than lsig len</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_OFDM_FILTER_1</name>
              <description>RSVD</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_CHK_OFDM_LEN_1</name>
              <description>enable to check ofdm len</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_CHK_CCK_LEN_1</name>
              <description>enable to check rx cck len</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RX_FILTER_FUNCTION</name>
          <addressOffset>0x000007D8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x30810041</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RXHANG_EN</name>
              <description>Force read error content from fifo to solve rxhang.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_MHRDDY_LATCH</name>
              <description>Adjust mach_rdy timing if rx_parser and rxpktfifo FSM is not sync.</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_MHRDDY_CLR</name>
              <description>Reset mach_rdy_latch when rx parser begin parsing mac header.</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_RXPKTCTL_FSM_BASED_MPDURDY1</name>
              <description>Adjust mpdu_rdy timing to solve FSM behavier error.</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_DIS_VHT_PLCP_CHK_MU</name>
              <description>Disable check sigb crc value of MU plcp header.</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_CHK_DELIMIT_LEN</name>
              <description>Drop mpdu if delimeter mpdu length smaller than mac header length + 4.</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_REAPTER_ADDR_MATCH</name>
              <description>when this bit is set 1, physical address is matched when rx A1 is equal to tx A2, used in repeater mode</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_RXPKTCTL_FSM_BASED_MPDURDY</name>
              <description>when this bit is set 1, rxpktfifo_ctl FSM jumps based on mpdu_valid(all MPDU data has been transferred to rxpktbuffer), when this bit is set 0, rxpktfifo_ctl FSM jumps based on fcs_valid(all MPDU data has been parsed by rx_parser)</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_LATCH_MACHRDY</name>
              <description>when this bit set 1,mach_rdy signal is latched to make sure that rxpktfifo_ctl can detect it</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_RXFIL_REND</name>
              <description>when this bit set 1,icvmic_valid signal is cleared when icvmic_rdy is valid(ICV/MIC is parsed)</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_MPDURDY_CLR</name>
              <description>when the bit is set 1,  the last MPDU which will be transferred to rxpktfifo is ready and error occurs, mpdu_rdy signal is also valid(is means all MPDU data has been transferred to rxpktbuffer)</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_CLRRXSEC</name>
              <description>If new rx pkt is coming, reset the previous rx key search result.</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_RXFIL_RDEL</name>
              <description>If new rx pkt is coming, reset the rxpkt_ctl FSM after parsing plcp.</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_RXFIL_FCSE</name>
              <description>If rx pkt is not ampdu and rejected, 
reset rxpkt_ctl FSM immediately after parsing header</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_RXFIL_MESH_DEL</name>
              <description>drop the ofdm pkt if the rx ofdm leg pkt fc type is 2'b11</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_RXFIL_MASKM</name>
              <description>drop the ofdm pkt if the rx ofdm leg pkt fc type is 2'b11</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_RX_FIL_LEN_2</name>
              <description>use with BIT_r_WMAC_FIL_CTLPKTLEN</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WMAC_OPTION_FUNCTION_3</name>
          <addressOffset>0x000007E0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x001845A5</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_r_WMAC_TXNDP_SIGB</name>
              <description>SIGB for NDP packet when BW =40MHz</description>
              <bitRange>[20:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WMAC_DBG_SEL</name>
          <addressOffset>0x000007E4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MAC_DBG_SHIFT</name>
              <description></description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_MAC_DBG_SEL</name>
              <description></description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WMAC_DBG_SHIFT</name>
          <addressOffset>0x000007E8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_MACTX_CMD_SHIFT</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_WSEC_OPTION</name>
          <addressOffset>0x000007EC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00780014</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RXDEC_BM_MGNT</name>
              <description>decryption enable of rx multicast management pkt, 0x680[3] shall also be set valid</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXENC_BM_MGNT</name>
              <description>encryption enable of tx multicast management pkt, 0x680[2] shall also be set valid</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXDEC_UNI_MGNT</name>
              <description>decryption enable of rx unicast management pkt, 0x680[3] shall also be set valid</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXENC_UNI_MGNT</name>
              <description>encryption enable of tx unicast management pkt, 0x680[2] shall also be set valid</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_SEC_MASKIV</name>
              <description>MASK IV[15:8] for GCMP security</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_SEC_PN_SEL</name>
              <description>Security GCMP  header PN selection</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WAPI_FC_NOMASK</name>
              <description>If set to 1, enable old WAPI ADD format, don't mask FC bit4~6, bit8~15,
If set to 0, enable new WAPI ADD format, mask FC bit15 to 0.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WAPI_QC_NOMASK</name>
              <description>If set to 1, enable old WAPI ADD format, don't mask QC bit4~6, bit8~15,
If set to 0, enable new WAPI ADD format, mask QC bit4~6, bit8~15 to 0.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_GCM_WAPI_FC_NOMASK</name>
              <description>If set to 1, enable old GCM-WAPI ADD format, don't mask FC bit4~6, bit8~15,
If set to 0, enable new GCM-WAPI ADD format, mask FC bit15 to 0.</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_BT_TIME_CNT</name>
              <description>US timer counter boundary of BTCOEXIST</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RTS_ADDRESS_0</name>
          <addressOffset>0x000007F0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_r_WMAC_RTS_ADDR0</name>
              <description>if 0x604[31]=1 &amp; rts is multicast, use this value as Address1 of RTS</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RTS_ADDRESS_0_1</name>
          <addressOffset>0x000007F4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_r_WMAC_RTS_ADDR0_1</name>
              <description>if 0x604[31]=1 &amp; rts is multicast, use this value as Address1 of RTS</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RTS_ADDRESS_1</name>
          <addressOffset>0x000007F8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_r_WMAC_RTS_ADDR1</name>
              <description>if 0x604[31]=1 &amp; rts is multicast, use this value as Address1 of RTS</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RTS_ADDRESS_1_1</name>
          <addressOffset>0x000007FC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>dummy</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_r_WMAC_RTS_ADDR1_1</name>
              <description>if 0x604[31]=1 &amp; rts is multicast, use this value as Address1 of RTS</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>page12</name>
      <groupName>WIFI</groupName>
      <baseAddress>0x40000000</baseAddress>
      <size>0x00001300</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00001300</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>REG_DDMA_CH0SA</name>
          <addressOffset>0x00001200</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_DDMACH0_SA</name>
              <description>Source Address: the source SRAM address that DDMA will read from. This address bus support byte alignment.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DDMA_CH0DA</name>
          <addressOffset>0x00001204</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_DDMACH0_DA</name>
              <description>Destination Address: This address bus support byte alignment.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DDMA_CH0CTRL</name>
          <addressOffset>0x00001208</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_DDMACH0_OWN</name>
              <description>Set '1' by firmware/driver to denote this DMA channel info is ready for DMA engine to begin DMA activity; after DMA complete, DMA engine will clear it to '0' to denote for firmware that this channel is standby again.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DDMACH0_IDMEM_ERR</name>
              <description>1: Ddma I/D MEM fail. Please check 0x80[0]=1 or DMEM protection is release
0: No error</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_DDMACH0_CHKSUM_EN</name>
              <description>16bits Exclusive OR checksum enable</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DDMACH0_DA_W_DISABLE</name>
              <description>DA write disable 
When DDMACH0_CHKSUM_EN=1, DDMACH0_DA_W_DISABLE = 1 means that DMA engine doesn't move pkt to destination but executes checksum only and report status to DDMACH0_CHKSUM_STS.</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DDMACH0_CHKSUM_STS</name>
              <description>0: Exclusive OR checksum ok
1: Exclusive OR checksum fail</description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_DDMACH0_CHKSUM_CONT</name>
              <description>Set1, hw will continuously check sum in several ddma bursts</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[23:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DDMACH0_DLEN</name>
              <description>DMA Length: Length count served by DMA engine, unit in 1 bytes. The range is from 1 to 256K.</description>
              <bitRange>[17:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DDMA_CH1SA</name>
          <addressOffset>0x00001210</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_DDMACH1_SA</name>
              <description>Source Address: the source SRAM address that DDMA will read from. This address bus support byte alignment.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DDMA_CH1DA</name>
          <addressOffset>0x00001214</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_DDMACH1_DA</name>
              <description>Destination Address: This address bus support byte alignment.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DDMA_CH1CTRL</name>
          <addressOffset>0x00001218</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_DDMACH1_OWN</name>
              <description>Set '1' by firmware/driver to denote this DMA channel info is ready for DMA engine to begin DMA activity; after DMA complete, DMA engine will clear it to '0' to denote for firmware that this channel is standby again.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DDMACH1_IDMEM_ERR</name>
              <description>1: Ddma I/D MEM fail. Please check 0x80[0]=1 or DMEM protection is release
0: No error</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_DDMACH1_CHKSUM_EN</name>
              <description>16bits Exclusive OR checksum enable</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DDMACH1_DA_W_DISABLE</name>
              <description>DA write disable 
When DDMACH1_CHKSUM_EN=1, DDMACH1_DA_W_DISABLE = 1 means that DMA engine doesn't move pkt to destination but executes checksum only and report status to DDMACH1_CHKSUM_STS.</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DDMACH1_CHKSUM_STS</name>
              <description>0: Exclusive OR checksum ok
1: Exclusive OR checksum fail</description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_DDMACH1_CHKSUM_CONT</name>
              <description>Set1, hw will continuously check sum in several ddma bursts</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[23:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DDMACH1_DLEN</name>
              <description>DMA Length: Length count served by DMA engine, unit in 1 bytes. The range is from 1 to 256K.</description>
              <bitRange>[17:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DDMA_CH2SA</name>
          <addressOffset>0x00001220</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_DDMACH2_SA</name>
              <description>Source Address: the source SRAM address that DDMA will read from. This address bus support byte alignment.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DDMA_CH2DA</name>
          <addressOffset>0x00001224</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_DDMACH2_DA</name>
              <description>Destination Address: This address bus support byte alignment.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DDMA_CH2CTRL</name>
          <addressOffset>0x00001228</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_DDMACH2_OWN</name>
              <description>Set '1' by firmware/driver to denote this DMA channel info is ready for DMA engine to begin DMA activity; after DMA complete, DMA engine will clear it to '0' to denote for firmware that this channel is standby again.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DDMACH2_IDMEM_ERR</name>
              <description>1: Ddma I/D MEM fail. Please check 0x80[0]=1 or DMEM protection is release
0: No error</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_DDMACH2_CHKSUM_EN</name>
              <description>16bits Exclusive OR checksum enable</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DDMACH2_DA_W_DISABLE</name>
              <description>DA write disable 
When DDMACH2_CHKSUM_EN=1, DDMACH2_DA_W_DISABLE = 1 means that DMA engine doesn't move pkt to destination but executes checksum only and report status to DDMACH2_CHKSUM_STS.</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DDMACH2_CHKSUM_STS</name>
              <description>0: Exclusive OR checksum ok
1: Exclusive OR checksum fail</description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_DDMACH2_DDMA_MODE</name>
              <description>0: access DMEM/IMEM using cpu idle time slot
1: access DMEM/IMEM block cpu</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[23:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DDMACH2_DLEN</name>
              <description>DMA Length: Length count served by DMA engine, unit in 1 bytes. The range is from 1 to 256K.</description>
              <bitRange>[17:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DDMA_CH3SA</name>
          <addressOffset>0x00001230</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_DDMACH3_SA</name>
              <description>Source Address: the source SRAM address that DDMA will read from. This address bus support byte alignment.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DDMA_CH3DA</name>
          <addressOffset>0x00001234</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_DDMACH3_DA</name>
              <description>Destination Address: This address bus support byte alignment.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DDMA_CH3CTRL</name>
          <addressOffset>0x00001238</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_DDMACH3_OWN</name>
              <description>Set '1' by firmware/driver to denote this DMA channel info is ready for DMA engine to begin DMA activity; after DMA complete, DMA engine will clear it to '0' to denote for firmware that this channel is standby again.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DDMACH3_IDMEM_ERR</name>
              <description>1: Ddma I/D MEM fail. Please check 0x80[0]=1 or DMEM protection is release
0: No error</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_DDMACH3_CHKSUM_EN</name>
              <description>16bits Exclusive OR checksum enable</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DDMACH3_DA_W_DISABLE</name>
              <description>DA write disable 
When DDMACH3_CHKSUM_EN=1, DDMACH3_DA_W_DISABLE = 1 means that DMA engine doesn't move pkt to destination but executes checksum only and report status to DDMACH3_CHKSUM_STS.</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DDMACH3_CHKSUM_STS</name>
              <description>0: Exclusive OR checksum ok
1: Exclusive OR checksum fail</description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_DDMACH3_CHKSUM_CONT</name>
              <description>Set1, hw will continuously check sum in several ddma bursts</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[23:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DDMACH3_DLEN</name>
              <description>DMA Length: Length count served by DMA engine, unit in 1 bytes. The range is from 1 to 256K.</description>
              <bitRange>[17:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DDMA_CH4SA</name>
          <addressOffset>0x00001240</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_DDMACH4_SA</name>
              <description>Source Address: the source SRAM address that DDMA will read from. This address bus support byte alignment.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DDMA_CH4DA</name>
          <addressOffset>0x00001244</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_DDMACH4_DA</name>
              <description>Destination Address: This address bus support byte alignment.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DDMA_CH4CTRL</name>
          <addressOffset>0x00001248</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_DDMACH4_OWN</name>
              <description>Set '1' by firmware/driver to denote this DMA channel info is ready for DMA engine to begin DMA activity; after DMA complete, DMA engine will clear it to '0' to denote for firmware that this channel is standby again.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DDMACH4_IDMEM_ERR</name>
              <description>1: Ddma I/D MEM fail. Please check 0x80[0]=1 or DMEM protection is release
0: No error</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_DDMACH4_CHKSUM_EN</name>
              <description>16bits Exclusive OR checksum enable</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DDMACH4_DA_W_DISABLE</name>
              <description>DA write disable 
When DDMACH4_CHKSUM_EN=1, DDMACH4_DA_W_DISABLE = 1 means that DMA engine doesn't move pkt to destination but executes checksum only and report status to DDMACH4_CHKSUM_STS.</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DDMACH4_CHKSUM_STS</name>
              <description>0: Exclusive OR checksum ok
1: Exclusive OR checksum fail</description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_DDMACH4_CHKSUM_CONT</name>
              <description>Set1, hw will continuously check sum in several ddma bursts</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[23:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DDMACH4_DLEN</name>
              <description>DMA Length: Length count served by DMA engine, unit in 1 bytes. The range is from 1 to 256K.</description>
              <bitRange>[17:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DDMA_CH5SA</name>
          <addressOffset>0x00001250</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_DDMACH5_SA</name>
              <description>Source Address: the source SRAM address that DDMA will read from. This address bus support byte alignment.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DDMA_CH5DA</name>
          <addressOffset>0x00001254</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_DDMACH5_DA</name>
              <description>Destination Address: This address bus support byte alignment.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DDMA_CH5CTRL</name>
          <addressOffset>0x00001258</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_DDMACH5_OWN</name>
              <description>Set '1' by firmware/driver to denote this DMA channel info is ready for DMA engine to begin DMA activity; after DMA complete, DMA engine will clear it to '0' to denote for firmware that this channel is standby again.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DDMACH5_IDMEM_ERR</name>
              <description>1: Ddma I/D MEM fail. Please check 0x80[0]=1 or DMEM protection is release
0: No error</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_DDMACH5_CHKSUM_EN</name>
              <description>16bits Exclusive OR checksum enable</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DDMACH5_DA_W_DISABLE</name>
              <description>DA write disable 
When DDMACH5_CHKSUM_EN=1, DDMACH5_DA_W_DISABLE = 1 means that DMA engine doesn't move pkt to destination but executes checksum only and report status to DDMACH5_CHKSUM_STS.</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DDMACH5_CHKSUM_STS</name>
              <description>0: Exclusive OR checksum ok
1: Exclusive OR checksum fail</description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_DDMACH5_CHKSUM_CONT</name>
              <description>Set1, hw will continuously check sum in several ddma bursts</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[23:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DDMACH5_DLEN</name>
              <description>DMA Length: Length count served by DMA engine, unit in 1 bytes. The range is from 1 to 256K.</description>
              <bitRange>[17:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DDMA_INT_MSK</name>
          <addressOffset>0x000012E0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[31:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DDMACH5_MSK</name>
              <description>When this bit is set, this DDMA channel will generate interrupt when the DMA done. FW may check the DDMA_CHSTATUS register to determine the DDMA status.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DDMACH4_MSK</name>
              <description>When this bit is set, this DDMA channel will generate interrupt when the DMA done. FW may check the DDMA_CHSTATUS register to determine the DDMA status.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DDMACH3_MSK</name>
              <description>When this bit is set, this DDMA channel will generate interrupt when the DMA done. FW may check the DDMA_CHSTATUS register to determine the DDMA status.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DDMACH2_MSK</name>
              <description>When this bit is set, this DDMA channel will generate interrupt when the DMA done. FW may check the DDMA_CHSTATUS register to determine the DDMA status.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DDMACH1_MSK</name>
              <description>When this bit is set, this DDMA channel will generate interrupt when the DMA done. FW may check the DDMA_CHSTATUS register to determine the DDMA status.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DDMACH0_MSK</name>
              <description>When this bit is set, this DDMA channel will generate interrupt when the DMA done. FW may check the DDMA_CHSTATUS register to determine the DDMA status.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DDMA_INT_STS</name>
          <addressOffset>0x000012E4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[31:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DDMACH5_DDMA_DONE</name>
              <description>When this bit is set, this DDMA channel will generate interrupt when the DMA done.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_DDMACH4_DDMA_DONE</name>
              <description>When this bit is set, this DDMA channel will generate interrupt when the DMA done.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_DDMACH3_DDMA_DONE</name>
              <description>When this bit is set, this DDMA channel will generate interrupt when the DMA done.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_DDMACH2_DDMA_DONE</name>
              <description>When this bit is set, this DDMA channel will generate interrupt when the DMA done.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_DDMACH1_DDMA_DONE</name>
              <description>When this bit is set, this DDMA channel will generate interrupt when the DMA done.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_DDMACH0_DDMA_DONE</name>
              <description>When this bit is set, this DDMA channel will generate interrupt when the DMA done.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DDMA_CHSTATUS</name>
          <addressOffset>0x000012E8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[31:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DDMACH5_REQ</name>
              <description>After CH5CTRL.OWN bit is polled, DDMA starts and asserts this bit. After the DMA transactions finish, this bit is de-asserted.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_DDMACH4_REQ</name>
              <description>After CH4CTRL.OWN bit is polled, DDMA starts and asserts this bit. After the DMA transactions finish, this bit is de-asserted.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_DDMACH3_REQ</name>
              <description>After CH3CTRL.OWN bit is polled, DDMA starts and asserts this bit. After the DMA transactions finish, this bit is de-asserted.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_DDMACH2_REQ</name>
              <description>After CH2CTRL.OWN bit is polled, DDMA starts and asserts this bit. After the DMA transactions finish, this bit is de-asserted.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_DDMACH1_REQ</name>
              <description>After CH1CTRL.OWN bit is polled, DDMA starts and asserts this bit. After the DMA transactions finish, this bit is de-asserted.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_DDMACH0_REQ</name>
              <description>After CH0CTRL.OWN bit is polled, DDMA starts and asserts this bit. After the DMA transactions finish, this bit is de-asserted.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DDMA_CHKSUM</name>
          <addressOffset>0x000012F0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[31:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_DDMA_DST_CS</name>
              <description>ddma_dst_ctl current status</description>
              <bitRange>[23:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_DDMA_SRC_CS</name>
              <description>ddma_src_ctl current status</description>
              <bitRange>[21:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_DDMA_ARB_CS</name>
              <description>ddma_arb_ctl current status</description>
              <bitRange>[19:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_IDDMA0_CHKSUM</name>
              <description>Iddma0 Check sum Result</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DUMMY_P12</name>
          <addressOffset>0x000012F4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>dummy</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DDMA_MONITOR</name>
          <addressOffset>0x000012FC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[31:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_IDDMA0_PERMU_UNDERFLOW</name>
              <description>IDDMA0 permu underflow,, write clear</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_IDDMA0_FIFO_UNDERFLOW</name>
              <description>IDDMA0 fifo underflow, write clear</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_IDDMA0_FIFO_OVERFLOW</name>
              <description>IDDMA0 fifo overflow, write clear</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[11:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CH5_ERR</name>
              <description>Ch5 is busy when it is set again, write clear</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_CH4_ERR</name>
              <description>Ch4 is busy when it is set again, write clear</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_CH3_ERR</name>
              <description>Ch3 is busy when it is set again, write clear</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_CH2_ERR</name>
              <description>Ch2 is busy when it is set again, write clear</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_CH1_ERR</name>
              <description>Ch1 is busy when it is set again, write clear</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_CH0_ERR</name>
              <description>Ch0 is busy when it is set again, write clear</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>page17</name>
      <groupName>WIFI</groupName>
      <baseAddress>0x40000000</baseAddress>
      <size>0x00001800</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00001800</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>REG_RX_CFG</name>
          <addressOffset>0x00001710</addressOffset>
          <size>32</size>
          <description>rx configure register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_vhtndpa_suaid_0_en</name>
              <description>when set, will receive vht/he su ndpa which aid field is set to 0.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_dis_he_sigb_chk</name>
              <description>when set, disable check he-mu sigb crc8</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_mba_rsvd_aid_en</name>
              <description>enable parsing resevd aid msta-ba for pre-association</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_rxbcn_tim_no_hit_en</name>
              <description>enable rxbcn_ok_int when receiving bcn with tim_no_hit,set 0: rxbcn_ok_int will only assert when tim_hit</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_tim_no_hit_reject</name>
              <description>enable reject tim no hit beacon</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_dis_chk_hendp_len</name>
              <description>disable check HE NDP lsig length value</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_chk_mgnt_bssid</name>
              <description>enable check management frame bssid</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_chk_ctl_bssid</name>
              <description>enable check trigger,vht/hendpa and block ack bssid</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_dis_sts_gclk</name>
              <description>disable ppdu status clock gating</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_sts_chkrx_cond</name>
              <description>check macrx condition when receiving ppdu status</description>
              <bitRange>[22:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_inter_ppdu_reject</name>
              <description>enable reject inter ppdu</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_en_mach_upd_len</name>
              <description>enable macrx_pktfifo_ctl update mpdu length in MACHDR_CHK state</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_sniffer_tb</name>
              <description>enable to receive TB PPDU for debug mode</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_rxpsf_inter_plcp</name>
              <description>enable invalid packet check for inter ppdu, inter ppdu valid when plcp is inter bss</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_rxpsf_inter_mpdu</name>
              <description>enable invalid packet check for inter ppdu, inter ppdu valid when plcp and mac header are inter bss</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_rxpsf_he_mu_chken</name>
              <description>enable HE MU invalid packet check for mac header</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_rxpsf_he_ersu_chken</name>
              <description>enable HE ER SU invalid packet check for mac header</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_rxpsf_he_su_chken</name>
              <description>enable HE SU invalid packet check for mac header</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_rxpsf_vht_mu_chken</name>
              <description>enable VHT MU invalid packet check for mac header</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_rxpsf_vht_su_chken</name>
              <description>enable VHT SU invalid packet check for mac header</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RPL_CFG</name>
          <addressOffset>0x00001714</addressOffset>
          <size>32</size>
          <description>rx receive power level configure register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_rplcfg_upper_dbm</name>
              <description>rx power upper level</description>
              <bitRange>[19:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_rplcfg_upper_en</name>
              <description>enable use r_rplcfg_upper_dbm as rx power level</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_rplcfg_dbm</name>
              <description>rx power level</description>
              <bitRange>[9:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_rplcfg_en</name>
              <description>enable use r_rplcfg_dbm as rx power level</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AID</name>
          <addressOffset>0x00001718</addressOffset>
          <size>32</size>
          <description>aid register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_mac_aid12_1</name>
              <description>aid1</description>
              <bitRange>[23:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_mac_aid12_0</name>
              <description>aid0</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TRAN_BSSID0_L</name>
          <addressOffset>0x0000171C</addressOffset>
          <size>32</size>
          <description>trasmitted bssid register0_l</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_wmac_transbssid0_l</name>
              <description>lower 32 bits of transmitted bssid0</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TRAN_BSSID0_H</name>
          <addressOffset>0x00001720</addressOffset>
          <size>32</size>
          <description>trasmitted bssid register0_h</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_mbssid_ctlinfo_srch_en</name>
              <description>when set, rx trigger and vht/he ndpa, will search control info using assocaiated bssid</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_en_partaid</name>
              <description>enable inter ppdu decision according to partial aid for VHT ppdu</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_en_mbssid</name>
              <description>enable multibssid function</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_bss_color0</name>
              <description>bss color of current BSS</description>
              <bitRange>[21:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_wmac_transbssid0_h</name>
              <description>higher 16 bits of transmitted bssid0</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TRAN_BSSID1_L</name>
          <addressOffset>0x00001724</addressOffset>
          <size>32</size>
          <description>trasmitted bssid register1_l</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_wmac_transbssid1_l</name>
              <description>lower 32 bits of transmitted bssid1</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TRAN_BSSID1_H</name>
          <addressOffset>0x00001728</addressOffset>
          <size>32</size>
          <description>trasmitted bssid register1_h</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_bss_color1</name>
              <description>bss color of current BSS</description>
              <bitRange>[21:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_wmac_transbssid1_h</name>
              <description>higher 16 bits of transmitted bssid1</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_GID_POS_EN_l</name>
          <addressOffset>0x0000172C</addressOffset>
          <size>32</size>
          <description>VHT group id position enable register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_gid_position_en_l</name>
              <description>VHT group id position enable</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_GID_POS0</name>
          <addressOffset>0x00001730</addressOffset>
          <size>32</size>
          <description>VHT group id position0 register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_gid_position0</name>
              <description>VHT group id position0</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_GID_POS1</name>
          <addressOffset>0x00001734</addressOffset>
          <size>32</size>
          <description>VHT group id position1 register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_gid_position1</name>
              <description>VHT group id position1</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_GID_POS2</name>
          <addressOffset>0x00001738</addressOffset>
          <size>32</size>
          <description>VHT group id position2 register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_gid_position2</name>
              <description>VHT group id position2</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_GID_POS3</name>
          <addressOffset>0x0000173C</addressOffset>
          <size>32</size>
          <description>VHT group id position3 register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_gid_position3</name>
              <description>VHT group id position3</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BSSCOLOR_BITMAP_L</name>
          <addressOffset>0x00001740</addressOffset>
          <size>32</size>
          <description>bss color bitmap register_l</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_bsscolor_bitmap_l</name>
              <description>low 32bits bss color bitmap</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BSSCOLOR_BITMAP_H</name>
          <addressOffset>0x00001744</addressOffset>
          <size>32</size>
          <description>bss color bitmap register_h</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_bsscolor_bitmap_h</name>
              <description>high 32bits bss color bitmap</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PBSSID_BITMAP_L</name>
          <addressOffset>0x00001748</addressOffset>
          <size>32</size>
          <description>partial bssid bitmap register_l</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_partial_bssid_bitmap_l</name>
              <description>low 32bits partial bssid bitmap</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PBSSID_BITMAP_H</name>
          <addressOffset>0x0000174C</addressOffset>
          <size>32</size>
          <description>partial bssid bitmap register_h</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_partial_bssid_bitmap_h</name>
              <description>high 32bits partial bssid bitmap</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SR_CFG0</name>
          <addressOffset>0x00001750</addressOffset>
          <size>32</size>
          <description>spatial reuse configure register0</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_spruse_rsvd_en</name>
              <description>enable spatial reuse when plcp header spatial reuse field value smaller than 14 or value is 15 and is srg ppdu</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_ctl_srg_check_en</name>
              <description>enable control packet srg ppdu check</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_srg_check_en</name>
              <description>enable srg ppdu check</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_sr_en</name>
              <description>enable spatial reuse function</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SR_CFG1</name>
          <addressOffset>0x00001754</addressOffset>
          <size>32</size>
          <description>spatial reuse configure register1</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_nonsrg_obss_pd_max</name>
              <description>the maximum value of non_SRG OBSS_PD</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_nonsrg_obss_pd_min</name>
              <description>the minimum value of non_SRG OBSS_PD</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_srg_obss_pd_max</name>
              <description>the maximum value of OBSS_PD</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_srg_obss_pd_min</name>
              <description>the minimum value of OBSS_PD</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MACTX_SR</name>
          <addressOffset>0x00001758</addressOffset>
          <size>32</size>
          <description>SR field configure</description>
          <resetValue>0x00400000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_WMAC_WAIT_PHY_REF</name>
              <description>mactx hang handle, reset mactx if the phy_txen is set and wait the begin pulse of phy_txon timeout</description>
              <bitRange>[23:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_WMAC_SR_FIELD_EN</name>
              <description>enable sr field reg cfg</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_WMAC_SR_VAL15_ALLOW</name>
              <description>sr field can be the value 15</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_WMAC_PLCP_SR_FIELD</name>
              <description>value of SR field</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MACTX_MISC</name>
          <addressOffset>0x0000175C</addressOffset>
          <size>32</size>
          <description>misc ctrl cfg</description>
          <resetValue>0x2C005003</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_TXTIME_CAL_DISGCLK</name>
              <description>disable the clk gating for txtime compute module</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_WMAC_CCK_LOCKED_CLK</name>
              <description>indicate that the transmit frequency and symbol clocks are derived from the same oscillator</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_WMAC_RST_BB_CNT</name>
              <description>macclk cycle number of wmac_rst_bb signal</description>
              <bitRange>[28:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_TXDFIFO_INTERVAL_THRE</name>
              <description>the interval threshold between txdfifo write and read pointer, if the interval is smaller than the threshold, mactx_mpdu moudle can pad dummy between mpdu(if eanbled)</description>
              <bitRange>[25:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>sw_txdfifo_rdy</name>
              <description>sw read txd fifo ready</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>sw_txdfifo_addr</name>
              <description>sw read txd fifo address,[6:1] is address, [0] : 0 read low 32bit; 1 read high 32bit;</description>
              <bitRange>[10:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_WMAC_FORCE_READ_TXDFIFO</name>
              <description>during tx procedure, force read txd fifo, which is only use at the situation when bb is hang.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_WMAC_SW_RD</name>
              <description>eanble sw read txdfifo</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_WMAC_MPDU_PADEN</name>
              <description>when txdfifo underflow ,eanble the mactx_mpdu moudle to pad dummy between mpdu.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_EOFPAD_EN</name>
              <description>enable eof pad operation at the end of mpdu</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MACTX_MHDR0</name>
          <addressOffset>0x00001760</addressOffset>
          <size>32</size>
          <description>MAC header configure</description>
          <resetValue>0x6014D010</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_QNULL_ACK_POL_VAL</name>
              <description>basic trigger resp tb QOS NULL ack policy bit 0 value</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_WMAC_EN_HW_SSN</name>
              <description>enable the hw ssn for qos null frame.</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_TB_QOSNULL_PWRMGT_VAL</name>
              <description>the power management bit value in tb qos null, used during twt operation</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_WMAC_MHDR_UPH_EN</name>
              <description>eanble reg wirte HTC field of tb_ppdu, which contain UPH a-control(4)</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_TCR_BA_RSVD_VAL</name>
              <description>multi-sta BA bactl rsvd filed value</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_QOS_NULL_TID_VAL</name>
              <description>tid value of qos null</description>
              <bitRange>[25:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_WMAC_LEGACY_USTIMER</name>
              <description>timer cnt before bb fetch txd for ofdm</description>
              <bitRange>[21:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_WMAC_NON_LEGACY_USTIMER</name>
              <description>timer cnt before bb fetch txd for  he/vht/ht/cck</description>
              <bitRange>[16:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_BQR_PRIMCH</name>
              <description>shift bqr bitmap to the allocatied primary 20M channel</description>
              <bitRange>[11:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_BQR_TID_VAL</name>
              <description>bandwidth query report TID value</description>
              <bitRange>[8:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_BSR_QOS_SEL</name>
              <description>Buffer status report enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_BSR_VO_TID_SEL</name>
              <description>1: tid 7; 0: tid 6;</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_BSR_VI_TID_SEL</name>
              <description>1: tid 5; 0: tid 4;</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_BSR_BE_TID_SEL</name>
              <description>1: tid 2; 0: tid 1;</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_BSR_BK_TID_SEL</name>
              <description>1: tid 3; 0: tid 0;</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MACTX_MHDR1</name>
          <addressOffset>0x00001764</addressOffset>
          <size>32</size>
          <description>MAC header HTC</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_WMAC_NHDR_HTC</name>
              <description>HTC field of tb_ppdu, which contain UPH a-control(4)</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MACTX_TXD_FIFO</name>
          <addressOffset>0x00001768</addressOffset>
          <size>32</size>
          <description>fifo do</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>sw_txdfifo_dout</name>
              <description>sw read rxd_out</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RXTRIG_TEST_COMM_0</name>
          <addressOffset>0x00001780</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RXTRIG_COMMON_0</name>
              <description>low 32bit of comm field in trigger frame of test mode</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RXTRIG_TEST_COMM_1</name>
          <addressOffset>0x00001784</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RXTRIG_COMMON_1</name>
              <description>high32bit of comm field in trigger frame of test mode</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RXTRIG_TEST_USER_0</name>
          <addressOffset>0x00001788</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RXTRIG_USERINFO_0</name>
              <description>low 32bit of user field in trigger frame of test mode</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RXTRIG_TEST_USER_1</name>
          <addressOffset>0x0000178C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RXTRIG_USERINFO_1</name>
              <description>high 32bit of user field in trigger frame of test mode</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RXTRIG_TEST_USER_2</name>
          <addressOffset>0x00001790</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RXTRIG_BSS_COLOR</name>
              <description>bss color</description>
              <bitRange>[31:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXTRIG_MACID</name>
              <description>macid</description>
              <bitRange>[25:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXTRIG_FCSCHK_EN</name>
              <description>1:enable fcs check</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXTRIG_PORT_SEL</name>
              <description>port sel</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RXTRIG_EN</name>
              <description>enable rx trigger test mode</description>
              <bitRange>[16:16]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>BIT_RXTRIG_USERINFO_2</name>
              <description>msb 8bit of user field in trigger frame of test mode</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RXTRIG_TEST_CTRL1</name>
          <addressOffset>0x00001794</addressOffset>
          <size>8</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RXTRIG_STATUS</name>
              <description>[7:4]:trig_cntr
[3:0]:ctl_state</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RXTRIG_TEST_CTRL2</name>
          <addressOffset>0x00001795</addressOffset>
          <size>16</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RXTRIG_DURATION</name>
              <description>duration of trigger frame</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AX_CLIENT_OM_CTRL</name>
          <addressOffset>0x00001797</addressOffset>
          <size>8</size>
          <description></description>
          <resetValue>0x00000010</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RXTRIG_RU26_DIS</name>
              <description>disable response to trigger frame when ru_allocation addressed to me is 26-tone ru</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_CSI_LEN_ERR_FLAG</name>
              <description>csi_length error flag</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_CLR_CSI_ERR_FLAG</name>
              <description>clear csi_length error flag</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_RXTB_IGNOREA2</name>
              <description>will not check a2 when receive tb ppdu</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_UL_MU_DIS</name>
              <description>Disable to respond UL response triggered by any trigger frame. Per port config.</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_UL_MU_DATA_DIS</name>
              <description>Disable to respond UL data triggered by basic trigger frame. Per port config.
(BA/ACK/BSR/BQR are still allowed to Tx)</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SIFS_TIMING_CTRL_CCK</name>
          <addressOffset>0x00001798</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x04046046</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_WMAC_100NS_TIME</name>
              <description>Sets the 100ns time unit used by MAC clock.(DEFAULT:40M CLK,eg:20M clk should set this value to 2)</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_R2T_SIFS_CCK</name>
              <description>This register sets the SIFS time required for any immediate response for
example Data-Ack. It is in unit of 100ns.(default:7us)</description>
              <bitRange>[23:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_T2T_SIFS_CCK</name>
              <description>This register sets the SIFS time required for consecutive TX events for
example CTS-Data, or broadcast bursting. It is in unit of 100ns.(default:7us)</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SIFS_TIMING_CTRL_OFDM</name>
          <addressOffset>0x0000179C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x3D082082</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RX_AIR_END_TIME</name>
              <description>This register sets the time from cca fall to 6us. It is in unit of 100ns.(default:6.1us)</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_R2T_SIFS_OFDM</name>
              <description>This register sets the SIFS time required for any immediate response for
example Data-Ack. It is in unit of 100ns.(default:13us)</description>
              <bitRange>[23:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_T2T_SIFS_OFDM</name>
              <description>This register sets the SIFS time required for consecutive TX events for
example CTS-Data, or broadcast bursting. It is in unit of 100ns.(default:13us)</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_TB_TIMING_CTRL</name>
          <addressOffset>0x000017A0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x000000B1</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TB_TIMEOUT_REF</name>
              <description>This register sets the max time for tb data aggragation, It is in unit of 100ns.(default:17.7us)</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SR_CONTROL_DBG</name>
          <addressOffset>0x000017A4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RXPPDU_SRG</name>
              <description>the received pkt is an srg ppdu</description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SR_UPD_EN</name>
              <description>the received pkt is allowed to update basic nav</description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SR_RESTRICTED</name>
              <description>the spatial reuse type is restricted</description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SR_PD_TX</name>
              <description>the value of received power level minus obss_pd_min</description>
              <bitRange>[24:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_SR_TIMER_TX</name>
              <description>time can be used for spatial reuse</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SR_CONTROL_DBG1</name>
          <addressOffset>0x000017A8</addressOffset>
          <size>8</size>
          <description></description>
          <resetValue>0x00000004</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_SR_USABLE_TIMER_THRES</name>
              <description>If received pkt can operate spatial reuse,the min threshold for sr_timer_tx. unit:256us(default:1024us)</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RX_NAV_CTRL</name>
          <addressOffset>0x000017A9</addressOffset>
          <size>24</size>
          <description></description>
          <resetValue>0x0000000B</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_WMAC_PLCP_UP_NAV_EN</name>
              <description>1:enable using txop_dur in plcp header to update nav</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_TF_UP_NAV_EN</name>
              <description>1:enable updating intra nav when receiving trigger frame</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_SRCTRL_PLCP_EN</name>
              <description>1:use txop_dur as sr_tx_timer</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_INTRANAV_INTXOP</name>
              <description>enable updating intra nav in my txop</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_BASICNAV_INTXOP</name>
              <description>enable updating basic nav in my txop</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_NAV_STATUS</name>
          <addressOffset>0x000017B0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_WMAC_INTRA_NAV_UPD</name>
              <description>intra nav updated by
10: plcp header
01: mac header</description>
              <bitRange>[31:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_WMAC_INTRA_NAV_DUR</name>
              <description>intra_nav</description>
              <bitRange>[29:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_WMAC_BASIC_NAV_UPD</name>
              <description>inter nav updated by
10: plcp header
01: mac header</description>
              <bitRange>[15:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BIT_WMAC_BASIC_NAV_DUR</name>
              <description>basic_nav</description>
              <bitRange>[13:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RESP_CONTROL</name>
          <addressOffset>0x000017B4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x62E10004</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RESP_CHK_TXNAV</name>
              <description>check txnav when need to response</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RESP_CHK_INTRA_NAV</name>
              <description>check intra nav when need to response</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RESP_CHK_BASIC_NAV</name>
              <description>check basic nav when need to response</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RESP_STBC_EN</name>
              <description>enable stbc when need to response</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RESP_HTC_EN</name>
              <description>enable appending htc  when need to response</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RESP_RATE_DOWNGRADE</name>
              <description>enable downgrade response rate from HE to VHT, VHT to HT, HE to HT when need to response</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RESP_DCM_EN</name>
              <description>enable using dcm need to response</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RSVD</name>
              <description>RSVD</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RESP_TBPPDU_CHK_PWR</name>
              <description>check tb ppdu tx power when rx trigger, if txpwr_ctrl send signal of abort,will not reply with tb ppdu</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RESP_RXTRIG_CHK_INSIFS</name>
              <description>check whether channel is idle during sifs, if csreq=1 in trigger frame, will not reply with tb ppdu</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RESP_CHK_EDCCA</name>
              <description>check edcca when response</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RESP_CHK_BTCCA</name>
              <description>check btcca when response</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RESP_CHK_SEC_CCA20</name>
              <description>check sec 20 cca when response</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RESP_CHK_SEC_CCA40</name>
              <description>check sec 40 cca when response</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RESP_CHK_SEC_CCA80</name>
              <description>check sec 80 cca when response</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RESP_EARLY_LEG_SEC</name>
              <description>when receive pkt of tkip or wep, While phyrxon down, mac_rxactive on. Ignore mac rx busy or physts_on, respond  immediately.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RESP_GI_LTF</name>
              <description>5:1x+0.8
4:1x+1.6
3:2x+0.8
2:2x+1.6
1:4x+0.8
0:4x+3.2
not support 1x+1.6 when response</description>
              <bitRange>[15:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RESP_CHK_ZBCCA</name>
              <description>check zigbee cca when response</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RESP_CHK_EDCCA_PER20</name>
              <description>check edcca_per20_bitmap_sifs[0] when response</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RESP_TXRATE</name>
              <description>tx rate use to decide response rate</description>
              <bitRange>[9:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RESP_RATE_RRSR</name>
          <addressOffset>0x000017B8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x01010101</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RESP_RRSR_HE</name>
              <description>Data Rate Control Table Register 
BitMap to indicate the response/protection/expected_response rate to use in this BSS. All management and control response frames should obey the rates set in the bitmap. Each bit is mapped as the following: 

HE 1SS MCS0~MCS7

Response rate must be less than or equal to the rate of the initiating frame. If none of the bits are set, no response is generated by Rtl8712.
If both the legacy rates and HT rates are defined as Basic Rates, fill in only the legacy portion of the bitmap. If only HT rates are defined as Basic Rates, fill in both the legacy and HT portion of the bitmap.</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RESP_RRSR_VHT</name>
              <description>VHT 1SS MCS0~MCS7</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RESP_RRSR_HT</name>
              <description>HT 1SS MCS0~MCS7</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RESP_RRSR_OFDM</name>
              <description>{6M, 9M, 12M, 18M, 24M, 36M, 48M, 54M}</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RESP_RATE_RRSR_1</name>
          <addressOffset>0x000017BC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0000003F</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_RESP_RRSR_CCK</name>
              <description>{1M, 2M, 5.5M, 11M }</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RESP_RATE_EN</name>
              <description>[0]:enable respnse rate of CCK and OFDM
[1]:enable respnse rate of HT
[2]:enable respnse rate of VHT
[3]:enable respnse rate of HE</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BEAMFORMING_CTRL</name>
          <addressOffset>0x000017C0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0xC040100F</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_WMAC_HE_CSI_RATE</name>
              <description>HE CSI init rate(HE mode+NSS + MCS)</description>
              <bitRange>[31:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_VHT_CSI_RATE</name>
              <description>VHT CSI init rate(VHT mode+ NSS + MCS)</description>
              <bitRange>[22:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_HT_CSI_RATE</name>
              <description>HT CSI init rate(HT mode + NSS + MCS)</description>
              <bitRange>[13:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_MIMO_PARA_CNT</name>
              <description>width of mimo_para_en,deafult:3(mac clk:40M,pluse width:100ns)</description>
              <bitRange>[4:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_CSI_BFRP_STOPTX</name>
              <description>stop tx when rx ndpa/ndp and wait for bfrp poll frame</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_WMAC_HE_NDPA_EN</name>
              <description>Set to 1, MAC would inform BB of preparing to receive NDP if the received NDPA is valid.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_CSI_RRSR_BITMAP</name>
          <addressOffset>0x000017C4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000003</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_WMAC_CSI_RRSR_BITMAP</name>
              <description>BitMap to indicate the CSI frame rate in this BSS. Each bit is mapped as the following: 
Bit[7:0] = OFDM {6M, 9M, 12M, 18M, 24M, 36M, 48M, 54M}
Bit[15:8] = HT MCS0~MCS7
BIT[23:16] = VHT 1SS MCS0~7
bit[31:24] = HE 1SS MCS0~7
The modulation of response rate must be less than or equal to the rate of the initiating frame. If none of the bits are set, no response is generated by Rtl8712.
If both legacy rates and HT rates are defined as Basic Rates, fill in only the legacy portion of the bitmap. If only HT rates are defined as Basic Rates, fill in both the legacy and HT portion of the bitmap.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_LBK_CFG</name>
          <addressOffset>0x000017C8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000012</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_maclbk_rdy_period</name>
              <description>tdrdy/rdrdy interval count</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_GID_POS_EN_H</name>
          <addressOffset>0x000017CC</addressOffset>
          <size>32</size>
          <description>VHT group id position enable register</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_gid_position_en_h</name>
              <description>VHT group id position enable</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TRX_PKTCNT_CTRL</name>
          <addressOffset>0x000017D0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_txpktcnt_rst</name>
              <description>Reset tx packet counter, write "one" to set the counter to zero</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_tx_udpktcnt_set</name>
              <description>Set user define packet configure, write one setting, it is only valid for r_wmac_txpktcnt_sel (4'd0 ~ 4'd3)</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_wmac_txpktcnt_sel</name>
              <description>Tx packet counter report selection 
4'd0: user define 0 counter
4'd1: user define 1 counter
4'd2: user define 2 counter
4'd3: user define 3 counter
4'd4: HT mpdu tx ok counter
4'd5: VHT SU mpdu tx ok counter
4'd6: HE SU mpdu tx ok counter
4'd7: HE TB mpdu tx ok counter
4'd8: CCK ppdu tx ok counter
4'd9: OFDM ppdu tx ok counter
4'd10: HT ppdu tx ok counter
4'd11: VHT SU ppdu tx ok counter
4'd12: HE SU ppdu tx ok counter
4'd13: HE TB ppdu tx ok counter
4'd14~4'd15: RSVD</description>
              <bitRange>[9:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_wmac_txpktcnt_cfg</name>
              <description>Tx packet conuter user define configuration
[5:2]:subtype
[1:0]:type</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_TRX_PKTCNT_RPT</name>
          <addressOffset>0x000017D4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ro_wmac_txpktcnt_rpt</name>
              <description>[25:22]:Tx packet counter report selection,r_wmac_txpktcnt_sel
[21:16]:user define-&gt;tx packet type,[21:18]:subtype,[17:16]:type;
others-&gt;6'h0
[15:0]:The tx reported counter value corresponding to Report type selected</description>
              <bitRange>[25:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_BEAMFORMING_MIMO_STATUS</name>
          <addressOffset>0x000017D8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ro_wmac_he_csi_mimo_h</name>
              <description>msb 24bit of he csi mimo field</description>
              <bitRange>[23:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_PPDU_STATUS_CFG</name>
          <addressOffset>0x000017DC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000FF4</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_stsbuf_endaddr</name>
              <description>ppdu status buffer end address</description>
              <bitRange>[11:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_stsbuf_threshod</name>
              <description>ppdu status buffer almost full threshold</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RESP_CONTROL_1</name>
          <addressOffset>0x000017E0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0003F80C</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_WMAC_TXRAW_IGNOREA1</name>
              <description>If set to 1, will not check A1 of rxpkt when txraw</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RESP_ACTRL_BQR_EN</name>
              <description>If set to 1, HW would update BQR info to A-CTRL</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RESP_ACTRL_UPH_EN</name>
              <description>If set to 1, HW would update UPH info to A-CTRL</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RESP_ACTRL_BSR_EN</name>
              <description>If set to 1, HW would update BSR info to A-CTRL</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RESP_ACTRL_CAS_EN</name>
              <description>If set to 1, HW would update CAS info to A-CTRL</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RESP_LDPC_SEL</name>
              <description>1: follow ctrl reg(0x668[15])
0: follow rxpkt</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RESP_GID_SEL</name>
              <description>HE SIG-A content
1 :  group id=0, 0 :  group id=63</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RESP_DOPPLER_CTRL</name>
              <description>0: Doppler unsupported
1: Doppler supported without moving
2: 10 symbol midamble periodicity
3: 20 symbol midamble periodicity</description>
              <bitRange>[10:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RESP_DOPPLER_SEL</name>
              <description>1: follow ctrl reg(0x17E0[10])
0: follow rxpkt</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RESP_DCM_SEL</name>
              <description>1: follow ctrl reg(0x17b4[25])
0: follow rxpkt</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RESP_BSR_FORMAT</name>
              <description>0: legacy format of queue size
1: HE</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RESP_NOMINAL_PAD</name>
              <description>nominal pkt pad info when response</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RESP_EARLY_START</name>
              <description>when set to 1:use mac header rdy when rx data frame and use aid fit when rx trigger frame, and use fcsok otherwise to start responding process
when set to 0:use fcs ok to start responding process when rx any frame need reply</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RESP_USE_EARLY_FCS</name>
              <description>use fcs result from rxpktfifo instead of macrx_parser when receive packet used wep/tkip</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_RESP_ALLACK_EN</name>
              <description>enable response with all-ack MBA</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_SPATIAL_REUSE_CONTROL</name>
          <addressOffset>0x000017E4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_TXPWR_CH20_DATA</name>
              <description>indicate which 20M channel is punctured in RU</description>
              <bitRange>[8:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_TXPWR_FAST_MODE_EN</name>
              <description>fast mode enable for txpwr_ctrl,tie 1 for AMEBAD2</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RX_SUPPER_ADDRESS3_L</name>
          <addressOffset>0x000017E8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_sup_addr3_l</name>
              <description>Address3 for data packet check. When address3 is match, RX will receive the packet to RXFF without considering other filter condition except crc32</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_RX_SUPPER_ADDRESS3_H</name>
          <addressOffset>0x000017EC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>dummy</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_sup_addr3_en</name>
              <description>when set, enable check supper Address3</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_sup_addr3_h</name>
              <description>Address3 for data packet check. When address3 is match, RX will receive the mpdu to RXFF without considering other filter condition except crc32</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MASK_LA_TRX_DBG_L</name>
          <addressOffset>0x000017F0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_LA_TRX_PATTERN_MASK_L</name>
              <description>used for mask one or more bits of debug port</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_MASK_LA_TRX_DBG_H</name>
          <addressOffset>0x000017F4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_LA_TRX_PATTERN_MASK_H</name>
              <description>used for mask one or more bits of debug port</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_REF_LA_TRX_DBG_L</name>
          <addressOffset>0x000017F8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_LA_TRX_PATTERN_REF_L</name>
              <description>used for mask one or more bits of debug port</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_REF_LA_TRX_DBG_H</name>
          <addressOffset>0x000017FC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_LA_TRX_PATTERN_REF_H</name>
              <description>used for mask one or more bits of debug port</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>page26</name>
      <groupName>WIFI</groupName>
      <baseAddress>0x40000000</baseAddress>
      <size>0x00002620</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x00002620</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>TWT_BC_ID</name>
          <addressOffset>0x00002600</addressOffset>
          <size>32</size>
          <description>TWT IE ID BITMAP</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_BC_TWT_ID</name>
              <description>TWT ID bitmap, each bit corresponding to a ID value</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TWT_BC_RPT0_PERS</name>
          <addressOffset>0x00002604</addressOffset>
          <size>32</size>
          <description>TWT IE persistence reference and RPT0</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_WMAC_BCN_TWT_PSR</name>
              <description>enable bcn twt bc ie parser</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_TWT_PERSISTENCE</name>
              <description>persistence vlaue, if persistence value in TWT IE is smaller than the reference, bcnpsf will lat the twt id rpt</description>
              <bitRange>[25:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>twt_rpt_0</name>
              <description>specified twt id report</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TWT_BC_RPT1</name>
          <addressOffset>0x00002608</addressOffset>
          <size>32</size>
          <description>TWT IE ID RPT1</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>twt_rpt_2</name>
              <description>specified twt id report</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>twt_rpt_1</name>
              <description>specified twt id report</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TWT_BC_RPT2</name>
          <addressOffset>0x0000260C</addressOffset>
          <size>32</size>
          <description>TWT IE ID RPT2</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>twt_rpt_4</name>
              <description>specified twt id report</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>twt_rpt_3</name>
              <description>specified twt id report</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OPS_PSR_RPT</name>
          <addressOffset>0x00002610</addressOffset>
          <size>32</size>
          <description>OPS DURATION</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>mbssid_n_mem</name>
              <description>multi-bssid n value</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ops_duration_rpt</name>
              <description>ops frame duration field rpt</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LA_EVENT_OPTION</name>
          <addressOffset>0x00002614</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_lastop_fcs_error</name>
              <description>stop LA record when continue fcs error &gt;= threshold
0:disable
1:4
2:8
3:12</description>
              <bitRange>[4:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_lastop_rx_fsm_hang</name>
              <description>stop LA record when RX FSM timeout</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_lastop_plcp_error</name>
              <description>stop LA record when RX PLCP error occur, include Length error, parity error or crc error</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_lastop_rx_incomp</name>
              <description>stop LA record when RX content is incompleted, include PLCP is incompleted or PSDU is incompleted</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RESP_AID_11</name>
          <addressOffset>0x00002618</addressOffset>
          <size>32</size>
          <description>aid 11 for resp</description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>aid11</name>
              <description>specified the aid of the sta that mactx responding to</description>
              <bitRange>[10:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MAC_PHY_CR</name>
          <addressOffset>0x0000261C</addressOffset>
          <size>32</size>
          <description>mac phy control reg</description>
          <resetValue>0x0007C3C9</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>dummy</description>
              <bitRange>[31:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_id_math_mpdu</name>
              <description>when set, per mpdu will trigger rx_id_match, else per ppdu trigger rx_id_match</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_id_match_cnt</name>
              <description>rxpkt_ok or rxpkt_fail pulse counter,unit 25ns when mac clock is 40MHz</description>
              <bitRange>[20:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_invalid_pkt_cnt</name>
              <description>invalid_pkt pulse counter,unit 25ns when mac clock is 40MHz</description>
              <bitRange>[13:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_rxpkt_ok_fail_cnt</name>
              <description>rxpkt_ok or rxpkt_fail pulse counter,unit 25ns when mac clock is 40MHz</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>txpwr_ctrl</name>
      <groupName>WIFI</groupName>
      <baseAddress>0x40000000</baseAddress>
      <size>0x0000DB04</size>
      <addressBlock>
        <offset>0x00000000</offset>
        <size>0x0000DB04</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>REG_AX_PWR_RATE_CTRL</name>
          <addressOffset>0x0000D200</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x02010000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_txpwr_ctrl_clr</name>
              <description>(RTL_only)  1: clr txpwr, sync rst</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_mode_idx</name>
              <description>Force txpwr_bb from specific source
0:FOCRE_NONE (normal)
1:FORCE_PWR_BY_RATE
2:FORCE_MACID
3:FORCE_PWR_LIM
4:FORCE_PWR_RU_LIM
5:FORCE_COEXIST</description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txagc_ofdm_ref</name>
              <description>S(9.2) ofdm ref dbm</description>
              <bitRange>[27:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txagc_cck_ref</name>
              <description>S(9.2) cck ref dbm</description>
              <bitRange>[18:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_pwr_by_rate_en</name>
              <description>force pwr by rate value_en</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_pwr_by_rate_value</name>
              <description>S(9.2) force pwr by rate value
(txagc_ref+pwr_by_rate_tbl)</description>
              <bitRange>[8:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_RATE_OFST_CTRL</name>
          <addressOffset>0x0000D204</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_txagc_tbl_rd</name>
              <description>(RTL_only)  1:indirecr read enable</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txagc_tbl_ra</name>
              <description>(RTL_only)  indirect read of addr of pwr_by_rate</description>
              <bitRange>[25:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txagc_cck_HT_offset</name>
              <description>S(4.1)CCK-HT pwr offset</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txagc_legacy_HT_offset</name>
              <description>S(4.1)LEG-HT pwr offset</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txagc_ht_offset</name>
              <description>(RTL_only)  S(4.1) HT-HT pwr bias = 0</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txagc_VHT_HT_offset</name>
              <description>S(4.1)VHT-HT pwr offset</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txagc_HE_HT_offset</name>
              <description>S(4.1)HE-HT pwr offset</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_LMT_CTRL</name>
          <addressOffset>0x0000D208</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00300000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_force_TF_dcm_en</name>
              <description>(RTL_only)  1:Force input TF dcm  =
 R_force_TF_dcm_value</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_TF_dcm_value</name>
              <description>(RTL_only)  Force input TF dcm value</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_Norm_rsp_HE_TB_en_on</name>
              <description>(RTL_only)  1:Norm resp always 
In HE_TB</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_pwr_by_limit_BF0_en</name>
              <description>(RTL_only)  1: Force pwr_lim_BF0=
 r_force_pwr_by_limit_bfoff_value
(0xd210[17:9])</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_pwr_by_limit_BF1_en</name>
              <description>(RTL_only)  1: Force pwr_lim_BF1=
 r_force_pwr_by_limit_bfon_value
(0xd210[8:0])</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txagc_pwr_lim_BF0_en</name>
              <description>(RTL_only)  None BF pwr limit enable</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txagc_pwr_lim_BF1_en</name>
              <description>(RTL_only)   BF pwr limit enable</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txagc_BW20_BW40_offset</name>
              <description>S(4.1)BW20  - BW40 pwr offset</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txagc_rfbw_40M_offset</name>
              <description>(RTL_only)  S(4.1)BW40  - BW40 pwr offset</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txagc_BW80_BW40_offset</name>
              <description>S(4.1)BW80  - BW40 pwr offset</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txagc_BW160_BW40_offset</name>
              <description>S(4.1)BW160  - BW40 pwr offset</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txagc_BW80_80_BW40_offset</name>
              <description>S(4.1) BW80+80  - BW40 pwr offset</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_MACID_CTRL</name>
          <addressOffset>0x0000D20C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x20000080</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_txagc_pwr_by_macid_en</name>
              <description>(RTL_only)  1:enable pwr_by_macid</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_CCA_PWR_TH_value_en</name>
              <description>1:Force CCA_PWR_TH value_en</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_CCA_PWR_TH_value</name>
              <description>S(8.1)Force CCA_PWR_TH value</description>
              <bitRange>[27:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_CCA_PWR_TH_en</name>
              <description>(RTL_only)  1:Force output 
CCA_PWR_TH_en</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_pwr_by_macid_en</name>
              <description>1:Force output 
Pwr_by_macid_en</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_pwr_by_macid_value</name>
              <description>S(8.1)Force Pwr_by_macid_value</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_pwr_by_macid_value_en</name>
              <description>(RTL_only)  1:Force output 
Pwr_by_macid_value</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txpwr_lim_tbl_rd</name>
              <description>(RTL_only)  1: pwr lim tbl indirect read en</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txpwr_lim_tbl_ra</name>
              <description>(RTL_only)  pwr lim tbl indirect read addr</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_BF_CTRL</name>
          <addressOffset>0x0000D210</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x80600000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_txagc_BF_pwr_boost_en</name>
              <description>1:TxBF will cal pwr boost to BB
0:TxBF pwr_boost =0 &amp; Pwr_lim use BF1_pwr_lim</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_HE_ER_SU_pwr_reduce_val</name>
              <description>(RTL_only) S(6.2) 3dB=0xC</description>
              <bitRange>[24:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_HE_ER_SU_pwr_reduce_en</name>
              <description>1:HE_ER_SU pwr lim output will minus 3dB</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_pwr_by_limit_bfoff_value</name>
              <description>S(9.2) r_force_pwr_by_limit_BF0_en=1 is valid</description>
              <bitRange>[17:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_pwr_by_limit_bfon_value</name>
              <description>S(9.2) r_force_pwr_by_limit_BF1_en=1 is valid</description>
              <bitRange>[8:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_MACID_REG</name>
          <addressOffset>0x0000D214</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_txpwr_reg3</name>
              <description>S(8.1)pwr by macid  when
 Pwr_mode=5 from MAC</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txpwr_reg2</name>
              <description>S(8.1)pwr by macid  when
 Pwr_mode=4 from MAC</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txpwr_reg1</name>
              <description>S(8.1)pwr by macid  when 
Pwr_mode=3 from MAC</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txpwr_reg0</name>
              <description>S(8.1)pwr by macid  when 
Pwr_mode=2 from MAC</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_MACID_REG2</name>
          <addressOffset>0x0000D218</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_txpwr_by_macid_tbl_rd</name>
              <description>(RTL_only)  1:Pwr_by_macid indirect read</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txpwr_by_macid_tbl_ra</name>
              <description>(RTL_only)  Pwr_by_macid indirect read addr</description>
              <bitRange>[30:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txpwr_reg5_en</name>
              <description>pwr by macid en  when 
Pwr_mode=7 from MAC</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txpwr_reg4_en</name>
              <description>pwr by macid en  when 
Pwr_mode=6 from MAC</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txpwr_reg3_en</name>
              <description>pwr by macid en  when 
Pwr_mode=5 from MAC</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txpwr_reg2_en</name>
              <description>pwr by macid en  
when pwr_mode=4 from MAC</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txpwr_reg1_en</name>
              <description>pwr by macid en  when 
Pwr_mode=3 from MAC</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txpwr_reg0_en</name>
              <description>pwr by macid en  when
 Pwr_mode=2 from MAC</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txpwr_reg5</name>
              <description>S(8.1)pwr by macid  when 
Pwr_mode=7 from MAC</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txpwr_reg4</name>
              <description>S(8.1)pwr by macid  when 
Pwr_mode=6 from MAC</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_RU_LMT_CTRL</name>
          <addressOffset>0x0000D21C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00040200</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_txagc_LTE</name>
              <description>S(9.2) Coexist LTE pwr dbm</description>
              <bitRange>[27:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txpwr_RU_lim_en</name>
              <description>(RTL_only)  1:Ru lim indirect read</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txpwr_RU_lim_tbl_rd</name>
              <description>(RTL_only)  1:Ru lim indirect read</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txpwr_RU_lim_tbl_ra</name>
              <description>(RTL_only)  Ru lim indirect read addr</description>
              <bitRange>[16:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_pwr_by_ru_limit_en</name>
              <description>1: RU_lim = r_force_pwr_by_ru_limit_value</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_pwr_by_ru_limit_en_value</name>
              <description>(ru lim val is valid in HE_TB)</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_pwr_by_ru_limit_value</name>
              <description>Force RU lim_val enable</description>
              <bitRange>[8:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_COEXT_CTRL</name>
          <addressOffset>0x0000D220</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x01EBF006</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_cck_norm_term</name>
              <description>(RTL_only) u(6.4) Map txpwr_bb to txpwr_mac 
 0x7A=20log(20/11)=2.625</description>
              <bitRange>[24:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txpwr_mac_max_bnd</name>
              <description>(RTL_only)  u(6.0) txpwr mac max bnd dB</description>
              <bitRange>[17:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txagc_BT</name>
              <description>S(9.2) Coexist BT pwr dbm</description>
              <bitRange>[11:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txagc_LTE_en</name>
              <description>Coexist LTE_en</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txagc_BT_en</name>
              <description>Coexist BT_en</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_SWING_LEG_CTRL</name>
          <addressOffset>0x0000D224</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00020000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_txbias_legacy_below_th_val</name>
              <description>Bbswing , txbias mcs below th sel this</description>
              <bitRange>[30:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txbias_legacy_ov_th_val</name>
              <description>Bbswing ,txbias  mcs ov th sel this</description>
              <bitRange>[28:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txbbswing_legacy_below_th_val</name>
              <description>Bbswing ,txbias  mcs below th sel this</description>
              <bitRange>[26:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txbbswing_legacy_ov_th_val</name>
              <description>Bbswing ,txbias  mcs ov th sel this</description>
              <bitRange>[22:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txbbswing_txbias_legacy_th</name>
              <description>0~4 Bbswing txbias mcs th</description>
              <bitRange>[18:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txbias_cck_below_th_val</name>
              <description>Bbswing ,txbias mcs below th sel this</description>
              <bitRange>[14:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txbias_cck_ov_th_val</name>
              <description>Bbswing ,txbias  mcs ov th sel this</description>
              <bitRange>[12:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txbbswing_cck_below_th_val</name>
              <description>Bbswing ,txbias  mcs below th sel this</description>
              <bitRange>[10:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txbbswing_cck_ov_th_val</name>
              <description>Bbswing ,txbias mcs ov th sel this</description>
              <bitRange>[6:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txbbswing_txbias_cck_th</name>
              <description>0~4  Bbswing txbias mcs th</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_SWING_VHT_CTRL</name>
          <addressOffset>0x0000D228</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_txbias_VHT_ov_th_val</name>
              <description>Bbswing ,txbias  mcs ov th sel this</description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txbbswing_VHT_below_th_val</name>
              <description>Bbswing ,txbias  mcs below th sel this</description>
              <bitRange>[29:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txbbswing_VHT_ov_th_val</name>
              <description>Bbswing ,txbias  mcs ov th sel this</description>
              <bitRange>[25:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txbbswing_txbias_VHT_th</name>
              <description>0~12 Bbswing txbias mcs th</description>
              <bitRange>[21:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txbias_HT_below_th_val</name>
              <description>Bbswing ,txbias mcs below th sel this</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txbias_HT_ov_th_val</name>
              <description>Bbswing ,txbias  mcs ov th sel this</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txbbswing_HT_below_th_val</name>
              <description>Bbswing ,txbias  mcs below th sel this</description>
              <bitRange>[13:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txbbswing_HT_ov_th_val</name>
              <description>Bbswing ,txbias mcs ov th sel this</description>
              <bitRange>[9:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txbbswing_txbias_HT_th</name>
              <description>0~8 Bbswing txbias mcs th</description>
              <bitRange>[5:2]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_SWING_HE_CTRL</name>
          <addressOffset>0x0000D22C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_dpd_by_rate_off_legacy_below_th_val</name>
              <description>Bbswing ,txbias  mcs below th sel this</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_dpd_by_rate_off_legacy_ov_th_val</name>
              <description>Bbswing ,txbias  mcs ov th sel this</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_dpd_by_rate_off_legacy_th</name>
              <description>4~8 Bbswing txbias mcs th</description>
              <bitRange>[26:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_dpd_by_rate_off_cck_below_th_val</name>
              <description>Bbswing ,txbias  mcs below th sel this</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_dpd_by_rate_off_cck_ov_th_val</name>
              <description>Bbswing ,txbias  mcs ov th sel this</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_dpd_by_rate_off_cck_th</name>
              <description>0~4 Bbswing txbias mcs th</description>
              <bitRange>[20:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txbias_HE_below_th_val</name>
              <description>Bbswing ,txbias  mcs below th sel this</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txbias_HE_ov_th_val</name>
              <description>Bbswing ,txbias  mcs ov th sel this</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txbbswing_HE_below_th_val</name>
              <description>Bbswing ,txbias  mcs below th sel this</description>
              <bitRange>[13:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txbbswing_HE_ov_th_val</name>
              <description>Bbswing ,txbias  mcs ov th sel this</description>
              <bitRange>[9:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txbbswing_txbias_HE_th</name>
              <description>0~12   Bbswing txbias mcs th</description>
              <bitRange>[5:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txbias_VHT_below_th_val</name>
              <description>Bbswing ,txbias   mcs ov th sel this</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_SWING_OTHER_CTRL0</name>
          <addressOffset>0x0000D230</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_cfir_by_rate_off_legacy_below_th_val</name>
              <description>dpd by rate off mcs below th sel this</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cfir_by_rate_off_legacy_ov_th_val</name>
              <description>dpd by rate off mcs ov th sel this</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cfir_by_rate_off_legacy_th</name>
              <description>4~8  dpd by rate off mcs ov th</description>
              <bitRange>[26:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cfir_by_rate_off_cck_below_th_val</name>
              <description>dpd by rate off mcs below th sel this</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cfir_by_rate_off_cck_ov_th_val</name>
              <description>dpd by rate off mcs ov th sel this</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cfir_by_rate_off_cck_th</name>
              <description>0~4 dpd by rate off mcs th</description>
              <bitRange>[20:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_dpd_by_rate_off_HE_below_th_val</name>
              <description>cfir by rate_off   mcs  below th sel this</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_dpd_by_rate_off_HE_ov_th_val</name>
              <description>cfir by rate_off   mcs  ov th sel this</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_dpd_by_rate_off_HE_th</name>
              <description>0~12 cfir by rate_off   mcs th</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_dpd_by_rate_off_VHT_below_th_val</name>
              <description>cfir by rate_off   mcs  below th sel this</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_dpd_by_rate_off_VHT_ov_th_val</name>
              <description>cfir by rate_off   mcs  ov th sel this</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_dpd_by_rate_off_VHT_th</name>
              <description>0~12 cfir by rate_off   mcs th</description>
              <bitRange>[9:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_dpd_by_rate_off_HT_below_th_val</name>
              <description>cfir by rate_off   mcs  below th sel this</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_dpd_by_rate_off_HT_ov_th_val</name>
              <description>cfir by rate_off   mcs  ov th sel this</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_dpd_by_rate_off_HT_th</name>
              <description>0~8 cfir by rate_off   mcs th</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_SWING_OTHER_CTRL1</name>
          <addressOffset>0x0000D234</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_cfir_by_rate_off_SR_dont_apply</name>
              <description>(RTL_only)  1:Disable at SR</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_dpd_by_rate_off_SR_dont_apply</name>
              <description>(RTL_only)  1:Disable at SR</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txbbswing_txbias_SR_dont_apply</name>
              <description>(RTL_only)  1:Disable at SR</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cfir_by_rate_off_HE_below_th_val</name>
              <description>dpd by rate off mcs below th sel this</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cfir_by_rate_off_HE_ov_th_val</name>
              <description>dpd by rate off mcs ov th sel this</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cfir_by_rate_off_HE_th</name>
              <description>0~12  dpd by rate off mcs ov th</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cfir_by_rate_off_VHT_below_th_val</name>
              <description>dpd by rate off mcs below th sel this</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cfir_by_rate_off_VHT_ov_th_val</name>
              <description>dpd by rate off mcs ov th sel this</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cfir_by_rate_off_VHT_th</name>
              <description>0~12  dpd by rate off mcs ov th</description>
              <bitRange>[9:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cfir_by_rate_off_HT_below_th_val</name>
              <description>dpd by rate off mcs below th sel this</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cfir_by_rate_off_HT_ov_th_val</name>
              <description>dpd by rate off mcs ov th sel this</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cfir_by_rate_off_HT_th</name>
              <description>0~8  dpd by rate off mcs ov th</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_SR_CTRL0</name>
          <addressOffset>0x0000D238</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x80010400</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_SR_pwr_ctrl_dbg_en</name>
              <description>(RTL_only)  0:saving pwr</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_SR_rate_tbl_rd_mcs_txdiff</name>
              <description>(RTL_only)  Rd MEM idx 0~47</description>
              <bitRange>[24:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_SR_rate_map_tbl_rd_mcs_sel</name>
              <description>(RTL_only)  1:cckle 0~11 0:ht/vht/he 0~11</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txpwr_sr_force_off</name>
              <description>(RTL_only)  1:force sr mode off</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txpwr_sta_ul_force_off</name>
              <description>(RTL_only)  1:force sta mode off</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_SR_txpwr_pd_with_PD_macid</name>
              <description>(RTL_only)  
1:txpwr_PD from internal buffer 0: from MAC</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_SR_rate_map_tbl_rd</name>
              <description>(RTL_only)  1:indirect read of addr</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_SR_rate_map_tbl_rd_mcs</name>
              <description>(RTL_only)  indirect read of addr</description>
              <bitRange>[14:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txpwr_ctrl_norm_resp_dbg_en</name>
              <description>(RTL_only)  0:dbg clk off for saving pwr</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txagc_pseudo_pwr_en</name>
              <description>(RTL_only)  1:  force on norm resp out txpwr_bb</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txagc_pseudo_pwr</name>
              <description>(RTL_only)  S(9.2) force norm resp out txpwr_bb</description>
              <bitRange>[8:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_SR_CTRL1</name>
          <addressOffset>0x0000D23C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0BB77315</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_MCS_th_he</name>
              <description>SR  MCS0~MCS11</description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS_th_vht</name>
              <description>SR  MCS0~MCS11</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS_th_ht_mod8</name>
              <description>SR  MCS0~MCS7</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS_th_legacy</name>
              <description>SR  4~11</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS_th_cck</name>
              <description>SR  0~3</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_TXPWR_ref</name>
              <description>SR txpwr ref(txpwr_mcs diff)</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_UL_CTRL0</name>
          <addressOffset>0x0000D240</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0003F808</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_bypass_abort_tx_flag</name>
              <description>1: force off abort_tx flag STA_UL</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_PL_toler_range</name>
              <description>U(9.2) STA_UL</description>
              <bitRange>[28:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_PWR_bb_min_dbm</name>
              <description>S(9.2)  STA_UL</description>
              <bitRange>[17:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_PWR_error_toler</name>
              <description>S(9.2)  STA_UL</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_UL_CTRL1</name>
          <addressOffset>0x0000D244</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_MACID3</name>
              <description>STA_UL</description>
              <bitRange>[30:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MACID2</name>
              <description>STA_UL</description>
              <bitRange>[22:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MACID1</name>
              <description>STA_UL</description>
              <bitRange>[14:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MACID0</name>
              <description>STA_UL</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_UL_CTRL2</name>
          <addressOffset>0x0000D248</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x07767777</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_cfo_comp_sr</name>
              <description>(RTL_only)  STA_UL  no need to set</description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cfo_comp_norm_resp</name>
              <description>(RTL_only)  STA_UL  no need to set</description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cfo_comp4</name>
              <description>(RTL_only)  STA_UL Default 6 no need to set</description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cfo_comp3</name>
              <description>STA_UL</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cfo_comp2</name>
              <description>STA_UL</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cfo_comp1</name>
              <description>STA_UL</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cfo_comp0</name>
              <description>STA_UL</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_UL_CTRL3</name>
          <addressOffset>0x0000D24C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0047F900</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_TF_rdy_TxBF_force_off</name>
              <description>(RTL_only)  Jorden Sta_UL doesnt have TxBF</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_PL_upper_en_equl_N_tx_divide2</name>
              <description>(RTL_only)  1:PL_upper_en = is N_tx/2</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_N_tx_divide2_off</name>
              <description>(RTL_only)  1:force off N_tx/2</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_STA_pwr_ctrl_PWRmax_lim_max</name>
              <description>(RTL_only)   S(9.2) Limit pwr from norm resp</description>
              <bitRange>[19:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_STA_pwr_ctrl_PWRmax_lim_min</name>
              <description>(RTL_only)   S(9.2)  Limit pwr from norm resp</description>
              <bitRange>[8:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_UL_CTRL4</name>
          <addressOffset>0x0000D250</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x02480092</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_STA_pwr_ctrl_RPL_lim_min</name>
              <description>(RTL_only)  S(10.2)  Min=-110 (-440) Limit RPL</description>
              <bitRange>[25:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_STA_pwr_ctrl_RSSI_Target_lim_max</name>
              <description>(RTL_only)  S(8.0) Max:0 Limit RSSI_Target</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_STA_pwr_ctrl_RSSI_Target_lim_min</name>
              <description>(RTL_only)  S(8.0) Min=-110 Limit RSSI_Target</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_UL_CTRL5</name>
          <addressOffset>0x0000D254</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_SR_txpwr_resp_rdy</name>
              <description>(RTL_only)  1: trig when r_SR_txpwr_resp_rdy_force_on</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_SR_txpwr_pd_rdy</name>
              <description>(RTL_only)  1: trig when r_SR_txpwr_pd_rdy_force_on</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_SR_txpwr_rate_rdy</name>
              <description>(RTL_only)  1: trig when r_SR_txpwr_rate_rdy_force_on</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_TF_rdy</name>
              <description>(RTL_only)  1: trig when r_TF_rdy_force_on</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_TxCtrl_info_rdy</name>
              <description>(RTL_only)  1: trig when r_TxCtrl_info_rdy_force_on</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_PL_upper_en_val</name>
              <description></description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_PL_upper_en_on</name>
              <description>(RTL_only)  1 : PL_upper_en = r_force_PL_upper_en_val</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_SR_txpwr_resp_rdy_force_on</name>
              <description>(RTL_only)  1:force off SR resp trigger</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_SR_txpwr_pd_rdy_force_on</name>
              <description>(RTL_only)  1:force off SR MCS flow trigger</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_SR_txpwr_rate_rdy_force_on</name>
              <description>(RTL_only)  1:force off SR PD flow trigger</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_TF_rdy_force_on</name>
              <description>(RTL_only)  1:force off TF trigger</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_TxCtrl_info_rdy_force_on</name>
              <description>(RTL_only)  1:force off norm resp trigger</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_STA_pwr_ctrl_dbg_en</name>
              <description>(RTL_only) 0: pwr saving</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_STA_pwr_ctrl_RPL_lim_max</name>
              <description>(RTL_only)  S(10.2) Max:0 Limit RPL</description>
              <bitRange>[9:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_UL_CTRL6</name>
          <addressOffset>0x0000D258</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x6C280000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_STA_pwr_ctrl_AP_TXPWR_lim_min</name>
              <description>(RTL_only)  S(7.0 ) MIN=-20  Limit  AP TXPWR</description>
              <bitRange>[30:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_STA_pwr_ctrl_AP_TXPWR_lim_max</name>
              <description>(RTL_only)  S(7.0 ) MAX=+40 Limit  AP TXPWR</description>
              <bitRange>[22:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txpwr_force_rate_en</name>
              <description>(RTL_only)   No use</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txpwr_force_rate</name>
              <description>(RTL_only)   No use</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_NORM_FORCE0</name>
          <addressOffset>0x0000D25C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00200000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_force_macid_en</name>
              <description>(RTL_only)   Force input from MAC</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_macid_value</name>
              <description>(RTL_only)   Force input from MAC</description>
              <bitRange>[29:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_BW80p80_en_en</name>
              <description>(RTL_only)   Force input from MAC</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_BW80p80_en_value</name>
              <description>(RTL_only)   Force input from MAC</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_RF_BW_idx_en</name>
              <description>(RTL_only)   Force input from MAC</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_RF_BW_idx_value</name>
              <description>(RTL_only)   Force input from MAC</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_dcm_en</name>
              <description>(RTL_only)   Force input from MAC</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_dcm_value</name>
              <description>(RTL_only)   Force input from MAC</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_DBW_idx_en</name>
              <description>(RTL_only)   Force input from MAC</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_DBW_idx_value</name>
              <description>(RTL_only)   Force input from MAC</description>
              <bitRange>[14:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_max_rate_en</name>
              <description>(RTL_only)   Force input from MAC</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_max_rate_value</name>
              <description>(RTL_only)   Force input from MAC</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_NORM_FORCE1</name>
          <addressOffset>0x0000D260</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_txagc_BF_pwr_boost_force_val_en</name>
              <description>(RTL_only)   Force input from MAC en</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txagc_BF_pwr_boost_force_val</name>
              <description>(RTL_only)   Force input from MAC</description>
              <bitRange>[28:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_HE_ER_SU_en_en</name>
              <description>(RTL_only)   Force input from MAC en</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_HE_ER_SU_en_value</name>
              <description>(RTL_only)   Force input from MAC</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_macid_CCA_TH_en_en</name>
              <description>(RTL_only)   Force input from MAC en</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_macid_CCA_TH_en_value</name>
              <description>(RTL_only)   Force input from MAC</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_BT_grant_en</name>
              <description>(RTL_only)   Force input from MAC en</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_BT_grant_value</name>
              <description>(RTL_only)   Force input from MAC</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_Rx_LTE_en</name>
              <description>(RTL_only)   Force input from MAC en</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_Rx_LTE_value</name>
              <description>(RTL_only)   Force input from MAC</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_TxBF_en_en</name>
              <description>(RTL_only)   Force input from MAC en</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_TxBF_en_value</name>
              <description>(RTL_only)   Force input from MAC</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_txsc_en</name>
              <description>(RTL_only)   Force input from MAC en</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_txsc_value</name>
              <description>(RTL_only)   Force input from MAC</description>
              <bitRange>[12:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_ntx_en</name>
              <description>(RTL_only)   Force input from MAC en</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_ntx_value</name>
              <description>(RTL_only)   Force input from MAC</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_pwr_mode_en</name>
              <description>(RTL_only)   Force input from MAC en</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_pwr_mode_value</name>
              <description>(RTL_only)   Force input from MAC</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_SR_FORCE0</name>
          <addressOffset>0x0000D264</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_force_SR_resp_dcm_en</name>
              <description>(RTL_only)   Force input from MAC en</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_SR_resp_dcm_value</name>
              <description>(RTL_only)   Force input from MAC</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_SR_rate_dcm_en</name>
              <description>(RTL_only)   Force input from MAC en</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_SR_rate_dcm_value</name>
              <description>(RTL_only)   Force input from MAC</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_SR_txpwr_PD_en</name>
              <description>(RTL_only)   Force input from MAC en</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_SR_txpwr_PD_value</name>
              <description>(RTL_only)   Force input from MAC</description>
              <bitRange>[25:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_SR_rate_idx_en</name>
              <description>(RTL_only)   Force input from MAC en</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_SR_rate_idx_value</name>
              <description>(RTL_only)   Force input from MAC</description>
              <bitRange>[18:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_SR_txpwr_tolerance_en</name>
              <description>(RTL_only)   Force input from MAC en</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_SR_txpwr_tolerance_value</name>
              <description>(RTL_only)   Force input from MAC</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_SR_FORCE1</name>
          <addressOffset>0x0000D268</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_force_RPL_en</name>
              <description>(RTL_only)   Force input from MAC en</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_RPL_value</name>
              <description>(RTL_only)   Force input from MAC</description>
              <bitRange>[28:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_SR_resp_rate_idx_en</name>
              <description>(RTL_only)   Force input from MAC en</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_SR_resp_rate_idx_value</name>
              <description>(RTL_only)   Force input from MAC</description>
              <bitRange>[18:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_SR_resp_txpwr_PD_en</name>
              <description>(RTL_only)   Force input from MAC en</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_SR_resp_txpwr_PD_value</name>
              <description>(RTL_only)   Force input from MAC</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_SR_FORCE2</name>
          <addressOffset>0x0000D26C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_force_TF_AP_tx_PWR_en</name>
              <description>(RTL_only)   Force input from MAC en</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_TF_AP_tx_PWR_value</name>
              <description>(RTL_only)   Force input from MAC</description>
              <bitRange>[30:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_TF_rate_idx_en</name>
              <description>(RTL_only)   Force input from MAC en</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_TF_rate_idx_value</name>
              <description>(RTL_only)   Force input from MAC</description>
              <bitRange>[23:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_RPL_upper_en_en</name>
              <description>(RTL_only)   Force input from MAC en</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_RPL_upper_en_value</name>
              <description>(RTL_only)   Force input from MAC</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_RPL_upper_en</name>
              <description>(RTL_only)   Force input from MAC en</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_RPL_upper_value</name>
              <description>(RTL_only)   Force input from MAC</description>
              <bitRange>[8:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_UL_FORCE0</name>
          <addressOffset>0x0000D270</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_force_RU_alloc_en</name>
              <description>(RTL_only)   Force input from MAC en</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_RU_alloc_value</name>
              <description>(RTL_only)   Force input from MAC</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_TF_macid_en</name>
              <description>(RTL_only)   Force input from MAC en</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_TF_macid_value</name>
              <description>(RTL_only)   Force input from MAC</description>
              <bitRange>[14:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_TF_RSSI_Target_en</name>
              <description>(RTL_only)   Force input from MAC en</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_TF_RSSI_Target_value</name>
              <description>(RTL_only)   Force input from MAC</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_NORM_FORCE2</name>
          <addressOffset>0x0000D274</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_force_out_CCA_PWR_TH_en_on</name>
              <description>(RTL_only)   Force output to MAC en</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_out_CCA_PWR_TH_en</name>
              <description>(RTL_only)   Force output to MAC</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_out_CCA_PWR_TH_on</name>
              <description>(RTL_only)   Force output to MAC en</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_out_CCA_PWR_TH</name>
              <description>(RTL_only)   Force output to MAC</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txpwr_ctrl_dbg_sel</name>
              <description>(RTL_only)  dbg port address</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_UL_FORCE1</name>
          <addressOffset>0x0000D278</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_force_out_cfo_comp_on</name>
              <description>(RTL_only)   Force output to MAC en</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_out_cfo_comp</name>
              <description>(RTL_only)   Force output to MAC</description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_out_abort_tx_idx_on</name>
              <description>(RTL_only)   Force output to MAC en</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_out_abort_tx_idx</name>
              <description>(RTL_only)   Force output to MAC</description>
              <bitRange>[26:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_out_min_tx_pwr_flag_on</name>
              <description>(RTL_only)   Force output to MAC en</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_out_min_tx_pwr_flag</name>
              <description>(RTL_only)   Force output to MAC</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_out_UPH_on</name>
              <description>(RTL_only)   Force output to MAC en</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_out_UPH</name>
              <description>(RTL_only)   Force output to MAC</description>
              <bitRange>[21:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_out_STA_txpwr_mac_on</name>
              <description>(RTL_only)   Force output to MAC en</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_out_STA_txpwr_mac</name>
              <description>(RTL_only)   Force output to MAC</description>
              <bitRange>[15:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_out_STA_txpwr_bb_on</name>
              <description>(RTL_only)   Force output to MAC en</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_out_STA_txpwr_bb</name>
              <description>(RTL_only)   Force output to MAC</description>
              <bitRange>[8:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_NORM_FORCE3</name>
          <addressOffset>0x0000D27C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_force_out_txagc_bbswing_on</name>
              <description>(RTL_only)   Force output to MAC en</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_out_txagc_BBswing</name>
              <description>(RTL_only)   Force output to MAC</description>
              <bitRange>[30:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_out_txbias_on</name>
              <description>(RTL_only)   Force output to MAC en</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_out_txbias</name>
              <description>(RTL_only)   Force output to MAC</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_out_txpwr_bfon_boost_db_seg0_on</name>
              <description>(RTL_only)   Force output to MAC en</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_out_txpwr_bfon_boost_db_seg0</name>
              <description>(RTL_only)   Force output to MAC</description>
              <bitRange>[22:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_out_txpwr_bb_on</name>
              <description>(RTL_only)   Force output to MAC en</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_out_txpwr_bb</name>
              <description>(RTL_only)   Force output to MAC</description>
              <bitRange>[16:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_out_txpwr_mac_on</name>
              <description>(RTL_only)   Force output to MAC en</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_out_txpwr_mac</name>
              <description>(RTL_only)   Force output to MAC</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_NORM_FORCE4</name>
          <addressOffset>0x0000D280</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0C000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_BT_grant_wl_force_off</name>
              <description>(RTL_only)   Force off grant_wl</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_BT_grant_tx_force_off</name>
              <description>(RTL_only)   Force off grant_tx</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_BT_grant_rx_force_off</name>
              <description>(RTL_only)   Force off grant_rx</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_BT_grant_wl_val</name>
              <description>(RTL_only)   grant_wl flag=0 means coexist act</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_BT_grant_tx_val</name>
              <description>(RTL_only)   grant_rx flag=1 means coexist act</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_BT_grant_rx_val</name>
              <description>(RTL_only)   grant_rx flag=1 means coexist act</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_out_SR_dcm_on</name>
              <description>(RTL_only)   Force output to MAC en</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_out_SR_dcm</name>
              <description>(RTL_only)   Force output to MAC</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_out_SR_mcs_on</name>
              <description>(RTL_only)   Force output to MAC en</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_out_SR_mcs</name>
              <description>(RTL_only)   Force output to MAC</description>
              <bitRange>[22:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_out_SR_pd_threhold_on</name>
              <description>(RTL_only)   Force output to MAC en</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_out_SR_pd_threhold</name>
              <description>(RTL_only)   Force output to MAC</description>
              <bitRange>[9:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_out_CFIR_by_rate_off_on</name>
              <description>(RTL_only)   Force output to MAC en</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_out_CFIR_by_rate_off</name>
              <description>(RTL_only)   Force output to MAC</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_out_DPD_by_rate_off_on</name>
              <description>(RTL_only)   Force output to MAC en</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_out_DPD_by_rate_off</name>
              <description>(RTL_only)   Force output to MAC</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_RSVD0</name>
          <addressOffset>0x0000D284</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x0391AC9B</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_ru_pwr_lim_mux_en</name>
              <description>1:by_rate-&gt;macid_lim-&gt;RU_lim
0:by_rate-&gt;macid-&gt;BF0_pwr_lim-&gt;RU_lim</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_RU_norm_en</name>
              <description>(RTL_only) RU_norm_enable (RTL_ONLY TEST )</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_RU_norm_RU106</name>
              <description>(RTL_only) S(10.4) RU_lim tbl -RU norm,0x39=3.5625dB</description>
              <bitRange>[29:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_RU_norm_RU52</name>
              <description>(RTL_only) S(10.4) RU_lim tbl -RU norm,0x6b=6.6875dB</description>
              <bitRange>[19:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_RU_norm_RU26</name>
              <description>(RTL_only) S(10.4) RU_lim tbl -RU norm ,0x9b=9.6875dB</description>
              <bitRange>[9:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_RSVD1</name>
          <addressOffset>0x0000D288</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000002</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_sta_ul_log_norm_en</name>
              <description>1:sta ul txpwr log norm en 
0:log norm=10log(ntx)-10log(dbw)</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_sta_ul_ini_upd_phase_dis</name>
              <description>1:tst non eco bug</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_sram_rst_force_val</name>
              <description>rst sram by cr</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_sram_rst_force_on</name>
              <description>1:rst sram by cr</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_mcs2txinfo_en</name>
              <description>1:txinfo_bbswing=MCS</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_out_pwrcom_ch20_with_data_val</name>
              <description>1:force out off</description>
              <bitRange>[13:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_out_pwrcom_ch20_with_data_on</name>
              <description>1:force out on</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_sta_ul_mu_off_dis</name>
              <description>1:MU do sta_ul</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_pwrcom_ch20_with_data_bit_rev</name>
              <description>bit rev,txpwr_lim</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_pwrcom_ch20_with_data_bit_inv</name>
              <description>bit inv,txpwr_lim</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_func_rst_force_val</name>
              <description>func rst from txpwr_ctrl _CR</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_func_rst_force_on</name>
              <description>Don't obey func rst from MAC</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_RSVD2</name>
          <addressOffset>0x0000D28C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_sta_ul_log_norm_BW160_1tx</name>
              <description>s(8,2) sta ul txpwr log norm</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_sta_ul_log_norm_BW80_1tx</name>
              <description>s(8,2) sta ul txpwr log norm</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_sta_ul_log_norm_BW40_1tx</name>
              <description>s(8,2) sta ul txpwr log norm</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_sta_ul_log_norm_BW20_1tx</name>
              <description>s(8,2) sta ul txpwr log norm</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_RSVD3</name>
          <addressOffset>0x0000D290</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_sta_ul_log_norm_BW260_2tx</name>
              <description>s(8,2) sta ul txpwr log norm</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_sta_ul_log_norm_BW80_2tx</name>
              <description>s(8,2) sta ul txpwr log norm</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_sta_ul_log_norm_BW40_2tx</name>
              <description>s(8,2) sta ul txpwr log norm</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_sta_ul_log_norm_BW20_2tx</name>
              <description>s(8,2) sta ul txpwr log norm</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_RSVD4</name>
          <addressOffset>0x0000D294</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_txbias_ht_th_1</name>
              <description>txbias region</description>
              <bitRange>[30:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txbias_ht_th_0</name>
              <description>txbias region</description>
              <bitRange>[26:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txbias_legacy_th_2</name>
              <description>txbias region</description>
              <bitRange>[20:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txbias_legacy_th_1</name>
              <description>txbias region</description>
              <bitRange>[16:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txbias_legacy_th_0</name>
              <description>txbias region</description>
              <bitRange>[12:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txbias_cck_th_2</name>
              <description>txbias region</description>
              <bitRange>[8:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txbias_cck_th_1</name>
              <description>txbias region</description>
              <bitRange>[5:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txbias_cck_th_0</name>
              <description>txbias region</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_RSVD5</name>
          <addressOffset>0x0000D298</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_txbias_cck_region_3</name>
              <description>txbias region</description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txbias_cck_region_2</name>
              <description>txbias region</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txbias_he_th_2</name>
              <description>txbias region</description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txbias_he_th_1</name>
              <description>txbias region</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txbias_he_th_0</name>
              <description>txbias region</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txbias_vht_th_2</name>
              <description>txbias region</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txbias_vht_th_1</name>
              <description>txbias region</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txbias_vht_th_0</name>
              <description>txbias region</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txbias_ht_th_2</name>
              <description>txbias region</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_RSVD6</name>
          <addressOffset>0x0000D29C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_txbias_he_region_3</name>
              <description>txbias region</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txbias_he_region_2</name>
              <description>txbias region</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txbias_vht_region_3</name>
              <description>txbias region</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txbias_vht_region_2</name>
              <description>txbias region</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txbias_ht_region_3</name>
              <description>txbias region</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txbias_ht_region_2</name>
              <description>txbias region</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txbias_legacy_region_3</name>
              <description>txbias region</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txbias_legacy_region_2</name>
              <description>txbias region</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_BY_RATE_TABLE0</name>
          <addressOffset>0x0000D2C0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_txagc_cck11M</name>
              <description>s(7.1)</description>
              <bitRange>[30:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txagc_cck5p5M</name>
              <description>s(7.1)</description>
              <bitRange>[22:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txagc_cck2M</name>
              <description>s(7.1)</description>
              <bitRange>[14:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txagc_cck1M</name>
              <description>s(7.1)</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_BY_RATE_TABLE1</name>
          <addressOffset>0x0000D2C4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_txagc_legacy18M</name>
              <description>s(7.1)</description>
              <bitRange>[30:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txagc_legacy12M</name>
              <description>s(7.1)</description>
              <bitRange>[22:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txagc_legacy9M</name>
              <description>s(7.1)</description>
              <bitRange>[14:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txagc_legacy6M</name>
              <description>s(7.1)</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_BY_RATE_TABLE2</name>
          <addressOffset>0x0000D2C8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_txagc_legacy54M</name>
              <description>s(7.1)</description>
              <bitRange>[30:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txagc_legacy48M</name>
              <description>s(7.1)</description>
              <bitRange>[22:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txagc_legacy36M</name>
              <description>s(7.1)</description>
              <bitRange>[14:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txagc_legacy24M</name>
              <description>s(7.1)</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_BY_RATE_TABLE3</name>
          <addressOffset>0x0000D2CC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_txagc_nonlegacy_mcs3_1nss</name>
              <description>s(7.1)</description>
              <bitRange>[30:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txagc_nonlegacy_mcs2_1nss</name>
              <description>s(7.1)</description>
              <bitRange>[22:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txagc_nonlegacy_mcs1_1nss</name>
              <description>s(7.1)</description>
              <bitRange>[14:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txagc_nonlegacy_mcs0_1nss</name>
              <description>s(7.1)</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_BY_RATE_TABLE4</name>
          <addressOffset>0x0000D2D0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_txagc_nonlegacy_mcs7_1nss</name>
              <description>s(7.1)</description>
              <bitRange>[30:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txagc_nonlegacy_mcs6_1nss</name>
              <description>s(7.1)</description>
              <bitRange>[22:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txagc_nonlegacy_mcs5_1nss</name>
              <description>s(7.1)</description>
              <bitRange>[14:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txagc_nonlegacy_mcs4_1nss</name>
              <description>s(7.1)</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_BY_RATE_TABLE5</name>
          <addressOffset>0x0000D2D4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_txagc_nonlegacy_mcs11_1nss</name>
              <description>s(7.1)</description>
              <bitRange>[30:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txagc_nonlegacy_mcs10_1nss</name>
              <description>s(7.1)</description>
              <bitRange>[22:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txagc_nonlegacy_mcs9_1nss</name>
              <description>s(7.1)</description>
              <bitRange>[14:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txagc_nonlegacy_mcs8_1nss</name>
              <description>s(7.1)</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_BY_RATE_TABLE6</name>
          <addressOffset>0x0000D2D8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_txagc_nonlegacy_dcm_mcs4_1nss</name>
              <description>s(7.1)</description>
              <bitRange>[30:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txagc_nonlegacy_dcm_mcs3_1nss</name>
              <description>s(7.1)</description>
              <bitRange>[22:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txagc_nonlegacy_dcm_mcs1_1nss</name>
              <description>s(7.1)</description>
              <bitRange>[14:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txagc_nonlegacy_dcm_mcs0_1nss</name>
              <description>s(7.1)</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_LMT_TABLE0</name>
          <addressOffset>0x0000D2EC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_txagc_max_cck_1tx_BW20M</name>
              <description>s(7.1)</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_LMT_TABLE1</name>
          <addressOffset>0x0000D2F0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_txagc_max_1tx_BW20_0</name>
              <description>s(7.1)</description>
              <bitRange>[22:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_txagc_max_legacy_non_dup_1tx</name>
              <description>s(7.1)</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_RU_LMT_TABLE0</name>
          <addressOffset>0x0000D33C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_ru_lim_0tx_RU26_BW160_3</name>
              <description>s(7.1)</description>
              <bitRange>[30:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_ru_lim_0tx_RU26_BW160_2</name>
              <description>s(7.1)</description>
              <bitRange>[22:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_ru_lim_0tx_RU26_BW160_1</name>
              <description>s(7.1)</description>
              <bitRange>[14:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_ru_lim_0tx_RU26_BW160_0</name>
              <description>s(7.1)</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_RU_LMT_TABLE1</name>
          <addressOffset>0x0000D340</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_ru_lim_0tx_RU26_BW160_7</name>
              <description>s(7.1)</description>
              <bitRange>[30:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_ru_lim_0tx_RU26_BW160_6</name>
              <description>s(7.1)</description>
              <bitRange>[22:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_ru_lim_0tx_RU26_BW160_5</name>
              <description>s(7.1)</description>
              <bitRange>[14:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_ru_lim_0tx_RU26_BW160_4</name>
              <description>s(7.1)</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_RU_LMT_TABLE2</name>
          <addressOffset>0x0000D344</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_ru_lim_0tx_RU52_BW160_3</name>
              <description>s(7.1)</description>
              <bitRange>[30:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_ru_lim_0tx_RU52_BW160_2</name>
              <description>s(7.1)</description>
              <bitRange>[22:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_ru_lim_0tx_RU52_BW160_1</name>
              <description>s(7.1)</description>
              <bitRange>[14:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_ru_lim_0tx_RU52_BW160_0</name>
              <description>s(7.1)</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_RU_LMT_TABLE3</name>
          <addressOffset>0x0000D348</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_ru_lim_0tx_RU52_BW160_7</name>
              <description>s(7.1)</description>
              <bitRange>[30:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_ru_lim_0tx_RU52_BW160_6</name>
              <description>s(7.1)</description>
              <bitRange>[22:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_ru_lim_0tx_RU52_BW160_5</name>
              <description>s(7.1)</description>
              <bitRange>[14:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_ru_lim_0tx_RU52_BW160_4</name>
              <description>s(7.1)</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_RU_LMT_TABLE4</name>
          <addressOffset>0x0000D34C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_ru_lim_0tx_RU106_BW160_3</name>
              <description>s(7.1)</description>
              <bitRange>[30:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_ru_lim_0tx_RU106_BW160_2</name>
              <description>s(7.1)</description>
              <bitRange>[22:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_ru_lim_0tx_RU106_BW160_1</name>
              <description>s(7.1)</description>
              <bitRange>[14:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_ru_lim_0tx_RU106_BW160_0</name>
              <description>s(7.1)</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_RU_LMT_TABLE5</name>
          <addressOffset>0x0000D350</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_ru_lim_0tx_RU106_BW160_7</name>
              <description>s(7.1)</description>
              <bitRange>[30:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_ru_lim_0tx_RU106_BW160_6</name>
              <description>s(7.1)</description>
              <bitRange>[22:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_ru_lim_0tx_RU106_BW160_5</name>
              <description>s(7.1)</description>
              <bitRange>[14:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_ru_lim_0tx_RU106_BW160_4</name>
              <description>s(7.1)</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_MACID_LMT_TABLE0</name>
          <addressOffset>0x0000D36C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_macid_0_CCA_PWR_TH_en</name>
              <description>u(1.0)</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_0_txpwr1_en</name>
              <description>u(1.0)</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_0_txpwr0_en</name>
              <description>u(1.0)</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_0_CCA_PWR_TH</name>
              <description>s(8.1)</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_0_txpwr1</name>
              <description>s(8.1)</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_0_txpwr0</name>
              <description>s(8.1)</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_MACID_LMT_TABLE1</name>
          <addressOffset>0x0000D370</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_macid_1_CCA_PWR_TH_en</name>
              <description>u(1.0)</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_1_txpwr1_en</name>
              <description>u(1.0)</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_1_txpwr0_en</name>
              <description>u(1.0)</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_1_CCA_PWR_TH</name>
              <description>s(8.1)</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_1_txpwr1</name>
              <description>s(8.1)</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_1_txpwr0</name>
              <description>s(8.1)</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_MACID_LMT_TABLE2</name>
          <addressOffset>0x0000D374</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_macid_2_CCA_PWR_TH_en</name>
              <description>u(1.0)</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_2_txpwr1_en</name>
              <description>u(1.0)</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_2_txpwr0_en</name>
              <description>u(1.0)</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_2_CCA_PWR_TH</name>
              <description>s(8.1)</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_2_txpwr1</name>
              <description>s(8.1)</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_2_txpwr0</name>
              <description>s(8.1)</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_MACID_LMT_TABLE3</name>
          <addressOffset>0x0000D378</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_macid_3_CCA_PWR_TH_en</name>
              <description>u(1.0)</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_3_txpwr1_en</name>
              <description>u(1.0)</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_3_txpwr0_en</name>
              <description>u(1.0)</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_3_CCA_PWR_TH</name>
              <description>s(8.1)</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_3_txpwr1</name>
              <description>s(8.1)</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_3_txpwr0</name>
              <description>s(8.1)</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_MACID_LMT_TABLE4</name>
          <addressOffset>0x0000D37C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_macid_4_CCA_PWR_TH_en</name>
              <description>u(1.0)</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_4_txpwr1_en</name>
              <description>u(1.0)</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_4_txpwr0_en</name>
              <description>u(1.0)</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_4_CCA_PWR_TH</name>
              <description>s(8.1)</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_4_txpwr1</name>
              <description>s(8.1)</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_4_txpwr0</name>
              <description>s(8.1)</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_MACID_LMT_TABLE5</name>
          <addressOffset>0x0000D380</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_macid_5_CCA_PWR_TH_en</name>
              <description>u(1.0)</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_5_txpwr1_en</name>
              <description>u(1.0)</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_5_txpwr0_en</name>
              <description>u(1.0)</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_5_CCA_PWR_TH</name>
              <description>s(8.1)</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_5_txpwr1</name>
              <description>s(8.1)</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_5_txpwr0</name>
              <description>s(8.1)</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_MACID_LMT_TABLE6</name>
          <addressOffset>0x0000D384</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_macid_6_CCA_PWR_TH_en</name>
              <description>u(1.0)</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_6_txpwr1_en</name>
              <description>u(1.0)</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_6_txpwr0_en</name>
              <description>u(1.0)</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_6_CCA_PWR_TH</name>
              <description>s(8.1)</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_6_txpwr1</name>
              <description>s(8.1)</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_6_txpwr0</name>
              <description>s(8.1)</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_MACID_LMT_TABLE7</name>
          <addressOffset>0x0000D388</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_macid_7_CCA_PWR_TH_en</name>
              <description>u(1.0)</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_7_txpwr1_en</name>
              <description>u(1.0)</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_7_txpwr0_en</name>
              <description>u(1.0)</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_7_CCA_PWR_TH</name>
              <description>s(8.1)</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_7_txpwr1</name>
              <description>s(8.1)</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_7_txpwr0</name>
              <description>s(8.1)</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_MACID_LMT_TABLE8</name>
          <addressOffset>0x0000D38C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_macid_8_CCA_PWR_TH_en</name>
              <description>u(1.0)</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_8_txpwr1_en</name>
              <description>u(1.0)</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_8_txpwr0_en</name>
              <description>u(1.0)</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_8_CCA_PWR_TH</name>
              <description>s(8.1)</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_8_txpwr1</name>
              <description>s(8.1)</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_8_txpwr0</name>
              <description>s(8.1)</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_MACID_LMT_TABLE9</name>
          <addressOffset>0x0000D390</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_macid_9_CCA_PWR_TH_en</name>
              <description>u(1.0)</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_9_txpwr1_en</name>
              <description>u(1.0)</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_9_txpwr0_en</name>
              <description>u(1.0)</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_9_CCA_PWR_TH</name>
              <description>s(8.1)</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_9_txpwr1</name>
              <description>s(8.1)</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_9_txpwr0</name>
              <description>s(8.1)</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_MACID_LMT_TABLE10</name>
          <addressOffset>0x0000D394</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_macid_10_CCA_PWR_TH_en</name>
              <description>u(1.0)</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_10_txpwr1_en</name>
              <description>u(1.0)</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_10_txpwr0_en</name>
              <description>u(1.0)</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_10_CCA_PWR_TH</name>
              <description>s(8.1)</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_10_txpwr1</name>
              <description>s(8.1)</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_10_txpwr0</name>
              <description>s(8.1)</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_MACID_LMT_TABLE11</name>
          <addressOffset>0x0000D398</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_macid_11_CCA_PWR_TH_en</name>
              <description>u(1.0)</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_11_txpwr1_en</name>
              <description>u(1.0)</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_11_txpwr0_en</name>
              <description>u(1.0)</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_11_CCA_PWR_TH</name>
              <description>s(8.1)</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_11_txpwr1</name>
              <description>s(8.1)</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_11_txpwr0</name>
              <description>s(8.1)</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_MACID_LMT_TABLE12</name>
          <addressOffset>0x0000D39C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_macid_12_CCA_PWR_TH_en</name>
              <description>u(1.0)</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_12_txpwr1_en</name>
              <description>u(1.0)</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_12_txpwr0_en</name>
              <description>u(1.0)</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_12_CCA_PWR_TH</name>
              <description>s(8.1)</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_12_txpwr1</name>
              <description>s(8.1)</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_12_txpwr0</name>
              <description>s(8.1)</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_MACID_LMT_TABLE13</name>
          <addressOffset>0x0000D3A0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_macid_13_CCA_PWR_TH_en</name>
              <description>u(1.0)</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_13_txpwr1_en</name>
              <description>u(1.0)</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_13_txpwr0_en</name>
              <description>u(1.0)</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_13_CCA_PWR_TH</name>
              <description>s(8.1)</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_13_txpwr1</name>
              <description>s(8.1)</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_13_txpwr0</name>
              <description>s(8.1)</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_MACID_LMT_TABLE14</name>
          <addressOffset>0x0000D3A4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_macid_14_CCA_PWR_TH_en</name>
              <description>u(1.0)</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_14_txpwr1_en</name>
              <description>u(1.0)</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_14_txpwr0_en</name>
              <description>u(1.0)</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_14_CCA_PWR_TH</name>
              <description>s(8.1)</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_14_txpwr1</name>
              <description>s(8.1)</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_14_txpwr0</name>
              <description>s(8.1)</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_MACID_LMT_TABLE15</name>
          <addressOffset>0x0000D3A8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_macid_15_CCA_PWR_TH_en</name>
              <description>u(1.0)</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_15_txpwr1_en</name>
              <description>u(1.0)</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_15_txpwr0_en</name>
              <description>u(1.0)</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_15_CCA_PWR_TH</name>
              <description>s(8.1)</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_15_txpwr1</name>
              <description>s(8.1)</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_macid_15_txpwr0</name>
              <description>s(8.1)</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_SR_MCS0_TXDIFF_TABLE0</name>
          <addressOffset>0x0000D56C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_MCS0_TxDiff_5dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS0_TxDiff_4dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS0_TxDiff_3dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS0_TxDiff_2dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS0_TxDiff_1dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_SR_MCS0_TXDIFF_TABLE1</name>
          <addressOffset>0x0000D570</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_MCS0_TxDiff_10dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS0_TxDiff_9dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS0_TxDiff_8dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS0_TxDiff_7dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS0_TxDiff_6dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_SR_MCS0_TXDIFF_TABLE2</name>
          <addressOffset>0x0000D574</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_MCS0_TxDiff_15dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS0_TxDiff_14dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS0_TxDiff_13dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS0_TxDiff_12dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS0_TxDiff_11dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_SR_MCS0_TXDIFF_TABLE3</name>
          <addressOffset>0x0000D578</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_MCS0_TxDiff_20dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS0_TxDiff_19dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS0_TxDiff_18dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS0_TxDiff_17dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS0_TxDiff_16dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_SR_MCS1_TXDIFF_TABLE0</name>
          <addressOffset>0x0000D57C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_MCS1_TxDiff_5dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS1_TxDiff_4dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS1_TxDiff_3dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS1_TxDiff_2dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS1_TxDiff_1dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_SR_MCS1_TXDIFF_TABLE1</name>
          <addressOffset>0x0000D580</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_MCS1_TxDiff_10dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS1_TxDiff_9dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS1_TxDiff_8dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS1_TxDiff_7dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS1_TxDiff_6dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_SR_MCS1_TXDIFF_TABLE2</name>
          <addressOffset>0x0000D584</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_MCS1_TxDiff_15dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS1_TxDiff_14dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS1_TxDiff_13dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS1_TxDiff_12dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS1_TxDiff_11dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_SR_MCS1_TXDIFF_TABLE3</name>
          <addressOffset>0x0000D588</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_MCS1_TxDiff_20dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS1_TxDiff_19dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS1_TxDiff_18dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS1_TxDiff_17dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS1_TxDiff_16dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_SR_MCS2_TXDIFF_TABLE0</name>
          <addressOffset>0x0000D58C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_MCS2_TxDiff_5dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS2_TxDiff_4dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS2_TxDiff_3dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS2_TxDiff_2dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS2_TxDiff_1dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_SR_MCS2_TXDIFF_TABLE1</name>
          <addressOffset>0x0000D590</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_MCS2_TxDiff_10dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS2_TxDiff_9dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS2_TxDiff_8dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS2_TxDiff_7dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS2_TxDiff_6dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_SR_MCS2_TXDIFF_TABLE2</name>
          <addressOffset>0x0000D594</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_MCS2_TxDiff_15dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS2_TxDiff_14dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS2_TxDiff_13dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS2_TxDiff_12dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS2_TxDiff_11dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_SR_MCS2_TXDIFF_TABLE3</name>
          <addressOffset>0x0000D598</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_MCS2_TxDiff_20dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS2_TxDiff_19dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS2_TxDiff_18dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS2_TxDiff_17dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS2_TxDiff_16dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_SR_MCS3_TXDIFF_TABLE0</name>
          <addressOffset>0x0000D59C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_MCS3_TxDiff_5dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS3_TxDiff_4dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS3_TxDiff_3dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS3_TxDiff_2dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS3_TxDiff_1dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_SR_MCS3_TXDIFF_TABLE1</name>
          <addressOffset>0x0000D5A0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_MCS3_TxDiff_10dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS3_TxDiff_9dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS3_TxDiff_8dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS3_TxDiff_7dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS3_TxDiff_6dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_SR_MCS3_TXDIFF_TABLE2</name>
          <addressOffset>0x0000D5A4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_MCS3_TxDiff_15dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS3_TxDiff_14dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS3_TxDiff_13dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS3_TxDiff_12dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS3_TxDiff_11dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_SR_MCS3_TXDIFF_TABLE3</name>
          <addressOffset>0x0000D5A8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_MCS3_TxDiff_20dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS3_TxDiff_19dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS3_TxDiff_18dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS3_TxDiff_17dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS3_TxDiff_16dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_SR_MCS4_TXDIFF_TABLE0</name>
          <addressOffset>0x0000D5AC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_MCS4_TxDiff_5dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS4_TxDiff_4dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS4_TxDiff_3dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS4_TxDiff_2dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS4_TxDiff_1dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_SR_MCS4_TXDIFF_TABLE1</name>
          <addressOffset>0x0000D5B0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_MCS4_TxDiff_10dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS4_TxDiff_9dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS4_TxDiff_8dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS4_TxDiff_7dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS4_TxDiff_6dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_SR_MCS4_TXDIFF_TABLE2</name>
          <addressOffset>0x0000D5B4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_MCS4_TxDiff_15dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS4_TxDiff_14dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS4_TxDiff_13dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS4_TxDiff_12dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS4_TxDiff_11dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_SR_MCS4_TXDIFF_TABLE3</name>
          <addressOffset>0x0000D5B8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_MCS4_TxDiff_20dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS4_TxDiff_19dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS4_TxDiff_18dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS4_TxDiff_17dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS4_TxDiff_16dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_SR_MCS5_TXDIFF_TABLE0</name>
          <addressOffset>0x0000D5BC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_MCS5_TxDiff_5dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS5_TxDiff_4dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS5_TxDiff_3dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS5_TxDiff_2dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS5_TxDiff_1dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_SR_MCS5_TXDIFF_TABLE1</name>
          <addressOffset>0x0000D5C0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_MCS5_TxDiff_10dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS5_TxDiff_9dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS5_TxDiff_8dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS5_TxDiff_7dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS5_TxDiff_6dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_SR_MCS5_TXDIFF_TABLE2</name>
          <addressOffset>0x0000D5C4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_MCS5_TxDiff_15dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS5_TxDiff_14dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS5_TxDiff_13dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS5_TxDiff_12dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS5_TxDiff_11dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_SR_MCS5_TXDIFF_TABLE3</name>
          <addressOffset>0x0000D5C8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_MCS5_TxDiff_20dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS5_TxDiff_19dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS5_TxDiff_18dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS5_TxDiff_17dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS5_TxDiff_16dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_SR_MCS6_TXDIFF_TABLE0</name>
          <addressOffset>0x0000D5CC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_MCS6_TxDiff_5dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS6_TxDiff_4dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS6_TxDiff_3dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS6_TxDiff_2dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS6_TxDiff_1dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_SR_MCS6_TXDIFF_TABLE1</name>
          <addressOffset>0x0000D5D0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_MCS6_TxDiff_10dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS6_TxDiff_9dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS6_TxDiff_8dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS6_TxDiff_7dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS6_TxDiff_6dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_SR_MCS6_TXDIFF_TABLE2</name>
          <addressOffset>0x0000D5D4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_MCS6_TxDiff_15dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS6_TxDiff_14dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS6_TxDiff_13dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS6_TxDiff_12dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS6_TxDiff_11dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_SR_MCS6_TXDIFF_TABLE3</name>
          <addressOffset>0x0000D5D8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_MCS6_TxDiff_20dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS6_TxDiff_19dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS6_TxDiff_18dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS6_TxDiff_17dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS6_TxDiff_16dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_SR_MCS7_TXDIFF_TABLE0</name>
          <addressOffset>0x0000D5DC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_MCS7_TxDiff_5dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS7_TxDiff_4dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS7_TxDiff_3dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS7_TxDiff_2dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS7_TxDiff_1dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_SR_MCS7_TXDIFF_TABLE1</name>
          <addressOffset>0x0000D5E0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_MCS7_TxDiff_10dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS7_TxDiff_9dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS7_TxDiff_8dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS7_TxDiff_7dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS7_TxDiff_6dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_SR_MCS7_TXDIFF_TABLE2</name>
          <addressOffset>0x0000D5E4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_MCS7_TxDiff_15dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS7_TxDiff_14dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS7_TxDiff_13dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS7_TxDiff_12dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS7_TxDiff_11dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_SR_MCS7_TXDIFF_TABLE3</name>
          <addressOffset>0x0000D5E8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_MCS7_TxDiff_20dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS7_TxDiff_19dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS7_TxDiff_18dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS7_TxDiff_17dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS7_TxDiff_16dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_SR_MCS8_TXDIFF_TABLE0</name>
          <addressOffset>0x0000D5EC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_MCS8_TxDiff_5dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS8_TxDiff_4dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS8_TxDiff_3dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS8_TxDiff_2dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS8_TxDiff_1dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_SR_MCS8_TXDIFF_TABLE1</name>
          <addressOffset>0x0000D5F0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_MCS8_TxDiff_10dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS8_TxDiff_9dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS8_TxDiff_8dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS8_TxDiff_7dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS8_TxDiff_6dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_SR_MCS8_TXDIFF_TABLE2</name>
          <addressOffset>0x0000D5F4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_MCS8_TxDiff_15dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS8_TxDiff_14dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS8_TxDiff_13dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS8_TxDiff_12dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS8_TxDiff_11dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_SR_MCS8_TXDIFF_TABLE3</name>
          <addressOffset>0x0000D5F8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_MCS8_TxDiff_20dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS8_TxDiff_19dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS8_TxDiff_18dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS8_TxDiff_17dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS8_TxDiff_16dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_SR_MCS9_TXDIFF_TABLE0</name>
          <addressOffset>0x0000D5FC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_MCS9_TxDiff_5dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS9_TxDiff_4dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS9_TxDiff_3dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS9_TxDiff_2dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS9_TxDiff_1dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_SR_MCS9_TXDIFF_TABLE1</name>
          <addressOffset>0x0000D600</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_MCS9_TxDiff_10dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS9_TxDiff_9dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS9_TxDiff_8dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS9_TxDiff_7dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS9_TxDiff_6dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_SR_MCS9_TXDIFF_TABLE2</name>
          <addressOffset>0x0000D604</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_MCS9_TxDiff_15dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS9_TxDiff_14dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS9_TxDiff_13dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS9_TxDiff_12dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS9_TxDiff_11dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_SR_MCS9_TXDIFF_TABLE3</name>
          <addressOffset>0x0000D608</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_MCS9_TxDiff_20dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS9_TxDiff_19dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS9_TxDiff_18dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS9_TxDiff_17dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS9_TxDiff_16dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_SR_MCS10_TXDIFF_TABLE0</name>
          <addressOffset>0x0000D60C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_MCS10_TxDiff_5dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS10_TxDiff_4dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS10_TxDiff_3dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS10_TxDiff_2dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS10_TxDiff_1dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_SR_MCS10_TXDIFF_TABLE1</name>
          <addressOffset>0x0000D610</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_MCS10_TxDiff_10dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS10_TxDiff_9dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS10_TxDiff_8dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS10_TxDiff_7dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS10_TxDiff_6dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_SR_MCS10_TXDIFF_TABLE2</name>
          <addressOffset>0x0000D614</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_MCS10_TxDiff_15dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS10_TxDiff_14dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS10_TxDiff_13dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS10_TxDiff_12dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS10_TxDiff_11dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_SR_MCS10_TXDIFF_TABLE3</name>
          <addressOffset>0x0000D618</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_MCS10_TxDiff_20dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS10_TxDiff_19dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS10_TxDiff_18dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS10_TxDiff_17dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS10_TxDiff_16dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_SR_MCS11_TXDIFF_TABLE0</name>
          <addressOffset>0x0000D61C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_MCS11_TxDiff_5dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS11_TxDiff_4dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS11_TxDiff_3dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS11_TxDiff_2dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS11_TxDiff_1dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_SR_MCS11_TXDIFF_TABLE1</name>
          <addressOffset>0x0000D620</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_MCS11_TxDiff_10dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS11_TxDiff_9dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS11_TxDiff_8dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS11_TxDiff_7dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS11_TxDiff_6dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_SR_MCS11_TXDIFF_TABLE2</name>
          <addressOffset>0x0000D624</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_MCS11_TxDiff_15dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS11_TxDiff_14dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS11_TxDiff_13dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS11_TxDiff_12dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS11_TxDiff_11dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_SR_MCS11_TXDIFF_TABLE3</name>
          <addressOffset>0x0000D628</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_MCS11_TxDiff_20dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS11_TxDiff_19dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS11_TxDiff_18dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS11_TxDiff_17dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MCS11_TxDiff_16dB_mcs_offset</name>
              <description>U(4.0) mcs0~11</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_cck1M_TXDIFF_TABLE0</name>
          <addressOffset>0x0000D62C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_cck1M_TxDiff_5dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cck1M_TxDiff_4dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cck1M_TxDiff_3dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cck1M_TxDiff_2dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cck1M_TxDiff_1dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_cck1M_TXDIFF_TABLE1</name>
          <addressOffset>0x0000D630</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_cck1M_TxDiff_10dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cck1M_TxDiff_9dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cck1M_TxDiff_8dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cck1M_TxDiff_7dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cck1M_TxDiff_6dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_cck1M_TXDIFF_TABLE2</name>
          <addressOffset>0x0000D634</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_cck1M_TxDiff_15dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cck1M_TxDiff_14dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cck1M_TxDiff_13dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cck1M_TxDiff_12dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cck1M_TxDiff_11dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_cck1M_TXDIFF_TABLE3</name>
          <addressOffset>0x0000D638</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_cck1M_TxDiff_20dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cck1M_TxDiff_19dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cck1M_TxDiff_18dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cck1M_TxDiff_17dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cck1M_TxDiff_16dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_cck2M_TXDIFF_TABLE0</name>
          <addressOffset>0x0000D63C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_cck2M_TxDiff_5dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cck2M_TxDiff_4dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cck2M_TxDiff_3dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cck2M_TxDiff_2dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cck2M_TxDiff_1dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_cck2M_TXDIFF_TABLE1</name>
          <addressOffset>0x0000D640</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_cck2M_TxDiff_10dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cck2M_TxDiff_9dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cck2M_TxDiff_8dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cck2M_TxDiff_7dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cck2M_TxDiff_6dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_cck2M_TXDIFF_TABLE2</name>
          <addressOffset>0x0000D644</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_cck2M_TxDiff_15dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cck2M_TxDiff_14dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cck2M_TxDiff_13dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cck2M_TxDiff_12dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cck2M_TxDiff_11dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_cck2M_TXDIFF_TABLE3</name>
          <addressOffset>0x0000D648</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_cck2M_TxDiff_20dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cck2M_TxDiff_19dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cck2M_TxDiff_18dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cck2M_TxDiff_17dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cck2M_TxDiff_16dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_cck5p5M_TXDIFF_TABLE0</name>
          <addressOffset>0x0000D64C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_cck5p5M_TxDiff_5dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cck5p5M_TxDiff_4dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cck5p5M_TxDiff_3dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cck5p5M_TxDiff_2dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cck5p5M_TxDiff_1dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_cck5p5M_TXDIFF_TABLE1</name>
          <addressOffset>0x0000D650</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_cck5p5M_TxDiff_10dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cck5p5M_TxDiff_9dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cck5p5M_TxDiff_8dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cck5p5M_TxDiff_7dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cck5p5M_TxDiff_6dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_cck5p5M_TXDIFF_TABLE2</name>
          <addressOffset>0x0000D654</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_cck5p5M_TxDiff_15dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cck5p5M_TxDiff_14dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cck5p5M_TxDiff_13dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cck5p5M_TxDiff_12dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cck5p5M_TxDiff_11dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_cck5p5M_TXDIFF_TABLE3</name>
          <addressOffset>0x0000D658</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_cck5p5M_TxDiff_20dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cck5p5M_TxDiff_19dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cck5p5M_TxDiff_18dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cck5p5M_TxDiff_17dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cck5p5M_TxDiff_16dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_cck11M_TXDIFF_TABLE0</name>
          <addressOffset>0x0000D65C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_cck11M_TxDiff_5dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cck11M_TxDiff_4dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cck11M_TxDiff_3dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cck11M_TxDiff_2dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cck11M_TxDiff_1dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_cck11M_TXDIFF_TABLE1</name>
          <addressOffset>0x0000D660</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_cck11M_TxDiff_10dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cck11M_TxDiff_9dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cck11M_TxDiff_8dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cck11M_TxDiff_7dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cck11M_TxDiff_6dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_cck11M_TXDIFF_TABLE2</name>
          <addressOffset>0x0000D664</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_cck11M_TxDiff_15dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cck11M_TxDiff_14dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cck11M_TxDiff_13dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cck11M_TxDiff_12dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cck11M_TxDiff_11dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_cck11M_TXDIFF_TABLE3</name>
          <addressOffset>0x0000D668</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_cck11M_TxDiff_20dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cck11M_TxDiff_19dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cck11M_TxDiff_18dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cck11M_TxDiff_17dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cck11M_TxDiff_16dB_rate_offset</name>
              <description>U(4.0)  cck 0~3, 0-cck1M,1=cck2M,2=cck5p5M,3=cck11M</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_legacy6M_TXDIFF_TABLE0</name>
          <addressOffset>0x0000D66C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_legacy6M_TxDiff_5dB_rate_offset</name>
              <description>U(4.0) legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy6M_TxDiff_4dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy6M_TxDiff_3dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy6M_TxDiff_2dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy6M_TxDiff_1dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_legacy6M_TXDIFF_TABLE1</name>
          <addressOffset>0x0000D670</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_legacy6M_TxDiff_10dB_rate_offset</name>
              <description>U(4.0) legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy6M_TxDiff_9dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy6M_TxDiff_8dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy6M_TxDiff_7dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy6M_TxDiff_6dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_legacy6M_TXDIFF_TABLE2</name>
          <addressOffset>0x0000D674</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_legacy6M_TxDiff_15dB_rate_offset</name>
              <description>U(4.0) legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy6M_TxDiff_14dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy6M_TxDiff_13dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy6M_TxDiff_12dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy6M_TxDiff_11dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_legacy6M_TXDIFF_TABLE3</name>
          <addressOffset>0x0000D678</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_legacy6M_TxDiff_20dB_rate_offset</name>
              <description>U(4.0) legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy6M_TxDiff_19dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy6M_TxDiff_18dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy6M_TxDiff_17dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy6M_TxDiff_16dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_legacy9M_TXDIFF_TABLE0</name>
          <addressOffset>0x0000D67C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_legacy9M_TxDiff_5dB_rate_offset</name>
              <description>U(4.0) legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy9M_TxDiff_4dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy9M_TxDiff_3dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy9M_TxDiff_2dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy9M_TxDiff_1dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_legacy9M_TXDIFF_TABLE1</name>
          <addressOffset>0x0000D680</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_legacy9M_TxDiff_10dB_rate_offset</name>
              <description>U(4.0) legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy9M_TxDiff_9dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy9M_TxDiff_8dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy9M_TxDiff_7dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy9M_TxDiff_6dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_legacy9M_TXDIFF_TABLE2</name>
          <addressOffset>0x0000D684</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_legacy9M_TxDiff_15dB_rate_offset</name>
              <description>U(4.0) legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy9M_TxDiff_14dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy9M_TxDiff_13dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy9M_TxDiff_12dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy9M_TxDiff_11dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_legacy9M_TXDIFF_TABLE3</name>
          <addressOffset>0x0000D688</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_legacy9M_TxDiff_20dB_rate_offset</name>
              <description>U(4.0) legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy9M_TxDiff_19dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy9M_TxDiff_18dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy9M_TxDiff_17dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy9M_TxDiff_16dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_legacy12M_TXDIFF_TABLE0</name>
          <addressOffset>0x0000D68C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_legacy12M_TxDiff_5dB_rate_offset</name>
              <description>U(4.0) legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy12M_TxDiff_4dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy12M_TxDiff_3dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy12M_TxDiff_2dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy12M_TxDiff_1dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_legacy12M_TXDIFF_TABLE1</name>
          <addressOffset>0x0000D690</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_legacy12M_TxDiff_10dB_rate_offset</name>
              <description>U(4.0) legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy12M_TxDiff_9dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy12M_TxDiff_8dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy12M_TxDiff_7dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy12M_TxDiff_6dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_legacy12M_TXDIFF_TABLE2</name>
          <addressOffset>0x0000D694</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_legacy12M_TxDiff_15dB_rate_offset</name>
              <description>U(4.0) legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy12M_TxDiff_14dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy12M_TxDiff_13dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy12M_TxDiff_12dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy12M_TxDiff_11dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_legacy12M_TXDIFF_TABLE3</name>
          <addressOffset>0x0000D698</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_legacy12M_TxDiff_20dB_rate_offset</name>
              <description>U(4.0) legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy12M_TxDiff_19dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy12M_TxDiff_18dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy12M_TxDiff_17dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy12M_TxDiff_16dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_legacy18M_TXDIFF_TABLE0</name>
          <addressOffset>0x0000D69C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_legacy18M_TxDiff_5dB_rate_offset</name>
              <description>U(4.0) legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy18M_TxDiff_4dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy18M_TxDiff_3dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy18M_TxDiff_2dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy18M_TxDiff_1dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_legacy18M_TXDIFF_TABLE1</name>
          <addressOffset>0x0000D6A0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_legacy18M_TxDiff_10dB_rate_offset</name>
              <description>U(4.0) legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy18M_TxDiff_9dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy18M_TxDiff_8dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy18M_TxDiff_7dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy18M_TxDiff_6dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_legacy18M_TXDIFF_TABLE2</name>
          <addressOffset>0x0000D6A4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_legacy18M_TxDiff_15dB_rate_offset</name>
              <description>U(4.0) legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy18M_TxDiff_14dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy18M_TxDiff_13dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy18M_TxDiff_12dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy18M_TxDiff_11dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_legacy18M_TXDIFF_TABLE3</name>
          <addressOffset>0x0000D6A8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_legacy18M_TxDiff_20dB_rate_offset</name>
              <description>U(4.0) legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy18M_TxDiff_19dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy18M_TxDiff_18dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy18M_TxDiff_17dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy18M_TxDiff_16dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_legacy24M_TXDIFF_TABLE0</name>
          <addressOffset>0x0000D6AC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_legacy24M_TxDiff_5dB_rate_offset</name>
              <description>U(4.0) legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy24M_TxDiff_4dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy24M_TxDiff_3dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy24M_TxDiff_2dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy24M_TxDiff_1dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_legacy24M_TXDIFF_TABLE1</name>
          <addressOffset>0x0000D6B0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_legacy24M_TxDiff_10dB_rate_offset</name>
              <description>U(4.0) legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy24M_TxDiff_9dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy24M_TxDiff_8dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy24M_TxDiff_7dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy24M_TxDiff_6dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_legacy24M_TXDIFF_TABLE2</name>
          <addressOffset>0x0000D6B4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_legacy24M_TxDiff_15dB_rate_offset</name>
              <description>U(4.0) legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy24M_TxDiff_14dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy24M_TxDiff_13dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy24M_TxDiff_12dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy24M_TxDiff_11dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_legacy24M_TXDIFF_TABLE3</name>
          <addressOffset>0x0000D6B8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_legacy24M_TxDiff_20dB_rate_offset</name>
              <description>U(4.0) legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy24M_TxDiff_19dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy24M_TxDiff_18dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy24M_TxDiff_17dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy24M_TxDiff_16dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_legacy36M_TXDIFF_TABLE0</name>
          <addressOffset>0x0000D6BC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_legacy36M_TxDiff_5dB_rate_offset</name>
              <description>U(4.0) legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy36M_TxDiff_4dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy36M_TxDiff_3dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy36M_TxDiff_2dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy36M_TxDiff_1dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_legacy36M_TXDIFF_TABLE1</name>
          <addressOffset>0x0000D6C0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_legacy36M_TxDiff_10dB_rate_offset</name>
              <description>U(4.0) legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy36M_TxDiff_9dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy36M_TxDiff_8dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy36M_TxDiff_7dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy36M_TxDiff_6dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_legacy36M_TXDIFF_TABLE2</name>
          <addressOffset>0x0000D6C4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_legacy36M_TxDiff_15dB_rate_offset</name>
              <description>U(4.0) legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy36M_TxDiff_14dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy36M_TxDiff_13dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy36M_TxDiff_12dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy36M_TxDiff_11dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_legacy36M_TXDIFF_TABLE3</name>
          <addressOffset>0x0000D6C8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_legacy36M_TxDiff_20dB_rate_offset</name>
              <description>U(4.0) legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy36M_TxDiff_19dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy36M_TxDiff_18dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy36M_TxDiff_17dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy36M_TxDiff_16dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_legacy48M_TXDIFF_TABLE0</name>
          <addressOffset>0x0000D6CC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_legacy48M_TxDiff_5dB_rate_offset</name>
              <description>U(4.0) legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy48M_TxDiff_4dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy48M_TxDiff_3dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy48M_TxDiff_2dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy48M_TxDiff_1dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_legacy48M_TXDIFF_TABLE1</name>
          <addressOffset>0x0000D6D0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_legacy48M_TxDiff_10dB_rate_offset</name>
              <description>U(4.0) legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy48M_TxDiff_9dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy48M_TxDiff_8dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy48M_TxDiff_7dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy48M_TxDiff_6dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_legacy48M_TXDIFF_TABLE2</name>
          <addressOffset>0x0000D6D4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_legacy48M_TxDiff_15dB_rate_offset</name>
              <description>U(4.0) legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy48M_TxDiff_14dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy48M_TxDiff_13dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy48M_TxDiff_12dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy48M_TxDiff_11dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_legacy48M_TXDIFF_TABLE3</name>
          <addressOffset>0x0000D6D8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_legacy48M_TxDiff_20dB_rate_offset</name>
              <description>U(4.0) legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy48M_TxDiff_19dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy48M_TxDiff_18dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy48M_TxDiff_17dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy48M_TxDiff_16dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_legacy54M_TXDIFF_TABLE0</name>
          <addressOffset>0x0000D6DC</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_legacy54M_TxDiff_5dB_rate_offset</name>
              <description>U(4.0) legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy54M_TxDiff_4dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy54M_TxDiff_3dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy54M_TxDiff_2dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy54M_TxDiff_1dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_legacy54M_TXDIFF_TABLE1</name>
          <addressOffset>0x0000D6E0</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_legacy54M_TxDiff_10dB_rate_offset</name>
              <description>U(4.0) legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy54M_TxDiff_9dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy54M_TxDiff_8dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy54M_TxDiff_7dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy54M_TxDiff_6dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_legacy54M_TXDIFF_TABLE2</name>
          <addressOffset>0x0000D6E4</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_legacy54M_TxDiff_15dB_rate_offset</name>
              <description>U(4.0) legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy54M_TxDiff_14dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy54M_TxDiff_13dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy54M_TxDiff_12dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy54M_TxDiff_11dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_legacy54M_TXDIFF_TABLE3</name>
          <addressOffset>0x0000D6E8</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_legacy54M_TxDiff_20dB_rate_offset</name>
              <description>U(4.0) legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy54M_TxDiff_19dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy54M_TxDiff_18dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy54M_TxDiff_17dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy54M_TxDiff_16dB_rate_offset</name>
              <description>U(4.0)  legacy 4~11,4=legacy6M,5=legacy9M,6=legacy12M,7=legacy18M,8=legacy24M,9=legacy36M,10=legacy48M,11=legacy54M</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_TCM_WRAPPER_CR0</name>
          <addressOffset>0x0000D800</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_bf_1sts_ant_sel_a</name>
              <description></description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_2tx_path_en</name>
              <description></description>
              <bitRange>[30:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_1tx_path_en</name>
              <description></description>
              <bitRange>[26:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_macid_ant_path_en_val</name>
              <description></description>
              <bitRange>[22:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_fc_path_en</name>
              <description></description>
              <bitRange>[18:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_bf_2sts_path_en</name>
              <description></description>
              <bitRange>[14:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_bf_1sts_path_en</name>
              <description></description>
              <bitRange>[10:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_usr_list_tbl_ra</name>
              <description></description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_TCM_WRAPPER_CR1</name>
          <addressOffset>0x0000D804</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_norm_1sts_path_en</name>
              <description></description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_hang_proof_path_en</name>
              <description></description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_8tx_path_en</name>
              <description></description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_7tx_path_en</name>
              <description></description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_6tx_path_en</name>
              <description></description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_5tx_path_en</name>
              <description></description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_4tx_path_en</name>
              <description></description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_3tx_path_en</name>
              <description></description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_TCM_WRAPPER_CR2</name>
          <addressOffset>0x0000D808</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_bf_1sts_path_map_a</name>
              <description></description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_par_mode_val</name>
              <description></description>
              <bitRange>[29:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_macid_ant_spatial_expan_num_val</name>
              <description></description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_fc_spatial_expan_num</name>
              <description></description>
              <bitRange>[23:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_fc_ntx</name>
              <description></description>
              <bitRange>[20:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_bf_2sts_spatial_expan_num</name>
              <description></description>
              <bitRange>[17:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_bf_1sts_spatial_expan_num</name>
              <description></description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_resp_2sts_path_en</name>
              <description></description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_resp_1sts_path_en</name>
              <description></description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_norm_2sts_path_en</name>
              <description></description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_TCM_WRAPPER_CR3</name>
          <addressOffset>0x0000D80C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_bf_1sts_path_map_b</name>
              <description></description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_norm_1sts_spatial_expan_num</name>
              <description></description>
              <bitRange>[29:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_hang_proof_spatial_expan_num</name>
              <description></description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_8tx_spatial_expan_num</name>
              <description></description>
              <bitRange>[23:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_7tx_spatial_expan_num</name>
              <description></description>
              <bitRange>[20:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_6tx_spatial_expan_num</name>
              <description></description>
              <bitRange>[17:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_5tx_spatial_expan_num</name>
              <description></description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_4tx_spatial_expan_num</name>
              <description></description>
              <bitRange>[11:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_3tx_spatial_expan_num</name>
              <description></description>
              <bitRange>[8:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_2tx_spatial_expan_num</name>
              <description></description>
              <bitRange>[5:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_1tx_spatial_expan_num</name>
              <description></description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_TCM_WRAPPER_CR4</name>
          <addressOffset>0x0000D810</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_bf_1sts_ant_sel_b</name>
              <description></description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_macid_ant_map_a_val</name>
              <description></description>
              <bitRange>[30:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_fc_path_map_d</name>
              <description></description>
              <bitRange>[28:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_fc_path_map_c</name>
              <description></description>
              <bitRange>[26:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_fc_path_map_b</name>
              <description></description>
              <bitRange>[24:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_fc_path_map_a</name>
              <description></description>
              <bitRange>[22:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_bf_2sts_path_map_d</name>
              <description></description>
              <bitRange>[20:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_bf_2sts_path_map_c</name>
              <description></description>
              <bitRange>[18:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_bf_2sts_path_map_b</name>
              <description></description>
              <bitRange>[16:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_bf_2sts_path_map_a</name>
              <description></description>
              <bitRange>[14:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_bf_1sts_path_map_d</name>
              <description></description>
              <bitRange>[12:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_bf_1sts_path_map_c</name>
              <description></description>
              <bitRange>[10:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_resp_2sts_spatial_expan_num</name>
              <description></description>
              <bitRange>[8:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_resp_1sts_spatial_expan_num</name>
              <description></description>
              <bitRange>[5:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_norm_2sts_spatial_expan_num</name>
              <description></description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_TCM_WRAPPER_CR5</name>
          <addressOffset>0x0000D814</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_grp_4tx_path_map_a</name>
              <description></description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_3tx_path_map_d</name>
              <description></description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_3tx_path_map_c</name>
              <description></description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_3tx_path_map_b</name>
              <description></description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_3tx_path_map_a</name>
              <description></description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_2tx_path_map_d</name>
              <description></description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_2tx_path_map_c</name>
              <description></description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_2tx_path_map_b</name>
              <description></description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_2tx_path_map_a</name>
              <description></description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_1tx_path_map_d</name>
              <description></description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_1tx_path_map_c</name>
              <description></description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_1tx_path_map_b</name>
              <description></description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_1tx_path_map_a</name>
              <description></description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_macid_ant_map_d_val</name>
              <description></description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_macid_ant_map_c_val</name>
              <description></description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_macid_ant_map_b_val</name>
              <description></description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_TCM_WRAPPER_CR6</name>
          <addressOffset>0x0000D818</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_grp_8tx_path_map_a</name>
              <description></description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_7tx_path_map_d</name>
              <description></description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_7tx_path_map_c</name>
              <description></description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_7tx_path_map_b</name>
              <description></description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_7tx_path_map_a</name>
              <description></description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_6tx_path_map_d</name>
              <description></description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_6tx_path_map_c</name>
              <description></description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_6tx_path_map_b</name>
              <description></description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_6tx_path_map_a</name>
              <description></description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_5tx_path_map_d</name>
              <description></description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_5tx_path_map_c</name>
              <description></description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_5tx_path_map_b</name>
              <description></description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_5tx_path_map_a</name>
              <description></description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_4tx_path_map_d</name>
              <description></description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_4tx_path_map_c</name>
              <description></description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_4tx_path_map_b</name>
              <description></description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_TCM_WRAPPER_CR7</name>
          <addressOffset>0x0000D81C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_resp_1sts_path_map_a</name>
              <description></description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_norm_2sts_path_map_d</name>
              <description></description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_norm_2sts_path_map_c</name>
              <description></description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_norm_2sts_path_map_b</name>
              <description></description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_norm_2sts_path_map_a</name>
              <description></description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_norm_1sts_path_map_d</name>
              <description></description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_norm_1sts_path_map_c</name>
              <description></description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_norm_1sts_path_map_b</name>
              <description></description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_norm_1sts_path_map_a</name>
              <description></description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_hang_proof_path_map_d</name>
              <description></description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_hang_proof_path_map_c</name>
              <description></description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_hang_proof_path_map_b</name>
              <description></description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_hang_proof_path_map_a</name>
              <description></description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_8tx_path_map_d</name>
              <description></description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_8tx_path_map_c</name>
              <description></description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_8tx_path_map_b</name>
              <description></description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_TCM_WRAPPER_CR8</name>
          <addressOffset>0x0000D820</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_fc_ntx_en</name>
              <description></description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_fc_ant_sel_d_en</name>
              <description></description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_fc_ant_sel_d</name>
              <description></description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_fc_ant_sel_c_en</name>
              <description></description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_fc_ant_sel_c</name>
              <description></description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_fc_ant_sel_b_en</name>
              <description></description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_fc_ant_sel_b</name>
              <description></description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_fc_ant_sel_a_en</name>
              <description></description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_fc_ant_sel_a</name>
              <description></description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_clr_proof_cnt</name>
              <description></description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cbw80p80_en</name>
              <description></description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_bypass_ant_sel_hetb_bw80p80_en</name>
              <description></description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_bf_2sts_ant_sel_d</name>
              <description></description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_bf_2sts_ant_sel_c</name>
              <description></description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_bf_2sts_ant_sel_b</name>
              <description></description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_bf_2sts_ant_sel_a</name>
              <description></description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_bf_1sts_ant_sel_d</name>
              <description></description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_bf_1sts_ant_sel_c</name>
              <description></description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_resp_2sts_path_map_d</name>
              <description></description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_resp_2sts_path_map_c</name>
              <description></description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_resp_2sts_path_map_b</name>
              <description></description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_resp_2sts_path_map_a</name>
              <description></description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_resp_1sts_path_map_d</name>
              <description></description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_resp_1sts_path_map_c</name>
              <description></description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_resp_1sts_path_map_b</name>
              <description></description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_TCM_WRAPPER_CR9</name>
          <addressOffset>0x0000D824</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_grp_2tx_ant_sel_c</name>
              <description></description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_2tx_ant_sel_b</name>
              <description></description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_2tx_ant_sel_a</name>
              <description></description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_1tx_ant_sel_d</name>
              <description></description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_1tx_ant_sel_c</name>
              <description></description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_1tx_ant_sel_b</name>
              <description></description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_1tx_ant_sel_a</name>
              <description></description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_par_mode_on</name>
              <description></description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_macid_input_mumimo_nsts_hang_proof_en_val</name>
              <description></description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_macid_input_mumimo_nsts_hang_proof_en_on</name>
              <description></description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_macid_hang_proof_en_val</name>
              <description></description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_macid_hang_proof_en_on</name>
              <description></description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_macid_ant_spatial_expan_num_on</name>
              <description></description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_macid_ant_sel_d_val</name>
              <description></description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_macid_ant_sel_d_on</name>
              <description></description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_macid_ant_sel_c_val</name>
              <description></description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_macid_ant_sel_c_on</name>
              <description></description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_macid_ant_sel_b_val</name>
              <description></description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_macid_ant_sel_b_on</name>
              <description></description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_macid_ant_sel_a_val</name>
              <description></description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_macid_ant_sel_a_on</name>
              <description></description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_macid_ant_path_en_on</name>
              <description></description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_macid_ant_map_d_on</name>
              <description></description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_macid_ant_map_c_on</name>
              <description></description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_macid_ant_map_b_on</name>
              <description></description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_macid_ant_map_a_on</name>
              <description></description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_fc_spatial_expan_num_en</name>
              <description></description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_fc_path_map_d_en</name>
              <description></description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_fc_path_map_c_en</name>
              <description></description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_fc_path_map_b_en</name>
              <description></description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_fc_path_map_a_en</name>
              <description></description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_fc_path_en_en</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_TCM_WRAPPER_CR10</name>
          <addressOffset>0x0000D828</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_input_mumimo_nsts_hang_proof_en</name>
              <description></description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_hang_proof_opt</name>
              <description></description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_hang_proof_en</name>
              <description></description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_hang_proof_ant_sel_d</name>
              <description></description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_hang_proof_ant_sel_c</name>
              <description></description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_hang_proof_ant_sel_b</name>
              <description></description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_hang_proof_ant_sel_a</name>
              <description></description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_8tx_ant_sel_d</name>
              <description></description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_8tx_ant_sel_c</name>
              <description></description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_8tx_ant_sel_b</name>
              <description></description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_8tx_ant_sel_a</name>
              <description></description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_7tx_ant_sel_d</name>
              <description></description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_7tx_ant_sel_c</name>
              <description></description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_7tx_ant_sel_b</name>
              <description></description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_7tx_ant_sel_a</name>
              <description></description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_6tx_ant_sel_d</name>
              <description></description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_6tx_ant_sel_c</name>
              <description></description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_6tx_ant_sel_b</name>
              <description></description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_6tx_ant_sel_a</name>
              <description></description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_5tx_ant_sel_d</name>
              <description></description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_5tx_ant_sel_c</name>
              <description></description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_5tx_ant_sel_b</name>
              <description></description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_5tx_ant_sel_a</name>
              <description></description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_4tx_ant_sel_d</name>
              <description></description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_4tx_ant_sel_c</name>
              <description></description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_4tx_ant_sel_b</name>
              <description></description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_4tx_ant_sel_a</name>
              <description></description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_3tx_ant_sel_d</name>
              <description></description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_3tx_ant_sel_c</name>
              <description></description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_3tx_ant_sel_b</name>
              <description></description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_3tx_ant_sel_a</name>
              <description></description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_grp_2tx_ant_sel_d</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_TCM_WRAPPER_CR11</name>
          <addressOffset>0x0000D82C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_force_hang_proof_on</name>
              <description></description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_usr_list_tbl_rd</name>
              <description></description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_resp_2stsant_sel_d</name>
              <description></description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_resp_2stsant_sel_c</name>
              <description></description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_resp_2stsant_sel_b</name>
              <description></description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_resp_2stsant_sel_a</name>
              <description></description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_resp_1stsant_sel_d</name>
              <description></description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_resp_1stsant_sel_c</name>
              <description></description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_resp_1stsant_sel_b</name>
              <description></description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_resp_1stsant_sel_a</name>
              <description></description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_norm_2stsant_sel_d</name>
              <description></description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_norm_2stsant_sel_c</name>
              <description></description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_norm_2stsant_sel_b</name>
              <description></description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_norm_2stsant_sel_a</name>
              <description></description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_norm_1stsant_sel_d</name>
              <description></description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_norm_1stsant_sel_c</name>
              <description></description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_norm_1stsant_sel_b</name>
              <description></description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_norm_1stsant_sel_a</name>
              <description></description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_n_tx_cal_mod_hang_proof</name>
              <description></description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_n_tx_cal_mod</name>
              <description></description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_input_mumimo_nsts_hang_proof_opt</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_TCM_WRAPPER_CR12</name>
          <addressOffset>0x0000D830</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_force_pwrsr_txpwr_pd_val</name>
              <description></description>
              <bitRange>[31:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_pwrcom_ru_alloc_val</name>
              <description></description>
              <bitRange>[25:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_pwrul_rpl_val</name>
              <description></description>
              <bitRange>[17:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_pwrul_rpl_up_val</name>
              <description></description>
              <bitRange>[8:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_TCM_WRAPPER_CR13</name>
          <addressOffset>0x0000D834</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_dbg_ant_sel</name>
              <description></description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_pwrsr_txpwr_toler_val</name>
              <description></description>
              <bitRange>[27:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_pwrul_tar_rssi_val</name>
              <description></description>
              <bitRange>[21:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_pwrcom_macid_val</name>
              <description></description>
              <bitRange>[14:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_pwrru_ch20_with_data_val</name>
              <description></description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_TCM_WRAPPER_CR14</name>
          <addressOffset>0x0000D838</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_force_pwrcom_ctrl_val</name>
              <description></description>
              <bitRange>[31:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_pwrant_nsts_val</name>
              <description></description>
              <bitRange>[28:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_macid_pwr_mode_val</name>
              <description></description>
              <bitRange>[25:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_pwrcom_txsc_val</name>
              <description></description>
              <bitRange>[22:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_pwrcom_ppdu_type_val</name>
              <description></description>
              <bitRange>[18:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_out_pwrcom_max_mcs_val</name>
              <description></description>
              <bitRange>[14:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_pwrcom_mcs_val</name>
              <description></description>
              <bitRange>[10:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_pwrul_ap_tx_pwr_val</name>
              <description></description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_TCM_WRAPPER_CR15</name>
          <addressOffset>0x0000D83C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_force_macid_txbf_en_val</name>
              <description></description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_macid_txbf_en_on</name>
              <description></description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_macid_resp_en_val</name>
              <description></description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_macid_resp_en_on</name>
              <description></description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_macid_pwr_mode_on</name>
              <description></description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_macid_norm_en_val</name>
              <description></description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_macid_norm_en_on</name>
              <description></description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_macid_ndp_en_val</name>
              <description></description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_macid_ndp_en_on</name>
              <description></description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_macid_mumimo_en_val</name>
              <description></description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_macid_mumimo_en_on</name>
              <description></description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_macid_cca_th_allow_val</name>
              <description></description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_macid_cca_th_allow_on</name>
              <description></description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_cca_th_allow_val</name>
              <description></description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_cca_th_allow_on</name>
              <description></description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_clr_ant_set</name>
              <description></description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_ant_sel_dbg_en</name>
              <description></description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_pwrcom_precoding_mode_idx_val</name>
              <description></description>
              <bitRange>[8:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_pwrcom_dbw_idx_val</name>
              <description></description>
              <bitRange>[6:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_pwrcom_cbw_idx_val</name>
              <description></description>
              <bitRange>[4:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_pwrru_grp_ntx_val</name>
              <description></description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_TCM_WRAPPER_CR16</name>
          <addressOffset>0x0000D840</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_force_pwrul_rpl_up_en_on</name>
              <description></description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_pwrul_rpl_on</name>
              <description></description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_pwrul_ap_tx_pwr_on</name>
              <description></description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_pwrtssi_fast_mode_en_val</name>
              <description></description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_pwrtssi_fast_mode_en_on</name>
              <description></description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_pwrsr_txpwr_toler_on</name>
              <description></description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_pwrsr_txpwr_pd_on</name>
              <description></description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_pwrru_grp_ntx_on</name>
              <description></description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_pwrru_ch20_with_data_on</name>
              <description></description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_pwrcom_txsc_on</name>
              <description></description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_pwrcom_stbc_en_val</name>
              <description></description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_pwrcom_stbc_en_on</name>
              <description></description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_pwrcom_rx_lte_val</name>
              <description></description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_pwrcom_rx_lte_on</name>
              <description></description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_pwrcom_ru_alloc_on</name>
              <description></description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_pwrcom_precoding_mode_idx_on</name>
              <description></description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_pwrcom_ppdu_type_on</name>
              <description></description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_pwrcom_mcs_on</name>
              <description></description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_pwrcom_macid_on</name>
              <description></description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_pwrcom_dcm_val</name>
              <description></description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_pwrcom_dcm_on</name>
              <description></description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_pwrcom_dbw_idx_on</name>
              <description></description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_pwrcom_ctrl_reg_val</name>
              <description></description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_pwrcom_ctrl_reg_on</name>
              <description></description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_pwrcom_ctrl_on</name>
              <description></description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_pwrcom_cbw_idx_on</name>
              <description></description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_pwrant_nsts_on</name>
              <description></description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_pwrant_ndp_en_val</name>
              <description></description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_pwrant_ndp_en_on</name>
              <description></description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_pwrant_active_tx_en_val</name>
              <description></description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_pwrant_active_tx_en_on</name>
              <description></description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_out_pwrcom_max_mcs_on</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_TCM_WRAPPER_CR17</name>
          <addressOffset>0x0000D844</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_tssi_ctrl_mac_pwrcom_ch20_with_data_bit_rev</name>
              <description></description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_tssi_ctrl_mac_pwrcom_ch20_with_data_bit_inv</name>
              <description></description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_sr_mcs_mask_dis</name>
              <description></description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_pwrru_ch20_with_data_hang_proof_en</name>
              <description></description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_mumimo_apply_pwrlimbf_en</name>
              <description></description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_heru_mask_dis</name>
              <description></description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_heru_ch20_with_data_from_f2p_dis</name>
              <description></description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_pwrul_tar_rssi_on</name>
              <description></description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_pwrul_rpl_up_on</name>
              <description></description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_force_pwrul_rpl_up_en_val</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_TCM_WRAPPER_CR18</name>
          <addressOffset>0x0000D848</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_ru_alloc_dbw160_fix_en</name>
              <description></description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_pwrtssict_tx_bandedge_cfg_force_out_on</name>
              <description></description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_pwrtssict_tssi_msr_athestf_force_out_val</name>
              <description></description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_pwrtssict_tssi_msr_athestf_force_out_on</name>
              <description></description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_pwrtssict_tssi_fast_mode_en_force_out_val</name>
              <description></description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_pwrtssict_tssi_fast_mode_en_force_out_on</name>
              <description></description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_pwrtssict_tssi_diff_seg0_db_force_out_on</name>
              <description></description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_pwrtssict_pwr_ofst_seg0_db_force_out_on</name>
              <description></description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_MAC_def_legacy_rate_idx_begin_at_4_on</name>
              <description></description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_pwrtssict_tx_bandedge_cfg_force_out_val</name>
              <description></description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_pwrtssict_tssi_diff_seg0_db_force_out_val</name>
              <description></description>
              <bitRange>[17:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_pwrtssict_pwr_ofst_seg0_db_force_out_val</name>
              <description></description>
              <bitRange>[8:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_DUMMY_TXPWR</name>
          <addressOffset>0x0000D900</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>dummy</name>
              <description>dummy</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_TSSI_TABLE0</name>
          <addressOffset>0x0000D908</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_bandedge_nonzero_cfg_sbw160_3</name>
              <description></description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_bandedge_nonzero_cfg_sbw160_2</name>
              <description></description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_bandedge_nonzero_cfg_sbw160_1</name>
              <description></description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_bandedge_nonzero_cfg_sbw160_0</name>
              <description></description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_TSSI_TABLE1</name>
          <addressOffset>0x0000D90C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_bandedge_nonzero_cfg_sbw160_7</name>
              <description></description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_bandedge_nonzero_cfg_sbw160_6</name>
              <description></description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_bandedge_nonzero_cfg_sbw160_5</name>
              <description></description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_bandedge_nonzero_cfg_sbw160_4</name>
              <description></description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_TSSI_TABLE2</name>
          <addressOffset>0x0000D910</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_bandedge_nonzero_cfg_sbw80_0</name>
              <description></description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_bandedge_nonzero_cfg_sbw40_1</name>
              <description></description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_bandedge_nonzero_cfg_sbw40_0</name>
              <description></description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_bandedge_nonzero_cfg_sbw20</name>
              <description></description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_TSSI_TABLE3</name>
          <addressOffset>0x0000D914</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_bandedge_zero_cfg_sbw160_0</name>
              <description></description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_bandedge_nonzero_cfg_sbw80_3</name>
              <description></description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_bandedge_nonzero_cfg_sbw80_2</name>
              <description></description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_bandedge_nonzero_cfg_sbw80_1</name>
              <description></description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_TSSI_TABLE4</name>
          <addressOffset>0x0000D918</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_bandedge_zero_cfg_sbw160_4</name>
              <description></description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_bandedge_zero_cfg_sbw160_3</name>
              <description></description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_bandedge_zero_cfg_sbw160_2</name>
              <description></description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_bandedge_zero_cfg_sbw160_1</name>
              <description></description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_TSSI_TABLE5</name>
          <addressOffset>0x0000D91C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_bandedge_zero_cfg_sbw20</name>
              <description></description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_bandedge_zero_cfg_sbw160_7</name>
              <description></description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_bandedge_zero_cfg_sbw160_6</name>
              <description></description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_bandedge_zero_cfg_sbw160_5</name>
              <description></description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_TSSI_TABLE6</name>
          <addressOffset>0x0000D920</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_bandedge_zero_cfg_sbw80_1</name>
              <description></description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_bandedge_zero_cfg_sbw80_0</name>
              <description></description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_bandedge_zero_cfg_sbw40_1</name>
              <description></description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_bandedge_zero_cfg_sbw40_0</name>
              <description></description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_TSSI_TABLE7</name>
          <addressOffset>0x0000D924</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_bmode_init_ofst_seg0_db</name>
              <description></description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_bmode_init_diff_seg0_db</name>
              <description></description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_bandedge_zero_cfg_sbw80_3</name>
              <description></description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_bandedge_zero_cfg_sbw80_2</name>
              <description></description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_TSSI_TABLE8</name>
          <addressOffset>0x0000D928</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_cbw_sub20_3</name>
              <description></description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cbw_sub20_2</name>
              <description></description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cbw_sub20_1</name>
              <description></description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cbw_sub20_0</name>
              <description></description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_TSSI_TABLE9</name>
          <addressOffset>0x0000D92C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_cbw_sub20_7</name>
              <description></description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cbw_sub20_6</name>
              <description></description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cbw_sub20_5</name>
              <description></description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_cbw_sub20_4</name>
              <description></description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_TSSI_TABLE10</name>
          <addressOffset>0x0000D930</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_ch_comb_ofst_bandedge_nonzero_bw40</name>
              <description></description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_ch_comb_ofst_bandedge_nonzero_bw20</name>
              <description></description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_ch_comb_ofst_bandedge_nonzero_bw160</name>
              <description></description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_ch_comb_common_diff_db</name>
              <description></description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_TSSI_TABLE11</name>
          <addressOffset>0x0000D934</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_ch_comb_ofst_bandedge_zero_bw40</name>
              <description></description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_ch_comb_ofst_bandedge_zero_bw20</name>
              <description></description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_ch_comb_ofst_bandedge_zero_bw160</name>
              <description></description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_ch_comb_ofst_bandedge_nonzero_bw80</name>
              <description></description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_TSSI_TABLE12</name>
          <addressOffset>0x0000D938</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_f_pwr_ofst_out_seg0_db</name>
              <description></description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_ch20_with_data_nonlegacy_val</name>
              <description></description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_ch20_with_data_legacy_val</name>
              <description></description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_ch_comb_ofst_bandedge_zero_bw80</name>
              <description></description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_TSSI_TABLE13</name>
          <addressOffset>0x0000D93C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_hemu_init_diff_seg0_db</name>
              <description></description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_heer_init_ofst_seg0_db</name>
              <description></description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_heer_init_diff_seg0_db</name>
              <description></description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_tssi_diff_out_seg0_db</name>
              <description></description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_TSSI_TABLE14</name>
          <addressOffset>0x0000D940</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_hetb_init_diff_athestf_seg0_db</name>
              <description></description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_hesu_init_ofst_seg0_db</name>
              <description></description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_hesu_init_diff_seg0_db</name>
              <description></description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_hemu_init_ofst_seg0_db</name>
              <description></description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_TSSI_TABLE15</name>
          <addressOffset>0x0000D944</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_ht_init_diff_seg0_db</name>
              <description></description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_hetb_init_ofst_seg0_db</name>
              <description></description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_hetb_init_ofst_athestf_seg0_db</name>
              <description></description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_hetb_init_diff_seg0_db</name>
              <description></description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_TSSI_TABLE16</name>
          <addressOffset>0x0000D948</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_vht_init_diff_seg0_db</name>
              <description></description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy_init_ofst_seg0_db</name>
              <description></description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_legacy_init_diff_seg0_db</name>
              <description></description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_ht_init_ofst_seg0_db</name>
              <description></description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_TSSI_TABLE17</name>
          <addressOffset>0x0000D94C</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_bandedge_cfg</name>
              <description></description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_rate_idx</name>
              <description></description>
              <bitRange>[29:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_format</name>
              <description></description>
              <bitRange>[25:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_bandedge_nonlegacy_rateidx_th</name>
              <description></description>
              <bitRange>[21:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_bandedge_legacy_rateidx_th</name>
              <description></description>
              <bitRange>[17:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_tssi_ctrl_mac_dbg_sel</name>
              <description></description>
              <bitRange>[13:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_vht_init_ofst_seg0_db</name>
              <description></description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_TSSI_TABLE18</name>
          <addressOffset>0x0000D950</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_f_heer_bypass_cbw_fltr_en</name>
              <description></description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_heer_bandedge_ind_val</name>
              <description></description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_heer_bandedge_ind_en</name>
              <description></description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_format_en</name>
              <description></description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_fast_mode_comp_init_en</name>
              <description></description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_dbw_en</name>
              <description></description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_ch20_with_data_en</name>
              <description></description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_cbw_en</name>
              <description></description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_bmode_ofst_out_en</name>
              <description></description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_bmode_diff_out_en</name>
              <description></description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_bmode_bypass_dbw_fltr_en</name>
              <description></description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_bmode_bypass_cbw_fltr_en</name>
              <description></description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_bmode_bandedge_ind_val</name>
              <description></description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_bmode_bandedge_ind_en</name>
              <description></description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_bandedge_cfg_sustbc_en</name>
              <description></description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_bandedge_cfg_sudcm_en</name>
              <description></description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_bandedge_cfg_subf_en</name>
              <description></description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_bandedge_cfg_ndp_en</name>
              <description></description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_bandedge_cfg_mu_en</name>
              <description></description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_bandedge_cfg_hetb_en</name>
              <description></description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_ch20_with_data_nonlegacy_swap</name>
              <description></description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_ch20_with_data_legacy_swap</name>
              <description></description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_precoding_mode_idx</name>
              <description></description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_dbw</name>
              <description></description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_cbw</name>
              <description></description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_txsc</name>
              <description></description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_TSSI_TABLE19</name>
          <addressOffset>0x0000D954</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_f_is_su_stbc</name>
              <description></description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_is_su_dcm_en</name>
              <description></description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_is_su_dcm</name>
              <description></description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_is_ndp_en</name>
              <description></description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_is_ndp</name>
              <description></description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_ht_ofst_out_en</name>
              <description></description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_ht_diff_out_en</name>
              <description></description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_ht_bypass_dbw_fltr_en</name>
              <description></description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_ht_bypass_cbw_fltr_en</name>
              <description></description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_ht_bandedge_ind_val</name>
              <description></description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_ht_bandedge_ind_en</name>
              <description></description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_hetb_ofst_out_en</name>
              <description></description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_hetb_diff_out_en</name>
              <description></description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_hetb_bypass_dbw_fltr_en</name>
              <description></description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_hetb_bypass_cbw_fltr_en</name>
              <description></description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_hetb_bandedge_ind_val</name>
              <description></description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_hetb_bandedge_ind_en</name>
              <description></description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_hesu_ofst_out_en</name>
              <description></description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_hesu_diff_out_en</name>
              <description></description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_hesu_bypass_dbw_fltr_en</name>
              <description></description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_hesu_bypass_cbw_fltr_en</name>
              <description></description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_hesu_bandedge_ind_val</name>
              <description></description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_hesu_bandedge_ind_en</name>
              <description></description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_hemu_ofst_out_en</name>
              <description></description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_hemu_diff_out_en</name>
              <description></description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_hemu_bypass_dbw_fltr_en</name>
              <description></description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_hemu_bypass_cbw_fltr_en</name>
              <description></description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_hemu_bandedge_ind_val</name>
              <description></description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_hemu_bandedge_ind_en</name>
              <description></description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_heer_ofst_out_en</name>
              <description></description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_heer_diff_out_en</name>
              <description></description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_heer_bypass_dbw_fltr_en</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG_AX_PWR_TSSI_TABLE20</name>
          <addressOffset>0x0000D958</addressOffset>
          <size>32</size>
          <description></description>
          <resetValue>0x00000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>r_tssi_ctrl_mac_use_normal_rate_idx_only</name>
              <description></description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_tssi_ctrl_mac_dbg_dis</name>
              <description></description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_tssi_ctrl_mac_clr</name>
              <description></description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_hetb_pwr_msr_mode</name>
              <description></description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_vht_ofst_out_en</name>
              <description></description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_vht_diff_out_en</name>
              <description></description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_vht_bypass_dbw_fltr_en</name>
              <description></description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_vht_bypass_cbw_fltr_en</name>
              <description></description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_vht_bandedge_ind_val</name>
              <description></description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_vht_bandedge_ind_en</name>
              <description></description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_txsc_en</name>
              <description></description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_tssi_ctrl_out_en</name>
              <description></description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_tssi_ctrl_fast_mode_idx_en</name>
              <description></description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_tssi_ctrl_fast_mode_idx</name>
              <description></description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_rate_idx_en</name>
              <description></description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_precoding_mode_idx_en</name>
              <description></description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_legacy_ofst_out_en</name>
              <description></description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_legacy_diff_out_en</name>
              <description></description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_legacy_bypass_dbw_fltr_en</name>
              <description></description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_legacy_bypass_cbw_fltr_en</name>
              <description></description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_legacy_bandedge_ind_val</name>
              <description></description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_legacy_bandedge_ind_en</name>
              <description></description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>r_f_is_su_stbc_en</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
  </peripherals>
</device>
