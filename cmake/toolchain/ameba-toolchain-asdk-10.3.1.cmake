set(CMAKE_SYSTEM_NAME Generic)
set(CMAKE_SYSTEM_PROCESSOR arm)

# set(CMAKE_TRY_COMPILE_TARGET_TYPE "STATIC_LIBRARY")
set(ToolChainVerMajor asdk-${ASDK_VER})
set(ToolChainVerMinor 4354)
if(USE_ALIYUN_URL)
set(TOOLCHAINURL https://rs-wn.oss-cn-shanghai.aliyuncs.com/)
else()
set(TOOLCHAINURL https://github.com/Ameba-AIoT/ameba-toolchain/releases/download/10.3.1_v5/)
endif()

if(TOOLCHAIN_DIR)
	set(TOOLCHAINDIR ${TOOLCHAIN_DIR})
	message("User defined toolchain path: ${TOOLCHAINDIR}")
endif()

if (${CMAKE_HOST_SYSTEM_NAME} STREQUAL Linux)
	if(NOT TOOLCHAIN_DIR)
		set(TOOLCHAINDIR /opt/rtk-toolchain)
		message("Default toolchain path: ${TOOLCHAINDIR}")
	endif()
	set(SDK_TOOLCHAIN ${TOOLCHAINDIR}/${ToolChainVerMajor}-${ToolChainVerMinor}/linux/newlib)
	set(TOOLCHAINNAME ${ToolChainVerMajor}-linux-newlib-build-${ToolChainVerMinor}-x86_64_with_small_reent.tar.bz2)
elseif(${CMAKE_HOST_SYSTEM_NAME} STREQUAL Windows)
	if(NOT TOOLCHAIN_DIR)
		set(TOOLCHAINDIR C:/rtk-toolchain)
		message("Default toolchain path: ${TOOLCHAINDIR}")
	endif()
	set(SDK_TOOLCHAIN ${TOOLCHAINDIR}/${ToolChainVerMajor}-${ToolChainVerMinor}/mingw32/newlib)
	set(TOOLCHAINNAME ${ToolChainVerMajor}-mingw32-newlib-build-${ToolChainVerMinor}-x86_64_with_small_reent.zip)
else()
	message(FATAL_ERROR "unknown host platform ")
endif()

set(CROSS_COMPILE ${SDK_TOOLCHAIN}/bin/arm-none-eabi-)

include(${CMAKE_CURRENT_LIST_DIR}/ameba-toolchain-check.cmake)
